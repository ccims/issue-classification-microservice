"""
This type stub file was generated by pyright.
"""

import socket
from functools import partial
from kombu.entity import Exchange
from .functional import memoize

"""Worker name utilities."""
WORKER_DIRECT_EXCHANGE = Exchange('C.dq2')
WORKER_DIRECT_QUEUE_FORMAT = '{hostname}.dq2'
NODENAME_SEP = '@'
NODENAME_DEFAULT = 'celery'
gethostname = memoize(1, Cache=dict)(socket.gethostname)
def worker_direct(hostname):
    """Return the :class:`kombu.Queue` being a direct route to a worker.

    Arguments:
        hostname (str, ~kombu.Queue): The fully qualified node name of
            a worker (e.g., ``w1@example.com``).  If passed a
            :class:`kombu.Queue` instance it will simply return
            that instead.
    """
    ...

def nodename(name, hostname):
    """Create node name from name/hostname pair."""
    ...

def anon_nodename(hostname=..., prefix=...):
    """Return the nodename for this process (not a worker).

    This is used for e.g. the origin task message field.
    """
    ...

def nodesplit(name):
    """Split node name into tuple of name/hostname."""
    ...

def default_nodename(hostname):
    """Return the default nodename for this process."""
    ...

def node_format(s, name, **extra):
    """Format worker node name (name@host.com)."""
    ...

_fmt_process_index_with_prefix = partial(_fmt_process_index, '-', '')
def host_format(s, host=..., name=..., **extra):
    """Format host %x abbreviations."""
    ...

