"""
This type stub file was generated by pyright.
"""

from collections import namedtuple
from numbers import Number

"""Streaming, truncating, non-recursive version of :func:`repr`.

Differences from regular :func:`repr`:

- Sets are represented the Python 3 way: ``{1, 2}`` vs ``set([1, 2])``.
- Unicode strings does not have the ``u'`` prefix, even on Python 2.
- Empty set formatted as ``set()`` (Python 3), not ``set([])`` (Python 2).
- Longs don't have the ``L`` suffix.

Very slow with no limits, super quick with limits.
"""
_literal = namedtuple('_literal', ('value', 'truncate', 'direction'))
_key = namedtuple('_key', ('value', ))
_quoted = namedtuple('_quoted', ('value', ))
_dirty = namedtuple('_dirty', ('objid', ))
chars_t = (bytes, str)
safe_t = (Number, )
set_t = (frozenset, set)
LIT_DICT_START = _literal('{', False, + 1)
LIT_DICT_KVSEP = _literal(': ', True, 0)
LIT_DICT_END = _literal('}', False, - 1)
LIT_LIST_START = _literal('[', False, + 1)
LIT_LIST_END = _literal(']', False, - 1)
LIT_LIST_SEP = _literal(', ', True, 0)
LIT_SET_START = _literal('{', False, + 1)
LIT_SET_END = _literal('}', False, - 1)
LIT_TUPLE_START = _literal('(', False, + 1)
LIT_TUPLE_END = _literal(')', False, - 1)
LIT_TUPLE_END_SV = _literal(',)', False, - 1)
def saferepr(o: Any, maxlen: int = ..., maxlevels: int = ..., seen: Set = ...) -> str:
    """Safe version of :func:`repr`.

    Warning:
        Make sure you set the maxlen argument, or it will be very slow
        for recursive objects.  With the maxlen set, it's often faster
        than built-in repr.
    """
    ...

def reprstream(stack, seen=..., maxlevels=..., level=..., isinstance=...):
    """Streaming repr, yielding tokens."""
    ...

