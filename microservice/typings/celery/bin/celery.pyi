"""
This type stub file was generated by pyright.
"""

import click
from click.types import ParamType
from click_didyoumean import DYMGroup
from celery.bin.base import CeleryCommand, CeleryOption

"""Celery Command Line Interface."""
UNABLE_TO_LOAD_APP_MODULE_NOT_FOUND = click.style("""
Unable to load celery application.
The module {0} was not found.""", fg='red')
UNABLE_TO_LOAD_APP_ERROR_OCCURRED = click.style("""
Unable to load celery application.
While trying to load the module {0} the following error occurred:
{1}""", fg='red')
UNABLE_TO_LOAD_APP_APP_MISSING = click.style("""
Unable to load celery application.
{0}""")
class App(ParamType):
    """Application option."""
    name = ...
    def convert(self, value, param, ctx):
        ...
    


APP = App()
@click.group(cls=DYMGroup, invoke_without_command=True)
@click.option('-A', '--app', envvar='APP', cls=CeleryOption, type=APP, help_group="Global Options")
@click.option('-b', '--broker', envvar='BROKER_URL', cls=CeleryOption, help_group="Global Options")
@click.option('--result-backend', envvar='RESULT_BACKEND', cls=CeleryOption, help_group="Global Options")
@click.option('--loader', envvar='LOADER', cls=CeleryOption, help_group="Global Options")
@click.option('--config', envvar='CONFIG_MODULE', cls=CeleryOption, help_group="Global Options")
@click.option('--workdir', cls=CeleryOption, help_group="Global Options")
@click.option('-C', '--no-color', envvar='NO_COLOR', is_flag=True, cls=CeleryOption, help_group="Global Options")
@click.option('-q', '--quiet', is_flag=True, cls=CeleryOption, help_group="Global Options")
@click.option('--version', cls=CeleryOption, is_flag=True, help_group="Global Options")
@click.pass_context
def celery(ctx, app, broker, result_backend, loader, config, workdir, no_color, quiet, version):
    """Celery command entrypoint."""
    ...

@celery.command(cls=CeleryCommand)
@click.pass_context
def report(ctx):
    """Shows information useful to include in bug-reports."""
    ...

previous_show_implementation = click.exceptions.NoSuchOption.show
WRONG_APP_OPTION_USAGE_MESSAGE = """You are using `{option_name}` as an option of the {info_name} sub-command:
celery {info_name} {option_name} celeryapp <...>

The support for this usage was removed in Celery 5.0. Instead you should use `{option_name}` as a global option:
celery {option_name} celeryapp {info_name} <...>"""
def main() -> int:
    """Start celery umbrella command.

    This function is the main entrypoint for the CLI.

    :return: The exit code of the CLI.
    """
    ...

