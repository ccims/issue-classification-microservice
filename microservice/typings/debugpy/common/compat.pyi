"""
This type stub file was generated by pyright.
"""

def force_unicode(s, encoding, errors=...):
    """Converts s to Unicode, using the provided encoding. If s is already Unicode,
    it is returned as is.
    """
    ...

def force_bytes(s, encoding, errors=...):
    """Converts s to bytes, using the provided encoding. If s is already bytes,
    it is returned as is.

    If errors="strict" and s is bytes, its encoding is verified by decoding it;
    UnicodeError is raised if it cannot be decoded.
    """
    ...

def force_str(s, encoding=..., errors=...):
    """Converts s to str (which is bytes on Python 2, and unicode on Python 3), using
    the provided encoding if necessary. If s is already str, it is returned as is.

    If errors="strict", str is bytes, and s is str, its encoding is verified by decoding
    it; UnicodeError is raised if it cannot be decoded.
    """
    ...

def force_ascii(s, errors=...):
    """Same as force_bytes(s, "ascii", errors)
    """
    ...

def force_utf8(s, errors=...):
    """Same as force_bytes(s, "utf8", errors)
    """
    ...

def filename(s, errors=...):
    """Same as force_unicode(s, sys.getfilesystemencoding(), errors)
    """
    ...

def filename_bytes(s, errors=...):
    """Same as force_bytes(s, sys.getfilesystemencoding(), errors)
    """
    ...

def filename_str(s, errors=...):
    """Same as force_str(s, sys.getfilesystemencoding(), errors)
    """
    ...

def nameof(obj, quote=...):
    """Returns the most descriptive name of a Python module, class, or function,
    as a Unicode string

    If quote=True, name is quoted with repr().

    Best-effort, but guaranteed to not fail - always returns something.
    """
    ...

def unicode_repr(obj):
    """Like repr(), but guarantees that the result is Unicode even on Python 2.
    """
    ...

def srcnameof(obj):
    """Returns the most descriptive name of a Python module, class, or function,
    including source information (filename and linenumber), if available.

    Best-effort, but guaranteed to not fail - always returns something.
    """
    ...

def kwonly(f):
    """Makes all arguments with default values keyword-only.

    If the default value is kwonly.required, then the argument must be specified.
    """
    ...

