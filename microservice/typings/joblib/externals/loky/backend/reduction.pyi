"""
This type stub file was generated by pyright.
"""

import os
import sys

if sys.platform == "win32":
    ...
class _ReducerRegistry(object):
    """Registry for custom reducers.

    HIGHEST_PROTOCOL is selected by default as this pickler is used
    to pickle ephemeral datastructures for interprocess communication
    hence no backward compatibility is required.

    """
    dispatch_table = ...
    @classmethod
    def register(cls, type, reduce_func):
        """Attach a reducer function to a given type in the dispatch table."""
        ...
    


register = _ReducerRegistry.register
class _C:
    def f(self):
        ...
    
    @classmethod
    def h(cls):
        ...
    


if not hasattr(sys, "pypy_version_info"):
    ...
if sys.platform != "win32":
    ...
else:
    ...
ENV_LOKY_PICKLER = os.environ.get("LOKY_PICKLER", DEFAULT_ENV)
_LokyPickler = None
_loky_pickler_name = None
def set_loky_pickler(loky_pickler=...):
    class CustomizablePickler(loky_pickler_cls):
        ...
    
    

def get_loky_pickler_name():
    ...

def get_loky_pickler():
    ...

def loads(buf):
    ...

def dump(obj, file, reducers=..., protocol=...):
    '''Replacement for pickle.dump() using _LokyPickler.'''
    ...

def dumps(obj, reducers=..., protocol=...):
    ...

if sys.platform == "win32":
    ...
