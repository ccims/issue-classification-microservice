"""
This type stub file was generated by pyright.
"""

import os
import shutil
import sys
import signal

if sys.platform == "win32":
    ...
if sys.version_info < (3, ):
    ...
_HAVE_SIGMASK = hasattr(signal, 'pthread_sigmask')
_IGNORED_SIGNALS = (signal.SIGINT, signal.SIGTERM)
_CLEANUP_FUNCS = { 'folder': shutil.rmtree,'file': os.unlink }
if os.name == "posix":
    ...
VERBOSE = False
class ResourceTracker(object):
    def __init__(self) -> None:
        ...
    
    def getfd(self):
        ...
    
    def ensure_running(self):
        '''Make sure that resource tracker process is running.

        This can be run from any process.  Usually a child process will use
        the resource created by its parent.'''
        ...
    
    def register(self, name, rtype):
        '''Register a named resource, and increment its refcount.'''
        ...
    
    def unregister(self, name, rtype):
        '''Unregister a named resource with resource tracker.'''
        ...
    
    def maybe_unlink(self, name, rtype):
        '''Decrement the refcount of a resource, and delete it if it hits 0'''
        ...
    


_resource_tracker = ResourceTracker()
ensure_running = _resource_tracker.ensure_running
register = _resource_tracker.register
maybe_unlink = _resource_tracker.maybe_unlink
unregister = _resource_tracker.unregister
getfd = _resource_tracker.getfd
def main(fd, verbose=...):
    '''Run resource tracker.'''
    ...

def spawnv_passfds(path, args, passfds):
    ...

