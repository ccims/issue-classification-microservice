[{"labels":["documentation",null],"text":"**Description**\r\nI was visiting https://mobyproject.org/ and when I clicked github link it redirected to 404 Page Not found.\r\n\r\n**Steps to reproduce the issue:**\r\n1. Go to https://mobyproject.org/\r\n2.Click on Github Link\r\n\r\n**Describe the results you received:**\r\nIt redirected to `https://github.com/moby/moby/blob/moby/README.md` \r\n\r\n**Describe the results you expected:**\r\nI think it should be `https://github.com/moby/moby/` or to README page `https://github.com/moby/moby/blob/master/README.md`\r\n"},{"labels":[null,"documentation",null,null],"text":"**Description**\r\n\r\nThe SwarmJoin API supports `Availability` (https://github.com/moby/moby/blob/master/daemon/cluster/swarm.go#L147-L188), which the CLI client also uses, but it is not documented in the API docs (https://github.com/moby/moby/blob/master/api/swagger.yaml#L10008).\r\n"},{"labels":["documentation",null],"text":"<!--\r\nIf you are reporting a new issue, make sure that we do not have any duplicates\r\nalready open. You can ensure this by searching the issue list for this\r\nrepository. If there is a duplicate, please close your issue and add a comment\r\nto the existing issue instead.\r\n\r\nIf you suspect your issue is a bug, please edit your issue description to\r\ninclude the BUG REPORT INFORMATION shown below. If you fail to provide this\r\ninformation within 7 days, we cannot debug your issue and will close it. We\r\nwill, however, reopen it if you later provide the information.\r\n\r\nFor more information about reporting issues, see\r\nhttps://github.com/moby/moby/blob/master/CONTRIBUTING.md#reporting-other-issues\r\n\r\n---------------------------------------------------\r\nGENERAL SUPPORT INFORMATION\r\n---------------------------------------------------\r\n\r\nThe GitHub issue tracker is for bug reports and feature requests.\r\nGeneral support for **docker** can be found at the following locations:\r\n\r\n- Docker Support Forums - https://forums.docker.com\r\n- Slack - community.docker.com #general channel\r\n- Post a question on StackOverflow, using the Docker tag\r\n\r\nGeneral support for **moby** can be found at the following locations:\r\n\r\n- Moby Project Forums - https://forums.mobyproject.org\r\n- Slack - community.docker.com #moby-project channel\r\n- Post a question on StackOverflow, using the Moby tag\r\n\r\n---------------------------------------------------\r\nBUG REPORT INFORMATION\r\n---------------------------------------------------\r\nUse the commands below to provide key information from your environment:\r\nYou do NOT have to include this information if this is a FEATURE REQUEST\r\n-->\r\n\r\n**Description**\r\n\r\nsystemd is not recognized. There seems to be some relation to the login method [see stack exchange question & answer](https://unix.stackexchange.com/questions/587674/systemd-not-detected-dockerd-daemon-needs-to-be-started-manually)\r\n\r\n<!--\r\nBriefly describe the problem you are having in a few paragraphs.\r\n-->\r\n\r\n**Steps to reproduce the issue:**\r\n1. Open [Docker Rootless Tutorial on Katacoda](https://www.katacoda.com/courses/docker/rootless)\r\n2. Execute every command in the turorial\r\n\r\n\r\n**Describe the results you received:**\r\n\r\nreceive the warnings \r\n```\r\nsystemd is not detected, dockerd daemon needs to be started manually\r\n...\r\n#WARN: systemd not found. You have to remove XDG_RUNTIME_DIR manually on every logout\r\n``` \r\nand watch the first command in step 3 fail with\r\n![image](https://user-images.githubusercontent.com/29106652/91537131-17702800-e916-11ea-9454-aa7eaa9d7eec.png)\r\n\r\n**Describe the results you expected:**\r\nA tutorial [suggested by the maintainer of the project](https://youtu.be/Qq78zfXUq18?t=659) should work. Especially since it is identical to the tutorial on https://docs.docker.com/engine/security/rootless/ which also results in these warnings on my machine.\r\n\r\n**Additional information you deem important (e.g. issue happens only occasionally):**\r\n\r\n**Output of `docker version`:**\r\n\r\n![image](https://user-images.githubusercontent.com/29106652/91537740-14296c00-e917-11ea-8559-128c79e19036.png)\r\n\r\n\r\n**Output of `docker info`:**\r\n![image](https://user-images.githubusercontent.com/29106652/91537683-fd831500-e916-11ea-80f4-e77ba371dbae.png)\r\n\r\n\r\nI barely even understand what systemd does. So I really have no idea what is happening. If you have suggestions how to get this working it would be greatly appreciated.\r\n"},{"labels":[null,"documentation",null],"text":"**Description**\r\n\r\nThe documentation does not AFAIK mention that environment would take precedence over command line arguments, which is AFAIK not conventional.\r\n\r\nOnly mention is this [1]\r\n\r\n> You can also set the current context using the DOCKER_CONTEXT environment variable. This overrides the context set with docker context use.\r\n\r\n[1] https://docs.docker.com/engine/context/working-with-contexts/#use-a-different-context\r\n\r\n**Steps to reproduce the issue:**\r\n\r\n```bash\r\n  ~ ls test\r\nDockerfile\r\n➜  ~ DOCKER_CONTEXT=/dev/null docker build ./test\r\nunable to resolve docker endpoint: context \"/dev/null\" does not exist\r\n```\r\n\r\n**Describe the results you received:**\r\n\r\nEnvironment is read instead of the positional `PATH`\r\n\r\n**Describe the results you expected:**\r\n\r\nCommand line is read.\r\n\r\n**Additional information you deem important (e.g. issue happens only occasionally):**\r\n\r\nn/a\r\n\r\n**Output of `docker version`:**\r\n\r\nn/a - happens on all version I tried\r\n\r\n**Output of `docker info`:**\r\n\r\nn/a - happens on multiple systems\r\n\r\n**Additional environment details (AWS, VirtualBox, physical, etc.):**\r\n\r\nalso n/a"},{"labels":["documentation"],"text":"<!--\r\nIf you are reporting a new issue, make sure that we do not have any duplicates\r\nalready open. You can ensure this by searching the issue list for this\r\nrepository. If there is a duplicate, please close your issue and add a comment\r\nto the existing issue instead.\r\n\r\nIf you suspect your issue is a bug, please edit your issue description to\r\ninclude the BUG REPORT INFORMATION shown below. If you fail to provide this\r\ninformation within 7 days, we cannot debug your issue and will close it. We\r\nwill, however, reopen it if you later provide the information.\r\n\r\nFor more information about reporting issues, see\r\nhttps://github.com/moby/moby/blob/master/CONTRIBUTING.md#reporting-other-issues\r\n\r\n---------------------------------------------------\r\nGENERAL SUPPORT INFORMATION\r\n---------------------------------------------------\r\n\r\nThe GitHub issue tracker is for bug reports and feature requests.\r\nGeneral support for **docker** can be found at the following locations:\r\n\r\n- Docker Support Forums - https://forums.docker.com\r\n- Slack - community.docker.com #general channel\r\n- Post a question on StackOverflow, using the Docker tag\r\n\r\nGeneral support for **moby** can be found at the following locations:\r\n\r\n- Moby Project Forums - https://forums.mobyproject.org\r\n- Slack - community.docker.com #moby-project channel\r\n- Post a question on StackOverflow, using the Moby tag\r\n\r\n---------------------------------------------------\r\nBUG REPORT INFORMATION\r\n---------------------------------------------------\r\nUse the commands below to provide key information from your environment:\r\nYou do NOT have to include this information if this is a FEATURE REQUEST\r\n-->\r\n\r\n**Description**\r\n\r\nIn the OpenAPI documentation for the SystemDataUsage operation, the response schema describes a BuildCache as having properties CreatedAt and LastUsedAt of type integer. However, in the code types.BuildCache is defined as having properties CreatedAt and LastUsedAt of type time.time, and when a time.time value is passed to json.Encoder the type emitted in the JSON document is a RFC 3339 string because of time.time's MarshalJSON implementation.\r\n\r\nThis causes problems for anyone who is using the API documentation to autogenerate API clients.\r\n\r\n**Steps to reproduce the issue:**\r\n1. Run builds using BuildKit.\r\n2. Request SystemDataUsage via the API.\r\n\r\n**Describe the results you received:**\r\n\r\n    {\r\n      \"ID\": \"rrc3gr2ks5mm41ntmlqsqu2k4\",\r\n      \"Parent\": \"2tub3atjmssqqh0ji08jjc5oj\",\r\n      \"Type\": \"regular\",\r\n      \"Description\": \"fileop target\",\r\n      \"InUse\": false,\r\n      \"Shared\": false,\r\n      \"Size\": 353,\r\n      \"CreatedAt\": \"2020-06-17T14:55:03.5952988Z\",\r\n      \"LastUsedAt\": \"2020-06-17T14:55:44.6490503Z\",\r\n      \"UsageCount\": 1\r\n    }\r\n\r\nThis causes [Bollard](https://github.com/fussybeaver/bollard) to return a parse error because the CreatedAt property is found, but cannot be converted to an integer for storage into the struct.\r\n\r\n**Describe the results you expected:**\r\n\r\nEither CreatedAt and LastUsedAt should be integers, or the API specification should define these properties as strings (or being possibly being either type?).\r\n\r\n**Additional information you deem important (e.g. issue happens only occasionally):**\r\n\r\n**Output of `docker version`:**\r\n\r\n```\r\n$ docker version\r\nClient: Docker Engine - Community\r\n Version:           19.03.8\r\n API version:       1.40\r\n Go version:        go1.12.17\r\n Git commit:        afacb8b\r\n Built:             Wed Mar 11 01:21:11 2020\r\n OS/Arch:           darwin/amd64\r\n Experimental:      false\r\n\r\nServer: Docker Engine - Community\r\n Engine:\r\n  Version:          19.03.8\r\n  API version:      1.40 (minimum version 1.12)\r\n  Go version:       go1.12.17\r\n  Git commit:       afacb8b\r\n  Built:            Wed Mar 11 01:29:16 2020\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     false\r\n containerd:\r\n  Version:          v1.2.13\r\n  GitCommit:        7ad184331fa3e55e52b890ea95e65ba581ae3429\r\n runc:\r\n  Version:          1.0.0-rc10\r\n  GitCommit:        dc9208a3303feef5b3839f4323d9beb36df0a9dd\r\n docker-init:\r\n  Version:          0.18.0\r\n  GitCommit:        fec3683\r\n```\r\n\r\n**Output of `docker info`:**\r\n\r\nI don't have the output of docker info because this issue was originally found by @mac-chaffee and raised as stepchowfun/docuum#78.\r\n\r\n**Additional environment details (AWS, VirtualBox, physical, etc.):**\r\n"},{"labels":[null,"documentation",null],"text":"<!--\r\nIf you are reporting a new issue, make sure that we do not have any duplicates\r\nalready open. You can ensure this by searching the issue list for this\r\nrepository. If there is a duplicate, please close your issue and add a comment\r\nto the existing issue instead.\r\n\r\nIf you suspect your issue is a bug, please edit your issue description to\r\ninclude the BUG REPORT INFORMATION shown below. If you fail to provide this\r\ninformation within 7 days, we cannot debug your issue and will close it. We\r\nwill, however, reopen it if you later provide the information.\r\n\r\nFor more information about reporting issues, see\r\nhttps://github.com/moby/moby/blob/master/CONTRIBUTING.md#reporting-other-issues\r\n\r\n---------------------------------------------------\r\nGENERAL SUPPORT INFORMATION\r\n---------------------------------------------------\r\n\r\nThe GitHub issue tracker is for bug reports and feature requests.\r\nGeneral support for **docker** can be found at the following locations:\r\n\r\n- Docker Support Forums - https://forums.docker.com\r\n- Slack - community.docker.com #general channel\r\n- Post a question on StackOverflow, using the Docker tag\r\n\r\nGeneral support for **moby** can be found at the following locations:\r\n\r\n- Moby Project Forums - https://forums.mobyproject.org\r\n- Slack - community.docker.com #moby-project channel\r\n- Post a question on StackOverflow, using the Moby tag\r\n\r\n---------------------------------------------------\r\nBUG REPORT INFORMATION\r\n---------------------------------------------------\r\nUse the commands below to provide key information from your environment:\r\nYou do NOT have to include this information if this is a FEATURE REQUEST\r\n-->\r\n\r\n**Description**\r\nIn api document `/version` response looks like wrong.\r\nhttps://github.com/moby/moby/blob/master/docs/api/v1.40.yaml#L7715\r\n\r\n<!--\r\nBriefly describe the problem you are having in a few paragraphs.\r\n-->\r\n\r\n**Steps to reproduce the issue:**\r\n1. `curl --unix-socket /var/run/docker.sock localhost/version`\r\n\r\n**Describe the results you received:**\r\n```\r\n{\r\n  \"Platform\": {\r\n    \"Name\": \"Docker Engine - Community\"\r\n  },\r\n  \"Components\": [\r\n    {\r\n      \"Name\": \"Engine\",\r\n      \"Version\": \"19.03.12\",\r\n      \"Details\": {\r\n        \"ApiVersion\": \"1.40\",\r\n        \"Arch\": \"amd64\",\r\n        \"BuildTime\": \"2020-06-22T15:44:07.000000000+00:00\",\r\n        \"Experimental\": \"false\",\r\n        \"GitCommit\": \"48a66213fe\",\r\n        \"GoVersion\": \"go1.13.10\",\r\n        \"KernelVersion\": \"5.3.0-62-generic\",\r\n        \"MinAPIVersion\": \"1.12\",\r\n        \"Os\": \"linux\"\r\n      }\r\n    },\r\n    ...\r\n  ],\r\n  \"Version\": \"19.03.12\",\r\n  \"ApiVersion\": \"1.40\",\r\n  \"MinAPIVersion\": \"1.12\",\r\n  \"GitCommit\": \"48a66213fe\",\r\n  \"GoVersion\": \"go1.13.10\",\r\n  \"Os\": \"linux\",\r\n  \"Arch\": \"amd64\",\r\n  \"KernelVersion\": \"5.3.0-62-generic\",\r\n  \"BuildTime\": \"2020-06-22T15:44:07.000000000+00:00\"\r\n}\r\n```\r\n\r\n**Describe the results you expected:**\r\nLooks like document is wrong.\r\nWe should update document?\r\n\r\n**Additional information you deem important (e.g. issue happens only occasionally):**\r\n\r\n**Output of `docker version`:**\r\n\r\n```\r\nClient: Docker Engine - Community\r\n Version:           19.03.12\r\n API version:       1.40\r\n Go version:        go1.13.10\r\n Git commit:        48a66213fe\r\n Built:             Mon Jun 22 15:45:36 2020\r\n OS/Arch:           linux/amd64\r\n Experimental:      false\r\n\r\nServer: Docker Engine - Community\r\n Engine:\r\n  Version:          19.03.12\r\n  API version:      1.40 (minimum version 1.12)\r\n  Go version:       go1.13.10\r\n  Git commit:       48a66213fe\r\n  Built:            Mon Jun 22 15:44:07 2020\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     false\r\n containerd:\r\n  Version:          1.2.13\r\n  GitCommit:        7ad184331fa3e55e52b890ea95e65ba581ae3429\r\n runc:\r\n  Version:          1.0.0-rc10\r\n  GitCommit:        dc9208a3303feef5b3839f4323d9beb36df0a9dd\r\n docker-init:\r\n  Version:          0.18.0\r\n  GitCommit:        fec3683\r\n```\r\n\r\n**Output of `docker info`:**\r\n\r\n```\r\nClient: Docker Engine - Community\r\n Version:           19.03.12\r\n API version:       1.40\r\n Go version:        go1.13.10\r\n Git commit:        48a66213fe\r\n Built:             Mon Jun 22 15:45:36 2020\r\n OS/Arch:           linux/amd64\r\n Experimental:      false\r\n\r\nServer: Docker Engine - Community\r\n Engine:\r\n  Version:          19.03.12\r\n  API version:      1.40 (minimum version 1.12)\r\n  Go version:       go1.13.10\r\n  Git commit:       48a66213fe\r\n  Built:            Mon Jun 22 15:44:07 2020\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     false\r\n containerd:\r\n  Version:          1.2.13\r\n  GitCommit:        7ad184331fa3e55e52b890ea95e65ba581ae3429\r\n runc:\r\n  Version:          1.0.0-rc10\r\n  GitCommit:        dc9208a3303feef5b3839f4323d9beb36df0a9dd\r\n docker-init:\r\n  Version:          0.18.0\r\n  GitCommit:        fec3683\r\n[I] docker.vim )\r\n[I] docker.vim ) docker info\r\nClient:\r\n Debug Mode: false\r\n\r\nServer:\r\n Containers: 2\r\n  Running: 1\r\n  Paused: 0\r\n  Stopped: 1\r\n Images: 52\r\n Server Version: 19.03.12\r\n Storage Driver: overlay2\r\n  Backing Filesystem: extfs\r\n  Supports d_type: true\r\n  Native Overlay Diff: true\r\n Logging Driver: json-file\r\n Cgroup Driver: cgroupfs\r\n Plugins:\r\n  Volume: local\r\n  Network: bridge host ipvlan macvlan null overlay\r\n  Log: awslogs fluentd gcplogs gelf journald json-file local logentries splunk syslog\r\n Swarm: inactive\r\n Runtimes: runc\r\n Default Runtime: runc\r\n Init Binary: docker-init\r\n containerd version: 7ad184331fa3e55e52b890ea95e65ba581ae3429\r\n runc version: dc9208a3303feef5b3839f4323d9beb36df0a9dd\r\n init version: fec3683\r\n Security Options:\r\n  apparmor\r\n  seccomp\r\n   Profile: default\r\n Kernel Version: 5.3.0-62-generic\r\n Operating System: Ubuntu 18.04.4 LTS\r\n OSType: linux\r\n Architecture: x86_64\r\n CPUs: 8\r\n Total Memory: 31.09GiB\r\n Name: thinkpad\r\n ID: EKKH:UC2C:RDMA:JDP2:KDIG:GW2W:T2H3:S3LT:MWNI:D5YG:X24P:K2DC\r\n Docker Root Dir: /var/lib/docker\r\n Debug Mode: false\r\n Username: skanehira\r\n Registry: https://index.docker.io/v1/\r\n Labels:\r\n Experimental: false\r\n Insecure Registries:\r\n  127.0.0.0/8\r\n Live Restore Enabled: false\r\n\r\nWARNING: No swap limit support\r\n```\r\n\r\n**Additional environment details (AWS, VirtualBox, physical, etc.):**\r\nOS: Ubuntu 18.04.01"},{"labels":["documentation",null,null,null],"text":"**Description**\r\n\r\nI don't find anywhere any resource to raise ulimits with Docker Rootless. The documentation is [way too limited about it](https://docs.docker.com/engine/security/rootless/#limiting-resources) :\r\n\r\n> However, traditional ulimit and cpulimit can be still used, though they work in process-granularity rather than in container-granularity.\r\n\r\nI've edited my local limits (`/etc/security/limits.conf`) so my user has these ulimits : \r\n\r\n```\r\nopen files                  (-n) 40000\r\nmax user processes              (-u) 40000\r\n```\r\n\r\nMy daemon is automatically started by my `systemctl --user` service.\r\n\r\nWhen I run `docker run -it --rm ubuntu bash -c \"ulimit -n\"`, I get : `4096`\r\n\r\nWhat is very interesting is when I manually run the docker daemon (I stop the systemctl service, then run) : \r\n\r\n```console\r\n/home/myuser/bin/dockerd-rootless.sh --experimental --storage-driver=overlay2\r\n```\r\n\r\nAnd that I run `docker run -it --rm ubuntu bash -c \"ulimit -n\"`, I get : `40000`\r\n\r\n**So I don't know what is going on ! Why is my daemon loaded by systemctl ignoring my user ulimits ?**\r\n\r\nHere is my `~/.config/systemd/user/docker.service` file : \r\n\r\n```\r\n[Unit]\r\nDescription=Docker Application Container Engine (Rootless)\r\nDocumentation=https://docs.docker.com\r\n\r\n[Service]\r\nEnvironment=PATH=/home/myuser/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\r\nExecStart=/home/myuser/bin/dockerd-rootless.sh --experimental --storage-driver=overlay2\r\nExecReload=/bin/kill -s HUP $MAINPID\r\nTimeoutSec=0\r\nRestartSec=2\r\nRestart=always\r\nStartLimitBurst=3\r\nStartLimitInterval=20s\r\nLimitNOFILE=infinity\r\nLimitNPROC=infinity\r\nLimitCORE=infinity\r\nTasksMax=infinity\r\nDelegate=yes\r\nType=simple\r\n\r\n[Install]\r\nWantedBy=default.target\r\n```\r\n\r\n<details><summary>Docker Info</summary>\r\n<p>\r\n\r\n```\r\nClient:\r\n Debug Mode: false\r\n\r\nServer:\r\n Containers: 0\r\n  Running: 0\r\n  Paused: 0\r\n  Stopped: 0\r\n Images: 2\r\n Server Version: 19.03.8\r\n Storage Driver: vfs\r\n Logging Driver: json-file\r\n Cgroup Driver: none\r\n Plugins:\r\n  Volume: local\r\n  Network: bridge host ipvlan macvlan null overlay\r\n  Log: awslogs fluentd gcplogs gelf journald json-file local logentries splunk syslog\r\n Swarm: inactive\r\n Runtimes: runc\r\n Default Runtime: runc\r\n Init Binary: docker-init\r\n containerd version: 7ad184331fa3e55e52b890ea95e65ba581ae3429\r\n runc version: dc9208a3303feef5b3839f4323d9beb36df0a9dd\r\n init version: fec3683\r\n Security Options:\r\n  seccomp\r\n   Profile: default\r\n  rootless\r\n Kernel Version: 4.15.0-99-generic\r\n Operating System: Ubuntu 18.04.2 LTS\r\n OSType: linux\r\n Architecture: x86_64\r\n CPUs: 3\r\n Total Memory: 3.849GiB\r\n Name: somelinux\r\n ID: CHQ7:K7CT:QQ7H:NKAD:PCYY:G4HK:HY7K:WLRU:CIGY:C6PD:CO6J:XKZ2\r\n Docker Root Dir: /home/dfob/.local/share/docker\r\n Debug Mode: false\r\n Registry: https://index.docker.io/v1/\r\n Labels:\r\n Experimental: true\r\n Insecure Registries:\r\n  127.0.0.0/8\r\n Live Restore Enabled: false\r\n Product License: Community Engine\r\n\r\nWARNING: No swap limit support\r\nWARNING: bridge-nf-call-iptables is disabled\r\nWARNING: bridge-nf-call-ip6tables is disabled\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\nThank you"},{"labels":[null,"documentation"],"text":"<!--\r\nIf you are reporting a new issue, make sure that we do not have any duplicates\r\nalready open. You can ensure this by searching the issue list for this\r\nrepository. If there is a duplicate, please close your issue and add a comment\r\nto the existing issue instead.\r\n\r\nIf you suspect your issue is a bug, please edit your issue description to\r\ninclude the BUG REPORT INFORMATION shown below. If you fail to provide this\r\ninformation within 7 days, we cannot debug your issue and will close it. We\r\nwill, however, reopen it if you later provide the information.\r\n\r\nFor more information about reporting issues, see\r\nhttps://github.com/moby/moby/blob/master/CONTRIBUTING.md#reporting-other-issues\r\n\r\n---------------------------------------------------\r\nGENERAL SUPPORT INFORMATION\r\n---------------------------------------------------\r\n\r\nThe GitHub issue tracker is for bug reports and feature requests.\r\nGeneral support for **docker** can be found at the following locations:\r\n\r\n- Docker Support Forums - https://forums.docker.com\r\n- Slack - community.docker.com #general channel\r\n- Post a question on StackOverflow, using the Docker tag\r\n\r\nGeneral support for **moby** can be found at the following locations:\r\n\r\n- Moby Project Forums - https://forums.mobyproject.org\r\n- Slack - community.docker.com #moby-project channel\r\n- Post a question on StackOverflow, using the Moby tag\r\n\r\n---------------------------------------------------\r\nBUG REPORT INFORMATION\r\n---------------------------------------------------\r\nUse the commands below to provide key information from your environment:\r\nYou do NOT have to include this information if this is a FEATURE REQUEST\r\n-->\r\n\r\n**Description**\r\n\r\n<!--\r\nBriefly describe the problem you are having in a few paragraphs.\r\n-->\r\n\r\nWhen using ARG to specify an image or tag in a multi-stage Dockerfile, the ARG is not being applied correctly.\r\n\r\nThis is a simplified version of my Dockerfile which does not work:\r\n```\r\nFROM scratch\r\n\r\nARG node_version\r\n\r\nFROM node:${node_version}-alpine\r\n```\r\n\r\nThis example does work, but should not according to how I understand ARG to work:\r\n```\r\nARG node_version\r\n\r\nFROM scratch\r\n\r\nARG node_version=${node_version}\r\n\r\nFROM node:${node_version}-alpine\r\n```\r\n\r\nThis example also works:\r\n```\r\nARG node_version\r\n\r\nFROM node:${node_version}-alpine\r\n```\r\n\r\nThis leads to believe that there is a mishandling of the variables in multi-stage builds.\r\n\r\n**Steps to reproduce the issue:**\r\n1. run \"docker build . --build-arg=node_version=12.14.1\" with the Dockerfile above.\r\n\r\n**Describe the results you received:**\r\nDocker reports:\r\n```\r\nStep 3/3 : FROM node:${node_version}-alpine\r\ninvalid reference format\r\n```\r\n\r\n**Describe the results you expected:**\r\nI expect to be able to use a variable defined by ARG before the FROM in the FROM statement itself, even in multi-stage builds.\r\n\r\n**Additional information you deem important (e.g. issue happens only occasionally):**\r\n\r\n**Output of `docker version`:**\r\n```\r\nDocker version 19.03.8, build afacb8b\r\n```\r\n\r\n**Output of `docker info`:**\r\n\r\n```\r\nClient:\r\n Debug Mode: false\r\n\r\nServer:\r\n Containers: 24\r\n  Running: 20\r\n  Paused: 0\r\n  Stopped: 4\r\n Images: 19\r\n Server Version: 19.03.8\r\n Storage Driver: overlay2\r\n  Backing Filesystem: <unknown>\r\n  Supports d_type: true\r\n  Native Overlay Diff: true\r\n Logging Driver: json-file\r\n Cgroup Driver: cgroupfs\r\n Plugins:\r\n  Volume: local\r\n  Network: bridge host ipvlan macvlan null overlay\r\n  Log: awslogs fluentd gcplogs gelf journald json-file local logentries splunk syslog\r\n Swarm: inactive\r\n Runtimes: runc\r\n Default Runtime: runc\r\n Init Binary: docker-init\r\n containerd version: 7ad184331fa3e55e52b890ea95e65ba581ae3429\r\n runc version: dc9208a3303feef5b3839f4323d9beb36df0a9dd\r\n init version: fec3683\r\n Security Options:\r\n  seccomp\r\n   Profile: default\r\n Kernel Version: 4.19.76-linuxkit\r\n Operating System: Docker Desktop\r\n OSType: linux\r\n Architecture: x86_64\r\n CPUs: 2\r\n Total Memory: 1.943GiB\r\n Name: docker-desktop\r\n ID: AAU3:FDX7:NZ7A:MCNC:L5DC:NGLG:XMFS:NVNO:WPW3:OJKH:6YSQ:6JMR\r\n Docker Root Dir: /var/lib/docker\r\n Debug Mode: true\r\n  File Descriptors: 142\r\n  Goroutines: 134\r\n  System Time: 2020-04-16T16:20:01.016176142Z\r\n  EventsListeners: 3\r\n Registry: https://index.docker.io/v1/\r\n Labels:\r\n Experimental: false\r\n Insecure Registries:\r\n  127.0.0.0/8\r\n Live Restore Enabled: false\r\n Product License: Community Engine\r\n```\r\n\r\n**Additional environment details (AWS, VirtualBox, physical, etc.):**\r\nThis is reproducible under Google Cloud Builder when using the standard Docker build image here: gcr.io/cloud-builders/docker."},{"labels":["documentation",null],"text":"**Description**\r\nAccording to commit https://github.com/moby/moby/commit/32915b1d0a315598edb737785d0357b5a1b8aa11, we can no longer build `binary-client` by running `./hack/make.sh binary-client`.\r\nThe document could be updated."},{"labels":[null,"documentation",null,null],"text":"I noticed that we still have some old release branches in this repository. Some of those branches have changes that never made it into a release (or documentation cherry-picks that were published in the documentation, but not tagged as a release)\r\n\r\n\r\nBranch                                               | Changes not in a release\r\n-----------------------------------------------------|--------------------------------------------------------------\r\n[1.12.x](https://github.com/moby/moby/tree/1.12.x)   | https://github.com/moby/moby/compare/v1.12.6...1.12.x\r\n[1.13.x](https://github.com/moby/moby/tree/1.13.x)   | https://github.com/moby/moby/compare/v1.13.1...1.13.x\r\n[17.03.x](https://github.com/moby/moby/tree/17.03.x) | https://github.com/moby/moby/compare/v17.03.2-ce...17.03.x\r\n[17.04.x](https://github.com/moby/moby/tree/17.04.x) | https://github.com/moby/moby/compare/v17.04.0-ce...17.04.x\r\n[17.05.x](https://github.com/moby/moby/tree/17.05.x) | https://github.com/moby/moby/compare/v17.05.0-ce...17.05.x (no diff)\r\n[docs](https://github.com/moby/moby/tree/docs)       | documentation-only changes\r\n\r\n\r\nSome care should be taken when removing these branches, because the docker documentation fetches some resources from some of these branches; https://github.com/docker/docker.github.io/blob/ec57364ede82a135021e2e762bd0833d92a0cc0f/_scripts/fetch-upstream-resources.sh#L74 https://github.com/docker/docker.github.io/blob/ec57364ede82a135021e2e762bd0833d92a0cc0f/_scripts/fetch-upstream-resources.sh#L89-L95\r\n\r\n\r\nIn addition, with the introduction of the Swagger file (which is used to document current versions of the API), this repository only has a definition of the _current_ version of the API. Older versions of the API need to be fetched from either tags in various repositories, or from release-branches in those repositories. Having those files spread in various locations makes building the docs complicated, but also makes it more difficult to _compare_ changes between API versions, or to make fixes to the API documentation (if there's a bug or missing documentation in existing API versions).\r\n\r\nI'm planning to add copies of the swagger.yml for each API version. in this repository to address that.\r\n\r\n- [x] update docker-ce-packaging to build from upstream repositories instead of the mono-repo; https://github.com/docker/docker-ce-packaging/pull/449\r\n    - note: more changes needed in the private release packaging repositories, but those are tracked separately\r\n- [x] update fetch-upstream-resources.sh script in documentation repository to not depend on these branches (https://github.com/docker/docker.github.io/pull/10101)\r\n    - [x] https://github.com/docker/docker.github.io/pull/10343 Engine API: use template for API reference pages\r\n    - [x] https://github.com/docker/docker.github.io/pull/10348 Simplify use of \"ENGINE_BRANCH\" and \"DISTRIBUTION_BRANCH\"\r\n    - [x] https://github.com/docker/docker.github.io/pull/10344 [WIP] simplify fetching API versions\r\n    - [x] https://github.com/docker/docker.github.io/pull/10578 Engine API: remove per-branch fetching of API docs\r\n- [x] backport fetch-upstream-resources.sh changes to documentation archive branches\r\n    - [x] v18.09 archive branch https://github.com/docker/docker.github.io/pull/10196\r\n    - [x] v18.03 archive branch https://github.com/docker/docker.github.io/pull/10349\r\n    - [x] ~v17.12 archive branch~ won't fix\r\n    - [x] ~v17.09 archive branch~ won't fix\r\n    - [x] ~v17.06 archive branch~ won't fix\r\n    - [x] ~v17.03 archive branch~ won't fix\r\n    - [x] ~v1.13 archive branch~ won't fix\r\n- [x] add a copy of the swagger.yml for each released version of the API\r\n    - [x] v1.40 - docker v19.03 https://github.com/moby/moby/pull/40570 \r\n    - [x] v1.39 - docker v18.09 https://github.com/moby/moby/pull/40570 \r\n    - [x] v1.38 - docker v18.06 https://github.com/moby/moby/pull/40570 \r\n    - [x] v1.37 - docker v18.03 - v18.05 https://github.com/moby/moby/pull/40778\r\n    - [x] v1.36 - docker v18.02 https://github.com/moby/moby/pull/40778\r\n    - [x] v1.35 - docker v17.12 - v18.01 https://github.com/moby/moby/pull/40778\r\n    - [x] v1.34 - docker v17.11 https://github.com/moby/moby/pull/40778\r\n    - [x] v1.33 - docker v17.10 https://github.com/moby/moby/pull/40778\r\n    - [x] v1.32 - docker v17.09 https://github.com/moby/moby/pull/40778\r\n    - [x] v1.31 - docker v17.07 https://github.com/moby/moby/pull/40778\r\n    - [x] v1.30 - docker v17.06 https://github.com/moby/moby/pull/40778\r\n    - [x] v1.29 - docker v17.05 https://github.com/moby/moby/pull/40570 \r\n    - [x] v1.28 - docker v17.04 https://github.com/moby/moby/pull/40570 \r\n    - [x] v1.27 - docker v17.03 https://github.com/moby/moby/pull/40570 \r\n    - [x] v1.26 - docker v1.13.1 https://github.com/moby/moby/pull/40570 \r\n    - [x] v1.25 - docker v1.13.0 https://github.com/moby/moby/pull/40570 \r\n- [x] cherry-pick copy of swagger.yaml to current release branch\r\n    - [x] https://github.com/moby/moby/pull/40575 [19.03 backport] docs: add API versions v1.25 - v1.29, v1.38 - v1.40\r\n    - [x] https://github.com/moby/moby/pull/40779 [19.03 backport] docs: add API versions v1.30 - v1.37\r\n- [x] ~remove unused release-branches~ we can't update all archives, so we may want to keep the old branches (but eventually, \"archive\" the docker/docker-ce repository once it's no longer used in the build pipeline\r\n"},{"labels":[null,"documentation"],"text":"The `docker inspect` documentation doesn't describe the `Health` object being returned once healthchecks are configured.\r\n\r\n\r\n**Steps to reproduce the issue:**\r\n1. `docker run -it --rm nginx`\r\n2. _docker inspect_ the container: `docker inspect --format '{{json .State.Health }}' ` and observe `null` according to the documentation (since the field doesn't exist). \r\n3. `docker run -it --rm --health-cmd=\"exit 0\" nginx`\r\n4. _docker inspect_ the container: `docker inspect --format '{{json .State.Health }}' ` and observe a valid JSON:\r\n\r\n `{\"Status\":\"healthy\",\"FailingStreak\":0,\"Log\":[{\"Start\":\"2019-12-22T10:59:05.6385933Z\",\"End\":\"2019-12-22T10:59:05.8078452Z\",\"ExitCode\":0,\"Output\":\"\"}]}`\r\n\r\n**Additional information you deem important (e.g. issue happens only occasionally):**\r\n\r\n**Output of `docker version`:**\r\n\r\n```\r\nClient: Docker Engine - Community\r\n Version:           19.03.5\r\n API version:       1.40\r\n Go version:        go1.12.12\r\n Git commit:        633a0ea\r\n Built:             Wed Nov 13 07:22:34 2019\r\n OS/Arch:           darwin/amd64\r\n Experimental:      false\r\n\r\nServer: Docker Engine - Community\r\n Engine:\r\n  Version:          19.03.5\r\n  API version:      1.40 (minimum version 1.12)\r\n  Go version:       go1.12.12\r\n  Git commit:       633a0ea\r\n  Built:            Wed Nov 13 07:29:19 2019\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     false\r\n containerd:\r\n  Version:          v1.2.10\r\n  GitCommit:        b34a5c8af56e510852c35414db4c1f4fa6172339\r\n runc:\r\n  Version:          1.0.0-rc8+dev\r\n  GitCommit:        3e425f80a8c931f88e6d94a8c831b9d5aa481657\r\n docker-init:\r\n  Version:          0.18.0\r\n  GitCommit:        fec3683\r\n```\r\n\r\n**Output of `docker info`:**\r\n\r\n```\r\nClient:\r\n Debug Mode: false\r\n\r\nServer:\r\n Containers: 2\r\n  Running: 2\r\n  Paused: 0\r\n  Stopped: 0\r\n Images: 51\r\n Server Version: 19.03.5\r\n Storage Driver: overlay2\r\n  Backing Filesystem: extfs\r\n  Supports d_type: true\r\n  Native Overlay Diff: true\r\n Logging Driver: json-file\r\n Cgroup Driver: cgroupfs\r\n Plugins:\r\n  Volume: local\r\n  Network: bridge host ipvlan macvlan null overlay\r\n  Log: awslogs fluentd gcplogs gelf journald json-file local logentries splunk syslog\r\n Swarm: inactive\r\n Runtimes: runc\r\n Default Runtime: runc\r\n Init Binary: docker-init\r\n containerd version: b34a5c8af56e510852c35414db4c1f4fa6172339\r\n runc version: 3e425f80a8c931f88e6d94a8c831b9d5aa481657\r\n init version: fec3683\r\n Security Options:\r\n  seccomp\r\n   Profile: default\r\n Kernel Version: 4.9.184-linuxkit\r\n Operating System: Docker Desktop\r\n OSType: linux\r\n Architecture: x86_64\r\n CPUs: 4\r\n Total Memory: 4.833GiB\r\n Name: docker-desktop\r\n ID: CBCJ:MNIU:ICXC:77PL:YXBA:K5EF:NE3L:5OHR:BIE4:TFOW:G4BB:2A2N\r\n Docker Root Dir: /var/lib/docker\r\n Debug Mode: false\r\n HTTP Proxy: gateway.docker.internal:3128\r\n HTTPS Proxy: gateway.docker.internal:3129\r\n Registry: https://index.docker.io/v1/\r\n Labels:\r\n Experimental: false\r\n Insecure Registries:\r\n  127.0.0.0/8\r\n Live Restore Enabled: false\r\n Product License: Community Engine\r\n```\r\n"},{"labels":[null,"documentation",null,null,null],"text":"The `.dockerignore` file has been around for a while, but there's still room for improvement. Opening this as a ticket, based on some notes I had, and some existing issues. I can break down this issue further (and open separate tickets where needed)\r\n\r\n#### Some related issues:\r\n\r\n- [ ] https://github.com/moby/moby/issues/40318 Verify parity between .dockerignore and .gitignore syntax\r\n- [ ] https://github.com/moby/moby/issues/30018 Exception patterns in .dockerignore do not support wildcard directories\r\n- [ ] https://github.com/moby/moby/issues/41433 wildcard directories not implemented correctly in dockerignore\r\n- [ ] https://github.com/moby/moby/issues/12843 Global .dockerignore\r\n- [ ] (re)consider nested .dockerignore files https://github.com/moby/moby/issues/20944, and https://github.com/moby/moby/pull/21020#issuecomment-210106299\r\n- [ ] https://github.com/moby/moby/issues/9294 \"Output the reason while cache need to be invalidated on docker build\"\r\n- [ ] https://github.com/moby/moby/issues/15771 COPY with excluded files is not possible\r\n\r\n#### Assorted issues / suggestions / topics\r\n\r\n- Improve performance where possible. Ignoring files should make builds smaller and _faster_, not cause builds to be slow.\r\n    - Would be great if it's possible to profile builds, and see how much time was taken by _excluding_ files. Having this would allow users to make better informed decisions wether or not `.dockerignore` is the right solution.\r\n    - The dockerignore file is often used to make the build-context smaller in order to speed up builds, but with the introduction of BuildKit, some of those may no longer be relevant (and `.dockerignore` could actually have a negative impact in some situations)\r\n- Make `.dockerignore` follow the _exact_ same patterns as `.gitignore` (which it was originally modeled after)\r\n    - `.gitignore` pattern reference: https://git-scm.com/docs/gitignore#_pattern_format\r\n    - if possible, run the .git test-suite / tests to verify this\r\n- Add a global `.dockerignore` to allow excluding common files (`.idea`, `Thumbs.db` files and such). See [moby#12843](https://github.com/moby/moby/issues/12843 Global .dockerignore)\r\n    - allow easy discovery _why_ a file or directory was ignored (which becomes more important if a global ignore file is active). Also see next bullet\r\n- Introduce a command similar to [`git check-ignore`](https://git-scm.com/docs/git-check-ignore) for debugging\r\n    - related: https://github.com/moby/moby/issues/9294 \"Output the reason while cache need to be invalidated on docker build\"\r\n- Note: recursive `.dockerignore` files were proposed at some point, but were considered a risky, breaking change (see https://github.com/moby/moby/issues/20944, and https://github.com/moby/moby/pull/21020#issuecomment-210106299)\r\n    - should this be reconsidered?\r\n- Improve and validate the [`.dockerignore` documentation](https://docs.docker.com/engine/reference/builder/#dockerignore-file)\r\n    - document the per-Dockerfile dockerignore (when using BuildKit and Docker 19.03 or up: https://github.com/moby/moby/issues/12886#issuecomment-480575928, https://github.com/moby/moby/issues/12886#issuecomment-518843764)\r\n    - improve docs by referring to / borrowing from `.gitignore` (where applicable) (see https://github.com/moby/moby/issues/40318 \"BUG: `.dockerignore` sometimes ignores `**`\")\r\n    - could be moved to a separate page if needed\r\n    - provide better examples (also for Windows platforms)\r\n    - best practices (what files to consider for excluding to optimize caching; when to use `.dockerignore`, when *not* to use and (e.g.) use BuildKit, optimize your Dockerfile, use multi-stage builds etc.)\r\n    - common pitfalls\r\n- (related) consider implementing `COPY --exclude` to allow specifying ignore-rules in the Dockerfile itself; this can help with situations where (e.g.) frequently changing files are mixed with \"cacheable\" files (proposal in https://github.com/moby/moby/issues/15771). Allowing such files to be `COPY`'d separately would give more control over layers/caching.\r\n- (Slightly related) improve errors produced due to files that were excluded. The current error for missing files is confusing (as it mentions the file path on the _daemon_ side), therefore making it hard to trace the error back to `.dockerignore` (see the discussion on https://github.com/docker/for-mac/issues/1922, and https://github.com/moby/moby/issues/37605)\r\n\r\n\r\n\r\n"},{"labels":["documentation",null],"text":"**Description**\r\n\r\n`docker volume prune` does not remove dangling bind volumes\r\n\r\n**Steps to reproduce the issue:**\r\n\r\n```\r\n$ docker volume create --name bind_volume --opt type=none --opt device=/tmp --opt o=bind\r\nbind_volume\r\n\r\n$ docker volume inspect bind_volume\r\n[\r\n    {\r\n        \"CreatedAt\": \"2019-10-29T17:41:09Z\",\r\n        \"Driver\": \"local\",\r\n        \"Labels\": {},\r\n        \"Mountpoint\": \"/var/lib/docker/volumes/bind_volume/_data\",\r\n        \"Name\": \"bind_volume\",\r\n        \"Options\": {\r\n            \"device\": \"/tmp\",\r\n            \"o\": \"bind\",\r\n            \"type\": \"none\"\r\n        },\r\n        \"Scope\": \"local\"\r\n    }\r\n]\r\n\r\n$ docker volume ls -f dangling=true\r\nDRIVER              VOLUME NAME\r\nlocal               bind_volume\r\n\r\n$ docker volume prune -f\r\nTotal reclaimed space: 0B\r\n```\r\n\r\n**Describe the results you received:**\r\n\r\nA dangling bind volume is not removed.\r\n\r\n**Describe the results you expected:**\r\n\r\nA dangling bind volume is removed.\r\n\r\n**Additional information you deem important (e.g. issue happens only occasionally):**\r\n\r\nThe issue happens 100% of time.\r\n\r\n**Workaround**\r\n\r\nFeed the list of dangling volumes to `docker volume rm` manually:\r\n\r\n```\r\n$ docker volume rm $(docker volume ls -qf dangling=true)\r\nOR\r\n$ docker volume ls -qf dangling=true | xargs -r docker volume rm\r\n```\r\n\r\n**Output of `docker version`:**\r\n\r\n```\r\n$ docker version\r\nClient:\r\n Version:           18.09.2\r\n API version:       1.39\r\n Go version:        go1.10.6\r\n Git commit:        6247962\r\n Built:             Sun Feb 10 04:13:47 2019\r\n OS/Arch:           linux/amd64\r\n Experimental:      false\r\n\r\nServer: Docker Engine - Community\r\n Engine:\r\n  Version:          18.09.2\r\n  API version:      1.39 (minimum version 1.12)\r\n  Go version:       go1.10.6\r\n  Git commit:       6247962\r\n  Built:            Sun Feb 10 03:42:13 2019\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     false\r\n```\r\n\r\n**Output of `docker info`:**\r\n\r\n```\r\n$ docker info\r\nContainers: 152\r\n Running: 16\r\n Paused: 0\r\n Stopped: 136\r\nImages: 80\r\nServer Version: 18.09.2\r\nStorage Driver: overlay2\r\n Backing Filesystem: extfs\r\n Supports d_type: true\r\n Native Overlay Diff: true\r\nLogging Driver: json-file\r\nCgroup Driver: cgroupfs\r\nPlugins:\r\n Volume: local\r\n Network: bridge host macvlan null overlay\r\n Log: awslogs fluentd gcplogs gelf journald json-file local logentries splunk syslog\r\nSwarm: active\r\n NodeID: x9jkazxqv6noz8od01g8gzm0h\r\n Is Manager: true\r\n ClusterID: uxkuiv5ijmosd54chjohkfoqe\r\n Managers: 1\r\n Nodes: 1\r\n Default Address Pool: 10.0.0.0/8  \r\n SubnetSize: 24\r\n Orchestration:\r\n  Task History Retention Limit: 5\r\n Raft:\r\n  Snapshot Interval: 10000\r\n  Number of Old Snapshots to Retain: 0\r\n  Heartbeat Tick: 1\r\n  Election Tick: 10\r\n Dispatcher:\r\n  Heartbeat Period: 5 seconds\r\n CA Configuration:\r\n  Expiry Duration: 3 months\r\n  Force Rotate: 0\r\n Autolock Managers: false\r\n Root Rotation In Progress: false\r\n Node Address: 192.168.64.1\r\n Manager Addresses:\r\n  192.168.64.1:2377\r\nRuntimes: runc\r\nDefault Runtime: runc\r\nInit Binary: docker-init\r\ncontainerd version: bb71b10fd8f58240ca47fbb579b9d1028eea7c84\r\nrunc version: 2b18fe1d885ee5083ef9f0838fee39b62d653e30\r\ninit version: fec3683\r\nSecurity Options:\r\n apparmor\r\n seccomp\r\n  Profile: default\r\nKernel Version: 4.15.0-1021-aws\r\nOperating System: Ubuntu 18.04.1 LTS\r\nOSType: linux\r\nArchitecture: x86_64\r\nCPUs: 4\r\nTotal Memory: 15.48GiB\r\nName: ip-172-31-5-235\r\nID: ZG4Q:UHEI:5G7S:6H6I:A22K:YZZX:JUER:TASL:HXB3:CZKZ:WOHK:BDYB\r\nDocker Root Dir: /data/var/lib/docker\r\nDebug Mode (client): false\r\nDebug Mode (server): false\r\nRegistry: https://index.docker.io/v1/\r\nLabels:\r\nExperimental: false\r\nInsecure Registries:\r\n 127.0.0.0/8\r\nLive Restore Enabled: false\r\nProduct License: Community Engine\r\n```\r\n\r\n**Additional environment details (AWS, VirtualBox, physical, etc.):**\r\n\r\nTested with docker 18.09.2 and 19.03.4"},{"labels":["documentation",null],"text":"<!--\r\nIf you are reporting a new issue, make sure that we do not have any duplicates\r\nalready open. You can ensure this by searching the issue list for this\r\nrepository. If there is a duplicate, please close your issue and add a comment\r\nto the existing issue instead.\r\n\r\nIf you suspect your issue is a bug, please edit your issue description to\r\ninclude the BUG REPORT INFORMATION shown below. If you fail to provide this\r\ninformation within 7 days, we cannot debug your issue and will close it. We\r\nwill, however, reopen it if you later provide the information.\r\n\r\nFor more information about reporting issues, see\r\nhttps://github.com/moby/moby/blob/master/CONTRIBUTING.md#reporting-other-issues\r\n\r\n---------------------------------------------------\r\nGENERAL SUPPORT INFORMATION\r\n---------------------------------------------------\r\n\r\nThe GitHub issue tracker is for bug reports and feature requests.\r\nGeneral support for **docker** can be found at the following locations:\r\n\r\n- Docker Support Forums - https://forums.docker.com\r\n- Slack - community.docker.com #general channel\r\n- Post a question on StackOverflow, using the Docker tag\r\n\r\nGeneral support for **moby** can be found at the following locations:\r\n\r\n- Moby Project Forums - https://forums.mobyproject.org\r\n- Slack - community.docker.com #moby-project channel\r\n- Post a question on StackOverflow, using the Moby tag\r\n\r\n---------------------------------------------------\r\nBUG REPORT INFORMATION\r\n---------------------------------------------------\r\nUse the commands below to provide key information from your environment:\r\nYou do NOT have to include this information if this is a FEATURE REQUEST\r\n-->\r\n\r\n**A mistake in the moby/image/spec/v1.md **\r\n\r\n**Steps to reproduce the issue:**\r\nIt looks like that titles below were swapped in the doc file moby/image/spec/v1.md :\r\n\r\n**Entrypoint array of strings**\r\nA list of arguments to use as the command to execute when the container starts. This value acts as a default and is replaced by an entrypoint specified when creating a container.\r\n\r\n**Cmd array of strings**\r\nDefault arguments to the entry point of the container. These values act as defaults and are replaced with any specified when creating a container. If an Entrypoint value is not specified, then the first entry of the Cmd array should be interpreted as the executable to run.\r\n\r\n**Describe the results you received:\r\n\r\n**\r\n\r\n**Describe the results you expected:\r\n\r\n**\r\n\r\n**Additional information you deem important (e.g. issue happens only occasionally):**\r\n\r\n**Output of `docker version`:**\r\n\r\n```\r\n(paste your output here)\r\n```\r\n\r\n**Output of `docker info`:**\r\n\r\n```\r\n(paste your output here)\r\n```\r\n\r\n**Additional environment details (AWS, VirtualBox, physical, etc.):**"},{"labels":["documentation",null],"text":"The SDK is very unfriendly for beginners.\r\n\r\nApart from the fact every program imports `docker/docker` (including `docker-ce` and `kubernetes`) and that redirects to `moby/moby` on the website, the default version you get from go is `v1.13.1` and people just seem to import specific commits. The releases can not be seen on `moby/moby` but can be found on `docker/engine` however you can not import specific version from there, since other dependencies will crash. \r\n\r\nEven the documentation on the website does not work. This is from https://docs.docker.com/develop/sdk/examples/:\r\n```\r\n\tstatusCh, errCh := cli.ContainerWait(ctx, resp.ID, container.WaitConditionNotRunning)\r\n\tselect {\r\n\tcase err := <-errCh:\r\n\t\tif err != nil {\r\n\t\t\tpanic(err)\r\n\t\t}\r\n\tcase <-statusCh:\r\n\t}\r\n```\r\n`cli.ContainerWait` does not return chans, it returns `(int64, error)` on v1.13.1, and the website does not say how to get other versions of the SDK. Even the documentation on `godoc.org` is wrong since it tells you to get `import \"github.com/docker/docker/client\"` and that will get you `v1.13.1`, which does not return `(<-chan container.ContainerWaitOKBody, <-chan error)` as specified in the documentation.\r\n\r\nAre there any plans to offer some proper documentation and releases so that people can actually use the SDK, without having to dig from git?"},{"labels":["documentation"],"text":"I thought someone forgot to update the docs, but it looks like this might be done on purpose. If this is the former case, I can make a quick PR. However if its the latter, I hope someone will be able to fill me in why this is done this way.\r\n\r\nhttps://github.com/moby/moby/blob/0243936d92ea57f48c6a32beac797ee3b388ba28/api/swagger.yaml#L2246-L2251\r\n\r\nhttps://github.com/moby/moby/blob/be97c66708c24727836a22247319ff2943d91a03/daemon/names/names.go#L5-L9"},{"labels":[null,"documentation",null,null],"text":"When building with `BuildKit`, the `--no-cache` option is (partially) ignored;\r\n\r\nBuild a Dockerfile;\r\n\r\n```bash\r\nDOCKER_BUILDKIT=1 docker build -t bla https://github.com/thaJeztah/go-top.git\r\n[+] Building 29.1s (8/8) FINISHED                                                                                                                                                                                          \r\n => [internal] load git source https://github.com/thaJeztah/go-top.git                                                                                                                                                1.3s\r\n => [internal] load metadata for docker.io/library/golang:1.10-alpine                                                                                                                                                 2.3s\r\n => CACHED [internal] helper image for file operations                                                                                                                                                                0.0s\r\n => [build 1/3] FROM docker.io/library/golang:1.10-alpine@sha256:df75dc8049519981ef51a6e37fe4e79c0cfe9d5a0432ba9b36afe1a1df835f3b                                                                                    17.9s\r\n => => resolve docker.io/library/golang:1.10-alpine@sha256:df75dc8049519981ef51a6e37fe4e79c0cfe9d5a0432ba9b36afe1a1df835f3b                                                                                           0.0s\r\n => => sha256:d830d821f1ea39178886c4853e25ec07369f037cb758e07c3cbab832eabc9a14 1.36kB / 1.36kB                                                                                                                        0.0s\r\n => => sha256:2f577258bd101df535742773fc8d03fe9ea0350e8e132ab55da7dbbc508c89f2 3.80kB / 3.80kB                                                                                                                        0.0s\r\n => => sha256:2d13b02809266f700fe9d5a5002b4b8731fd5c8ff9218240bdc69005e678b158 78.11MB / 78.11MB                                                                                                                     14.3s\r\n => => sha256:0934a9e519360feba9d140548eebdab7cab66c55d04de2bde94a3dffa79a1122 125B / 125B                                                                                                                            1.1s\r\n => => sha256:df75dc8049519981ef51a6e37fe4e79c0cfe9d5a0432ba9b36afe1a1df835f3b 2.04kB / 2.04kB                                                                                                                        0.0s\r\n => => extracting sha256:2d13b02809266f700fe9d5a5002b4b8731fd5c8ff9218240bdc69005e678b158                                                                                                                             2.6s\r\n => => extracting sha256:0934a9e519360feba9d140548eebdab7cab66c55d04de2bde94a3dffa79a1122                                                                                                                             0.0s\r\n => [build 2/3] COPY . .                                                                                                                                                                                              1.6s\r\n => [build 3/3] RUN go install -v ./...                                                                                                                                                                               3.1s\r\n => [stage-1 1/1] COPY --from=build /go/bin/go-top /                                                                                                                                                                  2.7s\r\n => exporting to image                                                                                                                                                                                                0.0s\r\n => => exporting layers                                                                                                                                                                                               0.0s\r\n => => writing image sha256:e7320ea8c5feabd7e31e4f084fd69f52a4a44325caee01beedd6a0d7f004c198                                                                                                                          0.0s\r\n => => naming to docker.io/library/bla                                                                                                                                                                                0.0s\r\n```\r\n\r\nBuild the same image again, but this time with `--no-cache`;\r\n\r\n```bash\r\nDOCKER_BUILDKIT=1 docker build -t bla --no-cache https://github.com/thaJeztah/go-top.git\r\n[+] Building 7.9s (8/8) FINISHED                                                                                                                                                                                           \r\n => CACHED [internal] load git source https://github.com/thaJeztah/go-top.git                                                                                                                                         0.0s\r\n => [internal] load metadata for docker.io/library/golang:1.10-alpine                                                                                                                                                 0.9s\r\n => CACHED [build 1/3] FROM docker.io/library/golang:1.10-alpine@sha256:df75dc8049519981ef51a6e37fe4e79c0cfe9d5a0432ba9b36afe1a1df835f3b                                                                              0.0s\r\n => CACHED [internal] helper image for file operations                                                                                                                                                                0.0s\r\n => [build 2/3] COPY . .                                                                                                                                                                                              1.4s\r\n => [build 3/3] RUN go install -v ./...                                                                                                                                                                               2.7s\r\n => [stage-1 1/1] COPY --from=build /go/bin/go-top /                                                                                                                                                                  2.7s\r\n => exporting to image                                                                                                                                                                                                0.0s\r\n => => exporting layers                                                                                                                                                                                               0.0s\r\n => => writing image sha256:8a8b64198a7f7da426fd5783ae0b0d8958cd154424a060ca2b37a4a17ec0510c                                                                                                                          0.0s\r\n => => naming to docker.io/library/bla                                                                                                                                                                                0.0s\r\n```\r\n\r\nNotice that various steps show `CACHED`\r\n\r\n\r\n\r\nReproduced on Docker 18.09.0;\r\n\r\n```\r\nClient: Docker Engine - Community\r\n Version:           18.09.0\r\n API version:       1.39\r\n Go version:        go1.10.4\r\n Git commit:        4d60db4\r\n Built:             Wed Nov  7 00:47:43 2018\r\n OS/Arch:           darwin/amd64\r\n Experimental:      true\r\n\r\nServer: Docker Engine - Community\r\n Engine:\r\n  Version:          18.09.0\r\n  API version:      1.39 (minimum version 1.12)\r\n  Go version:       go1.10.4\r\n  Git commit:       4d60db4\r\n  Built:            Wed Nov  7 00:55:00 2018\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     true\r\n```"},{"labels":["documentation",null,null],"text":"<!--\r\nIf you are reporting a new issue, make sure that we do not have any duplicates\r\nalready open. You can ensure this by searching the issue list for this\r\nrepository. If there is a duplicate, please close your issue and add a comment\r\nto the existing issue instead.\r\n\r\nIf you suspect your issue is a bug, please edit your issue description to\r\ninclude the BUG REPORT INFORMATION shown below. If you fail to provide this\r\ninformation within 7 days, we cannot debug your issue and will close it. We\r\nwill, however, reopen it if you later provide the information.\r\n\r\nFor more information about reporting issues, see\r\nhttps://github.com/moby/moby/blob/master/CONTRIBUTING.md#reporting-other-issues\r\n\r\n---------------------------------------------------\r\nGENERAL SUPPORT INFORMATION\r\n---------------------------------------------------\r\n\r\nThe GitHub issue tracker is for bug reports and feature requests.\r\nGeneral support for **docker** can be found at the following locations:\r\n\r\n- Docker Support Forums - https://forums.docker.com\r\n- Slack - community.docker.com #general channel\r\n- Post a question on StackOverflow, using the Docker tag\r\n\r\nGeneral support for **moby** can be found at the following locations:\r\n\r\n- Moby Project Forums - https://forums.mobyproject.org\r\n- Slack - community.docker.com #moby-project channel\r\n- Post a question on StackOverflow, using the Moby tag\r\n\r\n---------------------------------------------------\r\nBUG REPORT INFORMATION\r\n---------------------------------------------------\r\nUse the commands below to provide key information from your environment:\r\nYou do NOT have to include this information if this is a FEATURE REQUEST\r\n-->\r\n\r\n**Description**\r\n\r\n<!--\r\nBriefly describe the problem you are having in a few paragraphs.\r\n-->\r\ndockerd start failed when daemon config with some log driver options\r\n\r\n\r\n**Steps to reproduce the issue:**\r\n1.install docker-ce (17.03 up to latest version) on ubuntu 16.04 LTS\r\n2.config the `/etc/docker/daemon.json` as following:\r\n```\r\n{\r\n  \"log-driver\": \"json-file\",\r\n  \"log-opts\": {\r\n    \"max-size\": \"10m\"\r\n  }\r\n}\r\n```\r\n3.restart dockerd by `sudo service docker restart`, and it works\r\n4.if change `/etc/docker/daemon.json` to:\r\n```\r\n{\r\n  \"log-driver\": \"json-file\",\r\n  \"log-opts\": {\r\n    \"max-size\": \"10m\",\r\n    \"max-file\": 3\r\n  }\r\n}\r\n```\r\nrestart dockerd will get error:\r\n```\r\n-- Subject: Unit docker.socket has begun start-up\r\n-- Defined-By: systemd\r\n-- Support: http://lists.freedesktop.org/mailman/listinfo/systemd-devel\r\n--\r\n-- Unit docker.socket has begun starting up.\r\nNov 21 15:55:58 ubuntu systemd[1]: Listening on Docker Socket for the API.\r\n-- Subject: Unit docker.socket has finished start-up\r\n-- Defined-By: systemd\r\n-- Support: http://lists.freedesktop.org/mailman/listinfo/systemd-devel\r\n--\r\n-- Unit docker.socket has finished starting up.\r\n--\r\n-- The start-up result is done.\r\nNov 21 15:55:58 ubuntu systemd[1]: Starting Docker Application Container Engine...\r\n-- Subject: Unit docker.service has begun start-up\r\n-- Defined-By: systemd\r\n-- Support: http://lists.freedesktop.org/mailman/listinfo/systemd-devel\r\n--\r\n-- Unit docker.service has begun starting up.\r\nNov 21 15:55:58 ubuntu dockerd[16761]: unable to configure the Docker daemon with file /etc/docker/daemon.json\r\nNov 21 15:55:58 ubuntu systemd[1]: docker.service: Main process exited, code=exited, status=1/FAILURE\r\nNov 21 15:55:58 ubuntu systemd[1]: Failed to start Docker Application Container Engine.\r\n-- Subject: Unit docker.service has failed\r\n-- Defined-By: systemd\r\n-- Support: http://lists.freedesktop.org/mailman/listinfo/systemd-devel\r\n--\r\n-- Unit docker.service has failed.\r\n--\r\n-- The result is failed.\r\nNov 21 15:55:58 ubuntu systemd[1]: docker.service: Unit entered failed state.\r\nNov 21 15:55:58 ubuntu systemd[1]: docker.service: Failed with result 'exit-code'.\r\nNov 21 15:55:58 ubuntu sudo[16726]: pam_unix(sudo:session): session closed for user root\r\nNov 21 15:58:35 ubuntu sudo[16769]:   shaoan : TTY=pts/0 ; PWD=/home/shaoan ; USER=root ; COMMAND=/usr/bin/vi\r\nNov 21 15:58:35 ubuntu sudo[16769]: pam_unix(sudo:session): session opened for user root by shaoan(uid=0)\r\nNov 21 16:01:39 ubuntu sudo[16769]: pam_unix(sudo:session): session closed for user root\r\n```\r\n\r\n\r\nIs the parameter `max-file` not supported in in `daemon.json` config? or a bug with docker daemon?\r\n\r\n"},{"labels":["documentation",null,null],"text":"<!--\r\nIf you are reporting a new issue, make sure that we do not have any duplicates\r\nalready open. You can ensure this by searching the issue list for this\r\nrepository. If there is a duplicate, please close your issue and add a comment\r\nto the existing issue instead.\r\n\r\nIf you suspect your issue is a bug, please edit your issue description to\r\ninclude the BUG REPORT INFORMATION shown below. If you fail to provide this\r\ninformation within 7 days, we cannot debug your issue and will close it. We\r\nwill, however, reopen it if you later provide the information.\r\n\r\nFor more information about reporting issues, see\r\nhttps://github.com/moby/moby/blob/master/CONTRIBUTING.md#reporting-other-issues\r\n\r\n---------------------------------------------------\r\nGENERAL SUPPORT INFORMATION\r\n---------------------------------------------------\r\n\r\nThe GitHub issue tracker is for bug reports and feature requests.\r\nGeneral support for **docker** can be found at the following locations:\r\n\r\n- Docker Support Forums - https://forums.docker.com\r\n- Slack - community.docker.com #general channel\r\n- Post a question on StackOverflow, using the Docker tag\r\n\r\nGeneral support for **moby** can be found at the following locations:\r\n\r\n- Moby Project Forums - https://forums.mobyproject.org\r\n- Slack - community.docker.com #moby-project channel\r\n- Post a question on StackOverflow, using the Moby tag\r\n\r\n---------------------------------------------------\r\nBUG REPORT INFORMATION\r\n---------------------------------------------------\r\nUse the commands below to provide key information from your environment:\r\nYou do NOT have to include this information if this is a FEATURE REQUEST\r\n-->\r\n\r\n**Description**\r\n\r\n<!--\r\nBriefly describe the problem you are having in a few paragraphs.\r\n-->\r\n\r\n**Steps to reproduce the issue:**\r\n1. Go through the [doc](https://github.com/moby/moby/blob/master/docs/contributing/test.md#run-unit-tests)\r\n\r\n\r\n**Describe the results you received:**\r\nAfter issuing:\r\n```\r\n$ TESTDIRS='opts' TESTFLAGS='-test.run ^TestValidateIPAddress$' make test-unit\r\n```\r\nfrom the test documents, I got:\r\n```\r\ncan't load package: package opts: cannot find package \"opts\" in any of:\r\n        /usr/local/go/src/opts (from $GOROOT)\r\n        /go/src/opts (from $GOPATH)\r\nmake: *** [Makefile:161: test-unit] Error 1\r\n```\r\n\r\n**Describe the results you expected:**\r\nHowever I managed to get it to work with:\r\n```\r\n$ TESTDIRS='github.com/docker/docker/opts' TESTFLAGS='-test.run $^TestValidateIPAddress$' make test-unit\r\n```\r\nNote the full path `github.com/docker/docker/opts`. Which is expected since\r\n```\r\n    go test \"${BUILDFLAGS[@]}\" \\\r\n        -cover \\\r\n        -coverprofile=profile.out \\\r\n        -covermode=atomic \\\r\n        $TESTFLAGS \\\r\n        \"${pkg}\"\r\n```\r\nfrom `hack/test/unit` should probably not be issuing `go test opts`.\r\nThis resulted in:\r\n```\r\nok      github.com/docker/docker/opts   0.028s  coverage: 0.0% of statements [no tests to run]                                                                           \r\n```\r\n\r\n**Additional information you deem important (e.g. issue happens only occasionally):**\r\n\r\n**Output of `docker version`:**\r\n\r\n```\r\nClient:\r\n Version:           18.06.1-ce\r\n API version:       1.38\r\n Go version:        go1.11\r\n Git commit:        e68fc7a215\r\n Built:             Fri Sep  7 11:26:59 2018\r\n OS/Arch:           linux/amd64\r\n Experimental:      false\r\n\r\nServer:\r\n Engine:\r\n  Version:          18.06.1-ce\r\n  API version:      1.38 (minimum version 1.12)\r\n  Go version:       go1.11\r\n  Git commit:       e68fc7a215\r\n  Built:            Fri Sep  7 11:26:11 2018\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     false\r\n```\r\n\r\n**Output of `docker info`:**\r\n\r\n```\r\nContainers: 1\r\n Running: 1\r\n Paused: 0\r\n Stopped: 0\r\nImages: 83\r\nServer Version: 18.06.1-ce\r\nStorage Driver: overlay2\r\n Backing Filesystem: extfs\r\n Supports d_type: true\r\n Native Overlay Diff: false\r\nLogging Driver: json-file\r\nCgroup Driver: cgroupfs\r\nPlugins:\r\n Volume: local\r\n Network: bridge host macvlan null overlay\r\n Log: awslogs fluentd gcplogs gelf journald json-file logentries splunk syslog\r\nSwarm: inactive\r\nRuntimes: runc\r\nDefault Runtime: runc\r\nInit Binary: docker-init\r\ncontainerd version: 468a545b9edcd5932818eb9de8e72413e616e86e\r\nrunc version: 69663f0bd4b60df09991c08812a60108003fa340\r\ninit version: fec3683\r\nSecurity Options:\r\n seccomp\r\n  Profile: default\r\nKernel Version: 4.14.70-1-lts\r\nOperating System: Arch Linux\r\nOSType: linux\r\nArchitecture: x86_64\r\nCPUs: 4\r\nTotal Memory: 7.679GiB\r\nName: colonelthink\r\nID: J6N7:37O7:PQEO:VI7Y:NQAQ:JFJ5:77WR:FFF7:7CF7:MUIC:MZF2:ZVTZ\r\nDocker Root Dir: /var/lib/docker\r\nDebug Mode (client): false\r\nDebug Mode (server): false\r\nRegistry: https://index.docker.io/v1/\r\nLabels:\r\nExperimental: false\r\nInsecure Registries:\r\n 127.0.0.0/8\r\nLive Restore Enabled: false\r\n```\r\n\r\n"},{"labels":[null,"documentation",null,null],"text":"There are a HostConfig.DiskQuota option with description \"Disk limit (in bytes).\" on https://docs.docker.com/engine/api/v1.37/#operation/ContainerCreate.\r\n\r\nBut, unfortunately, I can't find any other information about what does it mean. What constrains of use does it have? Is it can be used on all platfroms/storage drivers? What would be if this limit will be exceeded?"},{"labels":[null,"documentation"],"text":"https://docs.docker.com/develop/develop-images/dockerfile_best-practices/#using-pipes\r\n\r\nI think this should mention \r\n\r\n    SHELL [\"/bin/bash\", \"-c\"]\r\n\r\nas an alternative to make `set -o pipefail` work on Debian base images. Using the exec form, especially when you have the need to add pipefail to an existing long RUN sequence, is intrusive and would incur a lot of rewriting work."},{"labels":["documentation",null],"text":"<!--\r\nIf you are reporting a new issue, make sure that we do not have any duplicates\r\nalready open. You can ensure this by searching the issue list for this\r\nrepository. If there is a duplicate, please close your issue and add a comment\r\nto the existing issue instead.\r\n\r\nIf you suspect your issue is a bug, please edit your issue description to\r\ninclude the BUG REPORT INFORMATION shown below. If you fail to provide this\r\ninformation within 7 days, we cannot debug your issue and will close it. We\r\nwill, however, reopen it if you later provide the information.\r\n\r\nFor more information about reporting issues, see\r\nhttps://github.com/moby/moby/blob/master/CONTRIBUTING.md#reporting-other-issues\r\n\r\n---------------------------------------------------\r\nGENERAL SUPPORT INFORMATION\r\n---------------------------------------------------\r\n\r\nThe GitHub issue tracker is for bug reports and feature requests.\r\nGeneral support for **docker** can be found at the following locations:\r\n\r\n- Docker Support Forums - https://forums.docker.com\r\n- Slack - community.docker.com #general channel\r\n- Post a question on StackOverflow, using the Docker tag\r\n\r\nGeneral support for **moby** can be found at the following locations:\r\n\r\n- Moby Project Forums - https://forums.mobyproject.org\r\n- Slack - community.docker.com #moby-project channel\r\n- Post a question on StackOverflow, using the Moby tag\r\n\r\n---------------------------------------------------\r\nBUG REPORT INFORMATION\r\n---------------------------------------------------\r\nUse the commands below to provide key information from your environment:\r\nYou do NOT have to include this information if this is a FEATURE REQUEST\r\n-->\r\n**Description**\r\n\r\nFrom documentation:\r\nhttps://docs.docker.com/config/containers/container-networking/#ip-address-and-hostname\r\n> a container’s hostname defaults to be the container’s name in Docker. You can override the hostname using --hostname\r\n\r\nhttps://docs.docker.com/config/containers/container-networking/#dns-services\r\n> --hostname | The hostname a container uses for itself. Defaults to the container’s name if not specified.\r\n\r\nWhen I omit --hostname, I only get container ID as hostname.\r\nThat is either a bug in functionality or in documentation.\r\n\r\n<!--\r\nBriefly describe the problem you are having in a few paragraphs.\r\n-->\r\n\r\n**Steps to reproduce the issue:**\r\n```\r\n$ docker run --rm --name test1 jayprakashji/ubuntu-network-tools tail -n1 /etc/hosts\r\n172.17.0.3\t91f7517eec46\r\n\r\n$ docker run --rm --name test1 jayprakashji/ubuntu-network-tools ping -c1 test1\r\nping: unknown host\r\n\r\n\r\n$ docker run --rm --name test1 -h test1 jayprakashji/ubuntu-network-tools tail -n1 /etc/hosts\r\n172.17.0.3\ttest1\r\n\r\n$ docker run --rm --name test1 -h test1 jayprakashji/ubuntu-network-tools ping -c1 test1\r\nPING test1 (172.17.0.3): 56 data bytes\r\n64 bytes from 172.17.0.3: icmp_seq=0 ttl=64 time=0.039 ms\r\n--- test1 ping statistics ---\r\n1 packets transmitted, 1 packets received, 0% packet loss\r\nround-trip min/avg/max/stddev = 0.039/0.039/0.039/0.000 ms\r\n```\r\n\r\n**Describe the results you received:**\r\nWithout --hostname (-h), ping is unable to resolve container name.\r\n\r\n**Describe the results you expected:**\r\n\r\nContainer name and hostname are same, so according to mentioned doc, both variants should behave equally.\r\n\r\n\r\n**Output of `docker version`:**\r\n\r\n```\r\n Version:           18.06.0-ce\r\n API version:       1.38\r\n Go version:        go1.10.3\r\n Git commit:        0ffa825\r\n Built:             Wed Jul 18 19:11:45 2018\r\n OS/Arch:           linux/amd64\r\n Experimental:      false\r\n\r\nServer:\r\n Engine:\r\n  Version:          18.06.0-ce\r\n  API version:      1.38 (minimum version 1.12)\r\n  Go version:       go1.10.3\r\n  Git commit:       0ffa825\r\n  Built:            Wed Jul 18 19:14:07 2018\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     false\r\n```\r\n\r\n**Output of `docker info`:**\r\n\r\n```\r\nContainers: 11\r\n Running: 2\r\n Paused: 0\r\n Stopped: 9\r\nImages: 69\r\nServer Version: 18.06.0-ce\r\nStorage Driver: devicemapper\r\n Pool Name: docker-253:1-5768343-pool\r\n Pool Blocksize: 65.54kB\r\n Base Device Size: 10.74GB\r\n Backing Filesystem: xfs\r\n Udev Sync Supported: true\r\n Data file: /dev/loop0\r\n Metadata file: /dev/loop1\r\n Data loop file: /var/lib/docker/devicemapper/devicemapper/data\r\n Metadata loop file: /var/lib/docker/devicemapper/devicemapper/metadata\r\n Data Space Used: 12.52GB\r\n Data Space Total: 107.4GB\r\n Data Space Available: 67.38GB\r\n Metadata Space Used: 22.36MB\r\n Metadata Space Total: 2.147GB\r\n Metadata Space Available: 2.125GB\r\n Thin Pool Minimum Free Space: 10.74GB\r\n Deferred Removal Enabled: true\r\n Deferred Deletion Enabled: true\r\n Deferred Deleted Device Count: 0\r\n Library Version: 1.02.146 (2017-12-18)\r\nLogging Driver: json-file\r\nCgroup Driver: cgroupfs\r\nPlugins:\r\n Volume: local\r\n Network: bridge host macvlan null overlay\r\n Log: awslogs fluentd gcplogs gelf journald json-file logentries splunk syslog\r\nSwarm: active\r\n NodeID: g87d69ja2y0wy5i9m8pn5b7ai\r\n Is Manager: true\r\n ClusterID: czn8ge5ue920y81jcg2eunijh\r\n Managers: 1\r\n Nodes: 1\r\n Orchestration:\r\n  Task History Retention Limit: 5\r\n Raft:\r\n  Snapshot Interval: 10000\r\n  Number of Old Snapshots to Retain: 0\r\n  Heartbeat Tick: 1\r\n  Election Tick: 3\r\n Dispatcher:\r\n  Heartbeat Period: 5 seconds\r\n CA Configuration:\r\n  Expiry Duration: 3 months\r\n  Force Rotate: 0\r\n Autolock Managers: false\r\n Root Rotation In Progress: false\r\n Node Address: 192.168.1.65\r\n Manager Addresses:\r\n  192.168.1.65:2377\r\nRuntimes: runc\r\nDefault Runtime: runc\r\nInit Binary: docker-init\r\ncontainerd version: d64c661f1d51c48782c9cec8fda7604785f93587\r\nrunc version: 69663f0bd4b60df09991c08812a60108003fa340\r\ninit version: fec3683\r\nSecurity Options:\r\n seccomp\r\n  Profile: default\r\nKernel Version: 4.17.7-200.fc28.x86_64\r\nOperating System: Fedora 28 (Workstation Edition)\r\nOSType: linux\r\nArchitecture: x86_64\r\nCPUs: 4\r\nTotal Memory: 15.54GiB\r\nName: jxi15zf\r\nID: PHMZ:56J6:TKPH:NYRZ:3UQ5:ZTAR:BTA6:CDOJ:3DDF:32CW:5OMR:4J5O\r\nDocker Root Dir: /var/lib/docker\r\nDebug Mode (client): false\r\nDebug Mode (server): false\r\nUsername: jayprakashji\r\nRegistry: https://index.docker.io/v1/\r\nLabels:\r\nExperimental: false\r\nInsecure Registries:\r\n 127.0.0.0/8\r\nLive Restore Enabled: false\r\n\r\nWARNING: devicemapper: usage of loopback devices is strongly discouraged for production use.\r\n         Use `--storage-opt dm.thinpooldev` to specify a custom block storage device.\r\n```\r\n\r\n**Additional environment details (AWS, VirtualBox, physical, etc.):**\r\nI don't suspect that it matters, but I have active swarm (single node), which I use for running apps as services. (i.e. pma for local DB )"},{"labels":["documentation",null,null],"text":"**Description**\r\n\r\nAttempting to follow the steps at https://success.docker.com/article/how-do-i-change-the-docker-gwbridge-address to remove the docker_gwbridge network fails with message: \"Error response from daemon: network docker_gwbridge id xxxxx has active endpoints\"\r\n\r\n**Steps to reproduce the issue:**\r\n1.  Stop all running containers\r\n2. docker network rm docker_gwbridge\r\n\r\n**Describe the results you received:**\r\n\r\n\"Error response from daemon: network docker_gwbridge id xxxxx has active endpoints\"\r\n\r\n**Describe the results you expected:**\r\n\r\ndocker_gwbridge is successfully removed\r\n\r\n**Additional information you deem important (e.g. issue happens only occasionally):**\r\n\r\nStopping and starting the docker daemon did not help.  To succeed, I had to use \r\n```\r\ndocker network disconnect --force docker_gwbridge gateway_ingress-sbox\r\n```\r\n\r\n**Output of `docker version`:**\r\n\r\n```\r\nClient:\r\n Version:      18.03.1-ce\r\n API version:  1.37\r\n Go version:   go1.9.5\r\n Git commit:   9ee9f40\r\n Built:        Thu Apr 26 07:20:16 2018\r\n OS/Arch:      linux/amd64\r\n Experimental: false\r\n Orchestrator: swarm\r\n\r\nServer:\r\n Engine:\r\n  Version:      18.03.1-ce\r\n  API version:  1.37 (minimum version 1.12)\r\n  Go version:   go1.9.5\r\n  Git commit:   9ee9f40\r\n  Built:        Thu Apr 26 07:23:58 2018\r\n  OS/Arch:      linux/amd64\r\n  Experimental: false\r\n```\r\n\r\n**Output of `docker info`:**\r\n\r\n```\r\nContainers: 0\r\n Running: 0\r\n Paused: 0\r\n Stopped: 0\r\nImages: 22\r\nServer Version: 18.03.1-ce\r\nStorage Driver: overlay2\r\n Backing Filesystem: extfs\r\n Supports d_type: true\r\n Native Overlay Diff: true\r\nLogging Driver: journald\r\nCgroup Driver: cgroupfs\r\nPlugins:\r\n Volume: local\r\n Network: bridge host macvlan null overlay\r\n Log: awslogs fluentd gcplogs gelf journald json-file logentries splunk syslog\r\nSwarm: active\r\n NodeID: skgf4dv4ux9h1hx3e72mdbfd8\r\n Is Manager: true\r\n ClusterID: zn70moohy7c4flpt96g4begj7\r\n Managers: 1\r\n Nodes: 1\r\n Orchestration:\r\n  Task History Retention Limit: 5\r\n Raft:\r\n  Snapshot Interval: 10000\r\n  Number of Old Snapshots to Retain: 0\r\n  Heartbeat Tick: 1\r\n  Election Tick: 3\r\n Dispatcher:\r\n  Heartbeat Period: 5 seconds\r\n CA Configuration:\r\n  Expiry Duration: 3 months\r\n  Force Rotate: 0\r\n Autolock Managers: false\r\n Root Rotation In Progress: false\r\n Node Address: 10.7.53.227\r\n Manager Addresses:\r\n  10.7.53.227:2377\r\nRuntimes: runc\r\nDefault Runtime: runc\r\nInit Binary: docker-init\r\ncontainerd version: 773c489c9c1b21a6d78b5c538cd395416ec50f88\r\nrunc version: 4fc53a81fb7c994640722ac585fa9ca548971871\r\ninit version: 949e6fa\r\nSecurity Options:\r\n seccomp\r\n  Profile: default\r\nKernel Version: 3.10.0-693.21.1.el7.x86_64\r\nOperating System: CentOS Linux 7 (Core)\r\nOSType: linux\r\nArchitecture: x86_64\r\nCPUs: 8\r\nTotal Memory: 31.26GiB\r\nName: docker_host\r\nID: DRLU:OX6M:MHCB:46AZ:ZAHV:XLCW:272G:PUZ4:P62L:UILM:RIVX:6JIR\r\nDocker Root Dir: /var/lib/docker\r\nDebug Mode (client): false\r\nDebug Mode (server): false\r\nRegistry: https://index.docker.io/v1/\r\nLabels:\r\nExperimental: false\r\nInsecure Registries:\r\n 127.0.0.0/8\r\nLive Restore Enabled: false\r\n\r\n```\r\n\r\n**Additional environment details (AWS, VirtualBox, physical, etc.):**\r\n\r\nVM running on VMWare ESXI/VCenter 6\r\n\r\nComplete steps for troubleshooting:\r\n\r\n```\r\n[centos@docker_host ~]$ docker ps\r\nCONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES\r\n[centos@docker_host ~]$ docker container ls\r\nCONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES\r\n[centos@docker_host ~]$ sudo docker container ls\r\nCONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES\r\n[centos@docker_host ~]$ docker network rm docker_gwbridge\r\nError response from daemon: network docker_gwbridge id 804653507da34e773059ff28f5dfb1055cfbd7c16e01808b372c810af2e6a58c has active endpoints\r\n[centos@docker_host ~]$ docker network inspect docker_gwbridge\r\n[\r\n    {\r\n        \"Name\": \"docker_gwbridge\",\r\n        \"Id\": \"804653507da34e773059ff28f5dfb1055cfbd7c16e01808b372c810af2e6a58c\",\r\n        \"Created\": \"2018-05-01T15:28:49.63617387-07:00\",\r\n        \"Scope\": \"local\",\r\n        \"Driver\": \"bridge\",\r\n        \"EnableIPv6\": false,\r\n        \"IPAM\": {\r\n            \"Driver\": \"default\",\r\n            \"Options\": null,\r\n            \"Config\": [\r\n                {\r\n                    \"Subnet\": \"172.18.0.0/16\",\r\n                    \"Gateway\": \"172.18.0.1\"\r\n                }\r\n            ]\r\n        },\r\n        \"Internal\": false,\r\n        \"Attachable\": false,\r\n        \"Ingress\": false,\r\n        \"ConfigFrom\": {\r\n            \"Network\": \"\"\r\n        },\r\n        \"ConfigOnly\": false,\r\n        \"Containers\": {\r\n            \"ingress-sbox\": {\r\n                \"Name\": \"gateway_ingress-sbox\",\r\n                \"EndpointID\": \"dab9a444acf208de35b164054db597d4c658117a5dba90536c65c6f164fb589d\",\r\n                \"MacAddress\": \"02:42:ac:12:00:02\",\r\n                \"IPv4Address\": \"172.18.0.2/16\",\r\n                \"IPv6Address\": \"\"\r\n            }\r\n        },\r\n        \"Options\": {\r\n            \"com.docker.network.bridge.enable_icc\": \"false\",\r\n            \"com.docker.network.bridge.enable_ip_masquerade\": \"true\",\r\n            \"com.docker.network.bridge.name\": \"docker_gwbridge\"\r\n        },\r\n        \"Labels\": {}\r\n    }\r\n]\r\n[centos@docker_host ~]$ docker system prune\r\nWARNING! This will remove:\r\n        - all stopped containers\r\n        - all networks not used by at least one container\r\n        - all dangling images\r\n        - all build cache\r\nAre you sure you want to continue? [y/N] y\r\nDeleted Containers:\r\n05b07339348a2fc1dd6bac9fbd59e5940b39171d5f96d8ce075bba796e7fdb1e\r\n...\r\n7c06b626377174003790cd32f7f217dd7add6b7fba92c121d3922057addf379a\r\n\r\nDeleted Images:\r\nuntagged: dockersamples/visualizer@sha256:bc680132f772cb44062795c514570db2f0b6f91063bc3afa2386edaaa0ef0b20\r\n...\r\ndeleted: sha256:5bef08742407efd622d243692b79ba0055383bbce12900324f75e56f589aedb0\r\n\r\nTotal reclaimed space: 450MB\r\n[centos@docker_host ~]$ docker network inspect docker_gwbridge\r\n[\r\n    {\r\n        \"Name\": \"docker_gwbridge\",\r\n        \"Id\": \"804653507da34e773059ff28f5dfb1055cfbd7c16e01808b372c810af2e6a58c\",\r\n        \"Created\": \"2018-05-01T15:28:49.63617387-07:00\",\r\n        \"Scope\": \"local\",\r\n        \"Driver\": \"bridge\",\r\n        \"EnableIPv6\": false,\r\n        \"IPAM\": {\r\n            \"Driver\": \"default\",\r\n            \"Options\": null,\r\n            \"Config\": [\r\n                {\r\n                    \"Subnet\": \"172.18.0.0/16\",\r\n                    \"Gateway\": \"172.18.0.1\"\r\n                }\r\n            ]\r\n        },\r\n        \"Internal\": false,\r\n        \"Attachable\": false,\r\n        \"Ingress\": false,\r\n        \"ConfigFrom\": {\r\n            \"Network\": \"\"\r\n        },\r\n        \"ConfigOnly\": false,\r\n        \"Containers\": {\r\n            \"ingress-sbox\": {\r\n                \"Name\": \"gateway_ingress-sbox\",\r\n                \"EndpointID\": \"dab9a444acf208de35b164054db597d4c658117a5dba90536c65c6f164fb589d\",\r\n                \"MacAddress\": \"02:42:ac:12:00:02\",\r\n                \"IPv4Address\": \"172.18.0.2/16\",\r\n                \"IPv6Address\": \"\"\r\n            }\r\n        },\r\n        \"Options\": {\r\n            \"com.docker.network.bridge.enable_icc\": \"false\",\r\n            \"com.docker.network.bridge.enable_ip_masquerade\": \"true\",\r\n            \"com.docker.network.bridge.name\": \"docker_gwbridge\"\r\n        },\r\n        \"Labels\": {}\r\n    }\r\n]\r\n[centos@docker_host ~]$ docker network rm docker_gwbridge\r\nError response from daemon: network docker_gwbridge id 804653507da34e773059ff28f5dfb1055cfbd7c16e01808b372c810af2e6a58c has active endpoints\r\n[centos@docker_host ~]$ docker stop ingress-sbox\r\nError response from daemon: No such container: ingress-sbox\r\n[centos@docker_host ~]$ docker stop gateway_ingress-sbox\r\nError response from daemon: No such container: gateway_ingress-sbox\r\n[centos@docker_host ~]$ docker network disconnect --force docker_gwbridge ingress-sbox\r\nError response from daemon: endpoint ingress-sbox not found\r\n[centos@docker_host ~]$ docker network disconnect --force docker_gwbridge gateway_ingress-sbox\r\n[centos@docker_host ~]$ docker network inspect docker_gwbridge\r\n[\r\n    {\r\n        \"Name\": \"docker_gwbridge\",\r\n        \"Id\": \"804653507da34e773059ff28f5dfb1055cfbd7c16e01808b372c810af2e6a58c\",\r\n        \"Created\": \"2018-05-01T15:28:49.63617387-07:00\",\r\n        \"Scope\": \"local\",\r\n        \"Driver\": \"bridge\",\r\n        \"EnableIPv6\": false,\r\n        \"IPAM\": {\r\n            \"Driver\": \"default\",\r\n            \"Options\": null,\r\n            \"Config\": [\r\n                {\r\n                    \"Subnet\": \"172.18.0.0/16\",\r\n                    \"Gateway\": \"172.18.0.1\"\r\n                }\r\n            ]\r\n        },\r\n        \"Internal\": false,\r\n        \"Attachable\": false,\r\n        \"Ingress\": false,\r\n        \"ConfigFrom\": {\r\n            \"Network\": \"\"\r\n        },\r\n        \"ConfigOnly\": false,\r\n        \"Containers\": {},\r\n        \"Options\": {\r\n            \"com.docker.network.bridge.enable_icc\": \"false\",\r\n            \"com.docker.network.bridge.enable_ip_masquerade\": \"true\",\r\n            \"com.docker.network.bridge.name\": \"docker_gwbridge\"\r\n        },\r\n        \"Labels\": {}\r\n    }\r\n]\r\n[centos@docker_host ~]$ docker network rm docker_gwbridge\r\ndocker_gwbridge\r\n[centos@docker_host ~]$ docker network ls\r\nNETWORK ID          NAME                DRIVER              SCOPE\r\nd9432128aa1c        bridge              bridge              local\r\nacc20ffb4d59        host                host                local\r\nxrad9row46w7        ingress             overlay             swarm\r\nbed9358defe1        none                null                local\r\n\r\n```"},{"labels":["documentation",null,null],"text":"**Description**\r\nThe Enqueue function of ringbuff used for RingLogger located in [ring.go](https://github.com/moby/moby/blob/master/daemon/logger/ring.go#L152-L174) dose not work as it documented that  oldest item will be dropped to make room for new item when buffer is full. Instead, the new item will be dropped. \r\n\r\ncode snippet as shown below\r\n```\r\n// Enqueue adds a message to the buffer queue\r\n// If the message is too big for the buffer it drops the oldest messages to make room\r\n// If there are no messages in the queue and the message is still too big, it adds the message anyway.\r\nfunc (r *messageRing) Enqueue(m *Message) error {\r\n\tmSize := int64(len(m.Line))\r\n\r\n\tr.mu.Lock()\r\n\tif r.closed {\r\n\t\tr.mu.Unlock()\r\n\t\treturn errClosed\r\n\t}\r\n\tif mSize+r.sizeBytes > r.maxBytes && len(r.queue) > 0 {\r\n\t\tr.wait.Signal()\r\n\t\tr.mu.Unlock()\r\n\t\treturn nil\r\n\t}\r\n\r\n\tr.queue = append(r.queue, m)\r\n\tr.sizeBytes += mSize\r\n\tr.wait.Signal()\r\n\tr.mu.Unlock()\r\n\treturn nil\r\n}\r\n```\r\n\r\nA similar misleading comment also appears in the [ring_test.go](https://github.com/moby/moby/blob/master/daemon/logger/ring_test.go#L51-L70) file. the comment said that the queue should have message for \"5\" to \"10\", however, it's \"0\" to \"4\" being tested.\r\n\r\n```\r\nfunc TestRingCap(t *testing.T) {\r\n\tr := newRing(5)\r\n\tfor i := 0; i < 10; i++ {\r\n\t\t// queue messages with \"0\" to \"10\"\r\n\t\t// the \"5\" to \"10\" messages should be dropped since we only allow 5 bytes in the buffer\r\n\t\tif err := r.Enqueue(&Message{Line: []byte(strconv.Itoa(i))}); err != nil {\r\n\t\t\tt.Fatal(err)\r\n\t\t}\r\n\t}\r\n\r\n\t// should have messages in the queue for \"5\" to \"10\"\r\n\tfor i := 0; i < 5; i++ {\r\n\t\tm, err := r.Dequeue()\r\n\t\tif err != nil {\r\n\t\t\tt.Fatal(err)\r\n\t\t}\r\n\t\tif string(m.Line) != strconv.Itoa(i) {\r\n\t\t\tt.Fatalf(\"got unexpected message for iter %d: %s\", i, string(m.Line))\r\n\t\t}\r\n\t}\r\n.......\r\n```\r\n\r\n**Describe the results you expected:**\r\n\r\nEither fix the comment and document to indicated that when buffer is full, new message will be skipped. or fix the code logic to reflect the document"},{"labels":["documentation",null,null],"text":"<!--\r\nIf you are reporting a new issue, make sure that we do not have any duplicates\r\nalready open. You can ensure this by searching the issue list for this\r\nrepository. If there is a duplicate, please close your issue and add a comment\r\nto the existing issue instead.\r\n\r\nIf you suspect your issue is a bug, please edit your issue description to\r\ninclude the BUG REPORT INFORMATION shown below. If you fail to provide this\r\ninformation within 7 days, we cannot debug your issue and will close it. We\r\nwill, however, reopen it if you later provide the information.\r\n\r\nFor more information about reporting issues, see\r\nhttps://github.com/moby/moby/blob/master/CONTRIBUTING.md#reporting-other-issues\r\n\r\n---------------------------------------------------\r\nGENERAL SUPPORT INFORMATION\r\n---------------------------------------------------\r\n\r\nThe GitHub issue tracker is for bug reports and feature requests.\r\nGeneral support for **docker** can be found at the following locations:\r\n\r\n- Docker Support Forums - https://forums.docker.com\r\n- Slack - community.docker.com #general channel\r\n- Post a question on StackOverflow, using the Docker tag\r\n\r\nGeneral support for **moby** can be found at the following locations:\r\n\r\n- Moby Project Forums - https://forums.mobyproject.org\r\n- Slack - community.docker.com #moby-project channel\r\n- Post a question on StackOverflow, using the Moby tag\r\n\r\n---------------------------------------------------\r\nBUG REPORT INFORMATION\r\n---------------------------------------------------\r\nUse the commands below to provide key information from your environment:\r\nYou do NOT have to include this information if this is a FEATURE REQUEST\r\n-->\r\n\r\n**Description**\r\n\r\n<!--\r\nBriefly describe the problem you are having in a few paragraphs.\r\n-->\r\nI'm trying to specify user and group ownership of a docker config during creating\r\na docker service in swarm mode. Per [docker config doc](https://docs.docker.com/engine/swarm/configs/), I can use uid/gid or user/group name\r\nas value of `uid=`/`gid=` option. But based on my test, it seems that only uid/gid\r\nis accepted, otherwise the service fails with `starting container failed: strconv.Atoi: parsing \"<user/group-name-here>\": invalid syntax` error.\r\n\r\n**Steps to reproduce the issue:**\r\n1. Take nginx service as an example. Create an empty file `foo.conf` as docker config.\r\n2. Create a service with following command:\r\n```sh\r\ndocker service create -d --config \\\r\n        source=foo.conf,target=/foo.conf,uid=nginx,gid=nginx \\\r\n        --replicas 1 --name nginx \\\r\n    nginx:alpine\r\n```\r\n\r\n**Describe the results you received:**\r\nService failed to start. `docker service ps nginx` shows the following:\r\n```sh\r\n$ docker service ps --no-trunc nginx\r\nID                          NAME                IMAGE                                                                                  NODE                     DESIRED STATE       CURRENT STATE                    ERROR                                                                        PORTS\r\nwz83ikaaul0awr9d4nop44n24   nginx.1             nginx:alpine@sha256:48947591194ac5a9dce1e110f9198a547debb21630f121081640b87d99ca8b11                            Ready               Pending less than a second ago                                                                                \r\n27wfuzre1iz3gwcw644h79k9h    \\_ nginx.1         nginx:alpine@sha256:48947591194ac5a9dce1e110f9198a547debb21630f121081640b87d99ca8b11   <...>                    Shutdown            Failed less than a second ago    \"starting container failed: strconv.Atoi: parsing \"nginx\": invalid syntax\"   \r\nf4zu8squgvk760pefn8ts62jb    \\_ nginx.1         nginx:alpine@sha256:48947591194ac5a9dce1e110f9198a547debb21630f121081640b87d99ca8b11   <...>                    Shutdown            Failed 5 seconds ago             \"starting container failed: strconv.Atoi: parsing \"nginx\": invalid syntax\"   \r\nj9yx5mtk7p0rs7ylnv9kekw6h    \\_ nginx.1         nginx:alpine@sha256:48947591194ac5a9dce1e110f9198a547debb21630f121081640b87d99ca8b11   <...>                    Shutdown            Failed 10 seconds ago            \"starting container failed: strconv.Atoi: parsing \"nginx\": invalid syntax\"\r\n```\r\n\r\n**Describe the results you expected:**\r\nService starts successfully.\r\n\r\n**Additional information you deem important (e.g. issue happens only occasionally):**\r\nWith uid/gid rather than name, service starts successfully.\r\n\r\n**Output of `docker version`:**\r\n\r\n```\r\nDocker version 18.02.0-ce, build fc4de447b5\r\n```\r\n\r\n**Output of `docker info`:**\r\n\r\n```\r\nContainers: 19\r\n Running: 1\r\n Paused: 0\r\n Stopped: 18\r\nImages: 24\r\nServer Version: 18.02.0-ce\r\nStorage Driver: overlay2\r\n Backing Filesystem: xfs\r\n Supports d_type: true\r\n Native Overlay Diff: false\r\nLogging Driver: json-file\r\nCgroup Driver: cgroupfs\r\nPlugins:\r\n Volume: local\r\n Network: bridge host macvlan null overlay\r\n Log: awslogs fluentd gcplogs gelf journald json-file logentries splunk syslog\r\nSwarm: active\r\n NodeID: 4m0cef9637sue7o62ujt2ghei\r\n Is Manager: true\r\n ClusterID: l2e2hwgoirkr6v85bxsax1cn8\r\n Managers: 1\r\n Nodes: 1\r\n Orchestration:\r\n  Task History Retention Limit: 5\r\n Raft:\r\n  Snapshot Interval: 10000\r\n  Number of Old Snapshots to Retain: 0\r\n  Heartbeat Tick: 1\r\n  Election Tick: 3\r\n Dispatcher:\r\n  Heartbeat Period: 5 seconds\r\n CA Configuration:\r\n  Expiry Duration: 3 months\r\n  Force Rotate: 0\r\n Autolock Managers: false\r\n Root Rotation In Progress: false\r\n Node Address: 192.168.99.1\r\n Manager Addresses:\r\n  192.168.99.1:2377\r\nRuntimes: runc\r\nDefault Runtime: runc\r\nInit Binary: docker-init\r\ncontainerd version: 9b55aab90508bd389d7654c4baf173a981477d55\r\nrunc version: 9f9c96235cc97674e935002fc3d78361b696a69e\r\ninit version: 949e6fa\r\nSecurity Options:\r\n seccomp\r\n  Profile: default\r\nKernel Version: 4.15.5-1-ARCH\r\nOperating System: Arch Linux\r\nOSType: linux\r\nArchitecture: x86_64\r\nCPUs: 8\r\nTotal Memory: 7.712GiB\r\nName: <...>\r\nID: 6L44:BPEL:FEEL:D57Z:UXC5:Z3J3:LGYQ:2E2I:NDRD:EQRE:EA75:ZYBL\r\nDocker Root Dir: /var/lib/docker\r\nDebug Mode (client): false\r\nDebug Mode (server): false\r\nRegistry: https://index.docker.io/v1/\r\nLabels:\r\nExperimental: false\r\nInsecure Registries:\r\n 127.0.0.0/8\r\nLive Restore Enabled: false\r\n```\r\n\r\n**Additional environment details (AWS, VirtualBox, physical, etc.):**\r\n- OS: Arch Linux       "},{"labels":["documentation"],"text":"\r\n<img width=\"1104\" alt=\"screen shot 2018-02-08 at 3 01 14 pm\" src=\"https://user-images.githubusercontent.com/15134885/35995402-32453670-0ce1-11e8-848b-14d1cc3b1e38.png\">\r\n**Description**\r\n\r\nGodoc is down for client reference\r\n\r\n**Steps to reproduce the issue:**\r\n1. https://godoc.org/github.com/docker/docker/client\r\n2. view the empty chasm that is a 404 error\r\n\r\nOther packages are listed fine on Godoc currently and I was able to view the docs just the other day perfectly fine, so I am guessing that something changed in the commits merged into `master` today...\r\n\r\n"},{"labels":["documentation",null,null],"text":"As a knowledgeable-but-not-expert user, I recently got this message:\r\n\r\n> ERROR: for containername  Cannot create container for service containername: privileged mode is incompatible with user namespaces.  You must run the container in the host namespace when running privileged mode\r\n\r\nMy first reaction was [\"what the **** does this mean?\"](https://media.giphy.com/media/kF0ClnIcSBiDe/giphy.gif).\r\n\r\nThis ticket documents how an average user (senior-ish software engineer, uses docker at work and at home) solved this problem using this error message and Google.\r\n\r\nI take full responsibility for my incompetence, but there are many more of my kind, and the humane thing to do is to guide them towards a solution. **We need a better error message.** I hope that ticket makes a strong case for a better error message and better documentation to support it.\r\n\r\n## Context\r\n\r\nI updated docker recently. Then things something stopped working, and this error message was the only hint I got. I don't understand any of the concept it mentions, or which steps to take in order to fix my problem.\r\n\r\n## Fixing the issue\r\n\r\nWhen you are knee-deep in complex issues all day, you can easily forget how the average user sees things, so I wrote down my thought process down while I fixed the issue so you could understand my perspective as an end user.\r\n\r\n1. What the f- does this mean? This worked yesterday! (at this point, I'm already 3 levels deep on a completely different issue)\r\n2. What's privileged mode? What are user name spaces?\r\n3. What does \"running the container in the host namespace\" mean? *What am I supposed to do?*\r\n4. Maybe if I try to run it without sudo... nope.\r\n5. *Googles the error message*\r\n6. \"Introduction to User Namespaces in Docker Engine\" ([link](https://success.docker.com/article/Introduction_to_User_Namespaces_in_Docker_Engine))\r\n7. \"A namespace wraps a global system resource in an abstraction that makes it appear to the processes within...\". Nope, can't understand any of that.\r\n8. I'm halfway through that page, and I'm still no closer to a useful explanation. What is this? What does any of this even mean? Why doesn't it work anymore?\r\n9. *Googles the error message again*\r\n10. Okay, so according to [this article](https://luppeng.wordpress.com/2016/07/04/docker-user-namespaces/), it seems to be a way to prevent a docker root user to do nasty stuff on the host machine. Why didn't they tell me that in step 6?\r\n11. \"--userns-remap=default\" can allegedly fix this. Nope, can't just add it to `docker-compose up`.\r\n12. `userns_mode: \"host\"` apparently disables that. All I need to do is bump the docker-compose version to 2.1\r\n13. \"2.1\" is not a valid version, for some reason that is completely unexplained by this generic error message. I'm using the latest version of docker and docker-compose, which is why I'm getting the errors above in the first place\r\n14. (at this point, I should state that I am slowly losing my cool)\r\n14. Oh, it seems like this feature was added in a version that's not available on the docker PPA. Time to update docker-compose to an unreleased version to fix a problem in a released version. [This page](https://github.com/docker/compose/releases) helped me.\r\n15. \"docker-compose version 1.19.0-rc3\". Sweet, it's working!\r\n16. Aaaaand it works. I don't know why it works, but it works, and that's enough for one day.\r\n\r\nAll of this, including creating the ticket and finding the Office Space gif took me about 1.5 hours. I believe a more appropriate error message and documentation page could have reduced that to a few minutes. I apologize for the odd format of this ticket, but I hope it's still helpful."},{"labels":[null,"documentation",null],"text":"**Description**\r\n\r\nWhen using `ENV` in the form `ENV <key> <value>` both single and double quotes are being\r\nstripped from `<value>`.\r\n\r\nAccording to [the documentation](https://docs.docker.com/engine/reference/builder/#env):\r\n\r\n> The `ENV` instruction has two forms. The first form, `ENV <key> <value>`, will set a single variable to a value. The entire string after the first space will be treated as the `<value>` - including characters such as spaces and quotes.\r\n\r\nI'm seeing double and single quotes being stripped from entries such as these:\r\n\r\n```\r\nENV DQUOTE One \"two two\" three four\r\nENV SQUOTE One 'two two' three four\r\n```\r\n\r\nBackslashes are also being interpreted:\r\n\r\n```\r\nENV SBACKSLASH One two\\ two three four\r\nENV DBACKSLASH One two\\\\ two three four\r\n```\r\n\r\n**Steps to reproduce the issue:**\r\n\r\n1. `git clone git@github.com:gentlemanautomaton/docker-env-quote-test.git`\r\n2. `cd docker-env-quote-test`\r\n3. `docker build -t gentlemanautomaton/docker-env-quote-test:latest .`\r\n4. `docker inspect gentlemanautomaton/docker-env-quote-test:latest`\r\n\r\n**Describe the results you received:**\r\n\r\n```\r\n\"Env\": [\r\n\t\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\",\r\n\t\"DQUOTE=One two two three four\",\r\n\t\"SQUOTE=One two two three four\",\r\n\t\"SBACKSLASH=One two two three four\",\r\n\t\"DBACKSLASH=One two\\\\ two three four\",\r\n\t\"BACKTICK=One `two two` three four\"\r\n],\r\n```\r\n\r\n**Describe the results you expected:**\r\n\r\n```\r\n\"Env\": [\r\n\t\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\",\r\n\t\"DQUOTE=One \\\"two two\\\" three four\",\r\n\t\"SQUOTE=One 'two two' three four\",\r\n\t\"SBACKSLASH=One two\\\\ two three four\",\r\n\t\"DBACKSLASH=One two\\\\\\\\ two three four\",\r\n\t\"BACKTICK=One `two two` three four\"\r\n],\r\n```\r\n\r\n**Additional information you deem important (e.g. issue happens only occasionally):**\r\n\r\nIn the hope that it's useful, I created a test `Dockerfile` for reproduction in this repo:\r\n\r\n* https://github.com/gentlemanautomaton/docker-env-quote-test\r\n\r\n**Output of `docker version`:**\r\n\r\n```\r\nClient:\r\n Version:       18.01.0-ce\r\n API version:   1.35\r\n Go version:    go1.9.2\r\n Git commit:    03596f5\r\n Built: Wed Jan 10 20:13:21 2018\r\n OS/Arch:       linux/amd64\r\n Experimental:  false\r\n Orchestrator:  swarm\r\n\r\nServer:\r\n Engine:\r\n  Version:      18.01.0-ce\r\n  API version:  1.35 (minimum version 1.12)\r\n  Go version:   go1.9.2\r\n  Git commit:   03596f5\r\n  Built:        Wed Jan 10 20:11:47 2018\r\n  OS/Arch:      linux/amd64\r\n  Experimental: false\r\n```\r\n\r\n**Output of `docker info`:**\r\n\r\n```\r\nContainers: 3\r\n Running: 0\r\n Paused: 0\r\n Stopped: 3\r\nImages: 361\r\nServer Version: 18.01.0-ce\r\nStorage Driver: overlay2\r\n Backing Filesystem: extfs\r\n Supports d_type: true\r\n Native Overlay Diff: true\r\nLogging Driver: json-file\r\nCgroup Driver: cgroupfs\r\nPlugins:\r\n Volume: local\r\n Network: bridge host macvlan null overlay\r\n Log: awslogs fluentd gcplogs gelf journald json-file logentries splunk syslog\r\nSwarm: inactive\r\nRuntimes: runc\r\nDefault Runtime: runc\r\nInit Binary: docker-init\r\ncontainerd version: 89623f28b87a6004d4b785663257362d1658a729\r\nrunc version: b2567b37d7b75eb4cf325b77297b140ea686ce8f\r\ninit version: 949e6fa\r\nSecurity Options:\r\n apparmor\r\n seccomp\r\n  Profile: default\r\nKernel Version: 4.13.0-25-generic\r\nOperating System: Ubuntu 17.10\r\nOSType: linux\r\nArchitecture: x86_64\r\nCPUs: 16\r\nTotal Memory: 31.47GiB\r\nName: REDACTED\r\nID: SVWR:PGRT:4NZT:KVIT:DVBE:EKDI:GG2T:46U2:5PEW:X4UL:LGQZ:SEL4\r\nDocker Root Dir: /var/lib/docker\r\nDebug Mode (client): false\r\nDebug Mode (server): false\r\nRegistry: https://index.docker.io/v1/\r\nLabels:\r\nExperimental: false\r\nInsecure Registries:\r\n 127.0.0.0/8\r\nLive Restore Enabled: false\r\n\r\nWARNING: No swap limit support\r\n```\r\n\r\n**Additional environment details (AWS, VirtualBox, physical, etc.):**\r\n\r\nThe test was performed with `docker-ce` running on physical hardware."},{"labels":["documentation",null],"text":"Just a heads up that the examples over here - https://docs.docker.com/engine/reference/commandline/inspect/#extended-description are incorrect if an overlay network is used.  The Go template extracts 2 IPs in this case (one from the ingress layer and the second the one used by the container) and concatenates them.  Here is an example:\r\n\r\n```\r\n$ docker inspect --format='{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' container1\r\n10.255.0.2110.0.1.9\r\n```\r\n\r\nThe above is on Docker 17.12\r\n\r\n```\r\n$ docker version\r\nClient:\r\n Version:       17.12.0-ce-rc2\r\n API version:   1.35\r\n Go version:    go1.9.2\r\n Git commit:    f9cde63\r\n Built: Tue Dec 12 06:38:26 2017\r\n OS/Arch:       linux/amd64\r\n\r\nServer:\r\n Engine:\r\n  Version:      17.12.0-ce-rc2\r\n  API version:  1.35 (minimum version 1.12)\r\n  Go version:   go1.9.2\r\n  Git commit:   f9cde63\r\n  Built:        Tue Dec 12 06:45:30 2017\r\n  OS/Arch:      linux/amd64\r\n  Experimental: false\r\n```"},{"labels":[null,"documentation"],"text":"**Description**\r\n\r\n<!--\r\nBriefly describe the problem you are having in a few paragraphs.\r\n-->\r\nThe link for `docker stack config` listed under \"Related commands\" at the end of page under URL -\r\n https://github.com/docker/cli/blob/master/docs/reference/commandline/deploy.md returns 404 page error.\r\n\r\n**Steps to reproduce the issue:**\r\n1. Go to https://github.com/docker/cli/blob/master/docs/reference/commandline/deploy.md\r\n2. Scroll to the end of the page section \"Related Commands\"\r\n3. Click on the first link - https://github.com/docker/cli/blob/master/docs/reference/commandline/stack_config.md\r\n4. It shows 404 page not found error\r\n\r\n**Describe the results you received:**\r\n\r\nThe page reports 404 error \r\n\r\n**Describe the results you expected:**\r\n\r\nThe page should display reference to `docker stack config` command.\r\n"},{"labels":[null,"documentation",null,null],"text":"**Description**\r\n\r\nDevicemapper fails on bonnie++ test when using >4Gb / >8Gb files (bonnie uses disk=2*RAM)\r\n\r\n**Steps to reproduce the issue:**\r\n1. Configure docker to use devicemapper (no care loop or thinpool)\r\n2. Run `docker run -ti ariarijp/bonnie -d /tmp -u root`\r\n\r\n**Describe the results you received:**\r\n```\r\nUsing uid:0, gid:0.\r\nWriting a byte at a time...done\r\nWriting intelligently...Can't write block.: No such file or directory\r\nCan't write block 1277407.\r\n```\r\n\r\n**Describe the results you expected:**\r\n_Test results._\r\n\r\n**Additional information you deem important (e.g. issue happens only occasionally):**\r\nOverlay, overlay2, aufs, btrfs, zfs, vfs, host direcory works. devicemapper - not.\r\n\r\n**Output of `docker version`:**\r\n\r\n```\r\nClient:\r\n Version:      17.09.0-ce\r\n API version:  1.32\r\n Go version:   go1.8.3\r\n Git commit:   afdb6d4\r\n Built:        Tue Sep 26 22:42:18 2017\r\n OS/Arch:      linux/amd64\r\n\r\nServer:\r\n Version:      17.09.0-ce\r\n API version:  1.32 (minimum version 1.12)\r\n Go version:   go1.8.3\r\n Git commit:   afdb6d4\r\n Built:        Tue Sep 26 22:40:56 2017\r\n OS/Arch:      linux/amd64\r\n Experimental: false\r\n```\r\n\r\n**Output of `docker info`:**\r\n\r\n```\r\nContainers: 16\r\n Running: 1\r\n Paused: 0\r\n Stopped: 15\r\nImages: 1\r\nServer Version: 17.09.0-ce\r\nStorage Driver: devicemapper\r\n Pool Name: docker-thinpool\r\n Pool Blocksize: 524.3kB\r\n Base Device Size: 10.74GB\r\n Backing Filesystem: xfs\r\n Data file:\r\n Metadata file:\r\n Data Space Used: 91.11GB\r\n Data Space Total: 130.6GB\r\n Data Space Available: 39.45GB\r\n Metadata Space Used: 6.033MB\r\n Metadata Space Total: 1.372GB\r\n Metadata Space Available: 1.366GB\r\n Thin Pool Minimum Free Space: 13.06GB\r\n Udev Sync Supported: true\r\n Deferred Removal Enabled: true\r\n Deferred Deletion Enabled: true\r\n Deferred Deleted Device Count: 0\r\n Library Version: 1.02.110 (2015-10-30)\r\nLogging Driver: json-file\r\nCgroup Driver: cgroupfs\r\nPlugins:\r\n Volume: local\r\n Network: bridge host macvlan null overlay\r\n Log: awslogs fluentd gcplogs gelf journald json-file logentries splunk syslog\r\nSwarm: inactive\r\nRuntimes: runc\r\nDefault Runtime: runc\r\nInit Binary: docker-init\r\ncontainerd version: 06b9cb35161009dcb7123345749fef02f7cea8e0\r\nrunc version: 3f2f8b84a77f73d38244dd690525642a72156c64\r\ninit version: 949e6fa\r\nSecurity Options:\r\n apparmor\r\n seccomp\r\n  Profile: default\r\nKernel Version: 4.4.0-97-generic\r\nOperating System: Ubuntu 16.04.3 LTS\r\nOSType: linux\r\nArchitecture: x86_64\r\nCPUs: 4\r\nTotal Memory: 15.67GiB\r\nName: loadtest\r\nID: N6HT:CHLJ:545Y:NGOT:HGXV:NK7W:ZEP3:DZWG:CH5N:D2TV:OKLR:F5LV\r\nDocker Root Dir: /var/lib/docker\r\nDebug Mode (client): false\r\nDebug Mode (server): false\r\nRegistry: https://index.docker.io/v1/\r\nExperimental: false\r\nInsecure Registries:\r\n 127.0.0.0/8\r\nLive Restore Enabled: false\r\n\r\nWARNING: No swap limit support\r\n```\r\n\r\n**Additional environment details (AWS, VirtualBox, physical, etc.):**\r\nVM in VMware ESXi, 5.5.0, 2068190\r\n\r\n_/etc/docker/daemon.json_\r\n```\r\n{\r\n  \"storage-driver\": \"devicemapper\",\r\n  \"storage-opts\": [\r\n    \"dm.directlvm_device=/dev/sdb\"\r\n  ]\r\n}\r\n```\r\n\r\n_Dockerfile_\r\n```\r\nFROM ubuntu:14.04\r\nMAINTAINER Takuya Arita <takuya.arita@gmail.com>\r\n\r\n# Install Dependencies\r\nRUN apt-get update && apt-get install -y bonnie++\r\n\r\n# Run bonnie++\r\nENTRYPOINT [\"bonnie++\"]\r\n```\r\n\r\n**Another attempts**\r\n`docker run -ti --memory=4G ariarijp/bonnie -r 4096 -d /tmp -u root` **works** 4Gb RAM 8Gb files\r\n`docker run -ti --memory=5G ariarijp/bonnie -r 5120 -d /tmp -u root` **not works** 5Gb RAM 10GB files\r\n`docker run -ti --memory=4G ariarijp/bonnie -r 4096 -s 9977 -d /tmp -u root` **works** 4Gb RAM 9977Mb files\r\n`docker run -ti --memory=4G ariarijp/bonnie -r 4096 -s 9978 -d /tmp -u root` **not works** 4Gb RAM 9978Mb files (it varies +- megabyte)"},{"labels":[null,"documentation"],"text":"In https://github.com/moby/moby/pull/6909 the change was made that, if one specifies an ENTRYPOINT and the base image contains a CMD, then the CMD will be emptied.\r\n\r\nThis behavior is nowhere documented. (Neither in the Dockerfile Reference nor Best Practices)\r\n\r\nFor me this behavior was quite unexpected, because the ENTRYPOINT seems to be the point where one can push in start up scripts. For example nginx images specify a CMD (without ENTRYPOINT) to start the nginx. In my inheriting image I use an ENTRYPOINT script to do some environment dependant configuration and then want to do `exec \"$@\"` to \"resume\" with the base image's CMD. That does not work and I need to respecify the CMD (= copy over and maintain) from the nginx base image.\r\n\r\nThis behavior needs to be documented. From my point of view it could even be changed back, but I certainly miss the creators intented purpose of ENTRYPOINT."},{"labels":["documentation",null,null],"text":"**Description**\r\nI configure the `/etc/docker/daemon.json` with the \"mtu\" parameter to 1450.\r\nDefault bridge is ok with mtu=1450.\r\nBut when a new bridge network is created (either `docker network create `or `docker-compose`), the mtu parameter is false. It's always 1500.\r\n\r\n\r\n**Steps to reproduce the issue:**\r\n1. Add `\"mtu\": 1450 `to `/etc/docker/daemon.json`\r\n2. Restart docker daemon\r\n3. Create a new bridge : `docker network create my-net`\r\n\r\n**Describe the results you received:**\r\nmy-net MTU = 1500 \r\n\r\n**Describe the results you expected:**\r\nmy-net MTU = 1450\r\n\r\n**Output of `docker version`:**\r\n\r\n```\r\nClient:\r\n Version:      17.06.2-ce\r\n API version:  1.30\r\n Go version:   go1.8.3\r\n Git commit:   cec0b72\r\n Built:        Tue Sep  5 20:00:17 2017\r\n OS/Arch:      linux/amd64\r\n\r\nServer:\r\n Version:      17.06.2-ce\r\n API version:  1.30 (minimum version 1.12)\r\n Go version:   go1.8.3\r\n Git commit:   cec0b72\r\n Built:        Tue Sep  5 19:59:11 2017\r\n OS/Arch:      linux/amd64\r\n Experimental: false\r\n```\r\n\r\n**Output of `docker info`:**\r\n\r\n```\r\nContainers: 4\r\n Running: 1\r\n Paused: 0\r\n Stopped: 3\r\nImages: 41\r\nServer Version: 17.06.2-ce\r\nStorage Driver: aufs\r\n Root Dir: /var/lib/docker/100000.100000/aufs\r\n Backing Filesystem: extfs\r\n Dirs: 163\r\n Dirperm1 Supported: true\r\nLogging Driver: json-file\r\nCgroup Driver: cgroupfs\r\nPlugins:\r\n Volume: local\r\n Network: bridge host macvlan null overlay\r\n Log: awslogs fluentd gcplogs gelf journald json-file logentries splunk syslog\r\nSwarm: inactive\r\nRuntimes: runc\r\nDefault Runtime: runc\r\nInit Binary: docker-init\r\ncontainerd version: 6e23458c129b551d5c9871e5174f6b1b7f6d1170\r\nrunc version: 810190ceaa507aa2727d7ae6f4790c76ec150bd2\r\ninit version: 949e6fa\r\nSecurity Options:\r\n apparmor\r\n seccomp\r\n  Profile: default\r\n userns\r\nKernel Version: 4.4.0-93-generic\r\nOperating System: Ubuntu 16.04.3 LTS\r\nOSType: linux\r\nArchitecture: x86_64\r\nCPUs: 2\r\nTotal Memory: 15.67GiB\r\nName: test-vm-04\r\nID: OZSP:AWLJ:HAPO:CZD6:NNLX:YDIT:LGWR:RMEI:P4SK:SBY4:2RAT:5YIK\r\nDocker Root Dir: /var/lib/docker/100000.100000\r\nDebug Mode (client): false\r\nDebug Mode (server): false\r\nRegistry: https://index.docker.io/v1/\r\nExperimental: false\r\nInsecure Registries:\r\n 127.0.0.0/8\r\nLive Restore Enabled: true\r\n```\r\n"},{"labels":["documentation",null,null],"text":"Hi!\r\n\r\nShould the --update-monitor be greater than --stop-grace-period to monitorize the update process?\r\n\r\nI mean, does --update-monitor time start counting while task is shutting down or it starts to count when the new task is starting?\r\n\r\nThanks!"},{"labels":["documentation",null,null],"text":"**Description**\r\n\r\nLooks like documentation for docker network is outdated.\r\nTrying to learn docker network using the examples provided [here](https://docs.docker.com/engine/userguide/networking/work-with-networks/#link-containers-without-using-user-defined-networks).\r\n\r\n**Steps to reproduce the issue:**\r\n1.create docker network \r\n    `$ docker network create -o \"com.docker.network.bridge.host_binding_ipv4\"=\"172.23.0.1\" my-network`\r\n    bf64e40499c8c1644c8ed3b743f25dc72866ae81294cec92d86e216fbb9a0ab5\r\n\r\n2. inspect the network.\r\n\r\n    `$ docker network inspect my-network`\r\n\r\n```\r\n[\r\n    {\r\n        \"Name\": \"my-network\",\r\n        \"Id\": \"bf64e40499c8c1644c8ed3b743f25dc72866ae81294cec92d86e216fbb9a0ab5\",\r\n        \"Created\": \"2017-09-16T23:48:31.063263608-04:00\",\r\n        \"Scope\": \"local\",\r\n        \"Driver\": \"bridge\",\r\n        \"EnableIPv6\": false,\r\n        \"IPAM\": {\r\n            \"Driver\": \"default\",\r\n            \"Options\": {},\r\n            \"Config\": [\r\n                {\r\n                    \"Subnet\": \"172.18.0.0/16\",\r\n                    \"Gateway\": \"172.18.0.1\"\r\n                }\r\n            ]\r\n        },\r\n        \"Internal\": false,\r\n        \"Attachable\": false,\r\n        \"Ingress\": false,\r\n        \"ConfigFrom\": {\r\n            \"Network\": \"\"\r\n        },\r\n        \"ConfigOnly\": false,\r\n        \"Containers\": {},\r\n        \"Options\": {\r\n            \"com.docker.network.bridge.host_binding_ipv4\": \"172.23.0.1\"\r\n        },\r\n        \"Labels\": {}\r\n    }\r\n]\r\n```\r\n\r\n3. run redis in this network\r\n\r\n    `$ docker run -d -P --name redis --network my-network redis`\r\n\r\n```\r\nUnable to find image 'redis:latest' locally\r\nlatest: Pulling from library/redis\r\n065132d9f705: Pull complete \r\nfc32c7d9b0f4: Pull complete \r\nad60cc6fa431: Pull complete \r\nb21c99d8cf03: Pull complete \r\n357908014789: Pull complete \r\ne27e1cb0ca43: Pull complete \r\nDigest: sha256:fe77356e6e8d5c5200b9800e50ae71147efdc446a3cc4f601c607fbfd218015e\r\nStatus: Downloaded newer image for redis:latest\r\nf103a6542e50ecd5bb257b9c68214537f1392069d94ddfbf19416af3e54cc640\r\ndocker: Error response from daemon: driver failed programming external connectivity on endpoint redis (1339918305c70f9e6416a5d499b5f6b8691450c9a3d310c8f7c3495c34a931ee): Error starting userland proxy: listen tcp 172.23.0.1:32777: bind: cannot assign requested address.\r\n```\r\n\r\n\r\n\r\n**Describe the results you received:**\r\n\r\ndocker should be able to run redis successfully in provided network.\r\n\r\n**Describe the results you expected:**\r\n\r\n```\r\ndocker: Error response from daemon: driver failed programming external connectivity on endpoint redis (1339918305c70f9e6416a5d499b5f6b8691450c9a3d310c8f7c3495c34a931ee): Error starting userland proxy: listen tcp 172.23.0.1:32777: bind: cannot assign requested address.\r\n```\r\n\r\n**Additional information you deem important (e.g. issue happens only occasionally):**\r\n\r\n**Output of `docker version`:**\r\n\r\n```\r\nClient:\r\n Version:      17.09.0-ce-rc1\r\n API version:  1.31\r\n Go version:   go1.8.3\r\n Git commit:   ae21824\r\n Built:        Wed Sep  6 22:31:42 2017\r\n OS/Arch:      linux/amd64\r\n\r\nServer:\r\n Version:      17.09.0-ce-rc1\r\n API version:  1.32 (minimum version 1.12)\r\n Go version:   go1.8.3\r\n Git commit:   ae21824\r\n Built:        Wed Sep  6 22:33:07 2017\r\n OS/Arch:      linux/amd64\r\n Experimental: false\r\n\r\n```\r\n\r\n**Output of `docker info`:**\r\n\r\n```\r\nContainers: 4\r\n Running: 0\r\n Paused: 0\r\n Stopped: 4\r\nImages: 21\r\nServer Version: 17.09.0-ce-rc1\r\nStorage Driver: overlay2\r\n Backing Filesystem: extfs\r\n Supports d_type: true\r\n Native Overlay Diff: true\r\nLogging Driver: json-file\r\nCgroup Driver: cgroupfs\r\nPlugins:\r\n Volume: local\r\n Network: bridge host macvlan null overlay\r\n Log: awslogs fluentd gcplogs gelf journald json-file logentries splunk syslog\r\nSwarm: inactive\r\nRuntimes: runc\r\nDefault Runtime: runc\r\nInit Binary: docker-init\r\ncontainerd version: 06b9cb35161009dcb7123345749fef02f7cea8e0\r\nrunc version: 3f2f8b84a77f73d38244dd690525642a72156c64\r\ninit version: 949e6fa\r\nSecurity Options:\r\n seccomp\r\n  Profile: default\r\nKernel Version: 4.12.9-300.fc26.x86_64\r\nOperating System: Fedora 26 (Twenty Six)\r\nOSType: linux\r\nArchitecture: x86_64\r\nCPUs: 2\r\nTotal Memory: 7.794GiB\r\nName: localhost.localdomain\r\nID: R3ET:HF5C:ILYK:S46A:5OYO:E67Z:GACB:AFJE:5V7G:EY3V:GBMX:IPTB\r\nDocker Root Dir: /var/lib/docker\r\nDebug Mode (client): false\r\nDebug Mode (server): false\r\nRegistry: https://index.docker.io/v1/\r\nExperimental: false\r\nInsecure Registries:\r\n 127.0.0.0/8\r\nLive Restore Enabled: false\r\n\r\n```\r\n\r\n**Additional environment details (AWS, VirtualBox, physical, etc.):**\r\n\r\nPhysical - Fedora 26"},{"labels":["documentation",null],"text":"**Description**\r\n\r\nThe docker compose documentation shows an example of Volume long syntax as below\r\n\r\n```yaml\r\nversion: \"3.2\"\r\nservices:\r\n  web:\r\n    image: nginx:alpine\r\n    ports:\r\n      - \"80:80\"\r\n\r\nnetworks:\r\n  webnet:\r\n\r\nvolumes:\r\n  - type: volume\r\n    source: mydata\r\n    target: /data\r\n    volume:\r\n      nocopy: true\r\n  - type: bind\r\n    source: ./static\r\n    target: /opt/app/static\r\n```\r\n> Note: The long syntax is new in v3.2\r\n\r\nI believe this format is only valid for volumes property of the service. Please correct me that is not the case \r\n\r\n**Steps to reproduce the issue:**\r\n$ docker-compose config\r\nERROR: In file './docker-compose.yml', volume must be a mapping, not an array.\r\n\r\n**Describe the results you received:**\r\nERROR: In file './docker-compose.yml', volume must be a mapping, not an array.\r\n\r\n\r\n**Describe the results you expected:**\r\nDocumentation examples should work\r\n\r\n**Additional information you deem important (e.g. issue happens only occasionally):**\r\n\r\n**Output of `docker version`:**\r\n\r\n```\r\nClient:\r\n Version:      17.06.0-ce\r\n API version:  1.30\r\n Go version:   go1.8.3\r\n Git commit:   02c1d87\r\n Built:        Fri Jun 23 21:23:31 2017\r\n OS/Arch:      linux/amd64\r\n\r\nServer:\r\n Version:      17.06.0-ce\r\n API version:  1.30 (minimum version 1.12)\r\n Go version:   go1.8.3\r\n Git commit:   02c1d87\r\n Built:        Fri Jun 23 21:19:04 2017\r\n OS/Arch:      linux/amd64\r\n Experimental: false\r\n```\r\n\r\n**Output of `docker info`:**\r\n\r\n```\r\nClient:\r\n Version:      17.06.0-ce\r\n API version:  1.30\r\n Go version:   go1.8.3\r\n Git commit:   02c1d87\r\n Built:        Fri Jun 23 21:23:31 2017\r\n OS/Arch:      linux/amd64\r\n\r\nServer:\r\n Version:      17.06.0-ce\r\n API version:  1.30 (minimum version 1.12)\r\n Go version:   go1.8.3\r\n Git commit:   02c1d87\r\n Built:        Fri Jun 23 21:19:04 2017\r\n OS/Arch:      linux/amd64\r\n Experimental: false\r\nvagrant@vagrant:~/so/volumes$ docker info\r\nContainers: 44\r\n Running: 5\r\n Paused: 0\r\n Stopped: 39\r\nImages: 92\r\nServer Version: 17.06.0-ce\r\nStorage Driver: aufs\r\n Root Dir: /var/lib/docker/aufs\r\n Backing Filesystem: extfs\r\n Dirs: 355\r\n Dirperm1 Supported: true\r\nLogging Driver: json-file\r\nCgroup Driver: cgroupfs\r\nPlugins:\r\n Volume: local\r\n Network: bridge host macvlan null overlay\r\n Log: awslogs fluentd gcplogs gelf journald json-file logentries splunk syslog\r\nSwarm: active\r\n NodeID: smh2288801wg3b15f0twxaew1\r\n Is Manager: true\r\n ClusterID: 3pqs1zxfxe76sb3r462engtfa\r\n Managers: 1\r\n Nodes: 1\r\n Orchestration:\r\n  Task History Retention Limit: 5\r\n Raft:\r\n  Snapshot Interval: 10000\r\n  Number of Old Snapshots to Retain: 0\r\n  Heartbeat Tick: 1\r\n  Election Tick: 3\r\n Dispatcher:\r\n  Heartbeat Period: 5 seconds\r\n CA Configuration:\r\n  Expiry Duration: 3 months\r\n  Force Rotate: 0\r\n Root Rotation In Progress: false\r\n Node Address: 192.168.33.100\r\n Manager Addresses:\r\n  192.168.33.100:2377\r\nRuntimes: runc\r\nDefault Runtime: runc\r\nInit Binary: docker-init\r\ncontainerd version: cfb82a876ecc11b5ca0977d1733adbe58599088a\r\nrunc version: 2d41c047c83e09a6d61d464906feb2a2f3c52aa4\r\ninit version: 949e6fa\r\nSecurity Options:\r\n apparmor\r\n seccomp\r\n  Profile: default\r\nKernel Version: 4.4.0-66-generic\r\nOperating System: Ubuntu 16.04.2 LTS\r\nOSType: linux\r\nArchitecture: x86_64\r\nCPUs: 1\r\nTotal Memory: 992.3MiB\r\nName: vagrant\r\nID: H5PY:YSAS:TWDZ:HRHQ:7WPR:GAOZ:5PNY:YZTD:UB2K:QDDD:DVY5:OJF3\r\nDocker Root Dir: /var/lib/docker\r\nDebug Mode (client): false\r\nDebug Mode (server): false\r\nUsername: tarunlalwani\r\nRegistry: https://index.docker.io/v1/\r\nExperimental: false\r\nInsecure Registries:\r\n 127.0.0.0/8\r\nLive Restore Enabled: false\r\n\r\nWARNING: No swap limit support\r\n```\r\n\r\n**Additional environment details (AWS, VirtualBox, physical, etc.):**\r\n\r\n```\r\n$ docker-compose --version\r\ndocker-compose version 1.15.0, build e12f3b9\r\n```"},{"labels":["documentation",null,null],"text":"<!--\r\nIf you are reporting a new issue, make sure that we do not have any duplicates\r\nalready open. You can ensure this by searching the issue list for this\r\nrepository. If there is a duplicate, please close your issue and add a comment\r\nto the existing issue instead.\r\n\r\nIf you suspect your issue is a bug, please edit your issue description to\r\ninclude the BUG REPORT INFORMATION shown below. If you fail to provide this\r\ninformation within 7 days, we cannot debug your issue and will close it. We\r\nwill, however, reopen it if you later provide the information.\r\n\r\nFor more information about reporting issues, see\r\nhttps://github.com/docker/docker/blob/master/CONTRIBUTING.md#reporting-other-issues\r\n\r\n---------------------------------------------------\r\nGENERAL SUPPORT INFORMATION\r\n---------------------------------------------------\r\n\r\nThe GitHub issue tracker is for bug reports and feature requests.\r\nGeneral support can be found at the following locations:\r\n\r\n- Docker Support Forums - https://forums.docker.com\r\n- IRC - irc.freenode.net #docker channel\r\n- Post a question on StackOverflow, using the Docker tag\r\n\r\n---------------------------------------------------\r\nBUG REPORT INFORMATION\r\n---------------------------------------------------\r\nUse the commands below to provide key information from your environment:\r\nYou do NOT have to include this information if this is a FEATURE REQUEST\r\n-->\r\n\r\n**Description**\r\nFollowing the documentation on using [binded volumes](https://docs.docker.com/engine/admin/volumes/bind-mounts/#start-a-container-with-a-bind-mount), using --mount instead of -v does not allow / in the source path and gives me the error: \r\n```\r\ndocker: Error response from daemon: create /home/martinmine/Documents/target: \"/home/martinmine/Documents/target\" includes invalid characters for a local volume name, only \"[a-zA-Z0-9][a-zA-Z0-9_.-]\" are allowed. If you intended to pass a host directory, use absolute path.\r\nSee 'docker run --help'.\r\n```\r\nRunning  `docker run -d -it --name devtest -v $(pwd)/target:/app nginx:latest` works fine and mounts the `target` directory just find. However, running `docker run -d -it --name devtest --mount source=$(pwd)/target,target=/app nginx:latest` gives me the error above.\r\n\r\n\r\n<!--\r\nBriefly describe the problem you are having in a few paragraphs.\r\n-->\r\n\r\n**Steps to reproduce the issue:**\r\n1. `mkdir target`\r\n2. `docker run -d -it --name devtest --mount source=$(pwd)/target,target=/app nginx:lates`\r\n\r\n**Describe the results you received:**\r\n\r\nSee error message above.\r\n\r\n**Describe the results you expected:**\r\n\r\nI expect the same behavior as with the -v option, [as the documentation states](https://docs.docker.com/engine/admin/volumes/bind-mounts/#start-a-container-with-a-bind-mount).\r\n\r\n**Additional information you deem important (e.g. issue happens only occasionally):**\r\n\r\n**Output of `docker version`:**\r\n\r\n```\r\nDocker version 17.05.0-ce, build 89658be\r\n```\r\n\r\n**Output of `docker info`:**\r\n\r\n```\r\nContainers: 3\r\n Running: 3\r\n Paused: 0\r\n Stopped: 0\r\nImages: 22\r\nServer Version: 17.05.0-ce\r\nStorage Driver: overlay\r\n Backing Filesystem: extfs\r\n Supports d_type: true\r\nLogging Driver: json-file\r\nCgroup Driver: cgroupfs\r\nPlugins: \r\n Volume: local\r\n Network: bridge host macvlan null overlay\r\nSwarm: inactive\r\nRuntimes: runc\r\nDefault Runtime: runc\r\nInit Binary: docker-init\r\ncontainerd version: 9048e5e50717ea4497b757314bad98ea3763c145\r\nrunc version: 9c2d8d184e5da67c95d601382adf14862e4f2228\r\ninit version: 949e6fa\r\nSecurity Options:\r\n seccomp\r\n  Profile: default\r\nKernel Version: 3.10.0-514.10.2.el7.x86_64\r\nOperating System: CentOS Linux 7 (Core)\r\nOSType: linux\r\nArchitecture: x86_64\r\nCPUs: 16\r\nTotal Memory: 28.6GiB\r\nName: xxxxxxxxxxx\r\nID: 6OYY:KN5X:OBD3:SOUB:7CXB:5RL4:XUOZ:7ZEJ:CIOB:U6ZZ:PLYF:6P2X\r\nDocker Root Dir: /mnt/docker\r\nDebug Mode (client): false\r\nDebug Mode (server): false\r\nRegistry: https://index.docker.io/v1/\r\nExperimental: false\r\nInsecure Registries:\r\n 127.0.0.0/8\r\nLive Restore Enabled: false\r\n```\r\n\r\n**Additional environment details (AWS, VirtualBox, physical, etc.):**\r\nHappens on both a virtual machine through Openstack (CentOS7), and on my laptop (Fedora)."},{"labels":[null,"documentation",null,null],"text":"Hi !\r\n\r\nI'm writing a tool (in Python) to get the logs from any containers through the Docker Engine's HTTP API.\r\n\r\nAfter reading [the doc](https://docs.docker.com/engine/api/v1.30/), and trying to implement something, I founded that the protocol used seems to be different from the one for Attach, it seems to be :\r\n\r\n```{\\xFF}\\r\\n{\\xFF}{datas}```\r\n\r\nWhere the first hex number is the size of the message, and the second one seems to be (empirical deduction) the number of bytes that are supposed to be ignored before the start of the actual payload (so the log).\r\nAnd it seems to work, for some containers at least ...\r\n\r\n**EDIT** : The second seems to be the number of bytes that are supposed to be ignored IF the container has ```tty: false```, otherwise, it seems to be the start of the log **END of the edit**\r\n\r\nWith one strange deduction : if ```\\x07``` is found, then it overrides the second {\\xFF} size, and the message starts after this value...\r\n\r\nAm I missing a part of the documentation, or am I not using the HTTP API in a wrong way ?\r\n\r\nThanks for your time,\r\n\r\n**NB** : The protocol above seems to be specific for the logs endpoint, it's not working for the events' endpoint.\r\n\r\n**Output of `docker version`:**\r\n\r\n```\r\nClient:\r\n Version:      17.05.0-ce\r\n API version:  1.29\r\n Go version:   go1.7.5\r\n Git commit:   89658be\r\n Built:        Thu May  4 22:10:54 2017\r\n OS/Arch:      linux/amd64\r\n\r\nServer:\r\n Version:      17.05.0-ce\r\n API version:  1.29 (minimum version 1.12)\r\n Go version:   go1.7.5\r\n Git commit:   89658be\r\n Built:        Thu May  4 22:10:54 2017\r\n OS/Arch:      linux/amd64\r\n Experimental: false\r\n```\r\n\r\n"},{"labels":["documentation",null,null],"text":"This PR https://github.com/moby/moby/pull/13165 allows duration strings as `--since/--until`, but I can't find any example of `docker events --until`. From the help infomation of `docker events`, I suppose that `docker events --until 10m` will stream events for 10 minutes then stop streaming. But actually, it returns immediately without any output.\r\n\r\nAfter diging into codes, I find that the duration will be subtracted from `time.Now()`, that is to say, docker waits for -10 minutes in this scenario, that's why it returns immediately without any output. Then I try `docker events --until -10m` and it works as what I expected.\r\n\r\nMaybe it's intended behavior because @ahmetb has already answered this question in his PR:\r\n![image](https://user-images.githubusercontent.com/20569488/29160624-902086b8-7de5-11e7-959b-4514b34075f0.png)\r\n\r\nBut I still think it's confusing, `until` means do something up to some time, right?\r\n"},{"labels":[null,"documentation",null],"text":"I was looking at [`dispatchers.go`](https://github.com/moby/moby/blob/f577caff19d486d8d01443507d891cb1b0891cdc/builder/dockerfile/dispatchers.go#L689-L693) today when I realized that you can actually specify `tcp` or `udp` when you use the `EXPOSE` instruction.\r\n\r\nThis isn't mentioned at all in the [Dockerfile reference for `EXPOSE`](https://docs.docker.com/engine/reference/builder/#expose). Is this intentional?"},{"labels":["documentation",null,null],"text":"**Description**\r\n\r\nThe `docker-run` man page I'm looking at describes the `--publish-all` option as follows:\r\n\r\n> Publish all exposed ports to random ports on the host interfaces.\r\n> [...]\r\n> When using -P, Docker will bind any exposed port to a random port on the host within an ephemeral port range defined by `/proc/sys/net/ipv4/ip_local_port_range`.\r\n\r\nHowever, the observed behaviour is, instead, that ports are allocated sequentially from the bottom of `ip_local_port_range`, with the sequence being reset whenever `dockerd` is restarted.\r\n\r\nMost definitions of \"random\" I can find mention \"unpredictability\", \"governed by or depending on chance\", or \"in no particular order\" as being defining characteristics; \"start from X and work your way up one by one\" doesn't meet any definition of \"random\" I can find.\r\n\r\n**Steps to reproduce the issue:**\r\n\r\n1. Restart `dockerd`, just to get a clean slate.\r\n2. Run `docker run --rm -it --expose 4242 -P alpine sh`\r\n3. Run `docker ps` in another shell, and note the host port number assigned to the container.  It will almost certainly be the first value in `/proc/sys/net/ipv4/ip_local_port_range`.\r\n4. Exit out of that container.\r\n5. Repeat steps 2-4 another dozen times or so.  Note each time that the host port number is almost certainly the next value above the previous one (with a small chance that another process on the machine might have temporarily snaffled a port in the middle).  Continue to repeat until the experiment has sufficient statistical power to convince you this isn't just the cruel hand of random chance toying with your sanity.\r\n6. Restart `dockerd` again.\r\n7. Run `docker run --rm -it --expose 4242 -P alpine sh`\r\n8. Run `docker ps` is another shell, note that the host port has probably gone back to the first value in `/proc/sys/net/ipv4/ip_local_port_range` (or is pretty close to it).\r\n\r\n**Describe the results you received:**\r\n\r\nIncluded above.\r\n\r\n**Describe the results you expected:**\r\n\r\nThe host ports allocated should not be allocated sequentially when multiple containers with `-P` are run.\r\n\r\n**Additional information you deem important (e.g. issue happens only occasionally):**\r\n\r\nThe chances of getting the first port in `ip_local_port_range` on my system are about 1 in 28,000.  The chances of getting the next sequential port each time over 10 runs, if my arithmetic is correct, is 1 in 15,992,496,204,377,989,289,565,234,114,532,246,053,888,000.  I don't think I'm that lucky.\r\n\r\nOn the up side, at least dockerd doesn't reuse recently released ports, like it does with container IP addresses, and it doesn't blindly re-use allocated ports after restart.  So the problem isn't as horrible as it *could* be.  But it's still not great.\r\n\r\nIdeally, the relevant code would be fixed to allocate ports randomly, in line with the documentation, but if not, the documentation should be updated to accurately describe the port allocation process.\r\n\r\n**Output of `docker version`:**\r\n\r\n```\r\nClient:\r\n Version:      17.06.0-ce\r\n API version:  1.30\r\n Go version:   go1.8.3\r\n Git commit:   02c1d87\r\n Built:        Fri Jun 23 21:17:22 2017\r\n OS/Arch:      linux/amd64\r\n\r\nServer:\r\n Version:      17.06.0-ce\r\n API version:  1.30 (minimum version 1.12)\r\n Go version:   go1.8.3\r\n Git commit:   02c1d87\r\n Built:        Fri Jun 23 21:16:12 2017\r\n OS/Arch:      linux/amd64\r\n Experimental: false\r\n```\r\n\r\n**Output of `docker info`:**\r\n\r\n```\r\nContainers: 2\r\n Running: 2\r\n Paused: 0\r\n Stopped: 0\r\nImages: 392\r\nServer Version: 17.06.0-ce\r\nStorage Driver: overlay\r\n Backing Filesystem: extfs\r\n Supports d_type: true\r\nLogging Driver: json-file\r\nCgroup Driver: cgroupfs\r\nPlugins: \r\n Volume: local\r\n Network: bridge host macvlan null overlay\r\n Log: awslogs fluentd gcplogs gelf journald json-file logentries splunk syslog\r\nSwarm: inactive\r\nRuntimes: runc\r\nDefault Runtime: runc\r\nInit Binary: docker-init\r\ncontainerd version: cfb82a876ecc11b5ca0977d1733adbe58599088a\r\nrunc version: 2d41c047c83e09a6d61d464906feb2a2f3c52aa4\r\ninit version: 949e6fa\r\nSecurity Options:\r\n seccomp\r\n  Profile: default\r\nKernel Version: 4.9.0-3-amd64\r\nOperating System: Debian GNU/Linux 9 (stretch)\r\nOSType: linux\r\nArchitecture: x86_64\r\nCPUs: 8\r\nTotal Memory: 62.36GiB\r\nName: lolzno\r\nID: XCA5:PLPV:KBPE:SY63:O254:RZ3S:4UQS:C73M:KYHC:ASCI:25HL:GOQP\r\nDocker Root Dir: /var/lib/docker\r\nDebug Mode (client): false\r\nDebug Mode (server): false\r\nUsername: lolzno\r\nRegistry: https://index.docker.io/v1/\r\nExperimental: false\r\nInsecure Registries:\r\n 127.0.0.0/8\r\nLive Restore Enabled: true\r\n\r\nWARNING: No swap limit support\r\n```\r\n"},{"labels":["documentation"],"text":"There is a giant link at the top of the README:\r\n\r\n> Docker users, see [Moby and Docker](https://mobyproject.org/#moby-and-docker) to clarify the relationship between the projects\r\n\r\nThe link has a target, `#moby-and-docker`, but that seems to be broken. The landing page doesn't *really* clarify what the differences are, perhaps Moby is some base library to Docker? (But then what is `libcontainerd`? More abstraction?)"},{"labels":[null,"documentation"],"text":"Docker API documentation needs to be updated.\r\n\r\nThe `/plugins` endpoint returns the following response: https://github.com/moby/moby/blob/0ac25dfc751fa4304ab45afd5cd8705c2235d101/api/types/plugin_responses.go#L1\r\n\r\nBased on https://github.com/moby/moby/blob/0ac25dfc751fa4304ab45afd5cd8705c2235d101/api/types/plugin.go#L8-L31\r\n\r\nThe plugin object is quite different from the one documented in the 200 response sample at https://docs.docker.com/engine/api/v1.30/#operation/PluginList\r\n"},{"labels":["documentation",null,null],"text":"**Description**\r\n\r\nThe link of the \"docker run\" clean up command is not correct. The link is \"https://docs.docker.com/engine/reference/run/#clean-up---rm\" and should be \"https://docs.docker.com/engine/reference/run/#clean-up--rm\".\r\n\r\n**Steps to reproduce the issue:**\r\n1. Go to https://docs.docker.com/engine/reference/run/\r\n2. Click the link\r\n3. It doesn't work\r\n4. Check https://docs.docker.com/engine/reference/run/#clean-up--rm\r\n\r\n**Describe the results you received:**\r\nThe link doesn't work\r\n\r\n**Describe the results you expected:**\r\nThe link should work\r\n\r\n**Additional information you deem important (e.g. issue happens only occasionally):**\r\nI notice that if I change the markdown code to have only one \"-\", the link of the markdown is broken.\r\n\r\n**Output of `docker version`:**\r\nIt is the online documentation of 17.06\r\n\r\n**Output of `docker info`:**\r\nIt is the online documentation of 17.06\r\n\r\n**Additional environment details (AWS, VirtualBox, physical, etc.):**\r\nNone"},{"labels":[null,"documentation",null,null],"text":"At the moment, the Dockerfile reference states the following:\r\n\r\n> A Dockerfile must start with a `FROM` instruction.\r\n\r\nHowever, this has since been changed because:\r\n\r\n> FROM instructions support variables that are declared by any ARG instructions that occur before the first FROM.\r\n\r\nThe `docs/reference/builder.md` file should be updated to reflect this change."},{"labels":[null,"documentation",null,null,null],"text":"I've got 2 use cases which stopped working with the latest version of docker. But unfortunately I can't say with which version it started.\r\n\r\nUse Case 1:\r\nI generate a config file for an asp.net page with a custom console application. Therefore I have the key/values for the config file in the parameter:\r\n```\r\nRUN C:\\\\deployment\\\\tool.exe -value \"ConnectionString=\\\"Server=localhost;Database=Test;User Id=sa;Password=password\\\";Title=\\\"Test\\\"\" -dir C:\\inetpub\\wwwroot\\Test\r\n```\r\n\r\nUse Case 2:\r\nI generate also a json file with the tool. Also here I pass the json content as parameter:\r\n```\r\nRUN C:\\\\deployment\\\\tool.exe -value \"{\\\"\"Title\\\"\":\\\"\"Unknown\\\"\",\\\"\"Packages\\\"\":[{\\\"\"Id\\\"\":\\\"\"Test\\\"\",\\\"\"Version\\\"\":\\\"\"*\\\"\",\\\"\"Configuration\\\"\":\\\"\"Release\\\"\"}]}\" -dir C:\\inetpub\\wwwroot\\Test\r\n```\r\n\r\nBoth cases generate now powershell errors. I can't find a way to get it working again."},{"labels":[null,"documentation",null],"text":"<!--\r\nIf you are reporting a new issue, make sure that we do not have any duplicates\r\nalready open. You can ensure this by searching the issue list for this\r\nrepository. If there is a duplicate, please close your issue and add a comment\r\nto the existing issue instead.\r\n\r\nIf you suspect your issue is a bug, please edit your issue description to\r\ninclude the BUG REPORT INFORMATION shown below. If you fail to provide this\r\ninformation within 7 days, we cannot debug your issue and will close it. We\r\nwill, however, reopen it if you later provide the information.\r\n\r\nFor more information about reporting issues, see\r\nhttps://github.com/docker/docker/blob/master/CONTRIBUTING.md#reporting-other-issues\r\n\r\n---------------------------------------------------\r\nGENERAL SUPPORT INFORMATION\r\n---------------------------------------------------\r\n\r\nThe GitHub issue tracker is for bug reports and feature requests.\r\nGeneral support can be found at the following locations:\r\n\r\n- Docker Support Forums - https://forums.docker.com\r\n- IRC - irc.freenode.net #docker channel\r\n- Post a question on StackOverflow, using the Docker tag\r\n\r\n---------------------------------------------------\r\nBUG REPORT INFORMATION\r\n---------------------------------------------------\r\nUse the commands below to provide key information from your environment:\r\nYou do NOT have to include this information if this is a FEATURE REQUEST\r\n-->\r\n\r\n**Description**\r\n\r\nOn querying images list each image list will be having `Containers` property with value -1 regardless of amount of containers using this image.\r\n\r\n**Steps to reproduce the issue:**\r\n1. Run container from the image(for example `docker run -ti ubuntu bash`)\r\n2. Get list of images from the API(`curl --unix-socket /var/run/docker.sock \"http:/v1.30/images/json\"`)\r\n\r\n**Describe the results you received:**\r\n\r\n\"ubuntu\" image has `Containers` property with value -1.\r\n\r\n**Describe the results you expected:**\r\n\r\n`Containers` property with value 1\r\n\r\n**Output of `docker version`:**\r\n\r\n```\r\nClient:\r\n Version:      17.06.0-ce\r\n API version:  1.30\r\n Go version:   go1.8.3\r\n Git commit:   02c1d87\r\n Built:        Fri Jun 23 21:31:53 2017\r\n OS/Arch:      darwin/amd64\r\n\r\nServer:\r\n Version:      17.06.0-ce\r\n API version:  1.30 (minimum version 1.12)\r\n Go version:   go1.8.3\r\n Git commit:   02c1d87\r\n Built:        Fri Jun 23 21:51:55 2017\r\n OS/Arch:      linux/amd64\r\n Experimental: true\r\n```\r\n\r\n**Output of `docker info`:**\r\n\r\n```\r\nContainers: 4\r\n Running: 2\r\n Paused: 0\r\n Stopped: 2\r\nImages: 40\r\nServer Version: 17.06.0-ce\r\nStorage Driver: overlay2\r\n Backing Filesystem: extfs\r\n Supports d_type: true\r\n Native Overlay Diff: true\r\nLogging Driver: json-file\r\nCgroup Driver: cgroupfs\r\nPlugins:\r\n Volume: local\r\n Network: bridge host ipvlan macvlan null overlay\r\n Log: awslogs fluentd gcplogs gelf journald json-file logentries splunk syslog\r\nSwarm: inactive\r\nRuntimes: runc\r\nDefault Runtime: runc\r\nInit Binary: docker-init\r\ncontainerd version: cfb82a876ecc11b5ca0977d1733adbe58599088a\r\nrunc version: 2d41c047c83e09a6d61d464906feb2a2f3c52aa4\r\ninit version: 949e6fa\r\nSecurity Options:\r\n seccomp\r\n  Profile: default\r\nKernel Version: 4.9.31-moby\r\nOperating System: Alpine Linux v3.5\r\nOSType: linux\r\nArchitecture: x86_64\r\nCPUs: 2\r\nTotal Memory: 1.952GiB\r\nName: moby\r\nID: QN2D:44BC:EQ5U:GCN2:Z2XT:DSNU:GGTI:FNKB:MHAJ:3I7E:ASHB:RJTT\r\nDocker Root Dir: /var/lib/docker\r\nDebug Mode (client): false\r\nDebug Mode (server): true\r\n File Descriptors: 34\r\n Goroutines: 48\r\n System Time: 2017-07-07T10:18:20.598658487Z\r\n EventsListeners: 1\r\nNo Proxy: *.local, 169.254/16\r\nRegistry: https://index.docker.io/v1/\r\nExperimental: true\r\nInsecure Registries:\r\n jenkin-registry.gsintlab.com\r\n 127.0.0.0/8\r\nLive Restore Enabled: false\r\n```\r\n"},{"labels":["documentation",null],"text":"<!--\r\nIf you are reporting a new issue, make sure that we do not have any duplicates\r\nalready open. You can ensure this by searching the issue list for this\r\nrepository. If there is a duplicate, please close your issue and add a comment\r\nto the existing issue instead.\r\n\r\nIf you suspect your issue is a bug, please edit your issue description to\r\ninclude the BUG REPORT INFORMATION shown below. If you fail to provide this\r\ninformation within 7 days, we cannot debug your issue and will close it. We\r\nwill, however, reopen it if you later provide the information.\r\n\r\nFor more information about reporting issues, see\r\nhttps://github.com/docker/docker/blob/master/CONTRIBUTING.md#reporting-other-issues\r\n\r\n---------------------------------------------------\r\nGENERAL SUPPORT INFORMATION\r\n---------------------------------------------------\r\n\r\nThe GitHub issue tracker is for bug reports and feature requests.\r\nGeneral support can be found at the following locations:\r\n\r\n- Docker Support Forums - https://forums.docker.com\r\n- IRC - irc.freenode.net #docker channel\r\n- Post a question on StackOverflow, using the Docker tag\r\n\r\n---------------------------------------------------\r\nBUG REPORT INFORMATION\r\n---------------------------------------------------\r\nUse the commands below to provide key information from your environment:\r\nYou do NOT have to include this information if this is a FEATURE REQUEST\r\n-->\r\n\r\n**Description**\r\n\r\n<!--\r\nBriefly describe the problem you are having in a few paragraphs.\r\n-->\r\n\r\nSince docker `17.06.0-ce` have been released. How to upgrade swarm mode cluster' docker engine? Upgrade starting from worker or manager? And how to ensure the cluster `raft` store state."},{"labels":[null,"documentation"],"text":"**Description**\r\n\r\nLooking at the [Docker Engine API docs](https://docs.docker.com/engine/api/v1.26/#operation/ContainerCreate) (scroll down and expand HostConfig, then scroll down to find the Binds documentation), I don't see anything related to the SELinux Context, which is mentioned in the docker documentation [here](https://docs.docker.com/engine/tutorials/dockervolumes/#volume-labels).\r\n\r\nHowever, it seems that the `:Z` or `:z` which are SELinux flags are accepted as I'm able to pass them (See reproduction of the issue).\r\n\r\n\r\n**Steps to reproduce the issue:**\r\n\r\nIf you have vagrant : \r\n1. create a `Vagrantfile` containing \r\n\r\n```\r\n# -*- mode: ruby -*-\r\n# vi: set ft=ruby :\r\n\r\nVagrant.configure(\"2\") do |config|\r\n  config.vm.box = \"fedora/25-cloud-base\"\r\n\r\n  config.vm.provision \"shell\", inline: <<-SHELL\r\n    set -eux\r\n\r\n    # prepare the system and install dependencies\r\n    dnf install -q -y docker\r\n    systemctl start docker\r\n    docker pull alpine:latest\r\n    \r\n    # Sanity check, to make sure unwanted argument do not pass\r\n    curl -s --unix-socket /var/run/docker.sock -H \"Content-Type: application/json\" \\\r\n    -d '{\"Image\": \"alpine\", \"Binds\": [\"/vagrant/Vagrantfile:/Vagrantfile:a\"]}' \\\r\n    -X POST http:/v1.24/containers/create\r\n\r\n    curl -s --unix-socket /var/run/docker.sock -H \"Content-Type: application/json\" \\\r\n    -d '{\"Image\": \"alpine\", \"Binds\": [\"/vagrant/Vagrantfile:/Vagrantfile:Z\"]}' \\\r\n    -X POST http:/v1.24/containers/create\r\n  SHELL\r\nend\r\n```\r\n2. run `vagrant up` in the same directory\r\n\r\nIf you don't use vagrant, make sure you have docker installed and run the two curl commands manually.\r\n\r\n**Describe the results you received:**\r\n\r\nThe first curl command failed which is normal, the api shouldn't accept invalid specifications, but the second succeeds, which is also normal as it is SELinux related. However, it is not specified in the documentation.\r\n\r\nI will work on a fix in the documentation as soon as possible. However, I have a question about it, should we add a link to the [documentation](https://docs.docker.com/engine/tutorials/dockervolumes/#volume-labels) for reference or should we just specify more examples ?\r\n\r\nThank you."},{"labels":["documentation",null],"text":"<!--\r\nIf you are reporting a new issue, make sure that we do not have any duplicates\r\nalready open. You can ensure this by searching the issue list for this\r\nrepository. If there is a duplicate, please close your issue and add a comment\r\nto the existing issue instead.\r\n\r\nIf you suspect your issue is a bug, please edit your issue description to\r\ninclude the BUG REPORT INFORMATION shown below. If you fail to provide this\r\ninformation within 7 days, we cannot debug your issue and will close it. We\r\nwill, however, reopen it if you later provide the information.\r\n\r\nFor more information about reporting issues, see\r\nhttps://github.com/docker/docker/blob/master/CONTRIBUTING.md#reporting-other-issues\r\n\r\n---------------------------------------------------\r\nGENERAL SUPPORT INFORMATION\r\n---------------------------------------------------\r\n\r\nThe GitHub issue tracker is for bug reports and feature requests.\r\nGeneral support can be found at the following locations:\r\n\r\n- Docker Support Forums - https://forums.docker.com\r\n- IRC - irc.freenode.net #docker channel\r\n- Post a question on StackOverflow, using the Docker tag\r\n\r\n---------------------------------------------------\r\nBUG REPORT INFORMATION\r\n---------------------------------------------------\r\nUse the commands below to provide key information from your environment:\r\nYou do NOT have to include this information if this is a FEATURE REQUEST\r\n-->\r\n\r\nThe `docker stack ps --filter` option should be \"desired-state\" and not \"desired-stat\" as in documentation.\r\nhttps://docs.docker.com/engine/reference/commandline/stack_ps/#extended-description\r\n\r\n<!--\r\nBriefly describe the problem you are having in a few paragraphs.\r\n-->\r\n\r\n**Steps to reproduce the issue:**\r\n1.Create a Swarm mode\r\n2.Create a Stack\r\n3.List stack containers with `docker stack ps --filter desired-stat=running`\r\n\r\n`desired-stat` is not a filter\r\n\r\n\r\nA list of running containers in the stack.\r\n\r\n\r\n**Additional information you deem important (e.g. issue happens only occasionally):**\r\nA documentation bug. \r\n\r\nDocker 17.03\r\n\r\n\r\n\r\n**Output of `docker info`:**\r\n\r\nNot relevant as the bug is in the documentation. \r\n\r\n**Additional environment details (AWS, VirtualBox, physical, etc.):**\r\nDocker for AWS Stable used to create Swarm.\r\n"},{"labels":["documentation"],"text":"From the release notes of v17.06.0-ce-rc2\r\n\r\n> Placement now also take platform in account moby/moby#33144\r\n\r\nWhile the PR that introduced the feature also updated the API docs, it didn't update the [user docs for service create](https://github.com/moby/moby/blob/master/docs/reference/commandline/service_create.md#specify-service-constraints---constraint), that also mention the placement constraints.\r\n\r\nI also noticed that the documentation here https://github.com/docker/swarmkit/#features talks about placement constrains, and mentions `node.ip` as another supported constraint. I'm not sure this made it to 17.06 yet, but if it did, we also need to update the user docs page with that.\r\n\r\n/ping @nishanttotla since he was the one who introduced #33144\r\nand @mstanleyjones for visibility\r\n\r\n---\r\n\r\nIf you're triaging this issue and are thinking if this issue should be filed against docker/docker.github.io instead, keep in mind that docker/docker.github.io will fetches https://github.com/moby/moby/blob/master/docs/reference/ to build the user-facing docs, so this issue needs to be addressed on this repo."},{"labels":[null,"documentation"],"text":"As seen there: https://github.com/moby/moby/blob/df4ca50805baa1d1488d811e82125f607c8daa09/integration-cli/docker_api_swarm_service_test.go#L63,\r\nthere is an `insertDefaults` query parameter not stated in the docs."},{"labels":["documentation"],"text":"The API docs reference ServiceSpec in the Secret definition:\r\n```\r\nSecret{\r\nID:\tstring\r\nVersion:\tObjectVersion{...}\r\nCreatedAt:\tstring ($dateTime)\r\nUpdatedAt:\tstring ($dateTime)\r\nSpec:\tServiceSpec{...}\r\n}\r\n```"},{"labels":["documentation"],"text":"**Description**\r\n\r\nDocker and Docker-Compose documentations do not make clear what are the valid values of ulimit options for Docker.\r\n\r\n**Steps to reproduce the issue:**\r\n1. Read Docker documentation\r\n2. Struggle to find correct option names. \r\n\r\n\r\n**Describe the results you received:**\r\n\r\nGoogle finds just a few places where possible options are listed - https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_Ulimit.html \r\nLooking on code - turns out it is incomplete and [any valid `setrlimit` option](https://linux.die.net/man/2/setrlimit) can be passed into `ulimits`\r\n\r\n**Describe the results you expected:**\r\n\r\nList of possible options or reference to example (setting list of file descriptiors, max memory, max cpu usage, etc)"},{"labels":["documentation",null],"text":"**Description**\r\n\r\nin `moby/container/state.go` we have a struct that handles containers state, it looks like this : \r\n``` go\r\ntype State struct {\r\n\tsync.Mutex\r\n\t// FIXME: Why do we have both paused and running if a\r\n\t// container cannot be paused and running at the same time?\r\n\tRunning           bool\r\n\tPaused            bool\r\n\tRestarting        bool\r\n\tOOMKilled         bool\r\n\tRemovalInProgress bool // Not need for this to be persistent on disk.\r\n\tDead              bool\r\n\tPid               int\r\n\tExitCodeValue     int    `json:\"ExitCode\"`\r\n\tErrorMsg          string `json:\"Error\"` // contains last known error when starting the container\r\n\tStartedAt         time.Time\r\n\tFinishedAt        time.Time\r\n\tHealth            *Health\r\n\r\n\twaitStop   chan struct{}\r\n\twaitRemove chan struct{}\r\n}\r\n```\r\nthis is a bit misleading as we need to always update the two bools in order to avoid any inconsistant behaviour.\r\nthe state is embed in : \r\n```go\r\ntype CommonContainer struct {\r\n\tStreamConfig *stream.Config\r\n\t// embed for Container to support states directly.\r\n\t*State          `json:\"State\"` // Needed for Engine API version <= 1.11\r\n          .....\r\n     }\r\n```\r\nas states the comments to ensure compatibility with versions <= 1.11, i think we can refactor without breaking much of it."},{"labels":[null,"documentation",null],"text":"<!--\r\nIf you are reporting a new issue, make sure that we do not have any duplicates\r\nalready open. You can ensure this by searching the issue list for this\r\nrepository. If there is a duplicate, please close your issue and add a comment\r\nto the existing issue instead.\r\n\r\nIf you suspect your issue is a bug, please edit your issue description to\r\ninclude the BUG REPORT INFORMATION shown below. If you fail to provide this\r\ninformation within 7 days, we cannot debug your issue and will close it. We\r\nwill, however, reopen it if you later provide the information.\r\n\r\nFor more information about reporting issues, see\r\nhttps://github.com/docker/docker/blob/master/CONTRIBUTING.md#reporting-other-issues\r\n\r\n---------------------------------------------------\r\nGENERAL SUPPORT INFORMATION\r\n---------------------------------------------------\r\n\r\nThe GitHub issue tracker is for bug reports and feature requests.\r\nGeneral support can be found at the following locations:\r\n\r\n- Docker Support Forums - https://forums.docker.com\r\n- IRC - irc.freenode.net #docker channel\r\n- Post a question on StackOverflow, using the Docker tag\r\n\r\n---------------------------------------------------\r\nBUG REPORT INFORMATION\r\n---------------------------------------------------\r\nUse the commands below to provide key information from your environment:\r\nYou do NOT have to include this information if this is a FEATURE REQUEST\r\n-->\r\n\r\n**Description**\r\nThe current `swagger.yaml` file on the master branch, when rendered, causes some fields to not render, and the page then hangs.\r\n\r\n<!--\r\nBriefly describe the problem you are having in a few paragraphs.\r\n-->\r\n\r\n**Steps to reproduce the issue:**\r\n1. `make swagger-docs`\r\n2. Go to `localhost:9000` in your browser\r\n3. Go to `/services/create`, click on `TaskTemplate`\r\n4. Try clicking anywhere else on the page\r\n\r\n**Describe the results you received:**\r\nThe page hangs\r\n\r\n**Describe the results you expected:**\r\nThe page shouldn't hang, and it should be possible to continue viewing fields."},{"labels":[null,"documentation"],"text":"feature added in https://github.com/moby/moby/pull/32496"},{"labels":[null,"documentation"],"text":"### Documentation Problem Description\r\n\r\nPer @gdevillele , the API reference topic [Delete unused volumes](https://docs.docker.com/engine/api/v1.28/#operation/VolumePrune) mentions a `filters` query parameter, but doesn’t mention any supported argument (because there isn’t any). This doesn’t make sense, we should not mention this “filters” parameter.\r\n\r\n### Where Found\r\n\r\n[Delete unused volumes](https://docs.docker.com/engine/api/v1.28/#operation/VolumePrune) in the API reference docs. \r\n\r\n### About the docs\r\n\r\nCurrently, the  API docs source lives here in the `moby/moby` codebase, not in the docs repository https://github.com/docker/docker.github.io. \r\n\r\n@thaJeztah need guidance on how we will deal with the relationship between `moby/moby` and the docs repository going forward. I don't have permissions to assign issues, but I suggest assigning to @mstanleyjones ?\r\n\r\n### Reviewers\r\n\r\n@gdevillele @johndmulhausen @thaJeztah \r\n\r\n"},{"labels":[null,"documentation",null,null],"text":"Hello,\r\n\r\ni have an error using this page (click into \"Labels\" menù):\r\n\r\nhttps://docs.docker.com/engine/api/v1.28/#operation/ServiceCreate\r\n\r\nJS Console stacktrace:\r\n\r\nError: Can't load component schema at /paths/~1services~1create/post/parameters/0/schema/properties/Labels\r\n    at d (redoc.1.11.0.min.js:43)\r\n    at e.init (redoc.1.11.0.min.js:17)\r\n    at e.t.preinit (redoc.1.11.0.min.js:9)\r\n    at e.preinit (redoc.1.11.0.min.js:9)\r\n    at e.ngOnInit (redoc.1.11.0.min.js:17)\r\n    at t.ngDoCheck (redoc.1.11.0.min.js:15)\r\n    at e.detectChangesInternal (redoc.1.11.0.min.js:15)\r\n    at e.t.detectChanges (redoc.1.11.0.min.js:7)\r\n    at t.detectChangesInNestedViews (redoc.1.11.0.min.js:7)\r\n    at e.detectChangesInternal (redoc.1.11.0.min.js:16)\r\n    at e.t.detectChanges (redoc.1.11.0.min.js:7)\r\n    at t.detectChangesInNestedViews (redoc.1.11.0.min.js:7)\r\n    at e.detectChangesInternal (redoc.1.11.0.min.js:16)\r\n    at e.t.detectChanges (redoc.1.11.0.min.js:7)\r\n    at t.detectChangesInNestedViews (redoc.1.11.0.min.js:7)"},{"labels":[null,"documentation",null],"text":"<!--\r\nIf you are reporting a new issue, make sure that we do not have any duplicates\r\nalready open. You can ensure this by searching the issue list for this\r\nrepository. If there is a duplicate, please close your issue and add a comment\r\nto the existing issue instead.\r\n\r\nIf you suspect your issue is a bug, please edit your issue description to\r\ninclude the BUG REPORT INFORMATION shown below. If you fail to provide this\r\ninformation within 7 days, we cannot debug your issue and will close it. We\r\nwill, however, reopen it if you later provide the information.\r\n\r\nFor more information about reporting issues, see\r\nhttps://github.com/docker/docker/blob/master/CONTRIBUTING.md#reporting-other-issues\r\n\r\n---------------------------------------------------\r\nGENERAL SUPPORT INFORMATION\r\n---------------------------------------------------\r\n\r\nThe GitHub issue tracker is for bug reports and feature requests.\r\nGeneral support can be found at the following locations:\r\n\r\n- Docker Support Forums - https://forums.docker.com\r\n- IRC - irc.freenode.net #docker channel\r\n- Post a question on StackOverflow, using the Docker tag\r\n\r\n---------------------------------------------------\r\nBUG REPORT INFORMATION\r\n---------------------------------------------------\r\nUse the commands below to provide key information from your environment:\r\nYou do NOT have to include this information if this is a FEATURE REQUEST\r\n-->\r\n\r\n**Description**\r\nThe http endpoint `GET /networks` always returns an empty containers list. If requesting a single network, with `GET /networks/<network>` the containers are shown. \r\n<!--\r\nBriefly describe the problem you are having in a few paragraphs.\r\n-->\r\n\r\n**Steps to reproduce the issue:**\r\n1. Run `curl --unix-socket /var/run/docker.sock http:/v1.28/networks`\r\n\r\n**Describe the results you received:**\r\nReturns the following output: https://gist.github.com/Grisu118/1a15ea9a2abb6b04f45eb911a2f1c7f7#file-networks-json\r\n\r\n**Describe the results you expected:**\r\nI expect the output contains a container list like the /networks/development request:\r\nhttps://gist.github.com/Grisu118/1a15ea9a2abb6b04f45eb911a2f1c7f7#file-networks_development-json\r\n\r\n**Additional information you deem important (e.g. issue happens only occasionally):**\r\nWorked in 13.x (don't know the exact version which was running before reboot)\r\n\r\n**Output of `docker version`:**\r\n\r\n```\r\nClient:\r\n Version:      17.04.0-ce\r\n API version:  1.28\r\n Go version:   go1.7.3\r\n Git commit:   4845c56\r\n Built:        Wed Apr 12 22:57:26 2017\r\n OS/Arch:      linux/amd64\r\n\r\nServer:\r\n Version:      17.04.0-ce\r\n API version:  1.28 (minimum version 1.12)\r\n Go version:   go1.7.3\r\n Git commit:   4845c56\r\n Built:        Wed Apr 12 22:57:26 2017\r\n OS/Arch:      linux/amd64\r\n Experimental: false\r\n```\r\n\r\n**Output of `docker info`:**\r\n\r\n```\r\nContainers: 28\r\n Running: 25\r\n Paused: 0\r\n Stopped: 3\r\nImages: 37\r\nServer Version: 17.04.0-ce\r\nStorage Driver: overlay\r\n Backing Filesystem: extfs\r\n Supports d_type: true\r\nLogging Driver: json-file\r\nCgroup Driver: cgroupfs\r\nPlugins:\r\n Volume: local\r\n Network: bridge host macvlan null overlay\r\nSwarm: inactive\r\nRuntimes: runc\r\nDefault Runtime: runc\r\nInit Binary:\r\ncontainerd version: 422e31ce907fd9c3833a38d7b8fdd023e5a76e73\r\nrunc version: 9c2d8d184e5da67c95d601382adf14862e4f2228\r\ninit version: N/A (expected: 949e6facb77383876aeff8a6944dde66b3089574)\r\nSecurity Options:\r\n seccomp\r\n  Profile: default\r\nKernel Version: 4.10.9-coreos\r\nOperating System: Container Linux by CoreOS 1381.0.0 (Ladybug)\r\nOSType: linux\r\nArchitecture: x86_64\r\nCPUs: 4\r\nTotal Memory: 15.68GiB\r\nName: test01\r\nID: NDXW:B2RO:4U2N:CQRG:P7QK:DT53:DNTE:GH3A:N7IZ:2MSK:HHXC:MRTU\r\nDocker Root Dir: /var/lib/docker\r\nDebug Mode (client): false\r\nDebug Mode (server): false\r\nRegistry: https://index.docker.io/v1/\r\nExperimental: false\r\nInsecure Registries:\r\n 127.0.0.0/8\r\nLive Restore Enabled: false\r\n\r\nWARNING: bridge-nf-call-iptables is disabled\r\nWARNING: bridge-nf-call-ip6tables is disabled\r\n```\r\n"},{"labels":["documentation",null,null],"text":"**Steps to reproduce the issue:**\r\n1. Create next Dockerfile in \"test\" directory:\r\n\r\n   FROM debian\r\n   CMD echo \"test\"\r\n\r\n2. Go to \"test\" directory and execute next command (build image): \"docker build -t test:latest .\"\r\n3. Create docker stack file with name \"docker-cloud.yml\":\r\n\r\n   version: \"3\"\r\n   services:\r\n    test:\r\n       image: test:latest\r\n\r\n4. Execute next command: \"docker stack deploy -c docker-cloud.yml services\"\r\n5. Wait several seconds and execute \"docker ps -a\".\r\n\r\n**Expected**:\r\nOne exited container \"test:latest\" because default restart option value is \"no\" according [documentation](https://docs.docker.com/docker-cloud/apps/stack-yaml-reference/#restart).\r\n\r\n**Actual**:\r\nSeveral exited containers with \"test:latest\" tag.\r\n\r\n**Docker version**:\r\nClient:\r\n Version:      17.03.0-ce\r\n API version:  1.26\r\n Go version:   go1.7.5\r\n Git commit:   60ccb22\r\n Built:        Thu Feb 23 10:54:03 2017\r\n OS/Arch:      linux/amd64\r\n\r\nServer:\r\n Version:      17.03.0-ce\r\n API version:  1.26 (minimum version 1.12)\r\n Go version:   go1.7.5\r\n Git commit:   60ccb22\r\n Built:        Thu Feb 23 10:54:03 2017\r\n OS/Arch:      linux/amd64\r\n Experimental: false`\r\n\r\n**Docker info**:\r\nContainers: 5\r\n Running: 5\r\n Paused: 0\r\n Stopped: 0\r\nImages: 16\r\nServer Version: 17.03.0-ce\r\nStorage Driver: overlay\r\n Backing Filesystem: extfs\r\n Supports d_type: true\r\nLogging Driver: json-file\r\nCgroup Driver: cgroupfs\r\nPlugins:\r\n Volume: local\r\n Network: bridge host macvlan null overlay\r\nSwarm: active\r\n NodeID: 06qm3mlo2dtnnrt0lebbfqkiz\r\n Is Manager: true\r\n ClusterID: yonkvlxzljjjztpxzcuc3fnrn\r\n Managers: 1\r\n Nodes: 1\r\n Orchestration:\r\n  Task History Retention Limit: 5\r\n Raft:\r\n  Snapshot Interval: 10000\r\n  Number of Old Snapshots to Retain: 0\r\n  Heartbeat Tick: 1\r\n  Election Tick: 3\r\n Dispatcher:\r\n  Heartbeat Period: 5 seconds\r\n CA Configuration:\r\n  Expiry Duration: 3 months\r\n Node Address: ...\r\n Manager Addresses:\r\nRuntimes: runc\r\nDefault Runtime: runc\r\nInit Binary: docker-init\r\ncontainerd version: 977c511eda0925a723debdc94d09459af49d082a\r\nrunc version: a01dafd48bc1c7cc12bdb01206f9fea7dd6feb70\r\ninit version: 949e6fa\r\nSecurity Options:\r\n seccomp\r\n  Profile: default\r\nKernel Version: 3.10.0-514.10.2.el7.x86_64\r\nOperating System: CentOS Linux 7 (Core)\r\nOSType: linux\r\nArchitecture: x86_64\r\nCPUs: 2\r\nTotal Memory: 3.695 GiB\r\nName: q4de3csye47\r\nID: 2FXY:XP3H:UWFL:3R7U:CF5H:THXJ:XC5K:SZTS:U4LV:AY7D:3JNV:FOJF\r\nDocker Root Dir: /docker\r\nDebug Mode (client): false\r\nDebug Mode (server): false\r\nHttp Proxy: ...\r\nHttps Proxy: ...\r\nNo Proxy: ...\r\nRegistry: https://index.docker.io/v1/\r\nExperimental: false\r\nInsecure Registries:\r\n ...\r\n 127.0.0.0/8\r\nLive Restore Enabled: false\r\n"},{"labels":["documentation",null],"text":"Hi!\r\n\r\nI wonder where I can find a PDF or other version of the current Docker documentation. I was unable to find it via Google and the official docs page. Probably I'm overlooking sth.?\r\n\r\nThanks for your help!"},{"labels":["documentation",null,null],"text":"Currently the plugin docs have a \"legacy\" doc which explains both the v1 discovery model as well as the RPC protocol for activation.\r\nThe v2 plugin doc doesn't really mention anything about how RPC is handled.\r\n\r\nBasically, getting started with plugins can be pretty confusing. Docs could use some love."},{"labels":["documentation",null,null],"text":"Consciously referring to Issue #29617, now Closed.\r\n\r\nThere *is* (in my humble opinion) an issue here.\r\n\r\nIt is a documentation issue.\r\n\r\nFollowing https://docs.docker.com/engine/getstarted/step_one/#step-3-verify-your-installation, at Step 3, sub-step 2, the command provided is\r\n\r\ndocker run hello-world\r\n\r\nNothing there indicates that there might be anything platform/architecture dependent.\r\n\r\nThis is in Verify your Installation. It is therefore likely to be followed verbatim by relatively uninformed potential users who might reasonably assume that a basic test should Just Work.\r\n\r\nIn fact the result is this:\r\npi@rpi2b ~ $ docker run hello-world\r\nstandard_init_linux.go:178: exec user process caused \"exec format error\"\r\n\r\nThe resulting error message is not handled in the linked 'Troubleshooting' section of the tutorial.\r\n\r\nThe workaround is\r\npi@rpi2b ~ $ docker run armhf/hello-world\r\n\r\nHello from Docker on armhf!\r\nThis message shows that your installation appears to be working correctly.\r\n\r\n\r\n\r\n"},{"labels":["documentation",null],"text":"<!--\r\nIf you are reporting a new issue, make sure that we do not have any duplicates\r\nalready open. You can ensure this by searching the issue list for this\r\nrepository. If there is a duplicate, please close your issue and add a comment\r\nto the existing issue instead.\r\n\r\nIf you suspect your issue is a bug, please edit your issue description to\r\ninclude the BUG REPORT INFORMATION shown below. If you fail to provide this\r\ninformation within 7 days, we cannot debug your issue and will close it. We\r\nwill, however, reopen it if you later provide the information.\r\n\r\nFor more information about reporting issues, see\r\nhttps://github.com/docker/docker/blob/master/CONTRIBUTING.md#reporting-other-issues\r\n\r\n---------------------------------------------------\r\nGENERAL SUPPORT INFORMATION\r\n---------------------------------------------------\r\n\r\nThe GitHub issue tracker is for bug reports and feature requests.\r\nGeneral support can be found at the following locations:\r\n\r\n- Docker Support Forums - https://forums.docker.com\r\n- IRC - irc.freenode.net #docker channel\r\n- Post a question on StackOverflow, using the Docker tag\r\n\r\n---------------------------------------------------\r\nBUG REPORT INFORMATION\r\n---------------------------------------------------\r\nUse the commands below to provide key information from your environment:\r\nYou do NOT have to include this information if this is a FEATURE REQUEST\r\n-->\r\n\r\n**Description**\r\n\r\nOne link in README.md file in the root directory of docker repository.\r\nIn [the getting the development builds section](https://github.com/docker/docker#getting-the-development-builds) , link \"docs.master.dockerproject.org.\" is dead.\r\n\r\n<!--\r\nBriefly describe the problem you are having in a few paragraphs.\r\n-->\r\n\r\n**Describe the results you received:**\r\nLink is dead\r\n\r\n**Describe the results you expected:**\r\nI think this link should be linked to docs.master.dockerproject main page.\r\n\r\n"},{"labels":["documentation",null,null],"text":"For example, hyperlink for [\"Docker build with --squash argument\"](https://github.com/docker/docker/blob/bd811aa4fde8632197c96ca3a7af039789768107/experimental/docker-build-with-squash.md) is broken: https://github.com/docker/docker/blob/bd811aa4fde8632197c96ca3a7af039789768107/experimental/README.md\r\n\r\n\r\nCan we detect such deadlinks on CI?\r\n"},{"labels":["documentation",null,null,null],"text":"There are several scripts in the [hack folder](https://github.com/docker/docker/tree/master/hack). It definitely deserves a good README 😄 "},{"labels":["documentation",null,null],"text":"When using `docker deploy` with a 3.2 compose version, it fails with \"unsupported Compose file version: 3.2\". I could not find any docs (especially on https://docs.docker.com/compose/compose-file/compose-versioning/#compatibility-matrix) on the required docker version to use the 3.2 compose.\r\n\r\n**Steps to reproduce the issue:**\r\n1. Create a compose file with version 3.2:\r\n```\r\n# compose-v32.yml\r\nversion: '3.2'\r\n  services:\r\n    myservice:\r\n    ...\r\n```\r\n2. Run `docker deploy -c compose-v32.yml mystack\r\n\r\n**Describe the results you received:**\r\nunsupported Compose file version: 3.2\r\n\r\n**Describe the results you expected:**\r\nCreated myservice\r\n\r\n**Output of `docker version`:**\r\n```\r\nClient:\r\nVersion:      17.03.1-ce\r\nAPI version:  1.27\r\nGo version:   go1.7.5\r\nGit commit:   c6d412e\r\nBuilt:        Fri Mar 24 00:00:50 2017\r\nOS/Arch:      linux/amd64\r\n\r\nServer:\r\nVersion:      17.03.1-ce\r\nAPI version:  1.27 (minimum version 1.12)\r\nGo version:   go1.7.5\r\nGit commit:   c6d412e\r\nBuilt:        Fri Mar 24 00:00:50 2017\r\nOS/Arch:      linux/amd64\r\nExperimental: true\r\n```\r\n**Output of `docker info`:**\r\n```\r\nContainers: 5\r\nRunning: 4\r\nPaused: 0\r\nStopped: 1\r\nImages: 6\r\nServer Version: 17.03.1-ce\r\nStorage Driver: overlay2\r\nBacking Filesystem: extfs\r\nSupports d_type: true\r\nNative Overlay Diff: true\r\nLogging Driver: syslog\r\nCgroup Driver: cgroupfs\r\nPlugins:\r\nVolume: local\r\nNetwork: bridge host ipvlan macvlan null overlay\r\nSwarm: active\r\nNodeID: mlc7uzdsvcnxkzi32437xybuv\r\nIs Manager: true\r\nClusterID: 6xjp4en70m49rkgt1u2jzo1fe\r\nManagers: 1\r\nNodes: 2\r\nOrchestration:\r\n Task History Retention Limit: 5\r\nRaft:\r\n Snapshot Interval: 10000\r\n Number of Old Snapshots to Retain: 0\r\n Heartbeat Tick: 1\r\n Election Tick: 3\r\nDispatcher:\r\n Heartbeat Period: 5 seconds\r\nCA Configuration:\r\n Expiry Duration: 3 months\r\nNode Address: 10.99.0.9\r\nManager Addresses:\r\n 10.99.0.9:2377\r\nRuntimes: runc\r\nDefault Runtime: runc\r\nInit Binary: docker-init\r\ncontainerd version: 4ab9917febca54791c5f071a9d1f404867857fcc\r\nrunc version: 54296cf40ad8143b62dbcaa1d90e520a2136ddfe\r\ninit version: N/A (expected: 949e6facb77383876aeff8a6944dde66b3089574)\r\nSecurity Options:\r\nseccomp\r\n Profile: default\r\nKernel Version: 4.9.13-moby\r\nOperating System: Alpine Linux v3.5\r\nOSType: linux\r\nArchitecture: x86_64\r\nCPUs: 1\r\nTotal Memory: 3.354 GiB\r\nName: swarm-manager000000\r\nID: YLGP:ANHJ:ODKD:DZXG:YOG3:XA2Y:VVLK:LZ2M:N2NS:7PCF:STL5:DKVL\r\nDocker Root Dir: /var/lib/docker\r\nDebug Mode (client): false\r\nDebug Mode (server): true\r\nFile Descriptors: 276\r\nGoroutines: 372\r\nSystem Time: 2017-04-04T14:33:05.635698193Z\r\nEventsListeners: 0\r\nRegistry: https://index.docker.io/v1/\r\nExperimental: true\r\nInsecure Registries:\r\n127.0.0.0/8\r\nLive Restore Enabled: false\r\n```\r\n**Additional environment details (AWS, VirtualBox, physical, etc.):**\r\nSwarm Mode running on Azure Container Services."},{"labels":[null,"documentation",null],"text":"<!--\r\nIf you are reporting a new issue, make sure that we do not have any duplicates\r\nalready open. You can ensure this by searching the issue list for this\r\nrepository. If there is a duplicate, please close your issue and add a comment\r\nto the existing issue instead.\r\n\r\nIf you suspect your issue is a bug, please edit your issue description to\r\ninclude the BUG REPORT INFORMATION shown below. If you fail to provide this\r\ninformation within 7 days, we cannot debug your issue and will close it. We\r\nwill, however, reopen it if you later provide the information.\r\n\r\nFor more information about reporting issues, see\r\nhttps://github.com/docker/docker/blob/master/CONTRIBUTING.md#reporting-other-issues\r\n\r\n---------------------------------------------------\r\nGENERAL SUPPORT INFORMATION\r\n---------------------------------------------------\r\n\r\nThe GitHub issue tracker is for bug reports and feature requests.\r\nGeneral support can be found at the following locations:\r\n\r\n- Docker Support Forums - https://forums.docker.com\r\n- IRC - irc.freenode.net #docker channel\r\n- Post a question on StackOverflow, using the Docker tag\r\n\r\n---------------------------------------------------\r\nBUG REPORT INFORMATION\r\n---------------------------------------------------\r\nUse the commands below to provide key information from your environment:\r\nYou do NOT have to include this information if this is a FEATURE REQUEST\r\n-->\r\n\r\n**Description**\r\n\r\nLinks property always is null, even whether the container has links.\r\n\r\n**Steps to reproduce the issue:**\r\n1. `docker run --net=dore-network -d --name node1 busybox tail -f /dev/null`\r\n2. `docker run --net=dore-network --link node1 -d --name node2 busybox tail -f /dev/null`\r\n3. `docker inspect node2`\r\n4. `curl --unix-socket /var/run/docker.sock http:/v1.26/containers/json | grep Links`\r\n\r\n**Describe the results you received:**\r\n\r\ninspect command:\r\n\r\n```\r\n...\r\n\"Networks\": {\r\n  \"dore-network\": {\r\n    ....\r\n    \"Links\": [\r\n      \"node1\"\r\n    ],\r\n    ...\r\n    }\r\n  }\r\n....\r\n```\r\n\r\nwith cURL command:\r\n\r\n```\r\n[{\"Id\":\"a43c96d41cacad628b5a51860650aa123c25416e16c563790a8eb76001d1b86f\",\"Names\":[\"/node2\"],\"Image\":\"busybox\",\"ImageID\":\"sha256:00f017a8c2a6e1fe2ffd05c281f27d069d2a99323a8cd514dd35f228ba26d2ff\",\"Command\":\"tail -f /dev/null\",\"Created\":1491275358,\"Ports\":[],\"Labels\":{},\"State\":\"running\",\"Status\":\"Up About a minute\",\"HostConfig\":{\"NetworkMode\":\"dore-network\"},\"NetworkSettings\":{\"Networks\":{\"dore-network\":{\"IPAMConfig\":null,\"Links\":null,\"Aliases\":null,\"NetworkID\":\"0c312941cff131e01bc038a9e7d196a0faf77c03ed38c365715755dc3c61b2ae\",\"EndpointID\":\"62df24f75be4a2b47eba58802c76417dc4cc6bb0a8b07c5908e2269e6bc0aa8a\",\"Gateway\":\"172.18.0.1\",\"IPAddress\":\"172.18.0.3\",\"IPPrefixLen\":16,\"IPv6Gateway\":\"\",\"GlobalIPv6Address\":\"\",\"GlobalIPv6PrefixLen\":0,\"MacAddress\":\"02:42:ac:12:00:03\"}}},\"Mounts\":[]},{\"Id\":\"3640df7f388ee551cb00b8c9040cca240e89891b2f11235943567e533b1f013e\",\"Names\":[\"/node1\"],\"Image\":\"busybox\",\"ImageID\":\"sha256:00f017a8c2a6e1fe2ffd05c281f27d069d2a99323a8cd514dd35f228ba26d2ff\",\"Command\":\"tail -f /dev/null\",\"Created\":1491275350,\"Ports\":[],\"Labels\":{},\"State\":\"running\",\"Status\":\"Up About a minute\",\"HostConfig\":{\"NetworkMode\":\"dore-network\"},\"NetworkSettings\":{\"Networks\":{\"dore-network\":{\"IPAMConfig\":null,\"Links\":null,\"Aliases\":null,\"NetworkID\":\"0c312941cff131e01bc038a9e7d196a0faf77c03ed38c365715755dc3c61b2ae\",\"EndpointID\":\"164c2b50d545660089b0eacb98a90e7334ebdbeca7cc16ce4448d283e644b076\",\"Gateway\":\"172.18.0.1\",\"IPAddress\":\"172.18.0.2\",\"IPPrefixLen\":16,\"IPv6Gateway\":\"\",\"GlobalIPv6Address\":\"\",\"GlobalIPv6PrefixLen\":0,\"MacAddress\":\"02:42:ac:12:00:02\"}}},\"Mounts\":[]}]\r\n```\r\n\r\n**Describe the results you expected:**\r\n\r\nInspect and Curl must be consistent. Curl response should have the Links information.\r\n\r\n**Output of `docker version`:**\r\n\r\n```\r\nClient:\r\n Version:      1.13.1\r\n API version:  1.26\r\n Go version:   go1.7.5\r\n Git commit:   092cba3\r\n Built:        Wed Feb  8 06:50:14 2017\r\n OS/Arch:      linux/amd64\r\n\r\nServer:\r\n Version:      1.13.1\r\n API version:  1.26 (minimum version 1.12)\r\n Go version:   go1.7.5\r\n Git commit:   092cba3\r\n Built:        Wed Feb  8 06:50:14 2017\r\n OS/Arch:      linux/amd64\r\n Experimental: false\r\n```\r\n\r\n**Output of `docker info`:**\r\n\r\n```\r\nContainers: 2\r\n Running: 2\r\n Paused: 0\r\n Stopped: 0\r\nImages: 33\r\nServer Version: 1.13.1\r\nStorage Driver: aufs\r\n Root Dir: /var/lib/docker/aufs\r\n Backing Filesystem: extfs\r\n Dirs: 171\r\n Dirperm1 Supported: true\r\nLogging Driver: json-file\r\nCgroup Driver: cgroupfs\r\nPlugins: \r\n Volume: local\r\n Network: bridge host macvlan null overlay\r\nSwarm: inactive\r\nRuntimes: runc\r\nDefault Runtime: runc\r\nInit Binary: docker-init\r\ncontainerd version: aa8187dbd3b7ad67d8e5e3a15115d3eef43a7ed1\r\nrunc version: 9df8b306d01f59d3a8029be411de015b7304dd8f\r\ninit version: 949e6fa\r\nSecurity Options:\r\n apparmor\r\n seccomp\r\n  Profile: default\r\nKernel Version: 4.4.0-71-generic\r\nOperating System: Ubuntu 16.04.2 LTS\r\nOSType: linux\r\nArchitecture: x86_64\r\nCPUs: 4\r\nTotal Memory: 7.75 GiB\r\nName: my name\r\nID: Y4B7:ICGF:AXJG:HHJT:6LUD:W3IA:FUAY:TZNX:LYXF:U3V3:VI2R:5UF6\r\nDocker Root Dir: /var/lib/docker\r\nDebug Mode (client): false\r\nDebug Mode (server): false\r\nRegistry: https://index.docker.io/v1/\r\nWARNING: No swap limit support\r\nExperimental: false\r\nInsecure Registries:\r\n 127.0.0.0/8\r\nLive Restore Enabled: false\r\n```\r\n"},{"labels":[null,"documentation",null,null],"text":"---------------------------------------------------\r\nBUG REPORT INFORMATION\r\n---------------------------------------------------\r\n**Description**\r\nUsing the `--since` and `--tail` flags with the command line tool, or the `since` or `tail` parameters via the API, does not yield expected results.\r\n\r\n**Steps to reproduce the issue:**\r\nThe following is true for either the cli or the API, but I'll describe it for the cli to keep things simple:\r\n\r\n1. Run `docker service logs --tail 1 [SERVICE]` or `docker service logs [1491249483 || 1m10s etc.] [SERVICE]`\r\n\r\n**Describe the results you received:**\r\nMany lines returned, and in the case of failing services which are retrying every n seconds, this is _thousands_ of lines.\r\n\r\n**Describe the results you expected:**\r\nWith `--tail 1`, only 1 line returned. With `--since [TIMESTAMP]` only lines returned since that timestamp.\r\n\r\n**Additional information you deem important (e.g. issue happens only occasionally):**\r\nIt seems that the extra lines are the result of grabbing logs from all service tasks, though I could be wrong.\r\n\r\nQuerying the individual containers created by the `docker service` command, the `--tail` and `--since` options work as expected.\r\n\r\n**Output of `docker version`:**\r\n\r\nOutput is from my Mac, but the same thing happens for the same version on Linux:\r\n```\r\nClient:\r\n Version:      17.03.1-ce\r\n API version:  1.27\r\n Go version:   go1.7.5\r\n Git commit:   c6d412e\r\n Built:        Tue Mar 28 00:40:02 2017\r\n OS/Arch:      darwin/amd64\r\n\r\nServer:\r\n Version:      17.03.1-ce\r\n API version:  1.27 (minimum version 1.12)\r\n Go version:   go1.7.5\r\n Git commit:   c6d412e\r\n Built:        Fri Mar 24 00:00:50 2017\r\n OS/Arch:      linux/amd64\r\n Experimental: true\r\n```\r\n\r\n**Output of `docker info`:**\r\n\r\nAgain this is from my Mac, but the tests were also performed on Linux with a proper swarm, with the same results:\r\n```\r\nContainers: 6                                                                                                                                                             [25/4682]\r\n Running: 1\r\n Paused: 0\r\n Stopped: 5\r\nImages: 350\r\nServer Version: 17.03.1-ce\r\nStorage Driver: overlay2\r\n Backing Filesystem: extfs\r\n Supports d_type: true\r\n Native Overlay Diff: true\r\nLogging Driver: json-file\r\nCgroup Driver: cgroupfs\r\nPlugins: \r\n Volume: local\r\n Network: bridge host ipvlan macvlan null overlay\r\nSwarm: active\r\n NodeID: mp9up3hu4ik275i4nl23hx1zv\r\n Is Manager: true\r\n ClusterID: flbky82mvb51ngvbmb3a0pvqn\r\n Managers: 1\r\n Nodes: 1\r\n Orchestration:\r\n  Task History Retention Limit: 5\r\n Raft:\r\n  Snapshot Interval: 10000\r\n  Number of Old Snapshots to Retain: 0\r\n  Heartbeat Tick: 1\r\n  Election Tick: 3\r\n Dispatcher:\r\n  Heartbeat Period: 5 seconds\r\n CA Configuration:\r\n  Expiry Duration: 3 months\r\n Node Address: 192.168.65.2\r\n Manager Addresses:\r\n  192.168.65.2:2377\r\nRuntimes: runc\r\nDefault Runtime: runc\r\nInit Binary: docker-init\r\ncontainerd version: 4ab9917febca54791c5f071a9d1f404867857fcc\r\nrunc version: 54296cf40ad8143b62dbcaa1d90e520a2136ddfe\r\ninit version: N/A (expected: 949e6facb77383876aeff8a6944dde66b3089574)\r\nSecurity Options:\r\n seccomp\r\n  Profile: default\r\nKernel Version: 4.9.13-moby\r\nOperating System: Alpine Linux v3.5\r\nOSType: linux\r\nArchitecture: x86_64\r\nCPUs: 2\r\nTotal Memory: 1.952 GiB\r\nName: moby\r\nID: IJXO:PQVJ:Z5IQ:AV2T:PNJX:B5IK:L3FW:EOFM:TLUX:WM56:GTBA:GH4W\r\nDocker Root Dir: /var/lib/docker\r\nDebug Mode (client): false\r\nDebug Mode (server): true\r\n File Descriptors: 39\r\n Goroutines: 143\r\n System Time: 2017-04-03T19:46:12.33482745Z\r\n EventsListeners: 2\r\nNo Proxy: *.local, 169.254/16\r\nUsername: afrazkhan\r\nRegistry: https://index.docker.io/v1/\r\nExperimental: true\r\nInsecure Registries:\r\n 127.0.0.0/8\r\nLive Restore Enabled: false\r\n```\r\n"},{"labels":["documentation",null],"text":"https://github.com/docker/docker/blob/17.03.x/docs/reference/commandline/service_create.md\r\n![image](https://cloud.githubusercontent.com/assets/1900106/24601239/6c42dcac-1858-11e7-8cfe-79ca04a46b90.png)\r\nOK with no issues\r\n\r\nhttps://docs.docker.com/engine/reference/commandline/service_create/#specify-service-constraints---constraint\r\n![image](https://cloud.githubusercontent.com/assets/1900106/24601250/79eaf074-1858-11e7-929f-b6a20e74b064.png)\r\nTable is messed up\r\nAnd `<tdnode.role</td>` is above the table\r\n\r\nThis is the table in HTML:\r\n```html\r\n<table>\r\n  <tr>\r\n    <th>node attribute</th>\r\n    <th>matches</th>\r\n    <th>example</th>\r\n  </tr>\r\n  <tr>\r\n    <td><tt>node.id</tt></td>\r\n    <td>Node ID</td>\r\n    <td><tt>node.id == 2ivku8v2gvtg4</tt></td>\r\n  </tr>\r\n  <tr>\r\n    <td><tt>node.hostname</tt></td>\r\n    <td>Node hostname</td>\r\n    <td><tt>node.hostname != node-2</tt></td>\r\n  </tr>\r\n  <tr>\r\n    &lt;td<tt>node.role</tt>&lt;/td&gt;\r\n    <td><tt>node role: manager</tt></td>\r\n    <td><tt>node.role == manager</tt></td>\r\n  </tr>\r\n  <tr>\r\n    <td><tt>node.labels</tt></td>\r\n    <td>user defined node labels</td>\r\n    <td><tt>node.labels.security == high</tt></td>\r\n  </tr>\r\n  <tr>\r\n    <td><tt>engine.labels</tt></td>\r\n    <td>Docker Engine's labels</td>\r\n    <td><tt>engine.labels.operatingsystem == ubuntu 14.04</tt></td>\r\n  </tr>\r\n</table>\r\n```"},{"labels":["documentation",null,null],"text":"Wrong containerd version in release notes for release v17.03.1-ce:\r\n```\r\nUpdate containerd to 595e75c212d19a81d2b808a518fe1afc1391dad5 #31662\r\n```\r\n(https://github.com/docker/docker/pull/31662/commits/74c52a7bab45f63defdbe4c33ec5c77416f2ecf7)\r\n\r\nBut here version changed to 4ab9917febca54791c5f071a9d1f404867857fcc:\r\nhttps://github.com/docker/docker/commit/00132cc4426d7914822b98f952d32a45b015485e"},{"labels":["documentation",null,null],"text":"platform: docker toobox for windows 17.0.03\r\n\r\nWhen running a container with a mount from a host drive, the docker host folder contents overwrites the container's folder contents entirely. There is no overlay of data as detailed in the docs.\r\n\r\nmy ubuntu container command: \r\n\r\n> docker run -d -P --name MYCONTAINER -v /c/Users/drupal8_www:/var/www/html MY:IMAGE\r\n\r\nby stopping and starting this i can clearly see and repeat the effect describe above.\r\n\r\nthanks"},{"labels":[null,"documentation",null,null],"text":"**Description**\r\n\r\nPushing a docker image pushes significantly more data than pulling\r\n\r\n**Steps to reproduce the issue:**\r\n1. build an easily compressible image (e.g. https://github.com/frankh/docker-compress-test)\r\n2. docker push it\r\n  * Note how much it uploads. In my case, it's ~40MB\r\n3. delete the image and docker pull\r\n  * Note how much it downloads. In my case, ~40KB\r\n\r\n**Describe the results you received:**\r\n\r\nPushing pushes significantly more data than pulling\r\n\r\n**Describe the results you expected:**\r\n\r\nPushing and pulling move roughly the same amount of data\r\n\r\n**Output of `docker version`:**\r\n\r\nDocker version 17.03.0-ce, build 60ccb22\r\n\r\n**Output of `docker info`:**\r\n\r\n```\r\nContainers: 34\r\n Running: 2\r\n Paused: 0\r\n Stopped: 32\r\nImages: 1355\r\nServer Version: 17.03.0-ce\r\nStorage Driver: overlay2\r\n Backing Filesystem: extfs\r\n Supports d_type: true\r\n Native Overlay Diff: true\r\nLogging Driver: json-file\r\nCgroup Driver: cgroupfs\r\nPlugins:\r\n Volume: local\r\n Network: bridge host ipvlan macvlan null overlay\r\nSwarm: inactive\r\nRuntimes: runc\r\nDefault Runtime: runc\r\nInit Binary: docker-init\r\ncontainerd version: 977c511eda0925a723debdc94d09459af49d082a\r\nrunc version: a01dafd48bc1c7cc12bdb01206f9fea7dd6feb70\r\ninit version: 949e6fa\r\nSecurity Options:\r\n seccomp\r\n  Profile: default\r\nKernel Version: 4.9.12-moby\r\nOperating System: Alpine Linux v3.5\r\nOSType: linux\r\nArchitecture: x86_64\r\nCPUs: 2\r\nTotal Memory: 1.952 GiB\r\nName: moby\r\nID: CXWS:GVKV:ICYK:NJ7L:26LZ:DOYO:OBL4:NDAW:4TLZ:J2TJ:XML7:VDR2\r\nDocker Root Dir: /var/lib/docker\r\nDebug Mode (client): false\r\nDebug Mode (server): true\r\n File Descriptors: 33\r\n Goroutines: 40\r\n System Time: 2017-03-22T10:22:34.60882776Z\r\n EventsListeners: 1\r\nNo Proxy: *.local, 169.254/16\r\nUsername: frankh\r\nRegistry: https://index.docker.io/v1/\r\nExperimental: true\r\nInsecure Registries:\r\n 127.0.0.0/8\r\nLive Restore Enabled: false\r\n```\r\n\r\n**Additional environment details (AWS, VirtualBox, physical, etc.):**\r\n\r\nDocker for mac (also reproducible on other platforms)"},{"labels":[null,"documentation",null,null],"text":"**Description**\r\n\r\nThe `DiskUsage` call (which backs `docker system df`) can take an extremely long time to finish, since it walks through every container and volume's filesystem. In cases where you have lots of containers or volumes with lots of files, we've seen `DiskUsage` take minutes or even hours to complete, chewing up CPU and disk I/O the whole time. This isn't necessarily incorrect behavior, per se, but it is at least very surprising, especially since `ContainerStats` isn't expensive at all.\r\n\r\nI'm not sure how feasible it would be to improve the performance of `DiskUsage`, but if that's not possible, there should be more messaging around the costs of this API call.\r\n\r\nAlso, is there any way to get the size of an individual volume, or can you only get the size of every volume at once with `DiskUsage`?"},{"labels":["documentation",null,null,null,null],"text":"<!--\r\nIf you are reporting a new issue, make sure that we do not have any duplicates\r\nalready open. You can ensure this by searching the issue list for this\r\nrepository. If there is a duplicate, please close your issue and add a comment\r\nto the existing issue instead.\r\n\r\nIf you suspect your issue is a bug, please edit your issue description to\r\ninclude the BUG REPORT INFORMATION shown below. If you fail to provide this\r\ninformation within 7 days, we cannot debug your issue and will close it. We\r\nwill, however, reopen it if you later provide the information.\r\n\r\nFor more information about reporting issues, see\r\nhttps://github.com/docker/docker/blob/master/CONTRIBUTING.md#reporting-other-issues\r\n\r\n---------------------------------------------------\r\nGENERAL SUPPORT INFORMATION\r\n---------------------------------------------------\r\n\r\nThe GitHub issue tracker is for bug reports and feature requests.\r\nGeneral support can be found at the following locations:\r\n\r\n- Docker Support Forums - https://forums.docker.com\r\n- IRC - irc.freenode.net #docker channel\r\n- Post a question on StackOverflow, using the Docker tag\r\n\r\n---------------------------------------------------\r\nBUG REPORT INFORMATION\r\n---------------------------------------------------\r\nUse the commands below to provide key information from your environment:\r\nYou do NOT have to include this information if this is a FEATURE REQUEST\r\n-->\r\n\r\n**Description**\r\nWhen a container uses `--restart=always -p` the port changes with every automatic restart. This was not the case with `v1.13` - is this intentional?\r\n\r\n**Steps to reproduce the issue:**\r\n1. `docker run --restart=always -p 8000 debian:jessie sleep 2`\r\n2. Run `docker ps` a couple times to check the assigned port\r\n\r\n**Describe the results you received:**\r\nThe port changes with every restart\r\n\r\n**Describe the results you expected:**\r\nThe port should probably stay the same\r\n\r\n**Output of `docker version`:**\r\n\r\n```\r\nClient:\r\n Version:      17.03.0-ce\r\n API version:  1.26\r\n Go version:   go1.7.5\r\n Git commit:   60ccb22\r\n Built:        Thu Feb 23 10:54:03 2017\r\n OS/Arch:      linux/amd64\r\n\r\nServer:\r\n Version:      17.03.0-ce\r\n API version:  1.26 (minimum version 1.12)\r\n Go version:   go1.7.5\r\n Git commit:   60ccb22\r\n Built:        Thu Feb 23 10:54:03 2017\r\n OS/Arch:      linux/amd64\r\n Experimental: false\r\n```\r\n\r\n**Output of `docker info`:**\r\n\r\n```\r\nContainers: 43\r\n Running: 38\r\n Paused: 0\r\n Stopped: 5\r\nImages: 27\r\nServer Version: 17.03.0-ce\r\nStorage Driver: devicemapper\r\n Pool Name: data-docker_thin\r\n Pool Blocksize: 65.54 kB\r\n Base Device Size: 10.74 GB\r\n Backing Filesystem: xfs\r\n Data file:\r\n Metadata file:\r\n Data Space Used: 14.39 GB\r\n Data Space Total: 96.64 GB\r\n Data Space Available: 82.25 GB\r\n Metadata Space Used: 21.34 MB\r\n Metadata Space Total: 536.9 MB\r\n Metadata Space Available: 515.5 MB\r\n Thin Pool Minimum Free Space: 9.664 GB\r\n Udev Sync Supported: true\r\n Deferred Removal Enabled: true\r\n Deferred Deletion Enabled: true\r\n Deferred Deleted Device Count: 0\r\n Library Version: 1.02.135-RHEL7 (2016-11-16)\r\nLogging Driver: journald\r\nCgroup Driver: cgroupfs\r\nPlugins:\r\n Volume: local\r\n Network: bridge host macvlan null overlay\r\nSwarm: inactive\r\nRuntimes: runc\r\nDefault Runtime: runc\r\nInit Binary: docker-init\r\ncontainerd version: 977c511eda0925a723debdc94d09459af49d082a\r\nrunc version: a01dafd48bc1c7cc12bdb01206f9fea7dd6feb70\r\ninit version: 949e6fa\r\nSecurity Options:\r\n seccomp\r\n  Profile: default\r\nKernel Version: 3.10.0-514.6.2.el7.x86_64\r\nOperating System: CentOS Linux 7 (Core)\r\nOSType: linux\r\nArchitecture: x86_64\r\nCPUs: 2\r\nTotal Memory: 7.305 GiB\r\nName: us-1\r\nID: 6UKZ:VSEG:Z6FX:3A7K:YS6F:HUMA:HWFR:7D3L:IZIG:OVT4:33FA:GNDN\r\nDocker Root Dir: /var/lib/docker\r\nDebug Mode (client): false\r\nDebug Mode (server): false\r\nRegistry: https://index.docker.io/v1/\r\nWARNING: IPv4 forwarding is disabled\r\nWARNING: bridge-nf-call-iptables is disabled\r\nWARNING: bridge-nf-call-ip6tables is disabled\r\nExperimental: false\r\nInsecure Registries:\r\n 127.0.0.0/8\r\nLive Restore Enabled: true\r\n```\r\n\r\n"},{"labels":["documentation",null],"text":"<!--\r\nIf you are reporting a new issue, make sure that we do not have any duplicates\r\nalready open. You can ensure this by searching the issue list for this\r\nrepository. If there is a duplicate, please close your issue and add a comment\r\nto the existing issue instead.\r\n\r\nIf you suspect your issue is a bug, please edit your issue description to\r\ninclude the BUG REPORT INFORMATION shown below. If you fail to provide this\r\ninformation within 7 days, we cannot debug your issue and will close it. We\r\nwill, however, reopen it if you later provide the information.\r\n\r\nFor more information about reporting issues, see\r\nhttps://github.com/docker/docker/blob/master/CONTRIBUTING.md#reporting-other-issues\r\n\r\n---------------------------------------------------\r\nGENERAL SUPPORT INFORMATION\r\n---------------------------------------------------\r\n\r\nThe GitHub issue tracker is for bug reports and feature requests.\r\nGeneral support can be found at the following locations:\r\n\r\n- Docker Support Forums - https://forums.docker.com\r\n- IRC - irc.freenode.net #docker channel\r\n- Post a question on StackOverflow, using the Docker tag\r\n\r\n---------------------------------------------------\r\nBUG REPORT INFORMATION\r\n---------------------------------------------------\r\nUse the commands below to provide key information from your environment:\r\nYou do NOT have to include this information if this is a FEATURE REQUEST\r\n-->\r\n\r\n**Description**\r\n\r\nThe [docs here](https://github.com/docker/docker/blob/master/docs/reference/commandline/inspect.md#get-an-instances-image-name) on how to \"Get an instance's image name\" are wrong.\r\n\r\n**Steps to reproduce the issue:**\r\n1. run `docker inspect --format='{{.Container.Spec.Image}}' <container ID>`\r\n\r\n**Describe the results you received:**\r\n\r\n```\r\nTemplate parsing error: template: :1:12: executing \"\" at <.Container.Spec.Imag...>: map has no entry for key \"Container\"\r\n```\r\n\r\n**Describe the results you expected:**\r\n\r\nI expect to the command to return an image name.\r\n\r\n**Additional information you deem important (e.g. issue happens only occasionally):**\r\n\r\n**Output of `docker version`:**\r\n\r\n```\r\ndocker version\r\n\r\nClient:\r\n Version:      1.12.3\r\n API version:  1.24\r\n Go version:   go1.6.3\r\n Git commit:   6b644ec\r\n Built:        Wed Oct 26 21:44:32 2016\r\n OS/Arch:      linux/amd64\r\n\r\nServer:\r\n Version:      1.12.3\r\n API version:  1.24\r\n Go version:   go1.6.3\r\n Git commit:   6b644ec\r\n Built:        Wed Oct 26 21:44:32 2016\r\n OS/Arch:      linux/amd64\r\n```\r\n\r\n**Output of `docker info`:**\r\n\r\n```\r\ndocker info\r\n\r\nContainers: 4\r\n Running: 4\r\n Paused: 0\r\n Stopped: 0\r\nImages: 4\r\nServer Version: 1.12.3\r\nStorage Driver: aufs\r\n Root Dir: /var/lib/docker/aufs\r\n Backing Filesystem: extfs\r\n Dirs: 75\r\n Dirperm1 Supported: true\r\nLogging Driver: json-file\r\nCgroup Driver: cgroupfs\r\nPlugins:\r\n Volume: local\r\n Network: host overlay bridge null\r\nSwarm: inactive\r\nRuntimes: runc\r\nDefault Runtime: runc\r\nSecurity Options: apparmor\r\nKernel Version: 3.16.0-77-generic\r\nOperating System: Ubuntu 14.04 LTS\r\nOSType: linux\r\nArchitecture: x86_64\r\nCPUs: 24\r\nTotal Memory: 31.12 GiB\r\nName: sto3-accesspoint-a62.sto3.spotify.net\r\nID: AYPE:FMXB:2PCP:DHI4:LUOS:HA5P:SWRJ:DMDE:JLR4:C3KE:VVRU:JLMS\r\nDocker Root Dir: /var/lib/docker\r\nDebug Mode (client): false\r\nDebug Mode (server): false\r\nRegistry: https://index.docker.io/v1/\r\nWARNING: No swap limit support\r\nInsecure Registries:\r\n 127.0.0.0/8```\r\n\r\n**Additional environment details (AWS, VirtualBox, physical, etc.):**\r\n\r\nUsing docker-machine VM on vmware on Mac Sierra.\r\n"},{"labels":[null,"documentation",null,null,null],"text":"The markdown API docs are missing any description for the `NetworkingConfig` object that is included in the config to create a container. This object is included in the example JSON that gets POSTed to `/containers/create` in the 1.22, 1.23, and 1.24 docs, but is not mentioned in the following \"JSON Parameters\" section. In particular, its child object `EndpointsConfig` is not fully defined.\r\n\r\nThis issue only affects the older markdown API docs. The objects mentioned above are defined in more detail in `api/swagger.yaml`. For the most part, the various places in the swagger description of the API that accept or produce information about networks refer to `#/definitions/EndpointSettings`.\r\n\r\n"},{"labels":["documentation"],"text":"\r\n**Description**\r\n\r\nThe placement constraints grammar is not documented.\r\n\r\n**Steps to reproduce the issue:**\r\n1. `docker help create`\r\n2.  search for \"placement constraints\" on docker.com\r\n3. \r\n\r\n**Describe the results you received:**\r\n\r\nNo documentation.\r\n\r\n**Describe the results you expected:**\r\n\r\nDocumentation of the grammar, such as how not equal is written, whether and and or can be used, and what the grammar is etc.\r\n"},{"labels":["documentation",null],"text":"PR https://github.com/docker/docker/pull/31710 adds the `--verbose` option for `network inspect` to display service level details across the cluster for swarm mode overlay networks.  `swagger.yml` has to be updated to include the types of the objects in `docker network inspect --verbose` output."},{"labels":["documentation",null,null,null],"text":"I'm opening this issue as a bug because from what I've read docker is supposed to not enforce memory or disk space limitations during container's build or run actions. \r\n\r\nI have a docker file that does a lot when building and I can't really share to help with reproducing. This docker file behaves differently on different hosts. In one of them runs out of memory which contradicts the above. To help me troubleshoot the issue I've added a cmd that reports the free memory before it runs out of memory\r\n```powershell\r\n(Get-Counter -Counter \"\\Memory\\Available MBytes\").CounterSamples[0].CookedValue\r\n```\r\n\r\n1. On my Windows 10 host (my workstation laptop) the container fails to build. The workstation has 16GB of memory. The reported free memory before the out of memory crash is 200MB.\r\n1. On a Windows 2016 on a Hyper-V instanced hosted on my workstation the container builds successfully. The Hyper-V instance is assgined 4GB of memory. The reported free memory before the out of memory crash is 538MB.\r\n1. On a Windows 2016 host on azure the container builds successfully. The Azure VM is running with 7GB. The reported free memory before the out of memory crash is 3000MB.\r\n\r\nEach of the hosts reports the following version\r\n**1. Windows 10 Host**\r\n```text\r\nClient:\r\n Version:      17.03.0-ce\r\n API version:  1.26\r\n Go version:   go1.7.5\r\n Git commit:   60ccb22\r\n Built:        Thu Feb 23 10:40:59 2017\r\n OS/Arch:      windows/amd64\r\n\r\nServer:\r\n Version:      17.03.0-ce\r\n API version:  1.26 (minimum version 1.24)\r\n Go version:   go1.7.5\r\n Git commit:   60ccb22\r\n Built:        Thu Feb 23 10:40:59 2017\r\n OS/Arch:      windows/amd64\r\n Experimental: true\r\n```\r\n\r\n**2. Windows 2016 Host on Hyper-V**\r\n```text\r\nClient:\r\n Version:      17.03.0-ee-1\r\n API version:  1.26\r\n Go version:   go1.7.5\r\n Git commit:   9094a76\r\n Built:        Wed Mar  1 00:49:51 2017\r\n OS/Arch:      windows/amd64\r\n\r\nServer:\r\n Version:      17.03.0-ee-1\r\n API version:  1.26 (minimum version 1.24)\r\n Go version:   go1.7.5\r\n Git commit:   9094a76\r\n Built:        Wed Mar  1 00:49:51 2017\r\n OS/Arch:      windows/amd64\r\n Experimental: false\r\n```\r\n\r\n**2. Windows 2016 Host on Azure**\r\n```text\r\nClient:\r\nVersion:      1.12.2-cs2-ws-beta\r\nAPI version:  1.25\r\nGo version:   go1.7.1\r\nGit commit:   050b611\r\nBuilt:        Tue Oct 11 02:35:40 2016\r\nOS/Arch:      windows/amd64\r\n\r\nServer:\r\nVersion:      1.12.2-cs2-ws-beta\r\nAPI version:  1.25\r\nGo version:   go1.7.1\r\nGit commit:   050b611\r\nBuilt:        Tue Oct 11 02:35:40 2016\r\nOS/Arch:      windows/amd64\r\n\r\n```\r\n\r\nI understand I've not provided all necessary information to help you reproduce but the artifacts being referenced in the container are not freely available. What I can additionally say, is that the same  succeeds on Windows 10 host (case 1) when building on `microsoft/windowsservercore:latest` but fails when building on `asarafian/mssql-server-windows-express:2014SP2`. The difference between the two is the extra disk space required for SQL Server 2014SP2 and the memory that the sql server process take. Keep in mind that the sql server has one very small database attached, so it's strange that it makes that big of a difference.\r\n\r\nI'm more than willing to help troubleshoot this issue but I need some help on how. My feeling is that there is a difference between how docker and containers behave between Windows 10 and Windows Server hosts. The windows 10 machine has the most memory available from all the other one and reports 8-9GB free when the our of memory is thrown. On the other hand, Windows Server 2016 manages better with less memory available to the host. As there is a difference on setting up docker for Windows 10 and Windows Server, is it possible that there some limitations for Windows 10? If so, then I would consider this bug's resolution and documentation fix because I can't find any relevant information, besides limiting the memory available to the container.\r\n"},{"labels":["documentation",null,null,null],"text":"The [Load Balancing](https://docs.docker.com/engine/swarm/key-concepts/#load-balancing) section in the swarm docs don't make it clear if the internal loadbalancer also does health checks, and if it removes nodes that aren't running the service anymore (because it got killed or the node got rebooted).\r\n\r\nIn the following case I've got a service with replicas 3, 1 instance running on each of the 3 nodes.\r\n\r\nManager:\r\n```\r\n[root@centosvm ~]# docker ps\r\nCONTAINER ID        IMAGE                                    COMMAND                  CREATED             STATUS              PORTS               NAMES\r\na593d485050a        ddewaele/springboot.crud.sample:latest   \"sh -c 'java $JAVA_OP\"   7 minutes ago       Up 7 minutes                            springbootcrudsample.1.5syc6j4c8i3bnerdqq4e1yelm\r\n```\r\nNode1:\r\n```\r\n[root@node1 ~]# docker ps\r\nCONTAINER ID        IMAGE                                    COMMAND                  CREATED             STATUS              PORTS               NAMES\r\nd3b3fbc0f2c5        ddewaele/springboot.crud.sample:latest   \"sh -c 'java $JAVA_OP\"   4 minutes ago       Up 4 minutes                            springbootcrudsample.3.7y1oyjyrifgkmxlr20oai5ppl\r\n```\r\nNode 2:\r\n```\r\n[root@node2 ~]# docker ps\r\nCONTAINER ID        IMAGE                                    COMMAND                  CREATED             STATUS              PORTS               NAMES\r\nebca8f24ec3a        ddewaele/springboot.crud.sample:latest   \"sh -c 'java $JAVA_OP\"   7 minutes ago       Up 7 minutes                            springbootcrudsample.2.4tqjad7od8ep047s55485na1t\r\n```\r\nNow, on node1, we kill the docker container. This node will be without a service (swarm will re-create it here after a couple of seconds to keep the replication=3 on the service)\r\n```\r\n[root@node1 ~]# docker kill d3b3fbc0f2c5\r\nd3b3fbc0f2c5\r\n```\r\nContainer gone\r\n```\r\n[root@node1 ~]# docker ps\r\nCONTAINER ID        IMAGE                                    COMMAND                  CREATED             STATUS              PORTS               NAMES\r\n```\r\nNew container up\r\n```\r\n[root@node1 ~]# docker ps\r\nCONTAINER ID        IMAGE                                    COMMAND                  CREATED             STATUS              PORTS               NAMES\r\nb8c9a7a5cf97        ddewaele/springboot.crud.sample:latest   \"sh -c 'java $JAVA_OP\"   11 seconds ago      Up 9 seconds                            springbootcrudsample.3.9v4cnhi8dvq7n8afb2kvp28sk\r\n```\r\n\r\nIn the output below however, when container `d3b3fbc0f2c5` was killed, the ingress  loadbalancer didn't detect this, and it was still sending traffic to the node (resulting in connection refused) ? \r\n\r\nHow should we handle such a scenario ? Do we still need an external loadbalancer for this scenario and how should we configure it ?\r\n\r\n```\r\n[root@centosvm ~]# while :; do curl http://localhost:8080/env/hostname ; echo \"\" ; sleep 1; done\r\n{\"hostname\":\"d3b3fbc0f2c5\"}\r\n{\"hostname\":\"a593d485050a\"}\r\n{\"hostname\":\"ebca8f24ec3a\"}\r\n{\"hostname\":\"d3b3fbc0f2c5\"}\r\n{\"hostname\":\"a593d485050a\"}\r\n{\"hostname\":\"ebca8f24ec3a\"}\r\n{\"hostname\":\"d3b3fbc0f2c5\"}\r\n{\"hostname\":\"a593d485050a\"}\r\n{\"hostname\":\"ebca8f24ec3a\"}\r\n{\"hostname\":\"a593d485050a\"}\r\n{\"hostname\":\"ebca8f24ec3a\"}\r\n{\"hostname\":\"a593d485050a\"}\r\ncurl: (7) Failed connect to localhost:8080; Connection refused\r\n\r\n{\"hostname\":\"ebca8f24ec3a\"}\r\n{\"hostname\":\"a593d485050a\"}\r\ncurl: (7) Failed connect to localhost:8080; Connection refused\r\n\r\n{\"hostname\":\"ebca8f24ec3a\"}\r\n{\"hostname\":\"a593d485050a\"}\r\ncurl: (7) Failed connect to localhost:8080; Connection refused\r\n\r\n{\"hostname\":\"ebca8f24ec3a\"}\r\n{\"hostname\":\"a593d485050a\"}\r\ncurl: (7) Failed connect to localhost:8080; Connection refused\r\n\r\n{\"hostname\":\"ebca8f24ec3a\"}\r\n{\"hostname\":\"a593d485050a\"}\r\ncurl: (7) Failed connect to localhost:8080; Connection refused\r\n\r\n{\"hostname\":\"ebca8f24ec3a\"}\r\n{\"hostname\":\"a593d485050a\"}\r\ncurl: (7) Failed connect to localhost:8080; Connection refused\r\n\r\n{\"hostname\":\"ebca8f24ec3a\"}\r\n{\"hostname\":\"a593d485050a\"}\r\n{\"hostname\":\"b8c9a7a5cf97\"}\r\n{\"hostname\":\"ebca8f24ec3a\"}\r\n{\"hostname\":\"a593d485050a\"}\r\n{\"hostname\":\"b8c9a7a5cf97\"}\r\n```"},{"labels":["documentation"],"text":"Hi,\r\nI was reading the docs (to get up-to-date between 1.11 and 1.13) and [here](https://docs.docker.com/engine/userguide/eng-image/dockerfile_best-practices/#/each-container-should-have-only-one-concern) I found this sentence:\r\n\r\n> In addition to the fact that containers can now be spawned with an init process, some programs might spawn additional processes of their own accord. \r\n\r\nSo I wonder, can we **really** specify an init process or does this page simply talk about the `CMD`?\r\n\r\nThe link brings nowhere hlpeful. So if it's just about the `CMD`, could we change the docs (should I click \"Edit this page\" or \"Request dos change\"?) because it is misleading :)\r\nI was really hoping that we could _finally_ have an init process :)\r\n\r\nThanks in advance :P"},{"labels":["documentation",null,null],"text":"**Description**\r\nI was refering to document related to nproc ulimit.\r\nhttps://docs.docker.com/engine/reference/commandline/run/\r\n\r\nWhen created 4th  container with ulimit nproc=3 for specific user , it gets created. \r\ndocker run -d -u daemon --ulimit nproc=3 busybox top \r\n\r\n\r\n**Steps to reproduce the issue:**\r\n1. Create 4 containers with below command\r\n    docker run -d -u daemon --ulimit nproc=3 busybox top    \r\n\r\n**Describe the results you received:**\r\nsh-4.2# docker run -d -u daemon --ulimit nproc=3 busybox top\r\nc272f84204c6a706e89dc2969c37cc1b15b0a34f08b0647786b2dc6912744734\r\nsh-4.2# docker run -d -u daemon --ulimit nproc=3 busybox top\r\n994c174d5eeedc49621c4ed29b66bd7d12dc9e2c3f68cd050ececfd0bddafe2e\r\nsh-4.2# docker run -d -u daemon --ulimit nproc=3 busybox top\r\n^[[Ac2829ec24116fa55769c4d86b5469147ff04cda4096b032932c733409dce7a2f\r\nsh-4.2# docker run -d -u daemon --ulimit nproc=3 busybox top\r\ncdeb9a71f407702966e7ecc9ec6d023c01a131fcf00776332f36550361c21255\r\nsh-4.2#\r\n\r\n\r\n**Describe the results you expected:**\r\n**Describe the results you received:**\r\nsh-4.2# docker run -d -u daemon --ulimit nproc=3 busybox top\r\nc272f84204c6a706e89dc2969c37cc1b15b0a34f08b0647786b2dc6912744734\r\nsh-4.2# docker run -d -u daemon --ulimit nproc=3 busybox top\r\n994c174d5eeedc49621c4ed29b66bd7d12dc9e2c3f68cd050ececfd0bddafe2e\r\nsh-4.2# docker run -d -u daemon --ulimit nproc=3 busybox top\r\n^[[Ac2829ec24116fa55769c4d86b5469147ff04cda4096b032932c733409dce7a2f\r\nsh-4.2# docker run -d -u daemon --ulimit nproc=3 busybox top\r\n[8] System error: resource temporarily unavailable\r\n\r\n4th container should get failed with \"[8] System error: resource temporarily unavailable\"\r\n\r\n**Output of `docker version`:**\r\nsh-4.2# docker version\r\nClient:\r\n Version:      1.13.0\r\n API version:  1.25\r\n Go version:   go1.7.3\r\n Git commit:   49bf474\r\n Built:        Tue Jan 17 09:55:28 2017\r\n OS/Arch:      linux/amd64\r\n\r\nServer:\r\n Version:      1.13.0\r\n API version:  1.25 (minimum version 1.12)\r\n Go version:   go1.7.3\r\n Git commit:   49bf474\r\n Built:        Tue Jan 17 09:55:28 2017\r\n OS/Arch:      linux/amd64\r\n Experimental: false\r\n\r\n**Output of `docker info`:**\r\nsh-4.2# docker info\r\nContainers: 4\r\n Running: 4\r\n Paused: 0\r\n Stopped: 0\r\nImages: 6\r\nServer Version: 1.13.0\r\nStorage Driver: devicemapper\r\n Pool Name: docker-253:1-1492245-pool\r\n Pool Blocksize: 65.54 kB\r\n Base Device Size: 10.74 GB\r\n Backing Filesystem: xfs\r\n Data file: /dev/loop0\r\n Metadata file: /dev/loop1\r\n Data Space Used: 56.88 GB\r\n Data Space Total: 107.4 GB\r\n Data Space Available: 28.74 GB\r\n Metadata Space Used: 135.8 MB\r\n Metadata Space Total: 2.147 GB\r\n Metadata Space Available: 2.012 GB\r\n Thin Pool Minimum Free Space: 10.74 GB\r\n Udev Sync Supported: true\r\n Deferred Removal Enabled: false\r\n Deferred Deletion Enabled: false\r\n Deferred Deleted Device Count: 0\r\n Data loop file: /var/lib/docker/devicemapper/devicemapper/data\r\n WARNING: Usage of loopback devices is strongly discouraged for production use. Use `--storage-opt dm.thinpooldev` to specify a custom block storage device.\r\n Metadata loop file: /var/lib/docker/devicemapper/devicemapper/metadata\r\n Library Version: 1.02.107-RHEL7 (2016-06-09)\r\nLogging Driver: syslog\r\nCgroup Driver: cgroupfs\r\nPlugins:\r\n Volume: local\r\n Network: bridge host macvlan null overlay\r\nSwarm: inactive\r\nRuntimes: runc\r\nDefault Runtime: runc\r\nInit Binary: docker-init\r\ncontainerd version: 03e5862ec0d8d3b3f750e19fca3ee367e13c090e\r\nrunc version: 2f7393a47307a16f8cee44a37b262e8b81021e3e\r\ninit version: 949e6fa\r\nSecurity Options:\r\n seccomp\r\n  Profile: default\r\nKernel Version: 3.10.0-327.22.2.el7.x86_64\r\nOperating System: CentOS Linux 7 (Core)\r\nOSType: linux\r\nArchitecture: x86_64\r\nCPUs: 4\r\nTotal Memory: 7.797 GiB\r\nName: gsljumphost.cisco.com\r\nID: LIZX:TKX5:IBZC:B3SF:BVLE:JGQ5:2GAG:OHSF:PM5H:ASYI:DISB:ZOM2\r\nDocker Root Dir: /var/lib/docker\r\nDebug Mode (client): false\r\nDebug Mode (server): false\r\nRegistry: https://index.docker.io/v1/\r\nWARNING: bridge-nf-call-iptables is disabled\r\nWARNING: bridge-nf-call-ip6tables is disabled\r\nExperimental: false\r\nInsecure Registries:\r\n 127.0.0.0/8\r\nLive Restore Enabled: false\r\n"},{"labels":["documentation",null,null],"text":"`docker stack ps` docs are sparse in examples.\r\nhttps://github.com/docker/docker/blob/master/docs/reference/commandline/stack_ps.md#examples\r\n\r\nIt would be good to have concrete examples similar to `docker service ps` and use them in the filtering logic. https://github.com/docker/docker/blob/master/docs/reference/commandline/service_ps.md#examples"},{"labels":["documentation"],"text":"The `CopyToContainer` method's documentation simply states the following:\r\n> CopyToContainer copies content into the container filesystem.\r\n\r\nHowever, the [API endpoint's documentation](https://docs.docker.com/engine/api/v1.24/index.html#extract-an-archive-of-files-or-folders-to-a-directory-in-a-container) states the endpoint only accepts tarballs. The code in the `cli` package using `CopyToContainer` clearly shows files being archived to a tarball as well.\r\n\r\nI think `CopyToContainer`'s documentation should reflect that it expects the `content` argument to be a tarball.\r\n"},{"labels":["documentation"],"text":"**Description**\r\n\r\nWhile compile the latest YAML files for docs, the following CLI reference files were found to be missing:\r\n\r\n* [ ] docs/reference/commandline/checkpoint/create.md\r\n* [ ] docs/reference/commandline/checkpoint/ls.md\r\n* [ ] docs/reference/commandline/checkpoint/rm.md\r\n* [ ] docs/reference/commandline/checkpoint.md\r\n* [ ] docs/reference/commandline/container/attach.md\r\n* [ ] docs/reference/commandline/container/commit.md\r\n* [ ] docs/reference/commandline/container/cp.md\r\n* [ ] docs/reference/commandline/container/create.md\r\n* [ ] docs/reference/commandline/container/diff.md\r\n* [ ] docs/reference/commandline/container/exec.md\r\n* [ ] docs/reference/commandline/container/export.md\r\n* [ ] docs/reference/commandline/container/inspect.md\r\n* [ ] docs/reference/commandline/container/kill.md\r\n* [ ] docs/reference/commandline/container/logs.md\r\n* [ ] docs/reference/commandline/container/ls.md\r\n* [ ] docs/reference/commandline/container/pause.md\r\n* [ ] docs/reference/commandline/container/port.md\r\n* [ ] docs/reference/commandline/container/prune.md\r\n* [ ] docs/reference/commandline/container/rename.md\r\n* [ ] docs/reference/commandline/container/restart.md\r\n* [ ] docs/reference/commandline/container/rm.md\r\n* [ ] docs/reference/commandline/container/run.md\r\n* [ ] docs/reference/commandline/container/start.md\r\n* [ ] docs/reference/commandline/container/stats.md\r\n* [ ] docs/reference/commandline/container/stop.md\r\n* [ ] docs/reference/commandline/container/top.md\r\n* [ ] docs/reference/commandline/container/unpause.md\r\n* [ ] docs/reference/commandline/container/update.md\r\n* [ ] docs/reference/commandline/container/wait.md\r\n* [ ] docs/reference/commandline/container.md\r\n* [ ] docs/reference/commandline/image/build.md\r\n* [ ] docs/reference/commandline/image/history.md\r\n* [ ] docs/reference/commandline/image/import.md\r\n* [ ] docs/reference/commandline/image/inspect.md\r\n* [ ] docs/reference/commandline/image/load.md\r\n* [ ] docs/reference/commandline/image/ls.md\r\n* [ ] docs/reference/commandline/image/prune.md\r\n* [ ] docs/reference/commandline/image/pull.md\r\n* [ ] docs/reference/commandline/image/push.md\r\n* [ ] docs/reference/commandline/image/rm.md\r\n* [ ] docs/reference/commandline/image/save.md\r\n* [ ] docs/reference/commandline/image/tag.md\r\n* [ ] docs/reference/commandline/image.md\r\n* [ ] docs/reference/commandline/network/connect.md\r\n* [ ] docs/reference/commandline/network/create.md\r\n* [ ] docs/reference/commandline/network/disconnect.md\r\n* [ ] docs/reference/commandline/network/inspect.md\r\n* [ ] docs/reference/commandline/network/ls.md\r\n* [ ] docs/reference/commandline/network/prune.md\r\n* [ ] docs/reference/commandline/network/rm.md\r\n* [ ] docs/reference/commandline/network.md\r\n* [ ] docs/reference/commandline/node/demote.md\r\n* [ ] docs/reference/commandline/node/inspect.md\r\n* [ ] docs/reference/commandline/node/ls.md\r\n* [ ] docs/reference/commandline/node/promote.md\r\n* [ ] docs/reference/commandline/node/ps.md\r\n* [ ] docs/reference/commandline/node/rm.md\r\n* [ ] docs/reference/commandline/node/update.md\r\n* [ ] docs/reference/commandline/node.md\r\n* [ ] docs/reference/commandline/plugin/create.md\r\n* [ ] docs/reference/commandline/plugin/disable.md\r\n* [ ] docs/reference/commandline/plugin/enable.md\r\n* [ ] docs/reference/commandline/plugin/inspect.md\r\n* [ ] docs/reference/commandline/plugin/install.md\r\n* [ ] docs/reference/commandline/plugin/ls.md\r\n* [ ] docs/reference/commandline/plugin/push.md\r\n* [ ] docs/reference/commandline/plugin/rm.md\r\n* [ ] docs/reference/commandline/plugin/set.md\r\n* [ ] docs/reference/commandline/plugin/upgrade.md\r\n* [ ] docs/reference/commandline/plugin.md\r\n* [ ] docs/reference/commandline/secret/create.md\r\n* [ ] docs/reference/commandline/secret/inspect.md\r\n* [ ] docs/reference/commandline/secret/ls.md\r\n* [ ] docs/reference/commandline/secret/rm.md\r\n* [ ] docs/reference/commandline/secret.md\r\n* [ ] docs/reference/commandline/service/create.md\r\n* [ ] docs/reference/commandline/service/inspect.md\r\n* [ ] docs/reference/commandline/service/logs.md\r\n* [ ] docs/reference/commandline/service/ls.md\r\n* [ ] docs/reference/commandline/service/ps.md\r\n* [ ] docs/reference/commandline/service/rm.md\r\n* [ ] docs/reference/commandline/service/scale.md\r\n* [ ] docs/reference/commandline/service/update.md\r\n* [ ] docs/reference/commandline/service.md\r\n* [ ] docs/reference/commandline/stack/deploy.md\r\n* [ ] docs/reference/commandline/stack/ls.md\r\n* [ ] docs/reference/commandline/stack/ps.md\r\n* [ ] docs/reference/commandline/stack/rm.md\r\n* [ ] docs/reference/commandline/stack/services.md\r\n* [ ] docs/reference/commandline/stack.md\r\n* [ ] docs/reference/commandline/swarm/init.md\r\n* [ ] docs/reference/commandline/swarm/join.md\r\n* [ ] docs/reference/commandline/swarm/join-token.md\r\n* [ ] docs/reference/commandline/swarm/leave.md\r\n* [ ] docs/reference/commandline/swarm/unlock.md\r\n* [ ] docs/reference/commandline/swarm/unlock-key.md\r\n* [ ] docs/reference/commandline/swarm/update.md\r\n* [ ] docs/reference/commandline/swarm.md\r\n* [ ] docs/reference/commandline/system/df.md\r\n* [ ] docs/reference/commandline/system/events.md\r\n* [ ] docs/reference/commandline/system/info.md\r\n* [ ] docs/reference/commandline/system/prune.md\r\n* [ ] docs/reference/commandline/system.md\r\n* [ ] docs/reference/commandline/volume/create.md\r\n* [ ] docs/reference/commandline/volume/inspect.md\r\n* [ ] docs/reference/commandline/volume/ls.md\r\n* [ ] docs/reference/commandline/volume/prune.md\r\n* [ ] docs/reference/commandline/volume/rm.md\r\n* [ ] docs/reference/commandline/volume.md\r\n\r\n**Steps to reproduce the issue:**\r\n1. In a terminal get the help for `docker volume --help`\r\n2. Notice you get some help\r\n3. try to find the matching CLI ref in the docs reference folder and you'll see that https://github.com/docker/docker/blob/master/docs/reference/commandline/volume.md is missing\r\n\r\n**Describe the results you received:**\r\n404 page not found\r\n\r\n**Describe the results you expected:**\r\nto find the matching Markdown file for the above command\r\n"},{"labels":["documentation",null,null],"text":"I am running docker version v1.13.0 with swarm (stand alone), the old swarm.\r\n\r\nWe have an overlay network and it seems that we can't create more than 255 containers. We get the following error:\r\n\r\n**Cannot start service logsparser: Error response from daemon: no available IPv4 addresses on this network's address pools**\r\n\r\n\r\nIs it a bug? Is there a way to increase this limitation?\r\n\r\nI attached 2 files with the output of:\r\n\r\ndocker info\r\n\r\nand\r\n\r\ndocker network inspect\r\n\r\n[d_info.txt](https://github.com/docker/docker/files/775585/d_info.txt)\r\n[d_network_inspect.txt](https://github.com/docker/docker/files/775586/d_network_inspect.txt)\r\n\r\n\r\n\r\n"},{"labels":["documentation"],"text":"<!--\r\nIf you are reporting a new issue, make sure that we do not have any duplicates\r\nalready open. You can ensure this by searching the issue list for this\r\nrepository. If there is a duplicate, please close your issue and add a comment\r\nto the existing issue instead.\r\n\r\nIf you suspect your issue is a bug, please edit your issue description to\r\ninclude the BUG REPORT INFORMATION shown below. If you fail to provide this\r\ninformation within 7 days, we cannot debug your issue and will close it. We\r\nwill, however, reopen it if you later provide the information.\r\n\r\nFor more information about reporting issues, see\r\nhttps://github.com/docker/docker/blob/master/CONTRIBUTING.md#reporting-other-issues\r\n\r\n---------------------------------------------------\r\nGENERAL SUPPORT INFORMATION\r\n---------------------------------------------------\r\n\r\nThe GitHub issue tracker is for bug reports and feature requests.\r\nGeneral support can be found at the following locations:\r\n\r\n- Docker Support Forums - https://forums.docker.com\r\n- IRC - irc.freenode.net #docker channel\r\n- Post a question on StackOverflow, using the Docker tag\r\n\r\n---------------------------------------------------\r\nBUG REPORT INFORMATION\r\n---------------------------------------------------\r\nUse the commands below to provide key information from your environment:\r\nYou do NOT have to include this information if this is a FEATURE REQUEST\r\n-->\r\n\r\n**Description**\r\n\r\nThe dockerd docs don't mention the new experimental flag and what features that enables (https://docs.docker.com/engine/reference/commandline/dockerd/), and the README in the repo (https://github.com/docker/docker/tree/master/experimental) is missing a lot of the new experimental features added in 1.13, e.g. see https://sreeninet.wordpress.com/2017/01/27/docker-1-13-experimental-features/.\r\n\r\nAlso, the experimental README  says \"Experimental features are not ready for production. They are provided for test and evaluation in your sandbox environments.\". That doesn't seem to match what I've heard from maintainers that experimental features are (now) considered behaviorally stable; just the API/CLI might change. E.g. see https://github.com/docker/docker/issues/26451#issuecomment-249294540"},{"labels":["documentation",null,null],"text":"Hey there,\r\n\r\nWhile this isn't a bug per se, it's _really_ unexpected behaviour of a Docker run command and I believe it deserves some attention, and at the _very_ least some clarification in the manual and steps to try and resolve the problem.\r\n\r\n======\r\n\r\nTl;dr, `:z` and `:Z` can cause the system to disallow logins by changing labels (until a reboot at least) without so much as a warning or a single line of output.\r\n\r\n======\r\n\r\nI run a CentOS 7.3 VM in Azure for testing out Docker boxes and making new ones (plus a few other bits and pieces)\r\n\r\nToday I ran a `docker run` (something similar to `docker run -v $PWD:/var/www:z -it <sha256 here> php -v`) in my home directory root (not usually where I run it) by doing a `^R` and searching for a command.\r\nBecause `$PWD` resolved to the my home dir the `:z` relabelled my _entire_ home directory with Docker's shared label. I wondered why the command took _so_ long to run, but didn't think much of it at the time.\r\nI walked away from my machine and (luckily) left my ssh session on. Later on I tried to log into the server from my phone and couldn't.\r\n\r\nAfter running back upstairs and some frantic defensive actions over the system (looking at `authorized_keys` files for tampering, audit logs, checking fail2ban, etc.) I decided the system had not been hacked into and my keys weren't compromised.\r\n\r\nEventually after searching around I noticed that `sshd` was being denied `read` to the `authorized_keys` file by SELinux because of the label change!\r\n\r\nAfter a `chcon -RFvv /home/username` I could log in again.\r\n\r\n======\r\n\r\nWhile it's obvious that those options were changing the labels on the _host_, I didn't realise until this point. The manual on [Volume Labels](https://docs.docker.com/engine/tutorials/dockervolumes/#/volume-labels) mentions about changing host's labels, but doesn't mention how dangerous this is and that if you can't log into the system a reboot or a relabel will be needed... (What if this was a system I couldn't / couldn't easily reboot?)\r\n\r\nIt's possible the manual also should explicitly list the two labels that are assigned for public and private mounts, so that people who don't want to use `:z` or `:Z` can manually label the files beforehand, which'd be safer and also can be put into the permanent policy of the machine.\r\n\r\nThanks."},{"labels":[null,"documentation",null],"text":"from my personal experience using the tooling. it would be great if these were resolved. please, do not take these as criticism.\r\n\r\n#### output:\r\n\r\ni  wonder how everyone deals with the docker ouput, in particular the core team. i suspect, i could be wrong, that people are handcrafting scripts for common operations.\r\n\r\ndealing with the ouput in a *unix env could be easier:\r\n\r\n* requires extra work when using common tools, e.g., `docker history <id>` -> `SIZE` contains spaces so `sort -h` doesn't handle it that well. one needs to do deal with Go templates.\r\n* some commands don't take formatting options so they're harder to deal with, e.g., `docker history`.\r\n* is there a standard delimiter that is always used for all the commands? quick test: remove just the `COMMENT` column, note the space(s) in the fields themselves.\r\n\r\n```sh\r\n$ docker history golang_1.4-alpine:latest\r\nIMAGE               CREATED             CREATED BY                                      SIZE                COMMENT\r\nf687c7a9c8fd        22 hours ago        /bin/sh -c echo 'hello world from' 'golang...   0 B                 \r\n0deea0c51a1c        11 months ago       /bin/sh -c #(nop) WORKDIR /go                   0 B                 \r\n<missing>           11 months ago       /bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH...   0 B                 \r\n<missing>           11 months ago       /bin/sh -c #(nop) ENV PATH=/go/bin:/usr/lo...   0 B                 \r\n<missing>           11 months ago       /bin/sh -c #(nop) ENV GOPATH=/go                0 B                 \r\n<missing>           11 months ago       /bin/sh -c set -ex  && apk add --no-cache ...   138 MB              \r\n<missing>           11 months ago       /bin/sh -c #(nop) ENV GOLANG_SRC_SHA1=486d...   0 B                 \r\n<missing>           11 months ago       /bin/sh -c #(nop) ENV GOLANG_SRC_URL=https...   0 B                 \r\n<missing>           11 months ago       /bin/sh -c #(nop) ENV GOLANG_VERSION=1.4.3      0 B                 \r\n<missing>           11 months ago       /bin/sh -c #(nop) ADD file:0f9cfb2e848f093...   4.79 MB             \r\n```\r\n\r\nwhat i'm trying to get at is, it would nice if the output played nicely with the tools folks are familiar with, and some consistent behaviour in the flags commands take (some take `--format` other don't).\r\n\r\n#### documentation\r\n\r\n#### aliasing\r\n\r\nthe alias, specifically, at the bottom is confusing, e.g., https://docs.docker.com/engine/reference/commandline/images/ says `docker images` -> ` docker image ls`:\r\n\r\n* why not then just redirect to the page?\r\n* the alias should be at the top of the page, it is less confusing that way.\r\n\r\n#### links to docs\r\n\r\nit would _really_ nice to have links to the docs directly (not the alias) available on the command line. something like below, or whatever fits your bill.\r\n\r\n```sh\r\n$ docker images --help\r\n\r\nhttps://docs.docker.com/engine/reference/commandline/image_ls/\r\n\r\nUsage:\tdocker images [OPTIONS] [REPOSITORY[:TAG]]\r\n\r\n...\r\n```\r\n\r\n---\r\n\r\n```sh\r\n$ docker version\r\n```\r\n\r\n```sh\r\nClient:\r\n Version:      1.13.0\r\n API version:  1.25\r\n Go version:   go1.7.3\r\n Git commit:   49bf474\r\n Built:        Wed Jan 18 16:20:26 2017\r\n OS/Arch:      darwin/amd64\r\n\r\nServer:\r\n Version:      1.13.0\r\n API version:  1.25 (minimum version 1.12)\r\n Go version:   go1.7.3\r\n Git commit:   49bf474\r\n Built:        Wed Jan 18 16:20:26 2017\r\n OS/Arch:      linux/amd64\r\n Experimental: true\r\n```\r\n\r\n```sh\r\n$ docker info\r\n```\r\n\r\n```sh\r\nContainers: 153\r\n Running: 0\r\n Paused: 0\r\n Stopped: 153\r\nImages: 1589\r\nServer Version: 1.13.0\r\nStorage Driver: aufs\r\n Root Dir: /var/lib/docker/aufs\r\n Backing Filesystem: extfs\r\n Dirs: 1290\r\n Dirperm1 Supported: true\r\nLogging Driver: json-file\r\nCgroup Driver: cgroupfs\r\nPlugins: \r\n Volume: local\r\n Network: bridge host ipvlan macvlan null overlay\r\nSwarm: inactive\r\nRuntimes: runc\r\nDefault Runtime: runc\r\nInit Binary: docker-init\r\ncontainerd version: 03e5862ec0d8d3b3f750e19fca3ee367e13c090e\r\nrunc version: 2f7393a47307a16f8cee44a37b262e8b81021e3e\r\ninit version: 949e6fa\r\nSecurity Options:\r\n seccomp\r\n  Profile: default\r\nKernel Version: 4.9.4-moby\r\nOperating System: Alpine Linux v3.5\r\nOSType: linux\r\nArchitecture: x86_64\r\nCPUs: 2\r\nTotal Memory: 1.952 GiB\r\nName: moby\r\nID: NRXU:ZFNJ:3AC2:WVYL:UODL:44GO:E7AA:AFWL:22FC:FJYR:URTX:SV2N\r\nDocker Root Dir: /var/lib/docker\r\nDebug Mode (client): false\r\nDebug Mode (server): true\r\n File Descriptors: 16\r\n Goroutines: 26\r\n System Time: 2017-02-09T19:26:55.917920388Z\r\n EventsListeners: 1\r\nNo Proxy: *.local, 169.254/16\r\nUsername: mohamedbana\r\nRegistry: https://index.docker.io/v1/\r\nExperimental: true\r\nInsecure Registries:\r\n 127.0.0.0/8\r\nLive Restore Enabled: false\r\n```"},{"labels":["documentation",null],"text":"The TOC on the right side of https://docs.docker.com/engine/deprecated/ has some entries at the wrong indentation. All the entries should have the same indentation.\r\n\r\n<img width=\"233\" alt=\"image\" src=\"https://cloud.githubusercontent.com/assets/11357370/22755255/64201d9a-ee10-11e6-9bfd-4780cff3a403.png\">\r\n"},{"labels":[null,"documentation",null],"text":"I'm trying to add in a Dockerfile a file with square brackets. Consider, for example, the following minimalistic Dockerfile:\r\n\r\n```\r\nFROM alpine\r\n\r\nADD \"arr[0].txt\" /\r\n\r\nCMD [\"bash\", \"-c\", \"ls -la *.txt\"]\r\n```\r\n\r\nAnd a file called `arr[0].txt` in the working directory. Trying to build this Dockerfile, I get:\r\n\r\n```\r\nStep 2/3 : ADD \"arr[0].txt\" /\r\nNo source files were specified\r\n```\r\n\r\nI already tried several variations of this command based on [Go filepath](https://golang.org/pkg/path/filepath/#Match), with no luck:\r\n\r\n* `ADD \"arr\\\\[0\\\\].txt\" /` (No source files were specified)\r\n* `ADD [\"arr\\\\[0\\\\].txt\", \"/\"]` (No source files were specified)\r\n* `ADD arr\\\\[0\\\\].txt /` (lstat arr\\\\[0\\\\].txt: no such file or directory)\r\n* `ADD \"arr\\[0\\].txt\" /` (lstat arr\\\\[0\\\\].txt: no such file or directory)\r\n* `ADD [\"arr\\[0\\].txt\", \"/\"]` (No source files were specified)\r\n* `ADD arr\\[0\\].txt /` (No source files were specified)\r\n\r\nAm I just missing the right pattern, or is this a bug?\r\n"},{"labels":["documentation",null,null],"text":"**Unable to set args for v2 plugins**\r\nThe plugin I'm using supports 3 arguments as seen in this output:\r\n```\r\n# docker plugin inspect nimble\r\n[\r\n    {\r\n        \"Config\": {\r\n            \"Args\": {\r\n                \"Description\": \"Group connection information\",\r\n                \"Name\": \"group\",\r\n                \"Settable\": [\r\n                    \"ip\",\r\n                    \"user\",\r\n                    \"pass\"\r\n                ],\r\n                \"Value\": [\r\n                    \"\",\r\n                    \"\",\r\n                    \"\"\r\n                ]\r\n            },\r\n```\r\n\r\nHowever, I am not able to set the values.\r\n```\r\n# docker plugin set nimble group.ip=10.1.2.3\r\nError response from daemon: \"group.ip\" is not settable\r\n```\r\n\r\n\r\n**Steps to reproduce the issue:**\r\n1. Create a plugin with 'Args' defined\r\n2. Inspect the plugin\r\n3. Attempt to set the arguments defined in the 'Args' configuration\r\n\r\n**Describe the results you received:**\r\nUnable to set args\r\n```\r\nDEBU[6382] Calling POST /v1.25/plugins/nimble/set       \r\nERRO[6382] Handler for POST /v1.25/plugins/nimble/set returned error: \"group.ip\" is not settable \r\n```\r\n\r\n**Describe the results you expected:**\r\nArgs should be set.\r\n\r\n**Additional information you deem important (e.g. issue happens only occasionally):**\r\nNone.\r\n\r\n**Output of `docker version`:**\r\n\r\n```\r\n# docker version\r\nClient:\r\n Version:      1.13.0\r\n API version:  1.25\r\n Go version:   go1.7.3\r\n Git commit:   49bf474\r\n Built:        Tue Jan 17 09:58:26 2017\r\n OS/Arch:      linux/amd64\r\n\r\nServer:\r\n Version:      1.13.0\r\n API version:  1.25 (minimum version 1.12)\r\n Go version:   go1.7.3\r\n Git commit:   49bf474\r\n Built:        Tue Jan 17 09:58:26 2017\r\n OS/Arch:      linux/amd64\r\n Experimental: false\r\n```\r\n\r\n**Output of `docker info`:**\r\n\r\n```\r\n# docker info\r\nContainers: 1\r\n Running: 0\r\n Paused: 0\r\n Stopped: 1\r\nImages: 6\r\nServer Version: 1.13.0\r\nStorage Driver: aufs\r\n Root Dir: /var/lib/docker/aufs\r\n Backing Filesystem: extfs\r\n Dirs: 7\r\n Dirperm1 Supported: true\r\nLogging Driver: json-file\r\nCgroup Driver: cgroupfs\r\nPlugins: \r\n Volume: local\r\n Network: bridge host macvlan null overlay\r\nSwarm: inactive\r\nRuntimes: runc\r\nDefault Runtime: runc\r\nInit Binary: docker-init\r\ncontainerd version: 03e5862ec0d8d3b3f750e19fca3ee367e13c090e\r\nrunc version: 2f7393a47307a16f8cee44a37b262e8b81021e3e\r\ninit version: 949e6fa\r\nSecurity Options:\r\n apparmor\r\n seccomp\r\n  Profile: default\r\nKernel Version: 4.4.0-62-generic\r\nOperating System: Ubuntu 16.04.1 LTS\r\nOSType: linux\r\nArchitecture: x86_64\r\nCPUs: 2\r\nTotal Memory: 3.859 GiB\r\nName: eforgette-u16p2\r\nID: UQWP:CEW2:4P3T:AFR2:3R7U:SUL3:QH2Y:5JGY:AYIY:64YM:WRT5:AZRJ\r\nDocker Root Dir: /var/lib/docker\r\nDebug Mode (client): false\r\nDebug Mode (server): true\r\n File Descriptors: 14\r\n Goroutines: 22\r\n System Time: 2017-02-07T09:53:59.166981721-08:00\r\n EventsListeners: 0\r\nRegistry: https://index.docker.io/v1/\r\nWARNING: No swap limit support\r\nExperimental: false\r\nInsecure Registries:\r\n 127.0.0.0/8\r\nLive Restore Enabled: false\r\n```\r\n\r\n**Additional environment details (AWS, VirtualBox, physical, etc.):**\r\nNone."},{"labels":["documentation",null],"text":"On doc page: https://github.com/docker/docker/blob/1.13.x/docs/reference/commandline/service_create.md\r\n\r\nPlease add [this example](https://github.com/docker/docker/issues/24879#issuecomment-278044244) about how to use `--container-label`.\r\n\r\nCheers!"},{"labels":["documentation",null],"text":"The 1.13.0 docs do not describe the effect of using `--memory-swap=0`. The default is `-1` which means unlimited. Does `0` mean no swap will be allowed, or do I have to set `--memory` and `--memory-swap` to the same value to accomplish that?\r\n\r\nhttps://docs.docker.com/engine/admin/resource_constraints/#/memory-swap-details"},{"labels":["documentation",null,null],"text":"Hi, All,\r\n\r\nI found in swagger.yml and api doc, there are some missing status codes about network:\r\n\r\n```\r\nGET /networks/(id or name) misses status code of 500;\r\nDELETE /networks/(id or name) missed status code of 403;\r\n```\r\n\r\nHere is my environment, we can see that there are two network has a prefix network id of `a`:\r\n```\r\nroot@ubuntu:~# docker network ls\r\nNETWORK ID          NAME                DRIVER              SCOPE\r\nb80b14598d1f        allen               bridge              local\r\nabe5fa290b6d        allen2              bridge              local\r\ndb8dfef4e6de        allen3              bridge              local\r\na89bfaea7f72        allen4              bridge              local\r\nfd6a89aad8ff        bridge              bridge              local\r\n85ded5476b05        docker_gwbridge     bridge              local\r\nd909a9f88b4c        host                host                local\r\nz1sybtvc99hu        ingress             overlay             swarm\r\n615a39ff6c47        none                null                local\r\n```\r\nThen we send an http request like the following pic, we found the status code is 500 which is not versioned in the swagger.yml nor api docs:\r\n<img width=\"782\" alt=\"2017-02-03 1 25 57\" src=\"https://cloud.githubusercontent.com/assets/9465626/22580645/06843094-ea15-11e6-845d-92a959624c63.png\">\r\n\r\n\r\nSecond, we send a DELETE request for network `host`, then daemon will response a status code of 403 which is also not versioned in swagger.yml or api docs. Here is test pic:\r\n![wechatimg4](https://cloud.githubusercontent.com/assets/9465626/22580703/a0a774d8-ea15-11e6-8ee1-32d82da5fbd7.jpeg)\r\n\r\n**Steps to reproduce the issue:**\r\n1.\r\n2.\r\n3.\r\n\r\n**Describe the results you received:**\r\nThere is no status code 500 for api endpoint `GET /networks/(id or name), nor 404 for `DELETE /networks/(id or name)`\r\n\r\n**Describe the results you expected:**\r\nrelated status codes are versioned in doc\r\n\r\n\r\n**Additional information you deem important (e.g. issue happens only occasionally):**\r\n\r\n**Output of `docker version`:**\r\n\r\n```\r\nroot@ubuntu:~# docker version\r\nClient:\r\n Version:      1.13.0\r\n API version:  1.25\r\n Go version:   go1.7.3\r\n Git commit:   49bf474\r\n Built:        Tue Jan 17 09:50:17 2017\r\n OS/Arch:      linux/amd64\r\n\r\nServer:\r\n Version:      1.13.0\r\n API version:  1.25 (minimum version 1.12)\r\n Go version:   go1.7.3\r\n Git commit:   49bf474\r\n Built:        Tue Jan 17 09:50:17 2017\r\n OS/Arch:      linux/amd64\r\n Experimental: false\r\n```\r\n\r\n**Output of `docker info`:**\r\n\r\n```\r\nroot@ubuntu:~# docker info\r\nContainers: 8\r\n Running: 0\r\n Paused: 0\r\n Stopped: 8\r\nImages: 37\r\nServer Version: 1.13.0\r\nStorage Driver: aufs\r\n Root Dir: /var/lib/docker/aufs\r\n Backing Filesystem: extfs\r\n Dirs: 202\r\n Dirperm1 Supported: true\r\nLogging Driver: json-file\r\nCgroup Driver: cgroupfs\r\nPlugins:\r\n Volume: local\r\n Network: bridge host macvlan null overlay\r\nSwarm: active\r\n NodeID: gkdoxio9hz1b325t544ftpry4\r\n Is Manager: true\r\n ClusterID: 3bidcebapq2115pts6cik50ah\r\n Managers: 1\r\n Nodes: 1\r\n Orchestration:\r\n  Task History Retention Limit: 5\r\n Raft:\r\n  Snapshot Interval: 10000\r\n  Number of Old Snapshots to Retain: 0\r\n  Heartbeat Tick: 1\r\n  Election Tick: 3\r\n Dispatcher:\r\n  Heartbeat Period: 5 seconds\r\n CA Configuration:\r\n  Expiry Duration: 3 months\r\n Node Address: 192.168.59.103\r\n Manager Addresses:\r\n  192.168.59.103:2377\r\nRuntimes: runc\r\nDefault Runtime: runc\r\nInit Binary: docker-init\r\ncontainerd version: 03e5862ec0d8d3b3f750e19fca3ee367e13c090e\r\nrunc version: 2f7393a47307a16f8cee44a37b262e8b81021e3e\r\ninit version: 949e6fa\r\nSecurity Options:\r\n apparmor\r\nKernel Version: 3.19.0-25-generic\r\nOperating System: Ubuntu 14.04.3 LTS\r\nOSType: linux\r\nArchitecture: x86_64\r\nCPUs: 1\r\nTotal Memory: 1.954 GiB\r\nName: ubuntu\r\nID: Q2ZC:GWDN:27OH:GRMH:G6QU:W7QP:4TIX:Q5F6:YEVK:45XP:EXHC:HOB5\r\nDocker Root Dir: /var/lib/docker\r\nDebug Mode (client): false\r\nDebug Mode (server): true\r\n File Descriptors: 32\r\n Goroutines: 132\r\n System Time: 2017-01-29T14:51:41.049720516+08:00\r\n EventsListeners: 0\r\nRegistry: https://index.docker.io/v1/\r\nWARNING: No swap limit support\r\nExperimental: false\r\nInsecure Registries:\r\n 127.0.0.0/8\r\nRegistry Mirrors:\r\n https://a.b.c/\r\nLive Restore Enabled: false\r\n```\r\n\r\n**Additional environment details (AWS, VirtualBox, physical, etc.):**\r\n"},{"labels":[null,"documentation"],"text":"The [ARG section](https://docs.docker.com/engine/reference/builder/#/arg) says the following:\r\n\r\n>**Warning:** It is not recommended to use build-time variables for passing secrets like github keys, user credentials etc. Build-time variable values are visible to any user of the image with the docker history command.\r\n\r\nThis, however, is not very helpful. The warning should mention what to use instead when you need secrets during build time."},{"labels":[null,"documentation",null],"text":"I read the v1.25 document, but I can't find any related information.  I was wondering if \"docker stack deploy\" api was the on roadmap.  "},{"labels":["documentation"],"text":"The [configuration file documentation](https://docs.docker.com/engine/reference/commandline/cli/#/configuration-files) states\r\n\r\n> The property psFormat specifies the default format for docker ps output. When the --format flag is not provided with the docker ps command, Docker’s client uses this property. If this property is not set, the client falls back to the default table format. For a list of supported formatting directives, see the [Formatting section in the docker ps documentation](https://docs.docker.com/engine/reference/commandline/ps/)\r\n\r\nThere's no such section in the docker ps documentation."},{"labels":["documentation"],"text":"A while ago, I started contributing to docker and was able to fix few doc and cli related issues.\r\nBut was unable to pick issues related to other areas like runtime, networking, etc. It is bit difficult to know how runc, containerd, etc are used by docker in its code.\r\n\r\nFor any beginner level contributor, it becomes difficult to understand the entire code flow or even a single docker component codebase.\r\nThere are documentation available for few of the tools but it don't mention anything about the tools used internally within docker.\r\nThere should be documentation explaining all tools and technologies that docker uses internally in the code like : `runc, libnetwork, containerd, docker-containerd-shim, ctr, cobra, rootfs, etc`\r\nShould also document : how docker creates namespaces, which all system calls do docker calls internally, how docker uses runc and so on.\r\nThere should be pointers to files and repository where the code resides for each of these tools like code for rootfs related stuff, image related stuff, etc.\r\nSuch documentation will really help beginner level contributor a lot."},{"labels":[null,"documentation",null],"text":"The docs at https://docs.docker.com/engine/reference/commandline/version/ say to get the template fields for `docker version` output, use `docker version --format '{{json .}}'` which gives me:\r\n\r\n```\r\n{\"Client\":{\"Version\":\"1.13.0\",\"ApiVersion\":\"1.25\",\"GitCommit\":\"49bf474\",\"GoVersion\":\"go1.7.3\",\"Os\":\"darwin\",\"Arch\":\"amd64\",\"BuildTime\":\"Wed Jan 18 16:20:26 2017\"},\"Server\":{\"Version\":\"1.13.0\",\"ApiVersion\":\"1.25\",\"MinAPIVersion\":\"1.12\",\"GitCommit\":\"49bf474\",\"GoVersion\":\"go1.7.3\",\"Os\":\"linux\",\"Arch\":\"amd64\",\"KernelVersion\":\"4.9.5-moby\",\"Experimental\":true,\"BuildTime\":\"Wed Jan 18 16:20:26 2017\"}}\r\n```\r\n\r\nSo I try\r\n```\r\ndocker version --format '{{.Server.ApiVersion}}'\r\n\r\ntemplate: :1:9: executing \"\" at <.Server.ApiVersion>: can't evaluate field ApiVersion in type *types.Version\r\n```\r\n\r\nEventually I guess and try\r\n```\r\ndocker version --format '{{.Server.APIVersion}}'\r\n1.25\r\n```\r\n\r\nSo the output on the JSON list has a different casing, making it hard to work out what the Go names are. I blame Go's weird JSON handling, but I wonder if it can be fixed? Or maybe the docs just could add a note?\r\n\r\nActually the JSON has the same name\r\n```\r\ndocker version --format '{{json .Server.ApiVersion}}'\r\n\r\ntemplate: :1:14: executing \"\" at <.Server.ApiVersion>: can't evaluate field ApiVersion in type *types.Version\r\ndocker version --format '{{json .Server.APIVersion}}'\r\n\"1.25\"\r\n```\r\n\r\n```\r\nClient:\r\n Version:      1.13.0\r\n API version:  1.25\r\n Go version:   go1.7.3\r\n Git commit:   49bf474\r\n Built:        Wed Jan 18 16:20:26 2017\r\n OS/Arch:      darwin/amd64\r\n\r\nServer:\r\n Version:      1.13.0\r\n API version:  1.25 (minimum version 1.12)\r\n Go version:   go1.7.3\r\n Git commit:   49bf474\r\n Built:        Wed Jan 18 16:20:26 2017\r\n OS/Arch:      linux/amd64\r\n Experimental: true\r\n```\r\n\r\ncc @thaJeztah "},{"labels":["documentation"],"text":"The page https://docs.docker.com/engine/admin/logging/log_tags/ provides link `logging context` to https://github.com/docker/docker/blob/master/daemon/logger/context.go that is not available any more."},{"labels":["documentation"],"text":"'docker/' is no longer automatically added as a prefix (after https://github.com/docker/docker/pull/22384), but https://docs.docker.com/engine/admin/logging/log_tags/ still prepends 'docker/'. That log-opt tag would no longer result in the example log line. It would be missing the 'docker/' prefix."},{"labels":["documentation"],"text":"Seems like the Dockerfile reference web-page does not exist anymore or if the url has been changed google does not find it for some reason.\r\n\r\nThe page is still on github https://github.com/docker/docker/blob/master/docs/reference/builder.md"},{"labels":["documentation",null,null],"text":"I am trying to understand the resource control related to the CPUs from Swarm Mode.\r\n\r\nFrom the docs I just see:\r\nhttps://docs.docker.com/engine/reference/commandline/service_create/\r\n--limit-cpu value                Limit CPUs (default 0.000)\r\n\r\nhttps://docs.docker.com/engine/reference/api/docker_remote_api_v1.24/#create-a-service\r\nNanoCPUs – CPU limit in units of 10-9 CPU shares.\r\n\r\nThe concept is completely different from the ones related to containers and I think there is a lack of documentation regarding the use of these parameters (limit-cpu and reserved-cpu)"},{"labels":["documentation",null],"text":"I'm trying to run the example in this documentation: https://godoc.org/github.com/docker/docker/client#hdr-Usage\r\n\r\n```go\r\npackage main\r\n\r\nimport (\r\n\t\"context\"\r\n\t\"fmt\"\r\n\r\n\t\"github.com/docker/docker/api/types\"\r\n\t\"github.com/docker/docker/client\"\r\n)\r\n\r\nfunc main() {\r\n\tcli, err := client.NewEnvClient()\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\r\n\tcontainers, err := cli.ContainerList(context.Background(), types.ContainerListOptions{})\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\r\n\tfor _, container := range containers {\r\n\t\tfmt.Printf(\"%s %s\\n\", container.ID[:10], container.Image)\r\n\t}\r\n}\r\n```\r\n\r\nBut for obvious reasons, when running the example against the latest release of Docker, 1.12.5, that doesn't work.\r\nThe error I get is: \r\n```\r\npanic: Error response from daemon: client is newer than server (client API version: 1.26, server API version: 1.24)\r\n```\r\nI understand that semantic versioning has no significance for this project, because the API breaks in point releases, but it would be cool if at least examples would work."},{"labels":["documentation",null],"text":"https://docs.docker.com/engine/reference/commandline/tag/\r\n\r\n````\r\nA tag name may contain lowercase and uppercase characters, digits, underscores, periods and dashes. A tag name may not start with a period or a dash and may contain a maximum of 128 characters.\r\n````\r\n\r\nWhat is a character? You mean ASCII Latin letters? The use of the word \"character\" is WRONG because a character refers to ANY code point! There is also more than one character referred to as dash and underscore in unicode. That needs to be specified properly too. I know you're probably referring to ASCII and not unicode, but you never actually write that."},{"labels":["documentation",null,null],"text":"**Description**\r\nI found that `docker service update` command document is not so detailed in https://github.com/docker/docker/blob/master/docs/reference/commandline/service_update.md\r\n\r\nI think there are lots of missing options in explanation, such as `--rollback`, and so on.\r\n\r\nIn addition, in the doc it says:\r\n```\r\nThe parameters are the same as [`docker service create`](service_create.md).\r\n``` \r\n\r\nI think that is not true.\r\n\r\nHere is the evidence:\r\n```\r\nroot@ubuntu:~# docker service create --help | grep \"\\-\\-\" | wc -l\r\n45\r\nroot@ubuntu:~# docker service update --help | grep \"\\-\\-\" | wc -l\r\n57\r\n```\r\n So, there is at least 12 parameters that are not the same.\r\n\r\nI think we need a detailed `docker service update` doc for the users. "},{"labels":["documentation",null,null,null],"text":"**Description**\r\n\r\nThere is very little information from API documentation that can explain how to use REST request to promote or demote swarm node from remote side. It seems I should post \"/nodes/id/update\" with parameters attached. However, some parameters like 'version' are vague. Can you provide an example to show promote/demote?\r\n\r\nSomething like:\r\n`curl --unix-socket /var/run/docker.sock -X POST -H 'Content-Type: application/json' -d '{\"version\": .., ..}' http:/nodes/id/update`\r\n\r\nThanks"},{"labels":["documentation",null],"text":"As far as I can tell all tutorials are for sandbox style swarm where multiple VMs run on a single physical host. I can't find a good resource that gives a simple tutorial on getting a swarm running across more than one physical machine. Maybe this would need to be done per OS, as my understanding is Windows and MacOS don't support this natively, but do when using docker-machine.\r\n\r\nIn an ideal tutorial, I think a user should be able to follow the commands on their OS, and get a swarm running across two physical hosts. \r\n\r\nFrom my Windows OS perspective, questions I'd like answered in such a tutorial (as these are areas where I'm stuck after looking at the current tutorials and also production swarm docs):\r\n* On Windows must I (or is it best practice to) use `docker-machine create --swarm etc`\r\n* What is the relationship between `docker-machine create --swarm etc`, `docker swarm etc`, `docker run swarm etc`. After trial and error I think I understand how the layers build upon each other, but an explicit description would be nice\r\n\r\nAs a final bit of context to this request, I'm trying to set up a two node swarm across two Windows hosts. I think I must use `docker-machine create --swarm etc` - and everything appears to work OK except the worker node is stuck in pending. I _think_ this is because TLS is enabled by default (and it can't be disabled, or disabling is too dangerous to provide any explanation of how to do it :P ) so that's my next thing to try... but it would be nice if there was a quick one pager that pointed out all the relevant steps."},{"labels":[null,"documentation"],"text":"The API documentation (and swagger.yaml) says `POST /images/create` can only return a 200 or a 500. Snippet from swagger.yaml:\r\n```yaml\r\n  /images/create:\r\n    post:\r\n      ...\r\n      responses:\r\n        200:\r\n          description: \"no error\"\r\n        500:\r\n          description: \"server error\"\r\n          schema:\r\n            $ref: \"#/definitions/ErrorResponse\"\r\n```\r\n\r\nHowever, it can also return a 404 if you try to pull an image and it isn't found in a registry. Here's an example:\r\n\r\n```\r\n$ curl -v --unix-socket /var/run/docker.sock -X POST 'http://localhost/images/create?fromImage=bogus'\r\n...\r\n< HTTP/1.1 404 Not Found\r\n< Api-Version: 1.25\r\n< Content-Length: 75\r\n< Content-Type: application/json\r\n< Date: Wed, 30 Nov 2016 16:54:26 GMT\r\n< Docker-Experimental: true\r\n< Server: Docker/1.13.0-rc2 (linux)\r\n<\r\n{\"message\":\"repository bogus not found: does not exist or no read access\"}\r\n...\r\n```\r\n\r\nThat 404 response should be documented."},{"labels":["documentation",null],"text":"Could we create a doc that has a table of plugins that are supported for 1.13?  Ideally in the future this should be in the hub / store but a doc to start would be great."},{"labels":["documentation",null,null],"text":"I noticed that when I created a new service using `docker swarm create`, the engine will try pulling the latest images even if the expected image is already contained in local `docker images`.\r\n\r\nSo my question is that once the service is running already with a certain scale number (such as scale=3), and then I push new latest image to registry, whether the engine automatically pull the latest image and restart the running services  serveral hours later?\r\n\r\nActually, I don't want it to automatically do updating when service is running."},{"labels":["documentation",null,null],"text":""},{"labels":[null,"documentation",null],"text":"Just adding this for discussion so that we can find how to resolve this; this occurred to me while reviewing https://github.com/docker/docker/pull/28734\r\n\r\nJekyll requires some non-standard markdown markup markers for certain parts of the documentation (`{% raw %}` / `{% end raw %}`). Before the switch to Jekyll, these markers were not needed, so it was possible to copy / re-use the same markdown for both the CLI reference, and the man-pages.\r\n\r\nIf we want to generate both the CLI docs and man-pages using the same source, we may have to make some changes so that the man-page generation understands those markers\r\n\r\n/cc @johndmulhausen @FrenchBen @dnephin @cpuguy83 "},{"labels":[null,"documentation",null,null],"text":"**Description**\r\n\r\nWhen pulling an image, over a slow connection, with two larger layers (>40M) followed by a small layer (<10M) it can fail due to i/o timout errors.\r\n\r\n**Steps to reproduce the issue:**\r\n1. Install docker on machine where connection can be throttled\r\n2. Throttle network to 2-3mbps\r\n3. `docker pull` image with a few larger layers\r\n\r\n**Describe the results you received:**\r\nDocker downloads three layers at a time. So initially the first three start to download. Then once one of them completes the fourth layer attempts to download, however all available bandwidth is being used by the two layers still downloading. When bandwidth is this low the request for the fourth layer fails. After a couple of retries the pull aborts with a `dial tcp ... i/o timeout` error, regardless of whether the other two layers are still successfully downloading.\r\n\r\n**Describe the results you expected:**\r\nIt would be nice to have a command line flag for `docker pull` along the lines of `--num-downloads=1` which downloads each layer one at a time. This way bandwidth would be available for each layer because the previous would've completed.\r\n\r\n**Output of `docker version`:**\r\n\r\n```\r\nClient:\r\n Version:      1.12.3\r\n API version:  1.24\r\n Go version:   go1.6.3\r\n Git commit:   6b644ec\r\n Built:\r\n OS/Arch:      linux/amd64\r\n\r\nServer:\r\n Version:      1.12.3\r\n API version:  1.24\r\n Go version:   go1.6.3\r\n Git commit:   6b644ec\r\n Built:\r\n OS/Arch:      linux/amd64\r\n```\r\n\r\n**Output of `docker info`:**\r\n\r\n```\r\nContainers: 3\r\n Running: 3\r\n Paused: 0\r\n Stopped: 0\r\nImages: 15\r\nServer Version: 1.12.3\r\nStorage Driver: devicemapper\r\n Pool Name: docker-253:1-33598067-pool\r\n Pool Blocksize: 65.54 kB\r\n Base Device Size: 10.74 GB\r\n Backing Filesystem: xfs\r\n Data file: /dev/loop0\r\n Metadata file: /dev/loop1\r\n Data Space Used: 465.2 MB\r\n Data Space Total: 107.4 GB\r\n Data Space Available: 27.72 GB\r\n Metadata Space Used: 1.294 MB\r\n Metadata Space Total: 2.147 GB\r\n Metadata Space Available: 2.146 GB\r\n Thin Pool Minimum Free Space: 10.74 GB\r\n Udev Sync Supported: true\r\n Deferred Removal Enabled: false\r\n Deferred Deletion Enabled: false\r\n Deferred Deleted Device Count: 0\r\n Data loop file: /var/lib/docker/devicemapper/devicemapper/data\r\n WARNING: Usage of loopback devices is strongly discouraged for production use. Use `--storage-opt dm.thinpooldev` to specify a custom block storage device.\r\n Metadata loop file: /var/lib/docker/devicemapper/devicemapper/metadata\r\n Library Version: 1.02.107-RHEL7 (2016-06-09)\r\nLogging Driver: json-file\r\nCgroup Driver: cgroupfs\r\nPlugins:\r\n Volume: local\r\n Network: host bridge null overlay\r\nSwarm: inactive\r\nRuntimes: runc\r\nDefault Runtime: runc\r\nSecurity Options: seccomp\r\nKernel Version: 3.10.0-327.36.3.el7.x86_64\r\nOperating System: CentOS Linux 7 (Core)\r\nOSType: linux\r\nArchitecture: x86_64\r\nCPUs: 1\r\nTotal Memory: 993.3 MiB\r\nName: localhost\r\nID: QKQN:YZZU:PCRX:WO66:FGG4:LUR4:PVR5:QBLM:NKE4:B52W:ZCAU:5TRQ\r\nDocker Root Dir: /var/lib/docker\r\nDebug Mode (client): false\r\nDebug Mode (server): false\r\nRegistry: https://index.docker.io/v1/\r\nWARNING: bridge-nf-call-iptables is disabled\r\nWARNING: bridge-nf-call-ip6tables is disabled\r\nInsecure Registries:\r\n 127.0.0.0/8\r\n```\r\n\r\n**Additional environment details (AWS, VirtualBox, physical, etc.):**\r\nVMware VM running Centos 7 on a home broadband connection\r\n"},{"labels":["documentation",null,null,null],"text":"**Description**\r\n\r\nDocker volume command documentation files do not fully describe expected behavior for contributors writing volume drivers. In particular, volume management in swarm mode can be troublesome for clustered storage systems when determining which node to create volumes and where to report volume list. This can lead to cartesian bugs when creating volumes (every node creates a volume based on the volume create request). Some plugin authors have been confused as to where to report a volume as available depending on how their storage system manages volumes.\r\n\r\n@anusha-ragunathan is aware of this and will be following up with more info.\r\n\r\nCC'ing @thaJeztah @stevvooe @vieux per Anusha's request."},{"labels":["documentation"],"text":"While it's clear how to use the `--tmpfs` flag on `docker run`, it isn't clear how to accomplish the same thing via the Remote API because the `HostConfig.Tmpfs` option is undocumented [here](https://docs.docker.com/engine/reference/api/docker_remote_api_v1.24/#/create-a-container).\r\n\r\nIt took a fair amount of trial-and-error to figure out that it's meant to look something like this:\r\n\r\n```js\r\n'HostConfig': {\r\n  // ...\r\n  'Tmpfs': {\r\n    '/tmp': 'rw,exec' // mount options (your choice)\r\n  }\r\n}\r\n```\r\n\r\nHopefully documenting this here, and eventually in the actual API docs, will save someone else from diving through [this](https://github.com/docker/docker/blob/master/api/types/container/host_config.go)."},{"labels":["documentation",null],"text":"https://github.com/docker/docker/pull/27998 seems to have been merged with without any documentation.\r\n\r\nThere should be.\r\n\r\nShort version how to use these features to get the ball rolling:\r\n\r\n1. Make a new `docker-compose.yml` or port an existing one, with `version: '3'` explicitly specified.  Seems the \"schema\" (layout of `services`, `networks`, etc. keys) did not change much in this new version but some parameters for services are unsupported.  I'm guessing `build:` is likely not supported as well?\r\n2. Run `docker deploy --compose-file docker-compose.yml stackname`.\r\n3. `docker stack` can be used to view the generated services for the \"stack\" defined by the Docker Compose file.  e.g., `docker stack ls` to view created stacks, `docker stack services stackname` to view the services associated with that stack, etc.\r\n\r\nFYI @londoncalling @johndmulhausen "},{"labels":[null,"documentation"],"text":"## Reasoning\r\n\r\nAs part of [my work to improve the API documentation](https://github.com/docker/docker.github.io/pull/210) I realised that \"Docker Remote API\" is a bit of a confusing name. The Docker Registry serves the [Docker Registry API](https://docs.docker.com/registry/spec/api/), Docker Cloud serves the [Docker Cloud API](https://docs.docker.com/registry/spec/api/), Docker Hub has (had?) the [Docker Hub API](https://docs.docker.com/v1.7/reference/api/docker-io_api/), Docker Trusted Registry has the [Docker Trusted Registry API](https://docs.docker.com/apidocs/overview/), but Engine is the odd one out.\r\n\r\nAs far as I can see, it's a historical artefact from when \"Docker\" was just the Engine. We've since added other APIs, and the original was never given a distinctive name.\r\n\r\nBesides consistency, here are some reasons for the change:\r\n\r\n1) \"Remote\" is redundant – all HTTP APIs are remote. \"Docker API\" would collide with other Docker APIs, hence \"Docker Engine API\".\r\n2) When you want to find the API for the Engine, it's not immediately clear that you should be looking for the \"Remote API\". (And vice versa, \"Remote API\" does not make it immediately obvious that it's the thing the Engine exposes.)\r\n3) The information architecture in the documentation is a bit weird, because \"Remote API\" doesn't comfortably sit under \"Engine\".\r\n\r\n## Implementation\r\n\r\nThe only place we reference it seems to be in the documentation and CLI docs, so looks like we can just do a big ol' search and replace.\r\n\r\nThe only breakage I can think of is if people search for \"Docker Remote API\" on Google and the documentation doesn't turn up. To counteract this, we can leave it as the \"Remote API\" in old versions of the API documentation, and add \"Remote API\" to the keywords of the latest API docs. Or, just a bit of copy like: \"In version X of Docker and below, the Engine API was called the Docker Remote API.\"\r\n\r\n/cc @dnephin @johndmulhausen @icecrime @shykes "},{"labels":["documentation",null,null,null],"text":"**Description**\r\n\r\nWhen I read documentation about live-restore option I supposed that it is supported by Docker for Windows. There is no one mention that it is not supported: https://docs.docker.com/engine/admin/live-restore/\r\n\r\nFurthermore, this documentation https://docs.docker.com/engine/reference/commandline/dockerd/ lists this option in \"Windows configuration file\" section. But I was not able to configure it in both ways (as an argument of dockerd and variable of daemon.json)\r\n\r\n**Steps to reproduce the issue:**\r\n1. When I try to run dockerd with --live-restore option I got a error\r\n```\r\nPS C:\\Users\\Administrator> dockerd --live-restore --register-service\r\nStatus: unknown flag: --live-restore\r\nSee 'dockerd --help'., Code: 125\r\n```\r\n2. When I added ``` \"live-restore\": true ``` to the daemon.json and started dockerd I got another error\r\n```\r\nPS C:\\Users\\Administrator> dockerd\r\nunable to configure the Docker daemon with file C:\\ProgramData\\docker\\config\\daemon.json: the following directives don't match any configuration option: live-restore\r\n```\r\n\r\n**Expected behaviour:**\r\nI expect that dockerd should run successfully with this option. Or at least have mention in the documentation that it is not supported\r\n\r\n**Output of `docker version`:**\r\n\r\n```\r\nClient:\r\n Version:      1.12.2-cs2-ws-beta\r\n API version:  1.25\r\n Go version:   go1.7.1\r\n Git commit:   050b611\r\n Built:        Tue Oct 11 02:35:40 2016\r\n OS/Arch:      windows/amd64\r\n\r\nServer:\r\n Version:      1.12.2-cs2-ws-beta\r\n API version:  1.25\r\n Go version:   go1.7.1\r\n Git commit:   050b611\r\n Built:        Tue Oct 11 02:35:40 2016\r\n OS/Arch:      windows/amd64\r\n```\r\n\r\n**Output of `docker info`:**\r\n\r\n```\r\nContainers: 1\r\n Running: 0\r\n Paused: 0\r\n Stopped: 1\r\nImages: 1\r\nServer Version: 1.12.2-cs2-ws-beta\r\nStorage Driver: windowsfilter\r\n Windows:\r\nLogging Driver: json-file\r\nPlugins:\r\n Volume: local\r\n Network: nat null overlay\r\nSwarm: inactive\r\nDefault Isolation: process\r\nKernel Version: 10.0 14393 (14393.321.amd64fre.rs1_release_inmarket.161004-2338)\r\nOperating System: Windows Server 2016 Datacenter\r\nOSType: windows\r\nArchitecture: x86_64\r\nCPUs: 2\r\nTotal Memory: 4 GiB\r\nName: EC2AMAZ-P7L1INT\r\nID: 6JSQ:WIFX:QJ25:TM5T:JBOG:CR7M:NSOW:X2AJ:QJXR:PRID:CLE2:6Q67\r\nDocker Root Dir: C:\\ProgramData\\docker\r\nDebug Mode (client): false\r\nDebug Mode (server): false\r\nRegistry: https://index.docker.io/v1/\r\nInsecure Registries:\r\n 127.0.0.0/8\r\nLive Restore Enabled: false\r\n```\r\n\r\n**Additional environment details (AWS, VirtualBox, physical, etc.):**\r\nIt is a EC2 instance which was launched from \"Windows Server 2016 with containers image\""},{"labels":["documentation",null],"text":"Currently our CI does not build the man pages, so we do not know if there are issues with PRs or problems with the build process.\r\n\r\nI tried to get this to work in #25884 and it mysteriously failed, it would never download the alpine packages from CI, and no one has an explanation (it is fine locally) so it needs looking at.\r\n\r\nOnce that is fixed I can reopen the PR to put them in the `tgz`.\r\n\r\ncc @dnephin \r\n"},{"labels":["documentation",null,null,null,null],"text":"[dns_docker_issue.zip](https://github.com/docker/docker/files/579919/dns_docker_issue.zip)\r\n\r\n**Description**\r\nAfter repeatedly hitting inconsistent behavior when starting up an application infrastructure with a number of swarm mode networks and services, I narrowed it down to a reproducible use-case.  It is still occasionally inconsistent, especially on AWS for docker beta (where I hit it initially), but I am able to reliably produce the issue on a local vbox docker-machine, which I detail below.\r\n\r\n**Steps to reproduce the issue:**\r\nAlso see the attached a script that I've used to run through the issue.\r\n\r\n1. Set-up a local docker-machine, into swarm mode.  I used ...\r\ndocker-machine create --driver virtualbox --virtualbox-memory 3072 --virtualbox-disk-size 20000 net-test-machine\r\ndocker swarm init --advertise-addr <machineip>\r\n\r\n2. Set up some swarm mode networks.  The order is important.  If the internal network is last, it works.\r\ndocker network create --driver overlay test_nw_1\r\ndocker network create --driver overlay --internal test_internal_nw\r\ndocker network create --driver overlay test_nw_2\r\n\r\n3. Run a service, on which you can check DNS\r\ndocker service create --name dns-test-service --restart-max-attempts=1 --replicas=1 --network test_nw_2 alpine nslookup www.google.com\r\n\r\n4. Check the results\r\ndocker service ps dns-test-service\r\n`ID                         NAME                    IMAGE   NODE              DESIRED STATE  CURRENT STATE          ERROR\r\n8kuzzunxubqdj4nzyn3v8kuc8  dns-test-service.1      alpine  net-test-machine  Shutdown       Failed 2 seconds ago   \"task: non-zero exit (1)\"\r\n7zihw5somacz9g945j8pac79h   \\_ dns-test-service.1  alpine  net-test-machine  Shutdown       Failed 12 seconds ago  \"task: non-zero exit (1)\"`\r\n\r\nThe above service was chosen as it was concise, but I could run the same test with an 'alpine sleep', exec in, and clearly see that Internet access was ok, but hosts would not resolve.\r\n\r\n\r\n**Describe the results you received:**\r\nWithin the container, the DNS doesn't work.  You can't ping www.google.com, but you can ping, for instance, 8.8.8.8\r\n\r\n**Describe the results you expected:**\r\nThe containers should have working DNS.\r\n\r\n**Additional information you deem important (e.g. issue happens only occasionally):**\r\nI've hit this on AWS for Docker Beta, and a local docker-machine VirtualBox environment.  In the case of Virtualbox, I experimented with altering the virtualbox to 1.12.1/.2 as well as 3, but the issue remained and I can reliably recreate this from scratch.\r\n\r\n\r\n**Output of `docker version`:**\r\n\r\n```\r\nClient:\r\n Version:      1.12.3\r\n API version:  1.24\r\n Go version:   go1.6.3\r\n Git commit:   6b644ec\r\n Built:        Wed Oct 26 21:44:32 2016\r\n OS/Arch:      linux/amd64\r\n\r\nServer:\r\n Version:      1.12.3\r\n API version:  1.24\r\n Go version:   go1.6.3\r\n Git commit:   6b644ec\r\n Built:        Wed Oct 26 23:26:11 2016\r\n OS/Arch:      linux/amd64\r\n```\r\n\r\n**Output of `docker info`:**\r\n\r\n```\r\nContainers: 53\r\n Running: 0\r\n Paused: 0\r\n Stopped: 53\r\nImages: 1\r\nServer Version: 1.12.3\r\nStorage Driver: aufs\r\n Root Dir: /mnt/sda1/var/lib/docker/aufs\r\n Backing Filesystem: extfs\r\n Dirs: 107\r\n Dirperm1 Supported: true\r\nLogging Driver: json-file\r\nCgroup Driver: cgroupfs\r\nPlugins:\r\n Volume: local\r\n Network: null overlay bridge host\r\nSwarm: active\r\n NodeID: caecow8uwead466cylqpa58m1\r\n Is Manager: true\r\n ClusterID: 2i7xeimsxlbbe3cndrwhzr5pv\r\n Managers: 1\r\n Nodes: 1\r\n Orchestration:\r\n  Task History Retention Limit: 5\r\n Raft:\r\n  Snapshot Interval: 10000\r\n  Heartbeat Tick: 1\r\n  Election Tick: 3\r\n Dispatcher:\r\n  Heartbeat Period: 5 seconds\r\n CA Configuration:\r\n  Expiry Duration: 3 months\r\n Node Address: 192.168.99.100\r\nRuntimes: runc\r\nDefault Runtime: runc\r\nSecurity Options: seccomp\r\nKernel Version: 4.4.27-boot2docker\r\nOperating System: Boot2Docker 1.12.3 (TCL 7.2); HEAD : 7fc7575 - Thu Oct 27 17:23:17 UTC 2016\r\nOSType: linux\r\nArchitecture: x86_64\r\nCPUs: 1\r\nTotal Memory: 2.937 GiB\r\nName: net-test-machine\r\nID: 2I6J:XEPY:H3MW:5EDI:ZODN:T4LD:MHY3:LCRW:A2WK:BXHN:P4JG:KIOJ\r\nDocker Root Dir: /mnt/sda1/var/lib/docker\r\nDebug Mode (client): false\r\nDebug Mode (server): true\r\n File Descriptors: 239\r\n Goroutines: 429\r\n System Time: 2016-11-09T03:02:31.153116336Z\r\n EventsListeners: 0\r\nUsername: codadoc\r\nRegistry: https://index.docker.io/v1/\r\nLabels:\r\n provider=virtualbox\r\nInsecure Registries:\r\n 127.0.0.0/8\r\n```\r\n\r\n**Additional environment details (AWS, VirtualBox, physical, etc.):**\r\n\r\nI have docker-machine version 0.8.2, build e18a919\r\n\r\nI hit the issue also in AWS for Docker Beta 1.12.3, where it was prevalent, but more inconsistent.\r\n\r\n\r\n"},{"labels":["documentation",null],"text":"<!--\r\nIf you are reporting a new issue, make sure that we do not have any duplicates\r\nalready open. You can ensure this by searching the issue list for this\r\nrepository. If there is a duplicate, please close your issue and add a comment\r\nto the existing issue instead.\r\n\r\nIf you suspect your issue is a bug, please edit your issue description to\r\ninclude the BUG REPORT INFORMATION shown below. If you fail to provide this\r\ninformation within 7 days, we cannot debug your issue and will close it. We\r\nwill, however, reopen it if you later provide the information.\r\n\r\nFor more information about reporting issues, see\r\nhttps://github.com/docker/docker/blob/master/CONTRIBUTING.md#reporting-other-issues\r\n\r\n---------------------------------------------------\r\nGENERAL SUPPORT INFORMATION\r\n---------------------------------------------------\r\n\r\nThe GitHub issue tracker is for bug reports and feature requests.\r\nGeneral support can be found at the following locations:\r\n\r\n- Docker Support Forums - https://forums.docker.com\r\n- IRC - irc.freenode.net #docker channel\r\n- Post a question on StackOverflow, using the Docker tag\r\n\r\n---------------------------------------------------\r\nBUG REPORT INFORMATION\r\n---------------------------------------------------\r\nUse the commands below to provide key information from your environment:\r\nYou do NOT have to include this information if this is a FEATURE REQUEST\r\n-->\r\n\r\n**Description**\r\n\r\n<!--\r\nBriefly describe the problem you are having in a few paragraphs.\r\n-->\r\n\r\n**Steps to reproduce the issue:**\r\n1. http://10.7.0.94:2375/services?filters={\"id\":[\"<node-id>\"]}\r\n2. http://10.7.0.94:2375/services?filters={\"id\":[\"<service-id>\"]}\r\n3.\r\n\r\n**Describe the results you received:**\r\n1. [ ]\r\n2. Service filtered by id.\r\n\r\n**Describe the results you expected:**\r\n1. Array of services filtered by node id.\r\n2. [ ]\r\n\r\n**Additional information you deem important (e.g. issue happens only occasionally):**\r\n\r\nAPI Docs state  <node id> as a filter parameter whereas service method filters by <service id> instead.\r\nHow can I get the list of services running on a particular node or with instances running on a specific node?\r\n\r\n**Output of `docker version`:**\r\n\r\n\r\n```\r\nDocker v 1.12.3\r\n```\r\n\r\n**Output of `docker info`:**\r\n\r\n```\r\n{\r\n  \"ID\": \"TZFE:3XXK:PYKN:NIYU:BEQF:YNPU:4LKC:WFFG:LJ52:4UGQ:WJXH:SWDS\",\r\n  \"Containers\": 4,\r\n  \"ContainersRunning\": 4,\r\n  \"ContainersPaused\": 0,\r\n  \"ContainersStopped\": 0,\r\n  \"Images\": 23,\r\n  \"Driver\": \"devicemapper\",\r\n  \"DriverStatus\": [\r\n    [\r\n      \"Pool Name\",\r\n      \"docker-253:0-752710-pool\"\r\n    ],\r\n    [\r\n      \"Pool Blocksize\",\r\n      \"65.54 kB\"\r\n    ],\r\n    [\r\n      \"Base Device Size\",\r\n      \"10.74 GB\"\r\n    ],\r\n    [\r\n      \"Backing Filesystem\",\r\n      \"xfs\"\r\n    ],\r\n    [\r\n      \"Data file\",\r\n      \"/dev/loop0\"\r\n    ],\r\n    [\r\n      \"Metadata file\",\r\n      \"/dev/loop1\"\r\n    ],\r\n    [\r\n      \"Data Space Used\",\r\n      \"7.089 GB\"\r\n    ],\r\n    [\r\n      \"Data Space Total\",\r\n      \"107.4 GB\"\r\n    ],\r\n    [\r\n      \"Data Space Available\",\r\n      \"100.3 GB\"\r\n    ],\r\n    [\r\n      \"Metadata Space Used\",\r\n      \"9.732 MB\"\r\n    ],\r\n    [\r\n      \"Metadata Space Total\",\r\n      \"2.147 GB\"\r\n    ],\r\n    [\r\n      \"Metadata Space Available\",\r\n      \"2.138 GB\"\r\n    ],\r\n    [\r\n      \"Thin Pool Minimum Free Space\",\r\n      \"10.74 GB\"\r\n    ],\r\n    [\r\n      \"Udev Sync Supported\",\r\n      \"true\"\r\n    ],\r\n    [\r\n      \"Deferred Removal Enabled\",\r\n      \"false\"\r\n    ],\r\n    [\r\n      \"Deferred Deletion Enabled\",\r\n      \"false\"\r\n    ],\r\n    [\r\n      \"Deferred Deleted Device Count\",\r\n      \"0\"\r\n    ],\r\n    [\r\n      \"Data loop file\",\r\n      \"/var/lib/docker/devicemapper/devicemapper/data\"\r\n    ],\r\n    [\r\n      \"Metadata loop file\",\r\n      \"/var/lib/docker/devicemapper/devicemapper/metadata\"\r\n    ],\r\n    [\r\n      \"Library Version\",\r\n      \"1.02.107-RHEL7 (2016-06-09)\"\r\n    ]\r\n  ],\r\n  \"SystemStatus\": null,\r\n  \"Plugins\": {\r\n    \"Volume\": [\r\n      \"local\"\r\n    ],\r\n    \"Network\": [\r\n      \"overlay\",\r\n      \"bridge\",\r\n      \"null\",\r\n      \"host\"\r\n    ],\r\n    \"Authorization\": null\r\n  },\r\n  \"MemoryLimit\": true,\r\n  \"SwapLimit\": true,\r\n  \"KernelMemory\": true,\r\n  \"CpuCfsPeriod\": true,\r\n  \"CpuCfsQuota\": true,\r\n  \"CPUShares\": true,\r\n  \"CPUSet\": true,\r\n  \"IPv4Forwarding\": true,\r\n  \"BridgeNfIptables\": true,\r\n  \"BridgeNfIp6tables\": false,\r\n  \"Debug\": false,\r\n  \"NFd\": 55,\r\n  \"OomKillDisable\": true,\r\n  \"NGoroutines\": 194,\r\n  \"SystemTime\": \"2016-11-08T16:46:49.153754781+01:00\",\r\n  \"ExecutionDriver\": \"\",\r\n  \"LoggingDriver\": \"json-file\",\r\n  \"CgroupDriver\": \"cgroupfs\",\r\n  \"NEventsListener\": 3,\r\n  \"KernelVersion\": \"3.10.0-327.36.3.el7.x86_64\",\r\n  \"OperatingSystem\": \"CentOS Linux 7 (Core)\",\r\n  \"OSType\": \"linux\",\r\n  \"Architecture\": \"x86_64\",\r\n  \"IndexServerAddress\": \"https://index.docker.io/v1/\",\r\n  \"RegistryConfig\": {\r\n    \"InsecureRegistryCIDRs\": [\r\n      \"127.0.0.0/8\"\r\n    ],\r\n    \"IndexConfigs\": {\r\n      \"docker.io\": {\r\n        \"Name\": \"docker.io\",\r\n        \"Mirrors\": null,\r\n        \"Secure\": true,\r\n        \"Official\": true\r\n      }\r\n    },\r\n    \"Mirrors\": null\r\n  },\r\n  \"NCPU\": 4,\r\n  \"MemTotal\": 8118247424,\r\n  \"DockerRootDir\": \"/var/lib/docker\",\r\n  \"HttpProxy\": \"\",\r\n  \"HttpsProxy\": \"\",\r\n  \"NoProxy\": \"\",\r\n  \"Name\": \"master\",\r\n  \"Labels\": null,\r\n  \"ExperimentalBuild\": false,\r\n  \"ServerVersion\": \"1.12.3\",\r\n  \"ClusterStore\": \"\",\r\n  \"ClusterAdvertise\": \"\",\r\n  \"SecurityOptions\": [\r\n    \"seccomp\"\r\n  ],\r\n  \"Runtimes\": {\r\n    \"runc\": {\r\n      \"path\": \"docker-runc\"\r\n    }\r\n  },\r\n  \"DefaultRuntime\": \"runc\",\r\n  \"Swarm\": {\r\n    \"NodeID\": \"6hftixtprlhop5addjmo7qnxe\",\r\n    \"NodeAddr\": \"10.7.0.94\",\r\n    \"LocalNodeState\": \"active\",\r\n    \"ControlAvailable\": true,\r\n    \"Error\": \"\",\r\n    \"RemoteManagers\": [\r\n      {\r\n        \"NodeID\": \"6hftixtprlhop5addjmo7qnxe\",\r\n        \"Addr\": \"10.7.0.94:2377\"\r\n      }\r\n    ],\r\n    \"Nodes\": 2,\r\n    \"Managers\": 1,\r\n    \"Cluster\": {\r\n      \"ID\": \"5lp9rqb6l7my0ek9jg21cwkf9\",\r\n      \"Version\": {\r\n        \"Index\": 819\r\n      },\r\n      \"CreatedAt\": \"2016-11-03T12:50:34.101987364Z\",\r\n      \"UpdatedAt\": \"2016-11-08T12:50:34.44261306Z\",\r\n      \"Spec\": {\r\n        \"Name\": \"default\",\r\n        \"Orchestration\": {\r\n          \"TaskHistoryRetentionLimit\": 5\r\n        },\r\n        \"Raft\": {\r\n          \"SnapshotInterval\": 10000,\r\n          \"LogEntriesForSlowFollowers\": 500,\r\n          \"HeartbeatTick\": 1,\r\n          \"ElectionTick\": 3\r\n        },\r\n        \"Dispatcher\": {\r\n          \"HeartbeatPeriod\": 5000000000\r\n        },\r\n        \"CAConfig\": {\r\n          \"NodeCertExpiry\": 7776000000000000\r\n        },\r\n        \"TaskDefaults\": {}\r\n      }\r\n    }\r\n  },\r\n  \"LiveRestoreEnabled\": false\r\n}\r\n```\r\n\r\n**Additional environment details (AWS, VirtualBox, physical, etc.):**\r\nPhysical"},{"labels":["documentation",null,null,null],"text":"---------------------------------------------------\r\nBUG REPORT INFORMATION\r\n---------------------------------------------------\r\n**Description**\r\nWhen a new user defined docker bridge network is created and the docker daemon has `iptables=false` and `ip-masq=true` the nat masquerade rules are not created for the user defined bridge network. This causes machines attached to this network to have no external access outside of the docker host.\r\n\r\n***Use-Case**\r\nWe are running several containers on a single docker host and don't want Docker to automatically create iptables allow rules for all of the exposed ports for security reasons. We then manage our own iptables rules via Puppet.  Not sure if this is a bug but at the very least the documentation [https://docs.docker.com/engine/reference/commandline/dockerd/#/miscellaneous-options](url) is lacking any details when setting the `iptables` and `ip-masq` settings other then there explicit purpose. When setting `iptables` to false and `ip-masq` to true should Docker still create the masquerade rules related to the containers? I even went ahead and set `com.docker.network.bridge.enable_ip_masquerade=true` and the rules are not created. \r\n\r\n**Steps to reproduce the issue:**\r\n1. Setup a Ubuntu 16.04 Server 64 bit with docker 1.12.3. For this example this server has an IP address on eth0 of 192.168.100.40 and the default gateway is 192.168.100.1. The default gateway accepts pings.\r\n2. Set your Docker daemon with the following flags: `--ip-forward=true --iptables=false --ip-masq=true`\r\n3. Create a new Docker bridge network: `docker network create --driver bridge --gateway=192.168.10.1 --subnet=192.168.10.0/24 --opt \"com.docker.network.bridge.name\"=\"example\" example `\r\n4. Attach and run any container image so you can issue ping commands to the network created above: `docker run -itd --network=example busybox`\r\n5. Exec into the container and attempt to ping 192.168.100.1. \r\n\r\n**Describe the results you received:**\r\nA tcpdump on the server shows packets leaving the host to the correct destination and source but the masquerade iptables nat rules are never created for the new bridge network thus ipables doesnt know were to send the original packets. When I delete the network, turn on `iptables=true`, and recreate the network the correct masquerade rules are created along with all of the rules for the exposed ports which we dont want. \r\n\r\n**Describe the results you expected:**\r\nSince `ip-masq=true` I was expecting the nat masquerading rules to still be created and the exposed ports to not be created in the DOCKER chain. I didnt see anything in the documentation that mentioned the nat rules not being created with the `--iptables=false --ip-masq=true` settings in place. It would be good if the official documentation had more details in how docker is interacting with iptables on the host. At the very least if you disable iptables nat masquerade rules will not be created event though the settings are in place at the daemon and network level.\r\n\r\nI have a workaround of adding the nat masquerade rules via puppet but is this the expected behavior? \r\n\r\n\r\n**Output of `docker version`:**\r\n\r\n```\r\nClient:\r\n Version:      1.12.3\r\n API version:  1.24\r\n Go version:   go1.6.3\r\n Git commit:   6b644ec\r\n Built:        Wed Oct 26 22:01:48 2016\r\n OS/Arch:      linux/amd64\r\n\r\nServer:\r\n Version:      1.12.3\r\n API version:  1.24\r\n Go version:   go1.6.3\r\n Git commit:   6b644ec\r\n Built:        Wed Oct 26 22:01:48 2016\r\n OS/Arch:      linux/amd64\r\n```\r\n\r\n**Output of `docker info`:**\r\n\r\n```\r\nContainers: 15\r\n Running: 15\r\n Paused: 0\r\n Stopped: 0\r\nImages: 41\r\nServer Version: 1.12.3\r\nStorage Driver: aufs\r\n Root Dir: /opt/data/aufs\r\n Backing Filesystem: extfs\r\n Dirs: 189\r\n Dirperm1 Supported: true\r\nLogging Driver: json-file\r\nCgroup Driver: cgroupfs\r\nPlugins:\r\n Volume: local\r\n Network: host null bridge overlay\r\nSwarm: inactive\r\nRuntimes: runc\r\nDefault Runtime: runc\r\nSecurity Options: apparmor seccomp\r\nKernel Version: 4.4.0-45-generic\r\nOperating System: Ubuntu 16.04.1 LTS\r\nOSType: linux\r\nArchitecture: x86_64\r\nCPUs: 8\r\nTotal Memory: 7.796 GiB\r\nName: server..com\r\nID: XURH:HQYH:VWQ6:25GJ:DB2C:4RVF:B2KL:LJI3:GJ2W:ZYV7:C4T6:Z5LY\r\nDocker Root Dir: /opt/data\r\nDebug Mode (client): false\r\nDebug Mode (server): false\r\nRegistry: https://index.docker.io/v1/\r\nWARNING: bridge-nf-call-iptables is disabled\r\nWARNING: bridge-nf-call-ip6tables is disabled\r\nInsecure Registries:\r\n 127.0.0.0/8\r\n\r\n```\r\n\r\n**Additional environment details (AWS, VirtualBox, physical, etc.):**\r\n"},{"labels":["documentation",null],"text":"https://github.com/docker/docker/pull/27995 added templating features for swarm mode, but they were not documented yet.\r\n\r\nThe docs should be updated to document the templating, and include examples on how / when to use them"},{"labels":["documentation",null,null,null],"text":"---------------------------------------------------\r\nBUG REPORT INFORMATION\r\n---------------------------------------------------\r\n**Description**\r\nI followed Docker Seccomp usage guide [here](https://docs.docker.com/engine/security/seccomp/) and used [default profile](https://raw.githubusercontent.com/docker/docker/master/profiles/seccomp/default.json), and got error:\r\n`docker: Error response from daemon: invalid header field value \"oci runtime error: container_linux.go:247: starting container process caused \\\"empty string is not a valid syscall\\\"\\n\".\r\n`\r\n\r\n**Steps to reproduce the issue:**\r\n(Essentially just follow the guide in above link)\r\n1. Download default seccomp profile json from [here](https://raw.githubusercontent.com/docker/docker/master/profiles/seccomp/default.json)\r\n2. docker run --rm -it --security-opt seccomp=/path/to/seccomp/profile.json hello-world\r\n\r\n**Output of `docker version`:**\r\n\r\n```\r\nClient:\r\n Version:      1.12.3\r\n API version:  1.24\r\n Go version:   go1.6.3\r\n Git commit:   6b644ec\r\n Built:        Wed Oct 26 22:01:48 2016\r\n OS/Arch:      linux/amd64\r\n\r\nServer:\r\n Version:      1.12.3\r\n API version:  1.24\r\n Go version:   go1.6.3\r\n Git commit:   6b644ec\r\n Built:        Wed Oct 26 22:01:48 2016\r\n OS/Arch:      linux/amd64\r\n```\r\n\r\n**Output of `docker info`:**\r\n```\r\nContainers: 0\r\n Running: 0\r\n Paused: 0\r\n Stopped: 0\r\nImages: 2\r\nServer Version: 1.12.3\r\nStorage Driver: aufs\r\n Root Dir: /var/lib/docker/aufs\r\n Backing Filesystem: extfs\r\n Dirs: 2\r\n Dirperm1 Supported: true\r\nLogging Driver: json-file\r\nCgroup Driver: cgroupfs\r\nPlugins:\r\n Volume: local\r\n Network: null host bridge overlay\r\nSwarm: inactive\r\nRuntimes: runc\r\nDefault Runtime: runc\r\nSecurity Options: apparmor seccomp\r\nKernel Version: 4.4.0-31-generic\r\nOperating System: Ubuntu 16.04.1 LTS\r\nOSType: linux\r\nArchitecture: x86_64\r\nCPUs: 1\r\nTotal Memory: 7.797 GiB\r\nName: myserver\r\nID: RZN7:A4OM:DVGC:3OUT:GEBY:ANAX:3DGF:BE7G:FZ4L:H6O2:4XG7:DGDF\r\nDocker Root Dir: /var/lib/docker\r\nDebug Mode (client): false\r\nDebug Mode (server): false\r\nRegistry: https://index.docker.io/v1/\r\nWARNING: No swap limit support\r\nInsecure Registries:\r\n 127.0.0.0/8\r\n```\r\n\r\nIs this json format outdated? Where can I find a proper guide to write correct one? Thanks in advance!"},{"labels":["documentation"],"text":"per https://github.com/docker/docker/pull/25820#issuecomment-256800737, we need to add documentation for the new metrics API, and probably some examples in other parts of the documentation to show how it's used.\n\nopening this issue for tracking, so that we unblock the PR that implements the feature\n\n/cc @mstanleyjones @crosbymichael  - assigning you both so that we don't forget :smile:\n"},{"labels":["documentation",null,null,null],"text":"---\n## BUG REPORT INFORMATION\n\nServices on overlay network can not communicate with services on other nodes in the same overlay network unless \"All traffic\" is open in an AWS security group. Opening only the documented required ports; `2377`, `4789`, and `7946` on UDP and TCP are insufficient. Even opening all TCP and UDP ports does not work, only selecting \"All traffic\" does.\n\n**Steps to reproduce the issue:**\nOn AWS, inside a VPC:\n1. Create a swarm with `swarm init`, and add other nodes via the supplied `join` command\n2. Create an overlay network, e.g. `docker network create --driver overlay --subnet 10.0.9.0/24 --opt encrypted newnet`\n3. Add a service (service1) to to one node (node1) in the cluster, then add another service (service2) to a different node (node2) in the cluster\n4. Open ports `2377`, `4789`, and `7946` on UDP and TCP in the relevant AWS security group\n4. From inside the service2 container, try to access a port in service1 from service2. For example, if service1 is MySQL, try `telnet service1 3306` from service2\n\n**Describe the results you received:**\nNo access to service1 ports from service2. Only selecting to open \"All traffic\" in the security group works (not even \"All TCP\" and \"All UDP\").\n\n**Describe the results you expected:**\nBe able to reach service1 by only opening the ports required by Docker Swarm (above).\n\n**Additional information you deem important (e.g. issue happens only occasionally):**\nThe strange part is that even selecting \"All TCP\" and \"All UDP\" does not work, only \"All traffic\". So what needs to be open that's not TCP or UDP?\n\n**Output of `docker version`:**\n\n```\nClient:\n Version:      1.12.2\n API version:  1.24\n Go version:   go1.6.3\n Git commit:   bb80604\n Built:        Tue Oct 11 18:29:41 2016\n OS/Arch:      linux/amd64\n\nServer:\n Version:      1.12.2\n API version:  1.24\n Go version:   go1.6.3\n Git commit:   bb80604\n Built:        Tue Oct 11 18:29:41 2016\n OS/Arch:      linux/amd64\n```\n\n**Output of `docker info`:**\n\n```\nContainers: 0\n Running: 0\n Paused: 0\n Stopped: 0\nImages: 0\nServer Version: 1.12.2\nStorage Driver: aufs\n Root Dir: /var/lib/docker/aufs\n Backing Filesystem: extfs\n Dirs: 0\n Dirperm1 Supported: true\nLogging Driver: json-file\nCgroup Driver: cgroupfs\nPlugins:\n Volume: local\n Network: host null bridge overlay\nSwarm: active\n NodeID: f43qckhb6hifw95hki6ihzbdt\n Is Manager: true\n ClusterID: 3ae1kkzosksoqvqgz6kclguhm\n Managers: 1\n Nodes: 3\n Orchestration:\n  Task History Retention Limit: 5\n Raft:\n  Snapshot Interval: 10000\n  Heartbeat Tick: 1\n  Election Tick: 3\n Dispatcher:\n  Heartbeat Period: 5 seconds\n CA Configuration:\n  Expiry Duration: 3 months\n Node Address: 10.0.11.215\nRuntimes: runc\nDefault Runtime: runc\nSecurity Options: apparmor seccomp\nKernel Version: 4.4.0-43-generic\nOperating System: Ubuntu 16.04.1 LTS\nOSType: linux\nArchitecture: x86_64\nCPUs: 1\nTotal Memory: 1.952 GiB\nName: ip-10-0-11-215\nID: 6LVV:2FUY:E2TD:DKIR:LFAX:3HF6:6ZZI:65CM:F7YY:CQ2X:IVJO:F23E\nDocker Root Dir: /var/lib/docker\nDebug Mode (client): false\nDebug Mode (server): false\nRegistry: https://index.docker.io/v1/\nWARNING: No swap limit support\nLabels:\n type=master\nInsecure Registries:\n 127.0.0.0/8\n```\n\n**Additional environment details (AWS, VirtualBox, physical, etc.):**\nRunning in AWS inside a VPC on in it's private subnet.\n"},{"labels":["documentation",null,null,null],"text":"<!--\nIf you are reporting a new issue, make sure that we do not have any duplicates\nalready open. You can ensure this by searching the issue list for this\nrepository. If there is a duplicate, please close your issue and add a comment\nto the existing issue instead.\n\nIf you suspect your issue is a bug, please edit your issue description to\ninclude the BUG REPORT INFORMATION shown below. If you fail to provide this\ninformation within 7 days, we cannot debug your issue and will close it. We\nwill, however, reopen it if you later provide the information.\n\nFor more information about reporting issues, see\nhttps://github.com/docker/docker/blob/master/CONTRIBUTING.md#reporting-other-issues\n\n---------------------------------------------------\nBUG REPORT INFORMATION\n---------------------------------------------------\nUse the commands below to provide key information from your environment:\nYou do NOT have to include this information if this is a FEATURE REQUEST\n-->\n\n**Description**\n\nI have docker engine running in swarm mode with 4 nodes in the swarm cluster\n\n**Steps to reproduce the issue:**\n1. I run the command to start a docker service using an image stored in the dockerhub private repo.\nsudo docker service create --name serviceName  --network myNetwork --publish 8761:8761 orgName/imageName:version\n\n**Describe the results you received:**\n1. It seems that if the image does not exist in the local node where the service is scheduled to run, docker does not automatically pull the image from the private repo and the service fails to start\n2. However if I manually pull the image in all of the nodes in the cluster and then start the service, it seems to work. \n\n**Describe the results you expected:**\n1. I expected docker to automatically pull the image from the private repo hosted in the hub. To make sure that there are no connectivity issues I logged into the private repo using docker login in each of the 4 nodes in the cluster to make sure that the credentials to be used to connect to the repo are stored locally in the json file. Is this how its supposed to work? Should it not automatically pull from hub if the image is not available locally? Im I missing something?\n\nAdditional information you deem important (e.g. issue happens only occasionally):**\n\n**Output of `docker version`:**\n\n```\nClient:\n Version:      1.12.1\n API version:  1.24\n Go version:   go1.6.3\n Git commit:   23cf638\n Built:\n OS/Arch:      linux/amd64\n\nServer:\n Version:      1.12.1\n API version:  1.24\n Go version:   go1.6.3\n Git commit:   23cf638\n Built:\n OS/Arch:      linux/amd64\n\n\n```\n\n**Output of `docker info`:**\n\n```\nContainers: 1\n Running: 0\n Paused: 0\n Stopped: 1\nImages: 201\nServer Version: 1.12.1\nStorage Driver: devicemapper\n Pool Name: docker-253:0-204218855-pool\n Pool Blocksize: 65.54 kB\n Base Device Size: 10.74 GB\n Backing Filesystem: xfs\n Data file: /dev/loop0\n Metadata file: /dev/loop1\n Data Space Used: 4.401 GB\n Data Space Total: 107.4 GB\n Data Space Available: 30.95 GB\n Metadata Space Used: 7.598 MB\n Metadata Space Total: 2.147 GB\n Metadata Space Available: 2.14 GB\n Thin Pool Minimum Free Space: 10.74 GB\n Udev Sync Supported: true\n Deferred Removal Enabled: false\n Deferred Deletion Enabled: false\n Deferred Deleted Device Count: 0\n Data loop file: /var/lib/docker/devicemapper/devicemapper/data\n WARNING: Usage of loopback devices is strongly discouraged for production use. Use `--storage-opt dm.thinpooldev` to specify a custom block storage device.\n Metadata loop file: /var/lib/docker/devicemapper/devicemapper/metadata\n Library Version: 1.02.107-RHEL7 (2016-06-09)\nLogging Driver: json-file\nCgroup Driver: cgroupfs\nPlugins:\n Volume: local\n Network: bridge host null overlay\nSwarm: active\n NodeID: b11gagg35v2tojxnqemze6ey6\n Is Manager: true\n ClusterID: 7f9kda0i54yj0jl8js0vt84u5\n Managers: 3\n Nodes: 4\n Orchestration:\n  Task History Retention Limit: 5\n Raft:\n  Snapshot Interval: 10000\n  Heartbeat Tick: 1\n  Election Tick: 3\n Dispatcher:\n  Heartbeat Period: 5 seconds\n CA Configuration:\n  Expiry Duration: 3 months\n Node Address: 10.1.2.56\nRuntimes: runc\nDefault Runtime: runc\nSecurity Options: seccomp\nKernel Version: 3.10.0-327.28.2.el7.x86_64\nOperating System: Red Hat Enterprise Linux Server 7.2 (Maipo)\nOSType: linux\nArchitecture: x86_64\nCPUs: 4\nTotal Memory: 47.01 GiB\nName: cmcmdmz101\nID: N6XG:EQOG:FPUM:GYCY:HXHQ:DOVU:AHFM:TFBB:4GM6:WKC3:QCN2:6RLP\nDocker Root Dir: /var/lib/docker\nDebug Mode (client): false\nDebug Mode (server): false\nUsername: cmcdocker\nRegistry: https://index.docker.io/v1/\nWARNING: bridge-nf-call-ip6tables is disabled\nInsecure Registries:\n 127.0.0.0/8\n\n```\n\n**Additional environment details (AWS, VirtualBox, physical, etc.):**\n"},{"labels":["documentation",null],"text":"Docker daemon can be started with MountFlags set to private, slave or shared. systemd makes shared as the default. Although this works for most users, there are some users that run into issues with mounts depending on their use case and MountFlags setting.\n\nCreate a document explaining the side effects of daemon MountFlags especially on: \n1. volumes exposed by plugins\n2. volumes exposed by local drivers and mounting a host directory. \n\ncc @cpuguy83 \n"},{"labels":[null,"documentation",null,null,null],"text":"<!--\nIf you are reporting a new issue, make sure that we do not have any duplicates\nalready open. You can ensure this by searching the issue list for this\nrepository. If there is a duplicate, please close your issue and add a comment\nto the existing issue instead.\n\nIf you suspect your issue is a bug, please edit your issue description to\ninclude the BUG REPORT INFORMATION shown below. If you fail to provide this\ninformation within 7 days, we cannot debug your issue and will close it. We\nwill, however, reopen it if you later provide the information.\n\nFor more information about reporting issues, see\nhttps://github.com/docker/docker/blob/master/CONTRIBUTING.md#reporting-other-issues\n\n---------------------------------------------------\nBUG REPORT INFORMATION\n---------------------------------------------------\nUse the commands below to provide key information from your environment:\nYou do NOT have to include this information if this is a FEATURE REQUEST\n-->\n\n**Description**\nWhen I ran the \"info\" path in the Remote API v1.24 I got a lot more fields then the documentation said, these are:\n\nPlugins > Authorization\nCPUShares\nCPUSet\nBridgeNfIptables\nBridgeNfIp6tables\nExecutionDriver\nLoggingDriver\nRegistryConfig > Mirrors??? (the IndexConfigs have array of Mirrors but the RegistryConfig itself has also Mirrors, maybe a bug?)\nClusterAdvertise\nRuntimes\nDefaultRuntime\nSwarm (has lots of things in it)\nLiveRestoreEnabled\n\nI attach the raw response json I got:\n[info.txt](https://github.com/docker/docker/files/512218/info.txt)\n\n**Steps to reproduce the issue:**\n1. run \"/info\" on the remote api v1.24\n2. check the response JSON and compare to docs\n3.\n\n**Describe the results you received:**\nLots of more fields then documentation has\n\n**Describe the results you expected:**\nDocumentation of all fields\n\n**Additional information you deem important (e.g. issue happens only occasionally):**\n\n**Output of `docker version`:**\n\n```\nClient:\n Version:      1.12.1\n API version:  1.24\n Go version:   go1.7\n Git commit:   23cf638\n Built:        Fri Aug 19 02:03:02 2016\n OS/Arch:      linux/amd64\n\nServer:\n Version:      1.12.1\n API version:  1.24\n Go version:   go1.7\n Git commit:   23cf638\n Built:        Fri Aug 19 02:03:02 2016\n OS/Arch:      linux/amd64\n\n```\n\n**Output of `docker info`:**\n\n```\nContainers: 1\n Running: 0\n Paused: 0\n Stopped: 1\nImages: 6\nServer Version: 1.12.1\nStorage Driver: devicemapper\n Pool Name: docker-253:1-10223820-pool\n Pool Blocksize: 65.54 kB\n Base Device Size: 10.74 GB\n Backing Filesystem: xfs\n Data file: /dev/loop0\n Metadata file: /dev/loop1\n Data Space Used: 664.9 MB\n Data Space Total: 107.4 GB\n Data Space Available: 106.7 GB\n Metadata Space Used: 1.389 MB\n Metadata Space Total: 2.147 GB\n Metadata Space Available: 2.146 GB\n Thin Pool Minimum Free Space: 10.74 GB\n Udev Sync Supported: true\n Deferred Removal Enabled: false\n Deferred Deletion Enabled: false\n Deferred Deleted Device Count: 0\n Data loop file: /var/lib/docker/devicemapper/devicemapper/data\n WARNING: Usage of loopback devices is strongly discouraged for production use. Use `--storage-opt dm.thinpooldev` to specify a custom block storage device.\n Metadata loop file: /var/lib/docker/devicemapper/devicemapper/metadata\n Library Version: 1.02.135 (2016-09-26)\nLogging Driver: json-file\nCgroup Driver: cgroupfs\nPlugins:\n Volume: local\n Network: overlay null host bridge\nSwarm: inactive\nRuntimes: runc\nDefault Runtime: runc\nSecurity Options: seccomp\nKernel Version: 4.7.5-1-ARCH\nOperating System: Arch Linux\nOSType: linux\nArchitecture: x86_64\nCPUs: 8\nTotal Memory: 23.49 GiB\nName: karl_rog\nID: IOCD:Y7FK:RDB6:43I7:QLCF:OBP5:LKJR:QLYD:NC6U:V7GA:ROQA:TCVE\nDocker Root Dir: /var/lib/docker\nDebug Mode (client): false\nDebug Mode (server): false\nRegistry: https://index.docker.io/v1/\nInsecure Registries:\n codeslasher.se:5000\n 127.0.0.0/8\n```\n\n**Additional environment details (AWS, VirtualBox, physical, etc.):**\n"},{"labels":["documentation",null,null,null],"text":"Although docker-run(1) (1.12.1) states that :\n\n`To disable automatic copying of data from the container path to the volume, use the nocopy flag. The nocopy flag can be set on bind mounts and named volumes.`\n\nwhen I do :\n\n`docker run -v /home/mandas/foo:/tmp:nocopy busybox`\n\nI get :\n\n`docker: Error response from daemon: Invalid bind mount spec \"/home/mandas/foo:/tmp:nocopy\": invalid mode: nocopy.`\n\nIs the man page wrong or is it an issue?\n"},{"labels":["documentation",null],"text":"nocopy volume bind option is not mentioned in the respective 1.23 remote API page, although it is implemented and mentioned in changelog as well.\n\nhttps://docs.docker.com/engine/reference/api/docker_remote_api/#v1-23-api-changes\nhttps://docs.docker.com/engine/reference/api/docker_remote_api_v1.23\n"},{"labels":["documentation",null,null],"text":"https://docs.docker.com/engine/userguide/storagedriver/device-mapper-driver/#/for-a-direct-lvm-mode-configuration\n\nThis doc informs users to push all images to a remote registry and then informs to rm -f /var/lib/docker, thus removing everything including certs that may be stored under this directory tree.  For good reasons, we instruct users to change from the default devicemapper loopback configuration that we recommended in early releases, of which they maybe running UCP on those nodes.   Deleting the certs in /var/lib/docker/discovery_certs creates a far more complex recovery scenario than just copying the certs back after the lvm changes have been completed.  This is the error received when you try to start up the docker daemon after following the doc instructions on a UCP node.\n\nInitializing discovery with TLS\nError starting daemon: discovery initialization failed (Could not read CA certificate \\ \"/var/lib/docker/discovery_certs/ca.pem\\\" open /var/lib/docker/discovery_certs/ca.pem: no such file or directory\n\nCan additional steps be written into the referenced doc perhaps such as copy the /var/lib/docker directory to /tmp to enable the recovery of items such as certs, etc in order to  keep from  placing users into extensive recovery scenarios.  thnx\n"},{"labels":["documentation",null],"text":"On the `docker service ps` documentation page (https://docs.docker.com/engine/reference/commandline/service_ps/) only three filters are shown as supported: id, name and desired-state. However, I discovered that there is also the \"node\" filter which matches tasks by either the hostname of the node they are deployed on, or the NodeID of that node (confirmed on 1.12.1).\n\nThe API reference for the tasks API correctly mentions that the NodeID can be used as a parameter to the node filter (https://docs.docker.com/engine/reference/api/docker_remote_api_v1.24/#/list-tasks), but omits the fact that the hostname of the node can be also used as the value to that filter\n"},{"labels":["documentation",null],"text":"I failed to find in the documentation or in the issues any information regarding how many swarm managers I should declare. Sure, more than one if you want high availability, but how many? and why not make all nodes managers? what is the tradeoff of being a manager vs a worker?\n"},{"labels":["documentation",null,null],"text":"The restart-policies for `docker run` had intuitive names like `no, on-failure, always` and we [have docs that explain what they mean](https://docs.docker.com/engine/reference/run/#restart-policies-restart).\n\nWith `docker service`, the restart policies are a bit different. You have options like `none, on-failure, or any`. It's not obvious what the `restart-policy=any` means, so we need to have some documentation for it.\n"},{"labels":["documentation",null],"text":"In reading https://docs.docker.com/engine/reference/builder/#/entrypoint, I find it a bit confusing to follow and understand with confidence.\n\nHere are a few questions which result:\n- Is there any way to pass the list form of `--entrypoint`, so when using `docker run` on the cli, your command will receive `SIGTERM` or other signals?\n- If you want to ensure your commands receive those signals, you _must_ use the list form for `--entrypoint` or `ENTRYPOINT`, correct?\n- When no `--entrypoint` is specified, what is the behavior of docker's signal passing?\n- Does the `--command` parameter (in either the list form or not) affect the behavior of signal passing?\n"},{"labels":["documentation"],"text":"The content of https://docs.docker.com/registry/insecure/#using-self-signed-certificates says \"be sure to use the name 'myregistrydomain.com' as a CN\". I think the intent of the overall page is for the developer to fill in their own domain. Perhaps it could be a bit clearer.\n"},{"labels":["documentation",null,null],"text":"<!--\nIf you are reporting a new issue, make sure that we do not have any duplicates\nalready open. You can ensure this by searching the issue list for this\nrepository. If there is a duplicate, please close your issue and add a comment\nto the existing issue instead.\n\nIf you suspect your issue is a bug, please edit your issue description to\ninclude the BUG REPORT INFORMATION shown below. If you fail to provide this\ninformation within 7 days, we cannot debug your issue and will close it. We\nwill, however, reopen it if you later provide the information.\n\nFor more information about reporting issues, see\nhttps://github.com/docker/docker/blob/master/CONTRIBUTING.md#reporting-other-issues\n\n---------------------------------------------------\nBUG REPORT INFORMATION\n---------------------------------------------------\nUse the commands below to provide key information from your environment:\nYou do NOT have to include this information if this is a FEATURE REQUEST\n-->\n\n**Description**\nIn the documentation for the Remote API in the request Json for creating a network the IPAM part of the json is missing \"Driver\".\nIn the cli this is sent by --ipam-driver string\n\nhttps://docs.docker.com/engine/reference/api/docker_remote_api_v1.24/#/create-a-network\n(maybe earlier docs also)\n\n<!--\nBriefly describe the problem you are having in a few paragraphs.\n-->\n\n**Steps to reproduce the issue:**\n1. Create a new network\n2. Check the Json that is sent\n\n**Describe the results you received:**\nNo Documentation to set Driver for IPAM\n\n**Describe the results you expected:**\nDocumentation to set Driver for IPAM\n\n**Additional information you deem important (e.g. issue happens only occasionally):**\n\n**Output of `docker version`:**\n\n```\nClient:\n Version:      1.12.1\n API version:  1.24\n Go version:   go1.7\n Git commit:   23cf638\n Built:        Fri Aug 19 02:03:02 2016\n OS/Arch:      linux/amd64\n\nServer:\n Version:      1.12.1\n API version:  1.24\n Go version:   go1.7\n Git commit:   23cf638\n Built:        Fri Aug 19 02:03:02 2016\n OS/Arch:      linux/amd64\n```\n\n**Output of `docker info`:**\n\n```\nContainers: 3\n Running: 0\n Paused: 0\n Stopped: 3\nImages: 4\nServer Version: 1.12.1\nStorage Driver: devicemapper\n Pool Name: docker-253:1-10223820-pool\n Pool Blocksize: 65.54 kB\n Base Device Size: 10.74 GB\n Backing Filesystem: xfs\n Data file: /dev/loop0\n Metadata file: /dev/loop1\n Data Space Used: 885.9 MB\n Data Space Total: 107.4 GB\n Data Space Available: 106.5 GB\n Metadata Space Used: 1.847 MB\n Metadata Space Total: 2.147 GB\n Metadata Space Available: 2.146 GB\n Thin Pool Minimum Free Space: 10.74 GB\n Udev Sync Supported: true\n Deferred Removal Enabled: false\n Deferred Deletion Enabled: false\n Deferred Deleted Device Count: 0\n Data loop file: /var/lib/docker/devicemapper/devicemapper/data\n WARNING: Usage of loopback devices is strongly discouraged for production use. Use `--storage-opt dm.thinpooldev` to specify a custom block storage device.\n Metadata loop file: /var/lib/docker/devicemapper/devicemapper/metadata\n Library Version: 1.02.134 (2016-09-07)\nLogging Driver: json-file\nCgroup Driver: cgroupfs\nPlugins:\n Volume: local\n Network: bridge host null overlay\nSwarm: inactive\nRuntimes: runc\nDefault Runtime: runc\nSecurity Options: seccomp\nKernel Version: 4.7.4-1-ARCH\nOperating System: Arch Linux\nOSType: linux\nArchitecture: x86_64\nCPUs: 8\nTotal Memory: 23.49 GiB\nName: karl_rog\nID: IOCD:Y7FK:RDB6:43I7:QLCF:OBP5:LKJR:QLYD:NC6U:V7GA:ROQA:TCVE\nDocker Root Dir: /var/lib/docker\nDebug Mode (client): false\nDebug Mode (server): false\nRegistry: https://index.docker.io/v1/\nInsecure Registries:\n 127.0.0.0/8\n```\n\n**Additional environment details (AWS, VirtualBox, physical, etc.):**\n"},{"labels":["documentation",null],"text":"It is probably the case that the recommended way of working with images and a swarm of nodes is to use a private image registry or docker cloud solution. However, I feel that the current design (and documentation) is a bit incomplete. The problem is that if you are a newcomer and start creating your swarm, when you build your image on one of the swarm leaders, and then starts a service using that image, if the service is scheduled to run on other nodes wheere the image is not available then it will just silently fail. The error claiming that an image is missing is often not complete displayed either when using `docker service ps` since the message is too long, which requires the user to login into the machine where the docker daemon is running and checking the logs there... not very friendly.\nI have not found in the documentation that an image that is custom built must be pushed to a image registry in order to make the swarm work, which for me at least, took some precious time to discover the hard way. \nSo finally, I think the best solution would be if every swarm node could act as a private image registry out of the box, but only for the nodes part of that swarm. By doing that images will just be created once and everything will work magically as so many other things in docker. The other alternative I can think of is that when building an image you could pass a --swarm flag to tell docker that you want to build that same image on all the nodes part of the swarm. The problem with this solution is of course that if the swarm grows, the new nodes will not have that image and fail again silently...\n"},{"labels":["documentation",null],"text":"Just putting this down here so we don't forget;\n\nWe don't have clear documentation on how \"daemon shutdown\" works; i.e. timeout of containers, stop, kill. Also what happens if a container fails to be killed.\n\nAnother point brought up by @mlaventure is that `systemd` also uses a timeout, so the daemon itself may be killed before it finishes shutdown.\n"},{"labels":["documentation"],"text":"In docker volumes tutorial there is still wrote \n\n```\nBecause of limitations in the mount function, moving subdirectories within the host’s source directory can give access from the container to the host’s file system. This requires a malicious user with access to host and its mounted directory.\n```\n\nThis was fixed last year: http://www.spinics.net/lists/linux-containers/msg31063.html\n"},{"labels":["documentation",null,null],"text":"The actual documentation for the creation of a service using the Docker API is incorrect for the port publishing section (at https://docs.docker.com/engine/reference/api/docker_remote_api_v1.24/#/create-a-service)\n\nThe **Example request** specifies the following:\n\n``` json\nPOST /services/create HTTP/1.1\nContent-Type: application/json\n\n{\n  ...\n  \"EndpointSpec\": {\n    \"Ports\": [\n      {\n        \"Protocol\": \"tcp\",\n        \"PublishedPort\": 8080,\n        \"TargetPort\": 80\n      }\n    ]\n  },\n ...\n}\n```\n\nThis is totally correct, but the **JSON parameters** shows the following:\n\n```\n* Endpoint – Properties that can be configured to access and load balance a service.\n  * Spec –\n    * Mode – The mode of resolution to use for internal load balancing between tasks (vip or dnsrr).\n    * Ports – Exposed ports that this service is accessible on from the outside, in the form of: \"Ports\": { \"<port>/<tcp|udp>: {}\" }\n```\n\nThis is totally incorrect and can lead to confusion.\n"},{"labels":["documentation",null,null],"text":"https://github.com/docker/docker/pull/24987 was merged without documentation changes. This issue is for tracking that\n\n/cc @ripcurld00d \n"},{"labels":["documentation",null,null],"text":"<!--\nIf you are reporting a new issue, make sure that we do not have any duplicates\nalready open. You can ensure this by searching the issue list for this\nrepository. If there is a duplicate, please close your issue and add a comment\nto the existing issue instead.\n\nIf you suspect your issue is a bug, please edit your issue description to\ninclude the BUG REPORT INFORMATION shown below. If you fail to provide this\ninformation within 7 days, we cannot debug your issue and will close it. We\nwill, however, reopen it if you later provide the information.\n\nFor more information about reporting issues, see\nhttps://github.com/docker/docker/blob/master/CONTRIBUTING.md#reporting-other-issues\n\n---------------------------------------------------\nBUG REPORT INFORMATION\n---------------------------------------------------\nUse the commands below to provide key information from your environment:\nYou do NOT have to include this information if this is a FEATURE REQUEST\n-->\n\n**Description**\n\nDocker Remote API Documentation problem concerning MaximumIOps and MaximumIOBps.\nIn documentation they are written as:\nMaximumIOps\nMaximumIOBps\n\nBut both Dockers code and recording the call (using Wiremock as a proxy between docker cli and docker daemon) says that they really are:\nIOMaximumIOps\nIOMaximumBandwidth\n\n**Steps to reproduce the issue:**\n1. docker -H <REMOTE_HOST> create --io-maxbandwidth=5m ubuntu:14.04\n2. compare json to documentation\n\n**Describe the results you received:**\nMaximumIOps\nMaximumIOBps\n\n**Describe the results you expected:**\nIOMaximumIOps\nIOMaximumBandwidth\n\n**Additional information you deem important (e.g. issue happens only occasionally):**\nConcerns:\ndocs/reference/api/docker_remote_api.md\ndocs/reference/api/docker_remote_api_v1.24.md\ndocs/reference/api/docker_remote_api_v1.25.md\n\n**Output of `docker version`:**\n\n```\nClient:\n Version:      1.12.1\n API version:  1.24\n Go version:   go1.6.3\n Git commit:   23cf638\n Built:        Thu Aug 18 05:33:38 2016\n OS/Arch:      linux/amd64\n\nServer:\n Version:      1.12.1\n API version:  1.24\n Go version:   go1.6.3\n Git commit:   23cf638\n Built:        Thu Aug 18 05:33:38 2016\n OS/Arch:      linux/amd64\n```\n\n**Output of `docker info`:**\n\n```\nContainers: 9\n Running: 2\n Paused: 0\n Stopped: 7\nImages: 183\nServer Version: 1.12.1\nStorage Driver: aufs\n Root Dir: /var/lib/docker/aufs\n Backing Filesystem: extfs\n Dirs: 314\n Dirperm1 Supported: true\nLogging Driver: json-file\nCgroup Driver: cgroupfs\nPlugins:\n Volume: local\n Network: overlay bridge host null\nSwarm: inactive\nRuntimes: runc\nDefault Runtime: runc\nSecurity Options: apparmor seccomp\nKernel Version: 4.4.0-36-generic\nOperating System: Ubuntu 16.04.1 LTS\nOSType: linux\nArchitecture: x86_64\nCPUs: 8\nTotal Memory: 30.85 GiB\nName: karl-P50\nID: ND5C:QQCW:NNJ4:QSFT:G6QP:MFJK:LDT4:VX6Q:HCSE:HVQ6:ABM6:2KVJ\nDocker Root Dir: /var/lib/docker\nDebug Mode (client): false\nDebug Mode (server): false\nRegistry: https://index.docker.io/v1/\nWARNING: No swap limit support\nInsecure Registries:\n docker-remote.art.local\n docker-virtual.art.local\n 127.0.0.0/8\n```\n\n**Additional environment details (AWS, VirtualBox, physical, etc.):**\n"},{"labels":["documentation"],"text":"Rename / move existing docs where needed, and update completion scripts for #26025 and #26716\n"},{"labels":["documentation",null],"text":"Hi\nCan i have more than one --constraint per service create ?\n\n```\ndocker service create \\\n--constraint 'node.hostname == foo' \\\n--constraint 'node.hostname == boo'\n```\n"},{"labels":["documentation",null],"text":"**Description**\nLinux kernel version 3.19 introduced lazy removal of mounts on unlinked files and directories.\nThis greatly reduces EBUSY errors when removing bind mounted directories used in containers. For more information, refer to \n1. http://git.kernel.org/cgit/linux/kernel/git/stable/linux-stable.git/commit/?h=linux-3.19.y&id=8ed936b5671bfb33d89bc60bdcc7cf0470ba52fe\n2. https://github.com/docker/docker/issues/21704\n\nUpdate necessary documentation and pre-req check code.\n"},{"labels":["documentation"],"text":"Since the Docker API client and types have been moved form [docker/engine-api](https://github.com/docker/engine-api) to the main docker repo [docker/client](https://github.com/docker/docker/tree/master/client), no README.md with a simple usage example is available anymore.\nIt would be helpful to add a simple README.md file with at least the same usage example from the old [README.md](https://github.com/docker/engine-api/tree/6c72c24563a7a266e91c8445811f74f138973457).\nI'll be glad to send a PR for this.\n"},{"labels":["documentation",null],"text":"[VENDORING.md](https://github.com/docker/docker/blob/master/VENDORING.md) starts out with the following:\n\n> This document outlines recommended Vendoring policies for Docker repositories. (Example, libnetwork is a Docker repo and logrus is not.)\n\nThen, it goes on about some semantic versioning requirements for no apparent reason and requirements about a release process, including a changelog (even for dependencies that have version control). Most of this is a waste of time for package-level projects (go-events, go-connections, etc.) when we have commit-level changelog.\n\nThis document SHOULD cover the following:\n1. Structure of our vendoring system.\n2. How to update an existing dependency.\n3. How to add a new dependency.\n4. Any helpful incantations to make vendoring work more smoothly.\n\nThis will be much more helpful to contributors than a bunch of nonsense about semantic versioning.\n"},{"labels":["documentation",null],"text":"In `docker node` you can see that there is a `docker node update --label-add` option to add labels.\n\nI was confused about the difference between this and Engine labels (i.e., added with `--label` to `dockerd`) and asked the Swarm team to explain.  The answer was insightful and should be documented.\n\nEssentially:\n1. A compromised worker node could change its own Engine labels, but not node labels.  Only managers can change node labels.\n2. Therefore, node labels could be useful to e.g. schedule only on machines where certain special workloads should be run, for instance machines where [PCI-SS compliance](https://www.pcisecuritystandards.org/) is met.  A compromised worker could not compromise these special workloads because it cannot change node labels.\n3. Engine labels, however, are still useful because some features which do not affect secure orchestration of containers might be better off set in a decentralized manner.  For instance, an engine could have a label to indicate that it has a certain type of disk device, which may not be relevant to security directly.  These labels are more easily \"trusted\" by the orchestrator.\n\nhttps://docs.docker.com/engine/swarm/manage-nodes/#/add-or-remove-label-metadata explains that you _can_ do this, but not why you might want to.\n\nFYI @londoncalling and thanks @diogomonica @stevvooe @cpuguy83 for explanation\n"},{"labels":["documentation",null,null],"text":"In the (IMHO really good) [overlay 2 documentation](https://docs.docker.com/engine/userguide/storagedriver/overlayfs-driver) chapter \"Image layering and sharing with OverlayFS (overlay2)\"  is written:\n\n> While the overlay driver only works with a single lower OverlayFS layer and hence requires hard links for implementation of multi-layered images, the overlay2 driver natively supports multiple lower OverlayFS layers (**up to 128**).\n\nWe did the experiment and \"docker build\" failed after **122 layers**.\n\n```\nRemoving intermediate container 1019d67fb4c7\nStep 123 : COPY Dockerfile /tmp/Dockerfile\nmax depth exceeded\n```\n\nI assume that  restriction comes from the 4 KB mount option size. It is mentioned that the shortened IDs have been implemented because of that.\n\nAn overlay2 mount looks like the following:\n\n```\noverlay on /var/lib/docker/overlay2/164d646991e089b06b55a5f1f03ab557a45753204a63b5dcc22991611563017f/merged type overlay \n(rw,relatime,\nlowerdir=l/WUS2HSYXXBUH7KQ5DXYVKY47V7:l/7FR5NGKHKOTQYM5I3W2BBT7RFJ,\nupperdir=164d646991e089b06b55a5f1f03ab557a45753204a63b5dcc22991611563017f/diff,\nworkdir=164d646991e089b06b55a5f1f03ab557a45753204a63b5dcc22991611563017f/work)\n```\n\nFor each layer we need strings like \":l/7FR5NGKHKOTQYM5I3W2BBT7RFJ\" which are 30 characters. In addition to that we have the strings:\n- `rw,relatime,lowerdir=`   -> 22 characters\n- `upperdir=164d646991e089b06b55a5f1f03ab557a45753204a63b5dcc22991611563017f/diff,` -> 80 characters\n- `workdir=164d646991e089b06b55a5f1f03ab557a45753204a63b5dcc22991611563017f/work` -> 78 characters\n\nI did some calculations and could not reproduce exactly the 122 layers. Nevertheless the 128 documented layers seem to be wrong.\n\n**BTW: Two other minor things we noticed:**\n\n> The **lowerest** layer contains the “link” file which contains\n\nShouldn't this be \"lowest\" :-)\n\n> These shortened identifiers are used for avoid hitting the **page size** limitation on mount arguments.\n\nIMHO page size is a bit unclear. E.g. the Linux kernel has huge pages with different size, for example on s390x we have 1 MiB, 2 GiB. I assume you just mean 4 KB here?\n"},{"labels":["documentation"],"text":"My [repository](https://github.com/jeff1evesque/machine-learning) implements docker containers within the [`.travis.yml`](https://github.com/jeff1evesque/machine-learning/blob/78384feb5477464dba4a48b96dbfc01e1d39b0f6/.travis.yml#L101-L112), to perform automated unit testing.  Each time someone commits code, the [travis ci](https://travis-ci.org/jeff1evesque/machine-learning/builds) runs `pytest-flask`.  Could my repository be added to the [Projects using docker](https://github.com/docker/docker/wiki/Projects-using-docker) wiki page?  In the future, I plan on adjusting the development environment to be a series of nested docker containers in the current vagrant environment.\n"},{"labels":["documentation",null,null],"text":"Docker allows mounting a data volume into container, which is awesome.\n\n`docker-compose` supports that, which is awesome\n\nDocker also copies files from image into volume on container creation, which surely it sometimes handy.\n\nThe problem is sometimes there's a bit too much data:\n\n```\nvolumes:\n    log:\nservices:\n    nginx:\n        volumes:\n            - log:/var/log\n```\n\nThe idea is to have persistent logs. `nginx.conf` points logs to `/var/log/nginx` making this pretty nice, each service will have it's own top-level folder in the volume.\n\nBut, alas! `nginx` container has some other rubbish in `/var/log`, e.g. `/var/log/dmesg` which gets copied to top level in the volume. :(\n\nIf I could mount `- log/nginx:/var/log/nginx` I'd work around this problem really nicely...\n\nNot that it's a good reason for inclusion per se though.\n\nA discussion is needed.\n"},{"labels":["documentation",null,null],"text":"Someone probably needs to start a roadmap issue for getting a solution to current problems with \"docker deploy\" (ie. where the feature is planned to go) because so far, I cannot find anything, let alone an issue, describing current progress.\n\nIncluding:\n- `docker deploy`\n- `docker stacks`\n- The planned relation between Swarm Mode / Docker Compose / `docker deploy`\n- The planned file formats\n"},{"labels":["documentation",null,null,null],"text":"I was on 1.10.3 and I had the remote api enabled by changing the $DOCKER_OPS from `/etc/init/docker.conf` to `'-H tcp://0.0.0.0:4243 -H unix:///var/run/docker.sock'`, but now that doesn't work anymore!\n\nI upgraded to Ubuntu Xenial (from Trusty) and docker engine from 1.10.3 to 1.12.1...\n\nAny help is greatly appreciated!\n\nEDIT: I [reverted back to Upstart](https://wiki.ubuntu.com/SystemdForUpstartUsers#Permanent_switch_back_to_upstart) on this Ubuntu... still same issue.\n"},{"labels":["documentation",null,null],"text":"in stack_tasks.md, there is command:\n\n```\nUsage:  docker stack tasks [OPTIONS] STACK\n\nList the tasks in the stack\n```\n\nin stack/ps.go, there is command:\n\n```\ncmd := &cobra.Command{\n    Use:   \"ps [OPTIONS] STACK\",\n    Short: \"List the tasks in the stack\",\n```\n"},{"labels":["documentation",null],"text":"The CLI reference docs say this about `swarm leave --force`.\n\n```\n      --force   Force leave ignoring warnings.\n```\n\nThey should also mention that `swarm leave --force` allows you to remove a manager, but does not gracefully remove the manager from the swarm. Doing this may cause the swarm to lose its quorum. Unless you don't care about the impact on the existing cluster, you should always demote managers to workers before removing them.\n\ncc @sfsmithcha\n"},{"labels":["documentation",null,null,null],"text":"<!--\nIf you are reporting a new issue, make sure that we do not have any duplicates\nalready open. You can ensure this by searching the issue list for this\nrepository. If there is a duplicate, please close your issue and add a comment\nto the existing issue instead.\n\nIf you suspect your issue is a bug, please edit your issue description to\ninclude the BUG REPORT INFORMATION shown below. If you fail to provide this\ninformation within 7 days, we cannot debug your issue and will close it. We\nwill, however, reopen it if you later provide the information.\n\nFor more information about reporting issues, see\nhttps://github.com/docker/docker/blob/master/CONTRIBUTING.md#reporting-other-issues\n\n---------------------------------------------------\nBUG REPORT INFORMATION\n---------------------------------------------------\nUse the commands below to provide key information from your environment:\nYou do NOT have to include this information if this is a FEATURE REQUEST\n-->\n\n**Output of `docker version`:**\n\n```\nClient:\n Version:      1.12.1\n API version:  1.24\n Go version:   go1.6.3\n Git commit:   f1e1b83\n Built:        \n OS/Arch:      linux/amd64\n\nServer:\n Version:      1.12.1\n API version:  1.24\n Go version:   go1.6.3\n Git commit:   f1e1b83\n Built:        \n OS/Arch:      linux/amd64\n```\n\n**Output of `docker info`:**\n\n```\nContainers: 2\n Running: 1\n Paused: 0\n Stopped: 1\nImages: 2\nServer Version: 1.12.1\nStorage Driver: overlay\n Backing Filesystem: extfs\nLogging Driver: json-file\nCgroup Driver: cgroupfs\nPlugins:\n Volume: local\n Network: bridge overlay null host\nSwarm: inactive\nRuntimes: runc\nDefault Runtime: runc\nSecurity Options: selinux\nKernel Version: 4.7.1-coreos\nOperating System: CoreOS 1151.0.0 (MoreOS)\nOSType: linux\nArchitecture: x86_64\nCPUs: 1\nTotal Memory: 7.801 GiB\nName: core-01\nID: 3D66:DYWJ:CZIL:ESFB:CW3S:UTSG:VFZY:YBLT:E234:H7L2:OIOT:Y7ZL\nDocker Root Dir: /var/lib/docker\nDebug Mode (client): false\nDebug Mode (server): false\nUsername: easywebdeploy\nRegistry: https://index.docker.io/v1/\nInsecure Registries:\n 127.0.0.0/8\n\n```\n\n**Additional environment details (AWS, VirtualBox, physical, etc.):**\nRunning CoreOS Alpha 1151.0.0 On Vagrant 1.8.5 Ubuntu 16.04\n\n**Steps to reproduce the issue:**\n1. Run a simple container and make sure its running\n2. Run \"curl -v --unix-socket /var/run/docker.sock http:/containers/json\" to get a list of Containers\n\n**Describe the results you received:**\n\n``` sh\n*   Trying /var/run/docker.sock...\n* Connected to containers (/var/run/docker.sock) port 80 (#0)\n> GET /json HTTP/1.1\n> Host: containers\n> User-Agent: curl/7.50.1\n> Accept: */*\n> \n< HTTP/1.1 404 Not Found\n< Content-Type: application/json\n< Date: Mon, 29 Aug 2016 08:48:02 GMT\n< Content-Length: 29\n< \n{\"message\":\"page not found\"}\n* Connection #0 to host containers left intact\n```\n\n**Describe the results you expected:**\nExpected is the JSON list of all running containers\n\n**Additional information you deem important (e.g. issue happens only occasionally):**\nWas working correctly on CoreOS with Docker version till 1.11.2\n"},{"labels":["documentation",null],"text":"Feedback on finding Node state and availability in the docs:\n\nDoc is here: https://docs.docker.com/engine/swarm/manage-nodes/#manage-nodes-in-a-swarm\n\n I searched for \"status\", \"node status\", \"node state\", \"availability\", \"node availability\", \"swarm availability\". I assumed there was no such page so I didn't search for \"Reachable\", which would have been my next keyword, but it looks like that one correctly points to that page. Also, I went to the swarm-mode overview page looking for some sort of \"concepts\" or \"keywords\" page, followed the url to the \"key-concepts\" page which did not mention any details node status and noticed that the only follow-up URL at the bottom redirected me back to swarm-mode overview. I didn't suspect to go to the \"manage nodes\" headline as I imagined that would cover the various leave/rm/demote/promote flows, rather than document the possible node states\n"},{"labels":["documentation",null],"text":"<!--\nIf you are reporting a new issue, make sure that we do not have any duplicates\nalready open. You can ensure this by searching the issue list for this\nrepository. If there is a duplicate, please close your issue and add a comment\nto the existing issue instead.\n\nIf you suspect your issue is a bug, please edit your issue description to\ninclude the BUG REPORT INFORMATION shown below. If you fail to provide this\ninformation within 7 days, we cannot debug your issue and will close it. We\nwill, however, reopen it if you later provide the information.\n\nFor more information about reporting issues, see\nhttps://github.com/docker/docker/blob/master/CONTRIBUTING.md#reporting-other-issues\n\n---------------------------------------------------\nBUG REPORT INFORMATION\n---------------------------------------------------\nUse the commands below to provide key information from your environment:\nYou do NOT have to include this information if this is a FEATURE REQUEST\n-->\n\n**Output of `docker version`:**\n\n```\nClient:\n Version:      1.12.0\n API version:  1.24\n Go version:   go1.6.3\n Git commit:   8eab29e\n Built:        Thu Jul 28 23:54:00 2016\n OS/Arch:      linux/amd64\n\nServer:\n Version:      1.12.0\n API version:  1.24\n Go version:   go1.6.3\n Git commit:   8eab29e\n Built:        Thu Jul 28 23:54:00 2016\n OS/Arch:      linux/amd64\n```\n\n**Output of `docker info`:**\n\n```\nContainers: 0\n Running: 0\n Paused: 0\n Stopped: 0\nImages: 0\nServer Version: 1.12.0\nStorage Driver: aufs\n Root Dir: /var/lib/docker/aufs\n Backing Filesystem: extfs\n Dirs: 0\n Dirperm1 Supported: false\nLogging Driver: json-file\nCgroup Driver: cgroupfs\nPlugins:\n Volume: local\n Network: bridge overlay null host\nSwarm: inactive\nRuntimes: runc\nDefault Runtime: runc\nSecurity Options: apparmor seccomp\nKernel Version: 3.13.0-74-generic\nOperating System: Alpine Linux v3.4 (containerized)\nOSType: linux\nArchitecture: x86_64\nCPUs: 4\nTotal Memory: 7.704 GiB\nName: 2984dce9dd17\nID: DK5H:F7GU:NOI7:EQKM:4JQG:IXVD:Z2ZJ:5LRM:2CV7:DI5J:B7Y4:YY2V\nDocker Root Dir: /var/lib/docker\nDebug Mode (client): false\nDebug Mode (server): false\nRegistry: https://index.docker.io/v1/\nWARNING: No swap limit support\nWARNING: bridge-nf-call-iptables is disabled\nWARNING: bridge-nf-call-ip6tables is disabled\nInsecure Registries:\n 127.0.0.0/8\n```\n\n**Additional environment details (AWS, VirtualBox, physical, etc.):**\n\n**Steps to reproduce the issue:**\n1.  View [docker run reference - Security configuration](https://docs.docker.com/engine/reference/run/#/security-configuration)\n\n**Describe the results you received:**\nWhile reading `docker run`'s SELinux _Security configuration_  section, noticed reference to `--permissive` flag as a method to disable SELinux enforcement for a particular container by Docker Engine.  Relevant passage:\n\n \"_To disable the security labeling for this container versus running with the --permissive flag, use the following command:_\"\n\nHowever, `docker run` doesn't support `--permissive` flag, as it generates message: `unknown flag: --permissive`.  Therefore, given the context, documentation should have instead cited `--privileged` option.\n\n**Describe the results you expected:**\n\"_To disable the security labeling for this container versus running with the **--privileged** flag, use the following command:_\"\n\n**Additional information you deem important (e.g. issue happens only occasionally):**\n"},{"labels":["documentation"],"text":"This is an issue with the documentation for setting up TLS in a swarm which can be found [here](https://docs.docker.com/swarm/configure-tls/). In [Step 3](https://docs.docker.com/swarm/configure-tls/#/step-3-create-and-sign-keys) it says that a file called `node-priv.key` will be created which will contain the private key. However, no reference to a `.key` file is found anywhere else in the document. I'm not really sure what changes need to be made, as far as I can tell it crates the private key in a file called `node-priv-key.pem`, but I'm not sure if anything else needed to be done.\n\n**Additional environment details (AWS, VirtualBox, physical, etc.):**\nI'm not able to find the actual markdown file in the `/docs` folder in the repo which contains the guide.\n\n**Steps to reproduce the issue:**\n1. Go through the [swarm/configure-tls](https://docs.docker.com/swarm/configure-tls) guide\n2. Expect a `.key` file to be made at some point\n3. It isn't\n\n**Describe the results you received:**\nThe resulting keys two `.pem` files are created, with one of them suggesting it's the private key.\n\n**Describe the results you expected:**\nDocs to either refer to the private key consistently or have steps for creating the `.key` file\n"},{"labels":["documentation",null],"text":"**Steps to reproduce the issue:**\n1. Go to https://docs.docker.com/engine/reference/api/docker_remote_api_v1.24/#/display-system-wide-information and search for /swarm to look for how to get swarm join token \n2.\n3.\n\n**Describe the results you received:**\n\nNo results on how to retrieve swarm join token. \n\n**Describe the results you expected:**\n\nThe API to retrieve the swarm join token should be available on the API docs\n\n**Additional information you deem important (e.g. issue happens only occasionally):**\n"},{"labels":["documentation",null,null,null],"text":"I would like to put together a quick guide for Docker on ARM - especially Raspberry Pi. There is a `curl | sh` method newly available which makes the process quicker and easier. From my perspective this should feel as close as possible to the experience of Docker on x86_64. \n\nI'd like to put a short/simple guide together:\n- Recommended (default) OS to be Raspbian (Jessie Lite)\n- `curl | sh` recommended installation method\n- A mention to the problem with multi-arch - i.e. `docker run busybox` won't work\n- A recommended base image: `resin/rpi-raspbian`\n- Give short example of Dockerfile for Node.js, Python\n- Short mention of GPIO (accessing the input output headers on the device) and privilege mode.\n- A disclaimer / buyer beware.. few words on limitations.\n\nPotential follow-up guide:\n- Building Docker on ARM\n- Adding a swap file\n- Expected build duration\n- Limitations\n\nRef: \nhttps://github.com/docker/docker/issues/24561\n\nInput especially welcome from @DieterReuter , @estesp , @crosbymichael @StefanScherer as follow-up. @thaJeztah what are your thoughts?\n"},{"labels":["documentation",null],"text":"At the CLI we expose this with `--with-registry-auth` but the API docs don't explain how API clients can send the registry auth information on service creation or update.\n"},{"labels":["documentation",null],"text":"<!--\nIf you are reporting a new issue, make sure that we do not have any duplicates\nalready open. You can ensure this by searching the issue list for this\nrepository. If there is a duplicate, please close your issue and add a comment\nto the existing issue instead.\n\nIf you suspect your issue is a bug, please edit your issue description to\ninclude the BUG REPORT INFORMATION shown below. If you fail to provide this\ninformation within 7 days, we cannot debug your issue and will close it. We\nwill, however, reopen it if you later provide the information.\n\nFor more information about reporting issues, see\nhttps://github.com/docker/docker/blob/master/CONTRIBUTING.md#reporting-other-issues\n\n---------------------------------------------------\nBUG REPORT INFORMATION\n---------------------------------------------------\nUse the commands below to provide key information from your environment:\nYou do NOT have to include this information if this is a FEATURE REQUEST\n-->\n\nIt looks like the 1.12.0 changelog doesn't have the docker proxy changes made in https://github.com/docker/docker/pull/23312. I don't think the docs have been updated either.\n"},{"labels":["documentation",null,null],"text":"The `/swarm/leave` api supports a `?force=true` parameter and it should be documented in the [api docs](https://docs.docker.com/engine/reference/api/docker_remote_api_v1.24/#/leave-a-swarm). I'll be glad to send a PR for this.\n"},{"labels":["documentation",null,null,null],"text":"Currently, the Swarm Init api (/swarm/init) returns the node id when the swarm is successfully initialized:\n\n```\ncurl -XPOST --unix-socket /var/run/docker.sock http:/swarm/init -d '{\"ListenAddr\": \"127.0.0.1\"}'\n\"ejdf53mtjiqp8feyf1907si12\"\n```\n\nThis behavior is not documented in the [api docs](https://docs.docker.com/engine/reference/api/docker_remote_api_v1.24/#/initialize-a-new-swarm).\n\nI believe this should be documented and I can send a PR for that.\n"},{"labels":["documentation",null,null],"text":"I am trying to run a program inside a docker container with user namespace support that requires some capabilities. Inside the container I am able to see that the capabilities were added but when I make calls that require these capabilities they fail.\n\nThe same calls work fine when I bypass user namespace with `--userns host` and add the required capabilities with `--cap-add`.\n\nSo far I have tested changing the scheduling policy and thread priority with a C program and `chrt`. This requires the `SYS_NICE` capability.\nI have also tested creating a message queue with larger sizes than allowed in `/proc/sys/fs/mqueue`. For the call to succeed the program would require the `SYS_RESOURCE` capability.\n\nWhen reading the documentation for user namespace support in dockerd it doesn't seem like this would not be a supported feature. In my opinion this would be a very useful feature that would increase security by enabling users to run semi-privileged programs in their own user namespace.\n\nIn any case, in the Docker engine reference for dockerd under \"User namespace known restrictions\", the following paragraphs should be modified to reflect these new restrictions:\n\n> Using --privileged mode flag on docker run (unless also specifying --userns=host)\n\nUsing `--privileged` mode or `--cap-add` for certain capabilities on docker run (unless also specifying --userns=host)\n\n> Finally, while the root user inside a user namespaced container process has many of the expected admin privileges that go along with being the superuser, the Linux kernel has restrictions based on internal knowledge that this is a user namespaced process. The most notable restriction that we are aware of at this time is the inability to use mknod. Permission will be denied for device creation even as container root inside a user namespace.\n\nThis paragraph could be extended to list all the functions that fail or capabilities that have no effect.\n\n---\n## BUG REPORT INFORMATION\n\n**Output of `docker version`:**\n\n```\nClient:\n Version:      1.12.0\n API version:  1.24\n Go version:   go1.6.3\n Git commit:   8eab29e\n Built:        Thu Jul 28 22:11:10 2016\n OS/Arch:      linux/amd64\n\nServer:\n Version:      1.12.0\n API version:  1.24\n Go version:   go1.6.3\n Git commit:   8eab29e\n Built:        Thu Jul 28 22:11:10 2016\n OS/Arch:      linux/amd64\n```\n\n**Output of `docker info`:**\n\n```\nContainers: 6\n Running: 1\n Paused: 0\n Stopped: 5\nImages: 20\nServer Version: 1.12.0\nStorage Driver: aufs\n Root Dir: /var/lib/docker/296608.296608/aufs\n Backing Filesystem: extfs\n Dirs: 25\n Dirperm1 Supported: true\nLogging Driver: json-file\nCgroup Driver: cgroupfs\nPlugins:\n Volume: local\n Network: bridge null overlay host\nSwarm: inactive\nRuntimes: runc\nDefault Runtime: runc\nSecurity Options: apparmor seccomp\nKernel Version: 4.4.0-34-generic\nOperating System: Ubuntu 16.04.1 LTS\nOSType: linux\nArchitecture: x86_64\nCPUs: 2\nTotal Memory: 2.768 GiB\nDocker Root Dir: /var/lib/docker/296608.296608\n\n```\n\ndockerd run command:\n`/usr/bin/dockerd --userns-remap=default -H fd://`\n\nI am running an Ubuntu VM on VMware Player on Windows 7\n\n**_For scheduling:**_\n**Steps to reproduce the issue:**\n1. `docker run -it --rm --cap-add SYS_NICE ubuntu bash`\n2. `chrt -f -p 99 1`\n\n**Describe the results you received:**\n`chrt: failed to set pid 1's policy: Operation not permitted`\n\n**Describe the results you expected:**\nI get the expected results using `--userns host`\n1. `docker run -it --rm --userns host --cap-add SYS_NICE ubuntu bash`\n2. `chrt -f -p 99 1`\n3. `chrt -p 1`\n`pid 1's current scheduling policy: SCHED_FIFO`\n`pid 1's current scheduling priority: 99`\n\n**_For the message queue:**_\nHere is a simple C program to test the message queue: https://gist.github.com/DeathTickle/aa8f980577d498850af4e819319636f9\n\nModify (or don't) the `QUEUE_SIZE` and `QUEUE_MSG_SIZE` defines to be greater than `/proc/sys/fs/mqueue/msg_max` and/or `/proc/sys/fs/mqueue/msgsize_max`\n\ncompile it with `gcc mq_open_test.c -o mq_open_test -lrt`\n\n**Steps to reproduce the issue:**\n1. `docker run -it --rm --cap-add SYS_RESOURCE -v $PWD/mq_open_test:/mq_open_test ubuntu bash`\n2. `./mq_open_test`\n\n**Describe the results you received:**\n`mq_open: Invalid argument`\n\n**Describe the results you expected:**\nI get the expected results using `--userns host`\n1. `docker run -it --rm --userns host --cap-add SYS_RESOURCE -v $PWD/mq_open_test:/mq_open_test ubuntu bash`\n2. `./mq_open_test`\n"},{"labels":["documentation"],"text":"Current man pages are not all consistent in term of content, placement and sections. There is also a lot of _duplication_ between man pages and cli reference documentation as they are maintained separately. This issues is there to discuss on those subjects and follow evolutions of our generation process.\n\nThe main goals are the following and take most of the inspiration from `git` man pages and reference documentation :\n- Have consistent man page across commands.\n- Have cli reference documentation be in sync (or the same) as man page (just a web page for it).\n- Have (or not) man pages generated from source (part of it or all of them).\n### Man page style guide\n\nWe currently don't have any style guide for man pages, i.e. what information to put where and in what order. As code style guide, we might want to define a _man page style guide_ document that would define what makes a good man page for `docker` commands. This is related to #16219.\n\nThat could look something like :\n\n```\n## NAME\n\ncommand - short description of the command\n\n## SYNOPSIS\n\ncommand --with --some --flags --and [OPTIONS] …\n\n##  DESCRIPTION\n\nA description is more detailed than what's in the NAME section, explaining more in depth what the command does (but that's all)\n\n## OPTIONS\n\n-a --all\n\nFlags descriptions …\n\n## ADDITIONAL SECTION 1\n\nAdditional section are possible. An example would be `FILTERING` and `FORMATTING` for the `docker-ps` command, or something about the reference format for command that allow us to set them (like `docker-commit`, `docker-tag`, …).\n\n## ADDITIONAL SECTION 2\n\nNo limit in the number of section though 👼\n\n## EXAMPLES\n\nHere, we just gives example on how to do this on that ; this is not where we explain how to filter container (it's done in its own section), just a working example of it.\n\n## ENVIRONMENT AND CONFIGURATION VARIABLES\n\nIf there is any environment variable or configuration (in the client/daemon config file) related to the command, we'll talk about it here ; like `ImagesFormat` for `docker-images` formatting.\n\n## SEE ALSO\n\n```\n### Man page and cli ref doc maintainability\n\nMaintaining separately man pages and cli reference documentation is error prone, it's easy to forget some flags or description somewhere. It's related to #19088. The basic idea would be to generate man pages and cli reference documentation from the same source.\n\nGiven that we are trying to generate man page from the code (at least partially), we should also study a way to generate cli reference documentation at the same time — shouldn't be difficult to convert markdown/man page to hmtl 👼.\n#23825 introduced a way to generate man page directly from code — from a small subset of command right now, but goal is to do that for all commands.\n\nCurrent limitations / questions are the following (making the assumption that cli reference documentation is generated from the same source) :\n- Cobra does not seems to allow add any custom section (it only supports `EXAMPLE`).  It's possible to add `## Some Section` in the description part, but this would make the `OPTIONS` section be really far down in the man pages (which can be fine :angel:).\n- It makes \"documentation\" PR's becomes more difficult; to make changes to this part of the documentation now requires contributors to touch the actual code.\n- Should we keep around some part of the man pages/documentation in markdown files (that would be merge with generated content from cobra) ?\n\n/cc @thaJeztah @dnephin @icecrime \n"},{"labels":[null,"documentation",null,null,null],"text":"<!--\nIf you are reporting a new issue, make sure that we do not have any duplicates\nalready open. You can ensure this by searching the issue list for this\nrepository. If there is a duplicate, please close your issue and add a comment\nto the existing issue instead.\n\nIf you suspect your issue is a bug, please edit your issue description to\ninclude the BUG REPORT INFORMATION shown below. If you fail to provide this\ninformation within 7 days, we cannot debug your issue and will close it. We\nwill, however, reopen it if you later provide the information.\n\nFor more information about reporting issues, see\nhttps://github.com/docker/docker/blob/master/CONTRIBUTING.md#reporting-other-issues\n\n---------------------------------------------------\nBUG REPORT INFORMATION\n---------------------------------------------------\nUse the commands below to provide key information from your environment:\nYou do NOT have to include this information if this is a FEATURE REQUEST\n-->\n\n**Output of `docker version`:**\n\n```\nClient:\n Version:      1.12.0\n API version:  1.24\n Go version:   go1.6.3\n Git commit:   8eab29e\n Built:        Thu Jul 28 21:04:48 2016\n OS/Arch:      darwin/amd64\n Experimental: true\n\nServer:\n Version:      1.12.0\n API version:  1.24\n Go version:   go1.6.3\n Git commit:   8eab29e\n Built:        Thu Jul 28 21:04:48 2016\n OS/Arch:      linux/amd64\n Experimental: true\n```\n\nand\n\n```\nClient:\n Version:      1.11.0\n API version:  1.23\n Go version:   go1.5.4\n Git commit:   4dc5990\n Built:        Wed Apr 13 18:34:23 2016\n OS/Arch:      linux/amd64\n\nServer:\n Version:      1.11.0\n API version:  1.23\n Go version:   go1.5.4\n Git commit:   4dc5990\n Built:        Wed Apr 13 18:34:23 2016\n OS/Arch:      linux/amd64\n```\n\n**Output of `docker info`:**\n\n```\nContainers: 99\n Running: 2\n Paused: 0\n Stopped: 97\nImages: 52\nServer Version: 1.12.0\nStorage Driver: aufs\n Root Dir: /var/lib/docker/aufs\n Backing Filesystem: extfs\n Dirs: 250\n Dirperm1 Supported: true\nLogging Driver: json-file\nCgroup Driver: cgroupfs\nPlugins:\n Volume: local\n Network: bridge host overlay null\nSwarm: inactive\nRuntimes: runc\nDefault Runtime: runc\nSecurity Options: seccomp\nKernel Version: 4.4.15-moby\nOperating System: Alpine Linux v3.4\nOSType: linux\nArchitecture: x86_64\nCPUs: 2\nTotal Memory: 1.954 GiB\nName: moby\nID: A7F5:MEE2:XJ2N:ZQ6Q:HRKO:SRQJ:CTJF:RR3B:6K7F:SQPP:NBJ7:I7MM\nDocker Root Dir: /var/lib/docker\nDebug Mode (client): false\nDebug Mode (server): true\n File Descriptors: 26\n Goroutines: 41\n System Time: 2016-08-10T18:29:32.322513876Z\n EventsListeners: 1\nNo Proxy: *.local, 169.254/16\nUsername: flavin\nRegistry: https://index.docker.io/v1/\nExperimental: true\nInsecure Registries:\n 127.0.0.0/8\n```\n\nand\n\n```\nContainers: 7\n Running: 0\n Paused: 0\n Stopped: 7\nImages: 1\nServer Version: 1.11.0\nStorage Driver: aufs\n Root Dir: /var/lib/docker/aufs\n Backing Filesystem: extfs\n Dirs: 15\n Dirperm1 Supported: true\nLogging Driver: json-file\nCgroup Driver: cgroupfs\nPlugins:\n Volume: local\n Network: bridge null host\nKernel Version: 4.2.0-27-generic\nOperating System: Ubuntu 14.04.4 LTS\nOSType: linux\nArchitecture: x86_64\nCPUs: 1\nTotal Memory: 1.954 GiB\nName: xnat\nID: 3XVY:66LA:O7YA:ZRXD:5O3L:HR56:FBKD:5CG3:HAV3:JDG7:K3MX:44G7\nDocker Root Dir: /var/lib/docker\nDebug mode (client): false\nDebug mode (server): false\nRegistry: https://index.docker.io/v1/\n```\n\n**Additional environment details (AWS, VirtualBox, physical, etc.):**\nthe first machine is my local Docker for Mac installation; the second is an Ubuntu 14.04 VM in VirtualBox.\n\n**Steps to reproduce the issue:**\n1. Use the remote API to GET events, using the `since` query param.. For example, here is a simple example that asks for all events since time 0. (I have verified this behavior with other, more realistic time values.)\n\n```\ncurl --unix-socket /var/run/docker.sock http://localhost/events?since=0\n```\n\n**Describe the results you received:**\nThe events in the specified time range (in the example, from time 0 until now) are sent to me from docker, and the HTTP stream remains open.\n\n**Describe the results you expected:**\nThe events in the specified time range (in the example, from time 0 until now) are sent to me from docker, and the stream is closed. This is the documented behavior when using the `since` or `until` query params.\n"},{"labels":["documentation",null],"text":"Release notes list macvlan as released with 1.12:\n\nhttps://github.com/docker/docker/releases/tag/v1.12.0\nhttps://github.com/docker/docker/pull/23524\n\nOnly docs are in experimental\n\nhttps://github.com/docker/docker/blob/master/experimental/vlan-networks.md#user-content-getting-started\n\nPer @programmerq :\nprogrammerq [9:58 AM]  \nIt could do with a one or two paragraph description of what the macvlan driver is, what technologies it uses, the fact that it is a local scope network driver, and why you might use it instead of another local scope driver (bridge)\n\ncc: @aboch \n"},{"labels":["documentation"],"text":"Is it intentional to have 1.12 `/swarm/leave` to have a query param of `?force=true`? If so, can we have the documentation updated (happy to do it if you point me in the right direction)? If not, should it be in the body instead and possibly JSON like the rest of the `/swarm/*` endpoints?\n\nThanks.\n"},{"labels":[null,"documentation",null],"text":"**Output of `docker version`:**\n\n```\nClient:\n Version:      1.12.0\n API version:  1.24\n Go version:   go1.6.3\n Git commit:   8eab29e\n Built:        Thu Jul 28 22:00:36 2016\n OS/Arch:      linux/amd64\n\nServer:\n Version:      1.12.0\n API version:  1.24\n Go version:   go1.6.3\n Git commit:   8eab29e\n Built:        Thu Jul 28 22:00:36 2016\n OS/Arch:      linux/amd64\n```\n\n**Output of `docker info`:**\n\n```\nContainers: 53\n Running: 1\n Paused: 0\n Stopped: 52\nImages: 138\nServer Version: 1.12.0\nStorage Driver: aufs\n Root Dir: /var/lib/docker/aufs\n Backing Filesystem: extfs\n Dirs: 186\n Dirperm1 Supported: true\nLogging Driver: json-file\nCgroup Driver: cgroupfs\nPlugins:\n Volume: local\n Network: bridge overlay null host\nSwarm: inactive\nRuntimes: runc\nDefault Runtime: runc\nSecurity Options: apparmor\nKernel Version: 3.19.0-33-generic\nOperating System: Ubuntu 14.04.5 LTS\nOSType: linux\nArchitecture: x86_64\nCPUs: 4\nTotal Memory: 15.67 GiB\nName: mafiosso-HSC\nID: 4IXB:YZFW:X4AW:LUMH:4K3Z:VB5V:DNAZ:DFPP:GCRY:EJJF:PB6F:HBVX\nDocker Root Dir: /var/lib/docker\nDebug Mode (client): false\nDebug Mode (server): false\nRegistry: https://index.docker.io/v1/\nWARNING: No swap limit support\nInsecure Registries:\n 127.0.0.0/8\n```\n\n**Additional environment details (AWS, VirtualBox, physical, etc.):**\n\n**Steps to reproduce the issue:**\n1. Post a large image via curl on /load\n\n**Describe the results you received:**\n Remote API returns code 500 with message {\"message\":\"http: POST too large\"}.\n\n**Describe the results you expected:**\nExpected behavior shloud be code 200\n\n**Additional information you deem important (e.g. issue happens only occasionally):**\n"},{"labels":["documentation",null],"text":"In the section \"Adding a host without a driver\" of the document, \"Use Docker Machine to provision hosts on cloud providers\", https://docs.docker.com/machine/get-started-cloud/#adding-a-host-without-a-driver\n\nThere is an example:\n\n``` bash\n$ docker-machine create --url=tcp://50.134.234.20:2376 custombox\n$ docker-machine ls\nNAME        ACTIVE   DRIVER    STATE     URL\ncustombox   *        none      Running   tcp://50.134.234.20:2376\n```\n\nHowever, the command will fail under `docker-machine 0.8.0`, as there should be `-d none`, so the example should be:\n\n``` bash\n$ docker-machine create --driver none --url=tcp://50.134.234.20:2376 custombox\n$ docker-machine ls\nNAME        ACTIVE   DRIVER    STATE     URL\ncustombox   *        none      Running   tcp://50.134.234.20:2376\n```\n"},{"labels":["documentation",null],"text":"https://github.com/docker/docker/blob/master/docs/reference/api/docker_remote_api_v1.25.md needs to be updated. @thaJeztah kindly agreed to take care of this.\n"},{"labels":["documentation",null],"text":"This is in reference to PIDs cgroup limit https://github.com/docker/docker/pull/18697 \n\nI am confused. Whats the default value for PIDs cgroup limit? below link says setting the value to -1 allows unlimited processes to be forked\nRef:  https://docs.docker.com/engine/reference/commandline/run/\n\nBut i was checking on my machine and the default value for it is \"0\" in which situation its allowing me to do unlimited forks. First two containers dont have any PIDs limit set and by default it was '0'.\n\nRef: docker ps --quiet | xargs docker inspect --format '{{ .Id }}: PidsLimit={{ .HostConfig.PidsLimit }}'\n\\60b19cf162aaa262765608f1533d0532c324f03a2f5e1701d5d98392da624802: PidsLimit=0\n6f8a8454a6f23d29163a22ee9533756d706382bbe3ba467f11f80f3e6489fd4b: PidsLimit=0\n8f2ecc51968d29010d6b6dc58bbfcf7fb4dc4ef52b465f04ff1a37e7ed7e734a: PidsLimit=512\n"},{"labels":["documentation",null],"text":"Tried to follow the Docker Remote API 1.24 docs, and found a broken example:\n\nhttps://docs.docker.com/engine/reference/api/docker_remote_api_v1.24/#/create-a-container\n\nThe example says:\n\n``` json\nPOST /containers/create HTTP/1.1\nContent-Type: application/json\n\n{\n       \"Hostname\": \"\",\n       \"Domainname\": \"\",\n       \"User\": \"\",\n       \"AttachStdin\": false,\n       \"AttachStdout\": true,\n       \"AttachStderr\": true,\n       \"Tty\": false,\n       \"OpenStdin\": false,\n       \"StdinOnce\": false,\n       \"Env\": [\n               \"FOO=bar\",\n               \"BAZ=quux\"\n       ],\n       \"Cmd\": [\n               \"date\"\n       ],\n       \"Entrypoint\": \"\",\n       \"Image\": \"ubuntu\",\n       \"Labels\": {\n               \"com.example.vendor\": \"Acme\",\n               \"com.example.license\": \"GPL\",\n               \"com.example.version\": \"1.0\"\n       },\n       \"Volumes\": {\n         \"/volumes/data\": {}\n       },\n       \"WorkingDir\": \"\",\n       \"NetworkDisabled\": false,\n       \"MacAddress\": \"12:34:56:78:9a:bc\",\n       \"ExposedPorts\": {\n               \"22/tcp\": {}\n       },\n       \"StopSignal\": \"SIGTERM\",\n       \"HostConfig\": {\n         \"Binds\": [\"/tmp:/tmp\"],\n         \"Links\": [\"redis3:redis\"],\n         \"Memory\": 0,\n         \"MemorySwap\": 0,\n         \"MemoryReservation\": 0,\n         \"KernelMemory\": 0,\n         \"CpuPercent\": 80,\n         \"CpuShares\": 512,\n         \"CpuPeriod\": 100000,\n         \"CpuQuota\": 50000,\n         \"CpusetCpus\": \"0,1\",\n         \"CpusetMems\": \"0,1\",\n         \"MaximumIOps\": 0,\n         \"MaximumIOBps\": 0,\n         \"BlkioWeight\": 300,\n         \"BlkioWeightDevice\": [{}],\n         \"BlkioDeviceReadBps\": [{}],\n         \"BlkioDeviceReadIOps\": [{}],\n         \"BlkioDeviceWriteBps\": [{}],\n         \"BlkioDeviceWriteIOps\": [{}],\n         \"MemorySwappiness\": 60,\n         \"OomKillDisable\": false,\n         \"OomScoreAdj\": 500,\n         \"PidMode\": \"\",\n         \"PidsLimit\": -1,\n         \"PortBindings\": { \"22/tcp\": [{ \"HostPort\": \"11022\" }] },\n         \"PublishAllPorts\": false,\n         \"Privileged\": false,\n         \"ReadonlyRootfs\": false,\n         \"Dns\": [\"8.8.8.8\"],\n         \"DnsOptions\": [\"\"],\n         \"DnsSearch\": [\"\"],\n         \"ExtraHosts\": null,\n         \"VolumesFrom\": [\"parent\", \"other:ro\"],\n         \"CapAdd\": [\"NET_ADMIN\"],\n         \"CapDrop\": [\"MKNOD\"],\n         \"GroupAdd\": [\"newgroup\"],\n         \"RestartPolicy\": { \"Name\": \"\", \"MaximumRetryCount\": 0 },\n         \"NetworkMode\": \"bridge\",\n         \"Devices\": [],\n         \"Ulimits\": [{}],\n         \"LogConfig\": { \"Type\": \"json-file\", \"Config\": {} },\n         \"SecurityOpt\": [],\n         \"StorageOpt\": {},\n         \"CgroupParent\": \"\",\n         \"VolumeDriver\": \"\",\n         \"ShmSize\": 67108864\n      },\n      \"NetworkingConfig\": {\n      \"EndpointsConfig\": {\n          \"isolated_nw\" : {\n              \"IPAMConfig\": {\n                  \"IPv4Address\":\"172.20.30.33\",\n                  \"IPv6Address\":\"2001:db8:abcd::3033\",\n                  \"LinkLocalIPs:[\"169.254.34.68\", \"fe80::3468\"]\n              },\n              \"Links\":[\"container_1\", \"container_2\"],\n              \"Aliases\":[\"server_x\", \"server_y\"]\n          }\n      }\n  }\n```\n\nThe most obvious typo is that `LinkLocalIPs` is missing closing quote, and as `NetworkingConfig` and `EndpointsConfig` are misaligned at the same indent, so the closing curly bracket are missing as well.\n"},{"labels":["documentation",null],"text":"Instead of adding users to the **_docker_** group as the [Installation manuals](https://docs.docker.com/engine/installation/#installation) suggest, which is a security hole by definition and antonomasia, I think it's better to add a password to the **_docker_** group and use the **sg** and **newgrp** commands as follows:\n\nAdd a password to **_docker_** group:\n`gpaswd docker`\n\nCreate a session with the **_docker_** group added to the supplementary group ID's:\n`sg docker newgrp $(id -gn)`\n\nAt this point the user may run **docker** commands...\n\nLogout:\n`exit`\n\nNote: The **sg** command is needed to avoid running the sequence: `newgrp docker` and then `exec newgrp $USER`\n\nOn the plus side, there's no need to use **sudo** anymore with its side-effects of resetting environment variables, etc.\n"},{"labels":[null,"documentation"],"text":"<!--\nIf you are reporting a new issue, make sure that we do not have any duplicates\nalready open. You can ensure this by searching the issue list for this\nrepository. If there is a duplicate, please close your issue and add a comment\nto the existing issue instead.\n\nIf you suspect your issue is a bug, please edit your issue description to\ninclude the BUG REPORT INFORMATION shown below. If you fail to provide this\ninformation within 7 days, we cannot debug your issue and will close it. We\nwill, however, reopen it if you later provide the information.\n\nFor more information about reporting issues, see\nhttps://github.com/docker/docker/blob/master/CONTRIBUTING.md#reporting-other-issues\n\n---------------------------------------------------\nBUG REPORT INFORMATION\n---------------------------------------------------\nUse the commands below to provide key information from your environment:\nYou do NOT have to include this information if this is a FEATURE REQUEST\n-->\n\n**Describe the results you received:**\n\nin [this twitter post](https://twitter.com/solomonstre/status/759342485483184128) @shykes mentions that docker image format now includes [HEALTHCHECK](https://docs.docker.com/engine/reference/builder/#healthcheck) information, so i expected the docker image spec to contain a reference to it, but when i looked it did not.\n\n**Describe the results you expected:**\n\ni expected to see supported docker image attributes to be specified and documented.\n"},{"labels":["documentation",null],"text":"documentation — fail, can't find reason, for PR #25203, are there anyone meeting this:\n\nBuild Errors:\nFix the path under windows for dockerimages.md: https://github.com/docker/docker/pull/25203\n# Filtered (engine) Summary:\n\n```\nFound: 852 files\nFound: 0 errors\n```\n"},{"labels":["documentation",null],"text":"The API docs do not cover DELETE or POST on `/nodes/<id>`. Only GET is documented.\n"},{"labels":["documentation"],"text":"see usage case here:\n\nhttps://github.com/docker/docker/issues/25004\n"},{"labels":["documentation"],"text":"Reference to `docker daemon` v/s `dockerd` is ambiguous in \"Configuring and running Docker on various distributions\" (docs/admin/index.md).  See @mlaventure 's comment on https://github.com/docker/docker/pull/24970/files/88ebfc701238dcfacfaf1d3f0a363848460df452#r71992335\n\nThis article looks like it needs to be reworked for clarity in general. \n"},{"labels":["documentation",null],"text":"The command line reference documentation for `docker service create` and `docker service updates` lists the supported flag, but does not explain each one in detail. When possible, we should add detailed descriptions of the flags.\n\ncc @sfsmithcha\n"},{"labels":["documentation"],"text":"Current docs/tutorial refer to listen address only. When https://github.com/docker/docker/pull/24237 goes in, need to clarify the distinction between listen address and advertise address and the address auto-detection behavior.\n"},{"labels":["documentation"],"text":"need to review docs for consistent usage of \"swarm\" and \"swarm mode\"\n\n\"swarm\" is not a proper noun. It should not be capitalized except when it comes at the beginning of the sentence.\n\nThe same is true of many of the concepts for \"swarm mode:\"\nworker node, manager node, etc.\n"},{"labels":["documentation",null],"text":"Verify whether or not the rolling update implements this before waiting the update dealy\n- Wait for the health checks on individual tasks to return a state of either `Running` or `Failed`. \n"},{"labels":["documentation"],"text":"per https://github.com/docker/docker/issues/23710#issuecomment-233751568, we don't have a CLI command (yet) to view logs for a service, so for 1.12 we should document this. Related issue for 1.13; https://github.com/docker/docker/issues/24812\n\n/cc @sfsmithcha should I assign this for you? Or keep it unassigned?\n"},{"labels":["documentation",null],"text":"The event documentation needs to be updated for the `health_status:` actions that are now being sent [here](https://github.com/docker/docker/blob/576c9fa2007cfb5f379f67b11cd852800f9175c6/daemon/health.go#L142). \n"},{"labels":["documentation",null,null],"text":""},{"labels":["documentation",null],"text":"cfr: https://github.com/docker/docker/issues/23931#issuecomment-233035772\n\nThis is supported now but the usage is not clear to users.  Hopefully my comment will help to explain or maybe I could submit a patch if I somehow miraculously find some time.\n"},{"labels":["documentation",null,null],"text":"The API uses an \"open schema\", which means that new properties _may_ be added to older API versions if a newer daemon is used. However, it should still be compatible with older clients.\n\nThis is described in the documentation; https://github.com/docker/docker/blob/v1.11.2/docs/reference/api/docker_remote_api.md\n\n> Docker's Remote API uses an open schema model. In this model, unknown properties in incoming messages are ignored. Client applications need to take this behavior into account to ensure they do not break when talking to newer Docker daemons.\n\nThis wording needs some improvement, because it doesn't clearly describe that older API versions can introduce \"unknown\" properties\n"},{"labels":["documentation",null,null],"text":"Does docker swarm mode supprt high availability?  could be multi-manager in one cluster?\n"},{"labels":["documentation",null,null],"text":"Swarm integration tests have a lot of helper functions and utilities that are really useful, but really poorly organized and documented. Most of the tests themselves are in `integration-cli/docker_api_swarm_test.go`, but the helpers are spread out across files like `integration-cli/docker_utils.go`. These helper functions need doc comments describing their usage, and there needs to be a short guide written on how to use the swarm integration helpers.\n\nFor example,\n\n```\nfunc waitAndAssert(c *check.C, timeout time.Duration, f checkF, checker check.Checker, args ...interface{})\n```\n\nhas no documentation explaining usage. \n\nFurther, there are things like:\n\n```\ntype checkF func(*check.C) (interface{}, check.CommentInterface)\ntype reducer func(...interface{}) interface{}\n```\n\nIt's totally unclear what a `checkF` or a `reducer` does or how to implement one.\n\nAdding this documentation would make writing new swarm integration tests way easier. Further than just adding documentation, a good refactoring of the testing suite might be in order, to improve clarity. Breaking the swarm suite into multiple smaller suites might also be good. Pretty much the whole integration suite is a mess and it needs work, but documentation and light-touch refactoring is a really great place to start on improving it.\n"},{"labels":["documentation",null],"text":"`docker run --pid=...` was implemented in https://github.com/docker/docker/pull/10080, but only the CLI docs were updated, but not the related API changes. Support for `--pid=container:...` was added in https://github.com/docker/docker/pull/22481, which also was not documented in the API\n"},{"labels":["documentation"],"text":"We temporarily changed those links, because for this release, the docs were published before GA was released; change the links back to their actual URL before GA; see https://github.com/docker/docker/pull/24471\n"},{"labels":["documentation",null],"text":"Sorry if this is a duplicate.  I feel like I'm asking a dumb question but I couldn't figure this out even with all the documentation and tutorials.  I think it would be great if the answer went into another page of [this tutorial](https://docs.docker.com/engine/swarm/swarm-tutorial/).\n\nIn docker 1.12.0-rc3 I set up 3 nodes in swarm mode and an overlay network.  \n\nI notice the task names are predictably networktest.1, .2, .3:\n\n```\n$ docker service tasks networktest\nID                         NAME           SERVICE      IMAGE   LAST STATE         DESIRED STATE  NODE\nd6naj58s8izkb822fpd4b6tl0  networktest.1  networktest  alpine  Running 4 seconds  Running        ip-172-31-47-32.us-west-2.compute.internal\n7sglm20hhbmn1ws5fiqvqfgx5  networktest.2  networktest  alpine  Running 4 seconds  Running        ip-172-31-43-158.us-west-2.compute.internal\nau4unlfyavw5y6vhodaw2dwe4  networktest.3  networktest  alpine  Running 4 seconds  Running        ip-172-31-43-158.us-west-2.compute.internal\n```\n\nbut the container names have a random suffix:\n\n```\n[ec2-user@ip-172-31-47-32 ~]$ docker ps\nCONTAINER ID        IMAGE                           COMMAND                  CREATED             STATUS              PORTS                                  NAMES\ne67110a596b0        alpine:latest                   \"sleep 36000\"            5 minutes ago       Up 5 minutes                                               networktest.1.d6naj58s8izkb822fpd4b6tl0\n```\n\nand\n\n```\n[ec2-user@ip-172-31-43-158 ~]$ docker ps\nCONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES\n412ed90a1cd7        alpine:latest       \"sleep 36000\"       4 minutes ago       Up 3 minutes                            networktest.2.7sglm20hhbmn1ws5fiqvqfgx5\n44ea273ba889        alpine:latest       \"sleep 36000\"       4 minutes ago       Up 3 minutes                            networktest.3.au4unlfyavw5y6vhodaw2dwe4\n```\n\nHow are we then supposed to have container-to-container communication?\n\nSo giving that full randomly-generated name allows one container to ping another:\n\n```\n[ec2-user@ip-172-31-47-32 ~]$ docker exec -it e67110a596b0 ping networktest.2.7sglm20hhbmn1ws5fiqvqfgx5\nPING networktest.2.7sglm20hhbmn1ws5fiqvqfgx5 (10.0.0.4): 56 data bytes\n64 bytes from 10.0.0.4: seq=0 ttl=64 time=0.319 ms\n64 bytes from 10.0.0.4: seq=1 ttl=64 time=0.236 ms\n64 bytes from 10.0.0.4: seq=2 ttl=64 time=0.217 ms\n```\n\n_But_ I really wish this worked too:\n\n```\n[ec2-user@ip-172-31-47-32 ~]$ docker exec -it e67110a596b0 ping networktest.2\nping: bad address 'networktest.2'\n```\n\nI didn't see any parameters to `docker service create` for `links`, so how do I configure one container to communicate with another? \n\nIn [this blog](https://blog.docker.com/2016/06/docker-1-12-built-in-orchestration/) it implied the `frontend` and `redis` database would be connected with just the following commands. Was that misleading?\n\n```\ndocker network create -d overlay mynet\ndocker service create --name frontend --replicas 5 -p 80:80/tcp --network mynet mywebapp\ndocker service create --name redis --network mynet redis:latest\n```\n"},{"labels":["documentation",null],"text":"this is a raft cluster, so there needs to be a quorum of nodes available for the cluster to function\nif nodes have their address change at random, it will potentially disturb that quorum and be hard to recover from\nin production you would ​_never_​ deploy this in a way where managers aren't reachable at a fixed address (or DNS name). but maybe we can come up with a hack for laptop use that makes it more usable.\n"},{"labels":["documentation",null],"text":"The https://docs.docker.com/engine/swarm/key-concepts/ mentions  **\"By default manager nodes are also worker nodes, but you can configure managers to be manager-only nodes.\"**, I was not able to find how to configure the swarm managers to be manager-only nodes, maybe I missed something, but could someone shed some light on this? Thanks.\n"},{"labels":["documentation",null],"text":"The \"--privileged\" flag does a lot \"under the hood\"; apart from enabling all capabilities, it also disables apparmor profiles, seccomp profiles, etc.\n\nWe should document exactly what the flag does, so that people can make better decisions if they need it (or not)\n"},{"labels":["documentation",null],"text":"I have been unable to find any documentation or examples for the mount configuration option on the [docker service create](https://docs.docker.com/engine/reference/commandline/service_create/) command.  How do you express the source, target, driver and driver plugin specific options?\n"},{"labels":["documentation",null,null],"text":"<!--\nIf you are reporting a new issue, make sure that we do not have any duplicates\nalready open. You can ensure this by searching the issue list for this\nrepository. If there is a duplicate, please close your issue and add a comment\nto the existing issue instead.\n\nIf you suspect your issue is a bug, please edit your issue description to\ninclude the BUG REPORT INFORMATION shown below. If you fail to provide this\ninformation within 7 days, we cannot debug your issue and will close it. We\nwill, however, reopen it if you later provide the information.\n\nFor more information about reporting issues, see\nhttps://github.com/docker/docker/blob/master/CONTRIBUTING.md#reporting-other-issues\n\n---------------------------------------------------\nBUG REPORT INFORMATION\n---------------------------------------------------\nUse the commands below to provide key information from your environment:\nYou do NOT have to include this information if this is a FEATURE REQUEST\n-->\n\n(NOTE: attempted with both 'testing' and 'experimental' ubuntu repositories\n\n```\nosboxes@worker3:~$ docker version\nClient:\n Version:      1.12.0-rc2\n API version:  1.24\n Go version:   go1.6.2\n Git commit:   906eacd-unsupported\n Built:        Fri Jun 17 21:12:28 2016\n OS/Arch:      linux/amd64\n Experimental: true\n\nServer:\n Version:      1.12.0-rc2\n API version:  1.24\n Go version:   go1.6.2\n Git commit:   906eacd-unsupported\n Built:        Fri Jun 17 21:12:28 2016\n OS/Arch:      linux/amd64\n Experimental: true\n```\n\n**Output of `docker info`:**\n\n```\nosboxes@worker3:~$ docker info\nContainers: 12\n Running: 2\n Paused: 0\n Stopped: 10\nImages: 11\nServer Version: 1.12.0-rc2\nStorage Driver: aufs\n Root Dir: /var/lib/docker/aufs\n Backing Filesystem: extfs\n Dirs: 66\n Dirperm1 Supported: true\nLogging Driver: json-file\nCgroup Driver: cgroupfs\nPlugins:\n Volume: local\n Network: overlay host null bridge\nSwarm: active\n NodeID: aat8ei7yd02du6f7qh47aykk5\n IsManager: No\nRuntimes: default\nDefault Runtime: default\nSecurity Options: apparmor seccomp\nKernel Version: 4.4.0-28-generic\nOperating System: Ubuntu 16.04 LTS\nOSType: linux\nArchitecture: x86_64\nCPUs: 2\nTotal Memory: 2.751 GiB\nName: worker3\nID: 3PJ2:Q4UW:FPJI:URH4:7J2N:ZBTJ:3G54:YOF6:UP35:AIGW:QS7F:HZOJ\nDocker Root Dir: /var/lib/docker\nDebug Mode (client): false\nDebug Mode (server): false\nRegistry: https://index.docker.io/v1/\nWARNING: No swap limit support\nExperimental: true\nInsecure Registries:\n 127.0.0.0/8\nosboxes@worker3:~$ docker version\n```\n\n**Additional environment details (AWS, VirtualBox, physical, etc.):**\nVMware fusion VM's. tested with 2 and 3 separate VM's in a swarm\n\n**Steps to reproduce the issue:**\n1. docker swarm init; #other host;  docker swarm join ip:2377\n2. Create overlay network:\n`docker network create -d overlay my-test-network`\n3. Deploy docker containers to test. I did a quick and dirty deploy of base ubuntu images, and installed tools within them. \n`docker service create --network my-test-network --replicas 3 --name networktest ubuntu:latest sleep 36000`\n4. docker inspect ContainerID to get IP addresses of containers on network\n5. Run tcpdump on docker node (i.e. ubuntu VM) or hypervisor (i.e. mac desktop) to watch traffic on port 4789\n`sudo tcpdump -s 1500 -A -i ens37 port 4789`\n6. Observe that traffic is in cleartext (i.e. install nginx on one container in the service, then install curl on another, and grab the default page. \n\n**Describe the results you received:**\nTraffic when inspected via tcpdump is in cleartext (i.e. http traffic is clearly visible)\n\n**Describe the results you expected:**\nExpected to see encapsulated traffic. Not sure if this is expected and I'm not testing this correctly, or what. I.e. do I need two physically separate hosts, mirror a switch port, and watch traffic there, and/or is bridge mode networking within the mac/vmware fusion confusing things?\n\n**Additional information you deem important (e.g. issue happens only occasionally):**\n"},{"labels":["documentation"],"text":"On the [Getting started with swarm mode](https://docs.docker.com/engine/swarm/swarm-tutorial/#/the-ip-address-of-the-manager-machine) page, we just need to remove `Tip: Docker recommends that every node in the cluster be on the same layer 3 (IP) subnet with all traffic permitted between nodes.` towards the bottom of the page since there is no broadcast domain constraint. Ping @thaJeztah \n\nThanks!\n"},{"labels":["documentation"],"text":"cfr.: https://github.com/docker/docker/issues/24076#issuecomment-229734136\n\n@sfsmithcha @tiborvass \n"},{"labels":["documentation",null,null],"text":"**Output of `docker version`:**\n\n```\nClient:\n Version:      1.12.0-rc2\n API version:  1.24\n Go version:   go1.6.2\n Git commit:   906eacd\n Built:        Fri Jun 17 20:35:33 2016\n OS/Arch:      linux/amd64\n Experimental: true\n\nServer:\n Version:      1.12.0-rc2\n API version:  1.24\n Go version:   go1.6.2\n Git commit:   906eacd\n Built:        Fri Jun 17 20:35:33 2016\n OS/Arch:      linux/amd64\n Experimental: true\n```\n\n**Output of `docker info`:**\n\n```\nContainers: 8\n Running: 8\n Paused: 0\n Stopped: 0\nImages: 228\nServer Version: 1.12.0-rc2\nStorage Driver: aufs\n Root Dir: /var/lib/docker/aufs\n Backing Filesystem: extfs\n Dirs: 761\n Dirperm1 Supported: true\nLogging Driver: json-file\nCgroup Driver: cgroupfs\nPlugins:\n Volume: local\n Network: bridge null overlay host\nSwarm: active\n NodeID: bzk4vv65idjvtxi09gdqtfwbd\n IsManager: Yes\n Managers: 1\n Nodes: 1\n CACertHash: sha256:c0fdf51a4eaa403e7119c77001349cf6bc025542e166179a7ae3ba50f5b422f9\nRuntimes: default\nDefault Runtime: default\nSecurity Options: apparmor seccomp\nKernel Version: 3.16.0-73-generic\nOperating System: Ubuntu 14.04.4 LTS\nOSType: linux\nArchitecture: x86_64\nCPUs: 8\nTotal Memory: 31.06 GiB\nName: j-think\nID: OCMX:LCWD:ZLEO:SGYW:ZWUQ:YLI3:TPPY:4ZLH:GBXC:PKJ2:FNNF:TOOL\nDocker Root Dir: /var/lib/docker\nDebug Mode (client): false\nDebug Mode (server): false\nUsername: johnharris85\nRegistry: https://index.docker.io/v1/\nWARNING: No swap limit support\nExperimental: true\nInsecure Registries:\n 127.0.0.0/8\n```\n\n**Steps to reproduce the issue:**\n1. `docker swarm init`\n2. `docker swarm inspect`\n\n**Describe the results you received:**\nI see only the worker marked to auto-accept into the swarm.\n\n**Describe the results you expected:**\nI expect to see both manager and work set to auto-accept into the swarm as per the documentation here: https://docs.docker.com/engine/reference/commandline/swarm_init/.\n\nWhat's the desired behaviour here? I'm happy to submit a PR for either the docs or the swarm defaults. Personally think the current behavior should stay and docs should be updated (seems like a sensible default).\n"},{"labels":["documentation"],"text":"It would be nice if the documentation contains best practices for operating swarm managers.\n\nFor example:\n- Are swarm managers like mesos masters which needs to be operated in odd numbers to maintain quorum?\n- What is the maximum number of managers you should have in a swarm? Are they like Zookeeper ensembles where as the number of members in the ensemble increases, the write performance decreases?\n- Is it advisable to make every node a manager, so that we can administrate the swarm from any node?\n- Can swarm be run in high availability mode? If so, is there an example?\n"},{"labels":[null,"documentation",null,null,null,null],"text":"Taken from the CLI reference page of `docker node tasks`:\n\n> The `name` filter matches on all or part of a task's name.\n\nThis is wrong. The filtering is applied on the **exact service name**, see example below.\n\nI think this is actually more useful than filtering on task names and therefore propose to **change the filter name from `name` to `service`**.\n\nFurthermore, filtering should be extended to also cover substring matches, not only exact matches.\n\n``` bash\n$ docker service create --name top busybox top\n7ieif28g1smw7ppav7wiausmz\n\n# a task with name top.1 was created on this node\n$ docker node tasks self\nID                         NAME   SERVICE  IMAGE    LAST STATE          DESIRED STATE  NODE\nbrscnd76m5eh8l3cvmpt5lkj4  top.1  top      busybox  Running 51 seconds  Running        bd4242800842\n\n# filtering by part of the task's name does not find the task\n$ docker node tasks --filter name=to self\nID  NAME  SERVICE  IMAGE  LAST STATE  DESIRED STATE  NODE\n\n# filtering by the task's exact name does not find the task\n$ docker node tasks --filter name=top.1 self\nID  NAME  SERVICE  IMAGE  LAST STATE  DESIRED STATE  NODE\n\n# ==> only filtering by the SERVICE's name finds the task <==\n$ docker node tasks --filter name=top self\nID                         NAME   SERVICE  IMAGE    LAST STATE              DESIRED STATE  NODE\nbrscnd76m5eh8l3cvmpt5lkj4  top.1  top      busybox  Running About a minute  Running        bd4242800842\n\n$ docker version\nClient:\n Version:      1.12.0-dev\n API version:  1.25\n Go version:   go1.6.2\n Git commit:   83e6197-unsupported\n Built:        Tue Jun 28 20:00:19 2016\n OS/Arch:      linux/amd64\n\nServer:\n Version:      1.12.0-dev\n API version:  1.25\n Go version:   go1.6.2\n Git commit:   83e6197-unsupported\n Built:        Tue Jun 28 20:00:19 2016\n OS/Arch:      linux/amd64\n```\n"},{"labels":["documentation",null,null],"text":"**Output of `docker version`:**\nroot@xxxxx:~# docker version\nClient:\n Version:      1.12.0-rc2\n API version:  1.24\n Go version:   go1.6.2\n Git commit:   906eacd\n Built:        Fri Jun 17 21:09:07 2016\n OS/Arch:      linux/amd64\n\nServer:\n Version:      1.12.0-rc2\n API version:  1.24\n Go version:   go1.6.2\n Git commit:   906eacd\n Built:        Fri Jun 17 21:09:07 2016\n OS/Arch:      linux/amd64\n\nroot@xxxxx:~# docker-compose version\ndocker-compose version 1.8.0-rc1, build 9bf6bc6\ndocker-py version: 1.8.1\nCPython version: 2.7.9\nOpenSSL version: OpenSSL 1.0.1e 11 Feb 2013\n\n**Output of `docker info`:**\nContainers: 49\n Running: 0\n Paused: 0\n Stopped: 49\nImages: 109\nServer Version: 1.12.0-rc2\nStorage Driver: aufs\n Root Dir: /var/lib/docker/aufs\n Backing Filesystem: extfs\n Dirs: 246\n Dirperm1 Supported: true\nLogging Driver: json-file\nCgroup Driver: cgroupfs\nPlugins:\n Volume: local\n Network: bridge overlay null host\nSwarm: active\n NodeID: 34lgngb2j2iufvk046th0p6qq\n IsManager: Yes\n Managers: 1\n Nodes: 3\n CACertHash: sha256:4dd1a761493f5ef3fcaa783113b85b935a7686cc954f5507af9b3743b87cd5b9\nRuntimes: default\nDefault Runtime: default\nSecurity Options: apparmor seccomp\nKernel Version: 3.16.0-30-generic\nOperating System: Ubuntu 14.04.2 LTS\nOSType: linux\nArchitecture: x86_64\nCPUs: 2\nTotal Memory: 1.955 GiB\nName: pek2-gosv-16-dhcp226\nID: 2B4M:L4M2:6Q3A:HLAU:3CNJ:JA7I:34T3:NRBA:BGY6:RY5A:4AS3:AC6L\nDocker Root Dir: /var/lib/docker\nDebug Mode (client): false\nDebug Mode (server): false\nHttp Proxy: xxxx.some.com:1234\nHttps Proxy: xxxx.some.com:1234\nRegistry: https://index.docker.io/v1/\nWARNING: No swap limit support\nInsecure Registries:\n 127.0.0.0/8\n\n**Additional environment details (AWS, VirtualBox, physical, etc.):**\n\n**Steps to reproduce the issue:**\n0. Prepare three ubuntu14.04 machines, here I used VMware VMs\n1. Upgrade docker engine to v1.12rc2\n2. (Optional)Upgrade docker compose 1.8.0-rc1 (I could also reproduce this issue on earlier version such as  v1.6.1GA)\n3. create a swarm cluster with 1 manger node and 2 slave nodes,  as documented in v1.12 swarm-mode doc. Here in my network setup, \"ingress\" is swarm created overlay network\npengzhencao@pek2-gosv-16-dhcp226:~/docker/docker$ docker node list\nID                           NAME                  MEMBERSHIP  STATUS  AVAILABILITY  MANAGER STATUS\n34lgngb2j2iufvk046th0p6qq \\*  pek2-gosv-16-dhcp226  Accepted    Ready   Active        Leader\n37fmlm52xw0iy7k6zoo5j09px    pek2-gosv-16-dhcp160  Accepted    Ready   Active\n61lw7iskl9ivnxaveby8dfaf1    pek2-gosv-16-dhcp45   Accepted    Ready   Active\npengzhencao@pek2-gosv-16-dhcp226:~/docker/docker$ docker network list\nNETWORK ID          NAME                DRIVER              SCOPE\n8b94d08c0f67        bridge              bridge              local\n74b71c054864        deploy_default      bridge              local\nabd08b2c6c5d        docker_gwbridge     bridge              local\n651d9df026eb        host                host                local\n7oywymoz6bbp        ingress             overlay             swarm\n18e3039be16b        none                null                local\n1. On the swarm manager node, edit docker-compose.yml file with the following settings:\n   version: '2'\n   services:\n   log:\n     build: ./log/\n     volumes:\n       - /var/log/harbor/:/var/log/docker/\n     ports:\n       - 1514:514\n   ....(some other services)\n   networks:\n   default:\n     external:\n       name: ingress\n2. run with \"docker-compose up\"\n\n**Describe the results you received:**\npengzhencao@pek2-gosv-16-dhcp226:~/harbor/Deploy$ docker-compose up\nRecreating deploy_log_1\nERROR: for log  swarm-scoped network (ingress) is not compatible with `docker create` or `docker run`. This network can be only used docker service\nERROR: Encountered errors while bringing up the project.\n**Describe the results you expected:**\nDocker compose should deploy the services up with overlay network \"ingress\"\n\n**Additional information you deem important (e.g. issue happens only occasionally):**\nI've followed swarm and docker-compose integration guide here:\nhttps://docs.docker.com/compose/networking/\n\nThe above error seems to be thrown in L356:\nin  docker/daemon/container_operations.go\n330 func errClusterNetworkOnRun(n string) error {\n331         return fmt.Errorf(\"swarm-scoped network (%s) is not compatible with `docker create` or `docker run`. This network can be only used     docker service\", n)\n332 }\n333\n334 // updateContainerNetworkSettings update the network settings\n335 func (daemon _Daemon) updateContainerNetworkSettings(container *container.Container, endpointsConfig map[string]_networktypes.EndpointSetti    ngs) error {\n336         var (\n337                 n   libnetwork.Network\n338                 err error\n339         )\n340\n341         mode := container.HostConfig.NetworkMode\n342         if container.Config.NetworkDisabled || mode.IsContainer() {\n343                 return nil\n344         }\n345\n346         networkName := mode.NetworkName()\n347         if mode.IsDefault() {\n348                 networkName = daemon.netController.Config().Daemon.DefaultNetwork\n349         }\n350         if mode.IsUserDefined() {\n351                 n, err = daemon.FindNetwork(networkName)\n352                 if err != nil {\n353                         return err\n354                 }\n355                 if !container.Managed && n.Info().Dynamic() {\n356                         return errClusterNetworkOnRun(networkName)\n357                 }\n358                 networkName = n.Name()\n359         }\n360 \n"},{"labels":["documentation"],"text":"The use of constraints should be documented in the reference. While https://github.com/docker/docker/blob/master/docs/reference/commandline/service_create.md says that the `--constraint` flag exists when creating a service, it is unclear how this is to be used and whether the same usage as docker/swarm applies.\n\nIt would also be nice to have a few examples showing how this is to be used.\n"},{"labels":[null,"documentation",null,null],"text":"`docker service scale`... Why is the _the only_ parameter which can be updated through both a first-class command _and_ through `docker service update`?  Isn't that a bit inconsistent?\n\nI know that it was this way in Docker Compose, but is including Docker Compose vestiges in the new `docker swarm` _really_ a good idea?  Will this inclusion of a Docker Compose vestige set a user expectation for `docker swarm` to imitate Compose closely in other ways as well?\n\nHere's our last chance to pull it, before it becomes canon and removing it breaks hundreds of shell scripts.  Feel free to close if I'm way off mark here.\n\n@aluzzardi @vieux @dnephin @abronan \n"},{"labels":["documentation",null],"text":"According to the engine-api Docs, resource settings are \"NanoCPUs\" and \"MemoryBytes\" - https://godoc.org/github.com/docker/engine-api/types/swarm#Resources\n\nThe corresponding docs for the remote API show simply \"CPU\" and \"Memory\" https://github.com/docker/docker/blob/master/docs/reference/api/docker_remote_api_v1.24.md#create-a-service\n"},{"labels":[null,"documentation"],"text":"On `Docker version 1.11.2, build b9f10c9`, both `POST /v1.23/containers/<container ID>/exec` and `POST /v1.23/exec/<exec ID>/start` have the following body:\n\n``` json\n{\n  \"AttachStderr\": true,\n  \"AttachStdin\": true,\n  \"AttachStdout\": true,\n  \"Cmd\": [\n    \"true\"\n  ],\n  \"Container\": \"<container ID>\",\n  \"Detach\": false,\n  \"DetachKeys\": \"\",\n  \"Privileged\": false,\n  \"Tty\": true,\n  \"User\": \"\"\n}\n```\n\nOn `Docker version 1.12.0-rc2, build 906eacd, experimental`, both `POST /v1.24/containers/<container ID>/exec` and `POST /v1.24/exec/<exec ID>/start` have the following body:\n\n``` json\n{\n  \"AttachStderr\": true,\n  \"AttachStdin\": true,\n  \"AttachStdout\": true,\n  \"Cmd\": [\n    \"true\"\n  ],\n  \"Detach\": false,\n  \"DetachKeys\": \"\",\n  \"Privileged\": false,\n  \"Tty\": true,\n  \"User\": \"\"\n}\n```\n\nNote that the bodies are different -- the v1.23 body includes the container ID. This change doesn't appear in the Remote API documentation.\n"},{"labels":["documentation"],"text":"#23790 added support for this as an environment variable `DOCKER_SERVICE_PREFER_OFFLINE_IMAGE` to support our integration tests.\n\nWe should figure out if we want to:\n- document this\n- make it configurable in some other way\n- use digest or image IDs to avoid pulling if local image is present.\n\nI'd prefer not to rush this for 1.12 timeframe.\n\n@vdemeester \n"},{"labels":["documentation",null],"text":"When rendering a left nav where selections in that area render pages in the main content area, it's important to have a clear indication in the left nav where the user is.  That is, where the content for the main content area came from.\n\nI imagine I could find many examples of this, but I'm currently looking at [Docker networks feature overview](https://docs.docker.com/engine/userguide/networking/).  I would provide a screenshot, but imagebin isn't working for me right now.\n\nWhat I see on the screen indicates that I might be somewhere in the \"User Guide\" section, and I imagine that I know this page is talking about networking, so I might be somewhere around the \"Network configuration\" section, but the rendering of the left nav isn't helping me here.\n"},{"labels":["documentation",null],"text":"On the documentation page [_Automatically start containers_](https://docs.docker.com/engine/admin/host_integration/) the example for a [systemd](https://freedesktop.org/wiki/Software/systemd/) [service unit](https://docs.docker.com/engine/admin/host_integration/#systemd) with `docker run` is given as below.\n\n```\n[Service]\n…\nExecStart=/usr/bin/docker run --env foo=bar --name redis_server redis\nExecStop=/usr/bin/docker stop -t 2 redis_server ; /usr/bin/docker rm -f redis_server\n…\n```\n\nThis should be changed to the example below, using `ExecStopPost`.\n\n```\n[Service]\n…\nExecStart=/usr/bin/docker run --env foo=bar --name redis_server redis\nExecStop=/usr/bin/docker stop -t 2 redis_server\nExecStopPost=/usr/bin/docker rm -f redis_server\n…\n```\n\nFrom the [manual](https://www.freedesktop.org/software/systemd/man/systemd.service.html):\n\n> `ExecStop=`\n> \n> It is recommended to use this setting for commands that communicate with the service requesting clean termination. When the commands specified with this option are executed it should be assumed that the service is still fully up and is able to react correctly to all commands. For post-mortem clean-up steps use ExecStopPost= instead.\n> \n> `ExecStopPost=`\n> \n> Additional commands that are executed after the service is stopped. This includes cases where the commands configured in ExecStop= were used, where the service does not have any ExecStop= defined, or where the service exited unexpectedly. This argument takes multiple command lines, following the same scheme as described for ExecStart=. Use of these settings is optional. Specifier and environment variable substitution is supported. Note that – unlike ExecStop= – commands specified with this setting are invoked when a service failed to start up correctly and is shut down again.\n> \n> It is recommended to use this setting for clean-up operations that shall be executed even when the service failed to start up correctly. Commands configured with this setting need to be able to operate even if the service failed starting up half-way and left incompletely initialized data around. As the service's processes have been terminated already when the commands specified with this setting are executed they should not attempt to communicate with them.\n\nSo to ensure, that the Docker container is really deleted, and the service will start up again, after an unclean shutdown, that means the Docker container is stopped, but is still around, the Docker container deletion command should be in the directive `ExecStopPost=`.\n"},{"labels":["documentation",null],"text":"Feedback on Debian install from John Clements clements@brinckerhoff.org\n\nOn the Debian install page,\n\nhttps://docs.docker.com/engine/installation/linux/debian/\n\nStep 3 of the “update your apt” section reads:\n\n $ apt-get purge lxc-docker*\n $ apt-get purge docker.io*\n\nUnfortunately, on some shells, the globber will get ahold of the asterisk and try to find files in the local directory starting with lxc-docker, which isn’t what you want at all. Instead, this should probably read:\n\n $ apt-get purge \"lxc-docker_\"\n $ apt-get purge “docker.io_”\n\nThen, later, you suggest obtaining the signing key for the project with\n\n $ apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118 E89F3A912897C070ADBF76221572C52609D\n\nThis timed out for me repeatedly, but I tried\n\n $ apt-key adv --keyserver hkp://pool.sks-keyservers.net:80 --recv-keys 58118 E89F3A912897C070ADBF76221572C52609D\n\n… and that worked fine. Dunno if this is a transient failure, but I’m guessing the more general address is probably more robust.\n\nFinally, and this is minor, you might want to replace the calls to `service` with calls to `systemctl`.\n\nThanks!\n\nJohn Clements\n"},{"labels":["documentation"],"text":"On your blog, you said the file extension .dab. but in the github repo, your file extension .dsb\n\nwhat's different with two file extension?\n\nhttps://blog.docker.com/2016/06/docker-app-bundle/\n\n![selection_034](https://cloud.githubusercontent.com/assets/278153/16214910/a5a46042-378f-11e6-99f8-4d1ed45ba41d.png)\n\nhttps://github.com/docker/docker/blob/master/experimental/docker-stacks-and-bundles.md\n![selection_035](https://cloud.githubusercontent.com/assets/278153/16214913/bb3ce226-378f-11e6-9fe5-72dfebe093ed.png)\n"},{"labels":[null,"documentation",null,null,null],"text":"**Output of `docker version`:**\n\nClient (laptop, OSX)\n\n```\n$> docker version\nClient:\n Version:      1.12.0-rc2\n API version:  1.24\n Go version:   go1.6.2\n Git commit:   906eacd\n Built:        Fri Jun 17 20:35:33 2016\n OS/Arch:      darwin/amd64\n Experimental: true\n\nServer:\n Version:      1.12.0-rc2\n API version:  1.24\n Go version:   go1.6.2\n Git commit:   a7119de\n Built:        Fri Jun 17 22:09:20 2016\n OS/Arch:      linux/amd64\n Experimental: true\n```\n\nServer:\n\n```\nClient:\n Version:      1.12.0-rc2\n API version:  1.24\n Go version:   go1.6.2\n Git commit:   906eacd-unsupported\n Built:        Fri Jun 17 21:21:56 2016\n OS/Arch:      linux/amd64\n\nServer:\n Version:      1.12.0-rc2\n API version:  1.24\n Go version:   go1.6.2\n Git commit:   906eacd-unsupported\n Built:        Fri Jun 17 21:21:56 2016\n OS/Arch:      linux/amd64\n```\n\n**Output of `docker info`:**\n\nClient:\n\n```\nContainers: 78\n Running: 0\n Paused: 0\n Stopped: 78\nImages: 51\nServer Version: 1.12.0-rc2\nStorage Driver: aufs\n Root Dir: /var/lib/docker/aufs\n Backing Filesystem: extfs\n Dirs: 344\n Dirperm1 Supported: true\nLogging Driver: json-file\nCgroup Driver: cgroupfs\nPlugins:\n Volume: local\n Network: overlay bridge null host\nSwarm: inactive\nRuntimes: default\nDefault Runtime: default\nSecurity Options: seccomp\nKernel Version: 4.4.13-moby\nOperating System: Alpine Linux v3.4\nOSType: linux\nArchitecture: x86_64\nCPUs: 4\nTotal Memory: 1.954 GiB\nName: moby\nID: AX3N:B5KC:6TY6:V5UW:5MAH:JSD3:PXBN:HC3H:GF3L:GC7L:Z35R:KAIW\nDocker Root Dir: /var/lib/docker\nDebug Mode (client): false\nDebug Mode (server): true\n File Descriptors: 33\n Goroutines: 95\n System Time: 2016-06-20T22:09:37.819574454Z\n EventsListeners: 1\nNo Proxy: *.local, 169.254/16\nRegistry: https://index.docker.io/v1/\nExperimental: true\nInsecure Registries:\n 127.0.0.0/8\n```\n\nServer (swarm cluster):\n\n```\nContainers: 0\n Running: 0\n Paused: 0\n Stopped: 0\nImages: 0\nServer Version: 1.12.0-rc2\nStorage Driver: aufs\n Root Dir: /var/lib/docker/aufs\n Backing Filesystem: extfs\n Dirs: 0\n Dirperm1 Supported: true\nLogging Driver: json-file\nCgroup Driver: cgroupfs\nPlugins:\n Volume: local\n Network: overlay host null bridge\nSwarm: inactive\nRuntimes: default\nDefault Runtime: default\nSecurity Options: apparmor seccomp\nKernel Version: 4.4.0-24-generic\nOperating System: Ubuntu 16.04 LTS\nOSType: linux\nArchitecture: x86_64\nCPUs: 1\nTotal Memory: 991.1 MiB\nName: docker1\nID: LOR7:TUJW:PXCF:SGKX:L5LU:GQCT:UTRN:G72M:JU32:I24J:JN3R:BN34\nDocker Root Dir: /var/lib/docker\nDebug Mode (client): false\nDebug Mode (server): false\nRegistry: https://index.docker.io/v1/\nInsecure Registries:\n 127.0.0.0/8\n```\n\n**Additional environment details (AWS, VirtualBox, physical, etc.):**\n\n**Steps to reproduce the issue:**\n1. Set up a remote swarm cluster - mine is 4 remote nodes, 2 leaders\n2. On your laptop, run:\n\n```\n$> docker swarm join swarmIP:2377\nThis node joined a Swarm as a worker.\n```\n1. On the leader:\n\n```\ndocker node ls\nID                         NAME     MEMBERSHIP  STATUS  AVAILABILITY  MANAGER STATUS\n09y7cdu03xmuwhta0ykvd72gb  docker4  Accepted    Ready   Active        Reachable\n1jkzrkblwbdig3l5u29997n00  docker1  Accepted    Ready   Active        Leader\n41znz1ntskwvvvea8up52wu0m  docker2  Accepted    Ready   Active        \n5bt1bcak4tuzm9a39a7ou9upz  docker3  Accepted    Ready   Active        \n7ljlfo1zqcid0mc8cmir64i6g  moby     Accepted    Ready   Active \n```\n\n**Describe the results you received:**\n\nMy 'rogue' laptop was able to join the swarm cluster as a worker and shows up in the manager list as ready and active.\n\n**Describe the results you expected:**\n\nI expected the join command to require approval from a manager node as it does in manager mode\n\n**Additional information you deem important (e.g. issue happens only occasionally):**\n"},{"labels":["documentation"],"text":"Per @thaJeztah , verify correct version of api docs post-1.12 release. Ref https://github.com/docker/docker/pull/23777 .\n"},{"labels":["documentation"],"text":"Review consistency of CLI reference with the code on the new commands:\n- `docker node`\n- `docker service`\n- `docker swarm`\n"},{"labels":["documentation"],"text":"Review consistency of API reference with the code on the new endpoints:\n- Node endpoints\n- Service endpoints\n- Swarm endpoints\n"},{"labels":[null,"documentation",null],"text":"**Output of `docker version`:**\n\n```\nClient:\n Version:      1.11.2\n API version:  1.23\n Go version:   go1.5.4\n Git commit:   b9f10c9\n Built:        Wed Jun  1 22:00:43 2016\n OS/Arch:      linux/amd64\n\nServer:\n Version:      1.11.2\n API version:  1.23\n Go version:   go1.5.4\n Git commit:   b9f10c9\n Built:        Wed Jun  1 22:00:43 2016\n OS/Arch:      linux/amd64\n\n```\n\n**Output of `docker info`:**\n\n```\nContainers: 4\n Running: 0\n Paused: 0\n Stopped: 4\nImages: 4\nServer Version: 1.11.2\nStorage Driver: aufs\n Root Dir: /var/lib/docker/aufs\n Backing Filesystem: extfs\n Dirs: 15\n Dirperm1 Supported: true\nLogging Driver: json-file\nCgroup Driver: cgroupfs\nPlugins: \n Volume: local\n Network: bridge null host\nKernel Version: 4.4.0-22-generic\nOperating System: Ubuntu 16.04 LTS\nOSType: linux\nArchitecture: x86_64\nCPUs: 4\nTotal Memory: 7.676 GiB\nName: maxnoe-mac\nID: AJ2Z:G6U4:LKAZ:PXNC:PBBJ:7B73:BM6B:NYTX:JZAS:XW6H:VAV2:7XDM\nDocker Root Dir: /var/lib/docker\nDebug mode (client): false\nDebug mode (server): false\nRegistry: https://index.docker.io/v1/\nWARNING: No swap limit suppor\n```\n\n**Steps to reproduce the issue:**\n1. Try logging in to a registry with self signed certificates\n\n```\ndocker login myregstry.example.com:5000\n```\n\nThis worked with docker `1.9` on my machine because I have `--insecure-registry myregistry.example.com:5000` added to the `DOCKER_OPTS` in `/etc/defaults/docker`.\nAlso I registered the certificate system wide. `curl` works without providing the certificate explicitly\n\n**Describe the results you received:**\n`Error response from daemon: Get https://registry.e5.physik.tu-dortmund.de:5000/v1/users/: x509: certificate signed by unknown authority`\n\nOr, when also added to `/etc/docker/certs.d/<url>/ca.crt`:\n`Error response from daemon: Get https://registry.e5.physik.tu-dortmund.de:5000/v1/users/: x509: certificate signed by unknown authority (possibly because of \"x509: invalid signature: parent certificate cannot sign this kind of certificate\" while trying to verify candidate authority certificate \"registry.e5.physik.tu-dortmund.de\")`\n\n**Describe the results you expected:**\nSuccesfull login\n\n**Additional information you deem important (e.g. issue happens only occasionally):**\nThe registry is running as a rancher service behind a loadbalancer.\n"},{"labels":["documentation",null,null],"text":"> Mount volume (-v, --read-only)\n> \n> `$ docker  run  -v `pwd`:`pwd` -w `pwd` -i -t  ubuntu pwd`\n> \n> The -v flag mounts the current working directory into the container. The -w lets the command being executed inside the current working directory, by changing into the directory to the value returned by pwd. So this combination executes the command using the container, but inside the current working directory.\n\nSource: https://github.com/docker/docker/blob/master/docs/reference/commandline/run.md#mount-volume--v---read-only\n\nAreas for improvement: :smiley: \n- It assumes the user understands `pwd` command is evaluated to get the current working directory: Perhaps it's simpler to use `/current/directory` in the example instead? (Similar to the the `/doesnt/exist` used in the example just below this block.)\n- Explanation for `-w` switch is confusing. My understanding is that the `-w` refers to a working directory **insider** the container. So the example should explain that the command is executed in a directory inside the container that happens to have the same name as the current working directory. In additional, because of the bind volume, the directory inside the container is mapped to the current working directory on the host.\n"},{"labels":["documentation",null,null],"text":"The installation instructions currently use `$releasever` to configure the right YUM repository to use, however the instructions don't take into account the `Server` releases output the version in a different format (e.g. `7Server` instead of just `7`).\n\n```\n$ sudo tee /etc/yum.repos.d/docker.repo <<-'EOF'\n[dockerrepo]\nname=Docker Repository\nbaseurl=https://yum.dockerproject.org/repo/main/centos/$releasever/\nenabled=1\ngpgcheck=1\ngpgkey=https://yum.dockerproject.org/gpg\nEOF\n```\n\nThe installation script correctly strips the `Server` before generating the URL, so we should update the documentation to do the same, or show how to;\nhttps://github.com/docker/docker/blob/v1.11.2/hack/install.sh#L283-L285\n\nAs reported by Aleksandr Vinokurov on Twitter https://twitter.com/aleksandrvin/status/740548856316858368 (thanks!)\n\nAlso;\nhttps://access.redhat.com/discussions/2134691\n"},{"labels":["documentation",null],"text":"<!--\nIf you are reporting a new issue, make sure that we do not have any duplicates\nalready open. You can ensure this by searching the issue list for this\nrepository. If there is a duplicate, please close your issue and add a comment\nto the existing issue instead.\n\nIf you suspect your issue is a bug, please edit your issue description to\ninclude the BUG REPORT INFORMATION shown below. If you fail to provide this\ninformation within 7 days, we cannot debug your issue and will close it. We\nwill, however, reopen it if you later provide the information.\n\nFor more information about reporting issues, see\nhttps://github.com/docker/docker/blob/master/CONTRIBUTING.md#reporting-other-issues\n\n---------------------------------------------------\nBUG REPORT INFORMATION\n---------------------------------------------------\nUse the commands below to provide key information from your environment:\nYou do NOT have to include this information if this is a FEATURE REQUEST\n-->\n\n**Output of `docker version`:**\n\n```\nClient:\n Version:      1.11.2\n API version:  1.23\n Go version:   go1.5.4\n Git commit:   b9f10c9\n Built:        Wed Jun  1 22:00:43 2016\n OS/Arch:      linux/amd64\n\nServer:\n Version:      1.11.2\n API version:  1.23\n Go version:   go1.5.4\n Git commit:   b9f10c9\n Built:        Wed Jun  1 22:00:43 2016\n OS/Arch:      linux/amd64\n```\n\n**Output of `docker info`:**\n\n```\nContainers: 16\n Running: 13\n Paused: 0\n Stopped: 3\nImages: 270\nServer Version: 1.11.2\nStorage Driver: overlay\n Backing Filesystem: extfs\nLogging Driver: json-file\nCgroup Driver: cgroupfs\nPlugins: \n Volume: local\n Network: bridge null host\nKernel Version: 4.4.0-22-generic\nOperating System: Ubuntu 16.04 LTS\nOSType: linux\nArchitecture: x86_64\nCPUs: 8\nTotal Memory: 15.54 GiB\nName: bacigalubupc\nID: 4SXZ:24LJ:CLDS:NRQJ:BLRE:WMA3:BVVO:MOGC:DXNW:7COX:L5DX:F4Y6\nDocker Root Dir: /home/UX/lbacigalux/docker\nDebug mode (client): false\nDebug mode (server): true\n File Descriptors: 87\n Goroutines: 145\n System Time: 2016-06-02T16:25:00.463460097+02:00\n EventsListeners: 0\nUsername: lbacigal\nRegistry: https://index.docker.io/v1/\n\n```\n\n**Additional environment details (AWS, VirtualBox, physical, etc.):**\n\n**Steps to reproduce the issue:**\n1. `docker volume ls -f name=rose` or `docker volume ls -f driver=local`\n\n**Describe the results you received:**\nError response from daemon: Invalid filter 'name'\n\n**Describe the results you expected:**\nBased on this https://docs.docker.com/engine/reference/commandline/volume_ls/\n\n| DRIVER | VOLUME NAME |\n| --- | --- |\n| local | rosemary |\n\n**Additional information you deem important (e.g. issue happens only occasionally):**\nfilter dangling is working\n"},{"labels":["documentation"],"text":"Given there are apparently duplicate properties at the options level and HostConfig level the lack of documentation for the containers/create endpoint in the [Remote API](https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/#create-a-container) is a blocker.\n\nIn particular, without deep knowledge of the system, how are adopters supposed to differentiate between...\n\n`options.Volumes` vs. `options.HostConfig.Binds`\n\n...or...\n\n`options.ExposedPorts` vs. `options.HostConfig.PortBindings`\n\n...as they appear to be doing the same thing. Probably they are not, but really as [noted before](https://github.com/docker/docker/issues/2949) in an issue not properly closed according to those in the thread, these things are NOT self-describing. If the conventions correspond to equivalent operations documented elsewhere, then this link should be explicit.\n\nHostConfig is not even labelled - what does it do? Isn't the whole JSON-ish structure a host configuration? This is particularly galling since the /run endpoint describes that it 'takes a HostConfig' for backwards compatibility, and links to the documentation for containers/create to clarify, where there is no information describing what the HostConfig object is for, (versus the whole options object, which contains a bunch of host-specific config).\n\nBACKGROUND\n\nI am trying to execute through the Remote API a self-removing (--rm) container configuration already verified interactively through a command line `docker run` invocation. I can't be the only person who works in this way, starting with docker run, and then trying to use an API to automate invocation. \n\nMy attempt to code this through dockerode (backed by the Remote API) very challenging simply because the documentation is so poor (dockerode points to the Remote API documentation as documentation for its own API). \n"},{"labels":["documentation",null,null],"text":"Kube's is somehow generating docs, I didn't look into the details but it's prettty cool, even if its slow as eff to run (maybe we can make it better, I didn't really dig deep). Then maybe we don't have to think about so many things :)\n\nhttps://github.com/kubernetes/kubernetes/blob/master/hack/update-generated-docs.sh\n"},{"labels":[null,"documentation"],"text":"<!--\nIf you are reporting a new issue, make sure that we do not have any duplicates\nalready open. You can ensure this by searching the issue list for this\nrepository. If there is a duplicate, please close your issue and add a comment\nto the existing issue instead.\n\nIf you suspect your issue is a bug, please edit your issue description to\ninclude the BUG REPORT INFORMATION shown below. If you fail to provide this\ninformation within 7 days, we cannot debug your issue and will close it. We\nwill, however, reopen it if you later provide the information.\n\nFor more information about reporting issues, see\nhttps://github.com/docker/docker/blob/master/CONTRIBUTING.md#reporting-other-issues\n\n---------------------------------------------------\nBUG REPORT INFORMATION\n---------------------------------------------------\nUse the commands below to provide key information from your environment:\nYou do NOT have to include this information if this is a FEATURE REQUEST\n-->\n\nhttps://docs.docker.com/engine/reference/api/docker_remote_api_v1.23\n\nCreate a container -- status codes:\n[mistake] 404: no such container --> image\n[miss] 409: the name \"xxx\" is already in use\n[confuse] 406: impossible to attach.\nHow to trigger a 406 error in a create action?\n\nStart a container -- status codes:\n[mistake] 404: no such container --> can also be \"executable file not found in $PATH\"\n"},{"labels":["documentation",null,null],"text":"I've tried to wrap my head around the [Docker IPv6 cluster documentation](https://docs.docker.com/engine/userguide/networking/default_network/ipv6/), but something does not work out.\n\nIt seems that both graphics for [Switched network environment](https://docs.docker.com/engine/userguide/networking/default_network/images/ipv6_switched_network_example.svg)\n![image](https://cloud.githubusercontent.com/assets/636669/15391455/90ccb634-1dc1-11e6-917f-a1da758b3777.png)\nand [Routed network environment](https://docs.docker.com/engine/userguide/networking/default_network/images/ipv6_routed_network_example.svg)\n![image](https://cloud.githubusercontent.com/assets/636669/15391479/aa4a9cfc-1dc1-11e6-8a56-db728d0be83e.png)\n are identical (beside some typos) and are not helping with my issue.\n\nMy use case:\n\nI have a /48 network (`2001:XXXX:45::/48`) and routed two /64 subnetworks (`2001:XXXX:45:2::/64` and `2001:XXXX:45:3::/64`) to my host and assigned one of it to the host and the other to the containers. So Host1 has\n\n```\n$ # ip -6 addr\n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536\n    inet6 ::1/128 scope host\n       valid_lft forever preferred_lft forever\n2: eth0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qlen 1000\n    inet6 2001:XXXX:45:2::2/64 scope global\n       valid_lft forever preferred_lft forever\n    inet6 fe80::ec4:7aff:fe06:5830/64 scope link\n       valid_lft forever preferred_lft forever\n181: docker0: <NO-CARRIER,BROADCAST,MULTICAST,UP> mtu 1500\n    inet6 2001:XXXX:45:3::1/64 scope global tentative\n       valid_lft forever preferred_lft forever\n    inet6 fe80::1/64 scope link tentative\n       valid_lft forever preferred_lft forever\n\n\n$ ip -6 route\n2001:XXXX:45:2::/64 dev eth0  proto kernel  metric 256\n2001:XXXX:45:3::/64 dev docker0  proto kernel  metric 256\n2001:XXXX:45:3::/64 dev docker0  metric 1024\nfe80::223:9cff:fefc:6ff0 dev eth0  metric 1024\nfe80::/64 dev eth0  proto kernel  metric 256\nfe80::/64 dev docker0  proto kernel  metric 256\ndefault via fe80::223:9cff:fefc:6ff0 dev eth0  metric 1024\n```\n\nwhile Container1-1, Container1-2, Container1-X get started with\n\n```\nDOCKER_OPTS=\"--dns 8.8.8.8 --dns 8.8.4.4 --fixed-cidr-v6=2001:XXXX:45:3::/64 --ipv6\"\n```\n\nand result in this\n\n```\n$ docker run -it ubuntu:14.04 bash -c 'ip -6 addr; echo '====' ; ip -6 route'\n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536\n    inet6 ::1/128 scope host\n       valid_lft forever preferred_lft forever\n190: eth0: <NO-CARRIER,BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500\n    inet6 2001:XXXX:45:3:0:242:ac11:2/64 scope global nodad\n       valid_lft forever preferred_lft forever\n    inet6 fe80::42:acff:fe11:2/64 scope link tentative\n       valid_lft forever preferred_lft forever\n====\n2001:XXXX:45:3::/64 dev eth0  proto kernel  metric 256\nfe80::/64 dev eth0  proto kernel  metric 256\ndefault via 2001:XXXX:45:3::1 dev eth0  metric 1024\n```\n\nMy issue is: I can't make this work without a NDP proxy on the host. The containers are not able to reach outside world, unless i manually add a NDP proxy on my host, e.g.:\n\n```\n$ sysctl net.ipv6.conf.eth0.proxy_ndp=1\n$ ip -6 neigh add proxy 2001:XXXX:45:3:0:242:ac11:2 dev eth0\n```\n\nWhat am i missing? The documentation gives the impression that NDP proxying is only necessary if using a single /64 - and switches/routed environments should work without NDP proxy.\n"},{"labels":["documentation",null],"text":"Referring to #22166\n\nThe [last commit of the device-mapper documentation](https://github.com/docker/docker/commit/a7b2f87b0637a3711e90c0f1d0a99dd5d32bd60f#diff-52525eec69924c13d098f5d19b2d79adL254) by @chenchun clarified the overall use.\nBut as I go through the steps, I'm missing the part where the thinpool configuration on /data and /metadata is done.\n\nThe [diff shows that the previous version ](https://github.com/docker/docker/pull/22662/commits/3cf8c53515ff8144a63c6d4418738b5d4f4416a7)had this covered in lines 254 and following\n"},{"labels":[null,"documentation",null,null],"text":"Currently it seems very hard to find any documentation on what kind of security is promised by Dockerfile execution, especially if building Dockerfiles from untrusted sources.\n\nAs far as I can gather, the security is as follows:\n- context directory contents are available, but there is no access to files outside it\n- full access to network is available as if running an untrusted docker image\n- escalating access to host is prevented with the same strength as normal untrusted docker images\n- resource constraints are given in docker build command line\n\nThis means that if these limitations are acceptable, it is possible to allow building Dockerfiles from untrusted sources without creating a separate VM or similar to contain the build.\n\nI assume something like this is already done by Docker Hub when builds are submitted to it, as it probably does not use a separate VM for each build, so the priviledge separation probably has been tested quite rigorously.\n\nIs my assessment correct? Should this be explicitly documented somewhere?\n"},{"labels":["documentation",null],"text":"This document discusses two image tags that do not exist on the hub (https://hub.docker.com/r/docker/trusttest/tags/).\n\nhttps://github.com/docker/docker/blob/861815a3252b88a118a91a164246401fa24fa549/docs/security/trust/content_trust.md\n\n```\ndocker pull --disable-content-trust docker/trusttest:untrusted\nPulling repository docker.io/docker/trusttest\nTag untrusted not found in repository docker.io/docker/trusttest\n```\n\n```\ndocker pull docker/seaside\nUsing default tag: latest\nPulling repository docker.io/docker/seaside\nError: image docker/seaside not found\n```\n\nI'm guessing docker/trusttest:untrusted has become docker/trusttest:latest.  docker/seaside seems to have been removed.\n"},{"labels":["documentation",null],"text":"The current text:\n\n> when that variable’s current value is passed through (i.e. `$MYVAR1` from the host is set to `$MYVAR1` in the container).\n\ncould be usefully be changed to:\n\n> when that variable’s current value, set via `export`, is passed through (i.e. `$MYVAR1` from the host is set to `$MYVAR1` in the container, where `export MYVAR1=\"foo\"` was used).\n"},{"labels":["documentation",null,null],"text":"The list of allowed configuration options in [this document](https://docs.docker.com/engine/reference/commandline/daemon/#daemon-configuration-file) is not applicable to Windows. Several of the options do not work on Windows. I think this requires minor clarification, perhaps a sample that is applicable to Windows:\n\nWhen used as is, the following is returned:\n\n``` none\nPS C:\\> dockerd\ntime=\"2016-05-12T15:40:59-07:00\" level=fatal msg=\"unable to configure the Docker daemon with file C:\\\\ProgramData\\\\docker\\\\config\\\\daemon.json: the following directives don't match any configuration option: iptables, bip, icc, api-cors-headers, exec-root, default-gateway-v6, ipv6, cgroup-parent, ip-mask, ip, userland-proxy, default-gateway, ip-forward, selinux-enabled, userns-remap, fixed-cidr-v6\\n\"\n```\n\nHere is a working sample:\n\n``` json\n{\n    \"authorization-plugins\": [],\n    \"dns\": [],\n    \"dns-opts\": [],\n    \"dns-search\": [],\n    \"exec-opts\": [],\n    \"storage-driver\": \"\",\n    \"storage-opts\": [],\n    \"labels\": [],\n    \"log-driver\": \"\", \n    \"mtu\": 0,\n    \"pidfile\": \"\",\n    \"graph\": \"\",\n    \"cluster-store\": \"\",\n    \"cluster-advertise\": \"\",\n    \"debug\": true,\n    \"hosts\": [\"tcp://0.0.0.0:2376\", \"npipe://\"],\n    \"log-level\": \"\",\n    \"tlsverify\": true,\n    \"tlscacert\": \"C:\\\\ProgramData\\\\docker\\\\certs.d\\\\ca.pem\",\n    \"tlscert\": \"C:\\\\ProgramData\\\\docker\\\\certs.d\\\\server-cert.pem\",\n    \"tlskey\": \"C:\\\\ProgramData\\\\docker\\\\certs.d\\\\server-key.pem\",\n    \"group\": \"\",\n    \"default-ulimits\": {},\n    \"bridge\": \"\",\n    \"fixed-cidr\": \"\",\n    \"raw-logs\": false,\n    \"registry-mirrors\": [],\n    \"insecure-registries\": [],\n    \"disable-legacy-registry\": false\n}\n\n```\n\nIf this makes sense, and is in line with the docs scope / purpose, I am happy write up and propose the changes.\n\nneilp\n"},{"labels":["documentation",null,null],"text":"Hi fellow volume plugin developers!\n\nI'm currenty writing my first volume plugin and I have some questions that are not really answered in the API documentation. I will send a pull request that clarifies these points because I think it will also help others:\n\nOn .Create I create a special device, let's call it /dev/specialdev_name and put a file system on top of it.\nOn .Mount I mount it and reference count for the name. The first .Mount really mounts the file system, further .Mounts increase the refcount.\nOn .Umount I decrease the refcount and if 0, I umount the /dev/specialdev_name\nOn .Remove I remove the /dev/specialdev_name if the refcount is 0/is not mounted, otherwise I set Err.\n\nSo far so easy, the problem are .Path (and .Get and .List). To me it is not clear how to react if a volume is known to the driver (i.e., it was created with .Create), but is currently _not_ mounted. Should I report the \"Mountpoint\" where it will be available after a .Mount, or set \"Err\"? The same question applies for .Get. For .List it seams that I should include volumes known but not mounted, otherwise they don't show up in \"docker volume ls\". But yeah, it all boils down to this \"known to the plugin and created, but currently not mounted\" situation. Set Mountpoint to where it will be available after .Mount? Or set Mountpoint to \"\"? Or even set Err?\n"},{"labels":["documentation"],"text":"**Output of `docker version`:**\n\n```\nDocker version 1.11.1, build 5604cbe\n```\n\n**Output of `docker info`:**\n\n```\nContainers: 0\n Running: 0\n Paused: 0\n Stopped: 0\nImages: 1\nServer Version: 1.11.1\nStorage Driver: devicemapper\n Pool Name: docker-253:0-394509-pool\n Pool Blocksize: 65.54 kB\n Base Device Size: 10.74 GB\n Backing Filesystem: xfs\n Data file: /dev/loop0\n Metadata file: /dev/loop1\n Data Space Used: 19.07 MB\n Data Space Total: 107.4 GB\n Data Space Available: 38.76 GB\n Metadata Space Used: 589.8 kB\n Metadata Space Total: 2.147 GB\n Metadata Space Available: 2.147 GB\n Udev Sync Supported: true\n Deferred Removal Enabled: false\n Deferred Deletion Enabled: false\n Deferred Deleted Device Count: 0\n Data loop file: /var/lib/docker/devicemapper/devicemapper/data\n WARNING: Usage of loopback devices is strongly discouraged for production use. Either use `--storage-opt dm.thinpooldev` or use `--storage-opt dm.no_warn_on_loop_devices=true` to suppress this warning.\n Metadata loop file: /var/lib/docker/devicemapper/devicemapper/metadata\n Library Version: 1.02.107-RHEL7 (2015-12-01)\nLogging Driver: json-file\nCgroup Driver: cgroupfs\nPlugins: \n Volume: local\n Network: bridge null host\nKernel Version: 3.10.0-327.13.1.el7.x86_64\nOperating System: CentOS Linux 7 (Core)\nOSType: linux\nArchitecture: x86_64\nCPUs: 2\nTotal Memory: 1.797 GiB\nName: localhost.localdomain\nID: E3X2:DQ6O:DVIO:2NPO:XFY7:6P65:SQG2:TXLM:EERQ:GFSO:NUWT:JF3S\nDocker Root Dir: /var/lib/docker\nDebug mode (client): false\nDebug mode (server): false\nRegistry: https://index.docker.io/v1/\nWARNING: bridge-nf-call-iptables is disabled\nWARNING: bridge-nf-call-ip6tables is disabled\n\n```\n\n**Additional environment details (AWS, VirtualBox, physical, etc.):** Vagrant centos/7 box\n\n**Steps to reproduce the issue:**\n1. Start docker as a bootstrap service in one console:\n\n```\ndocker daemon \\\n        -H unix:///var/run/docker-bootstrap.sock \\\n        -p /var/run/docker-bootstrap.pid \\\n        --iptables=false \\\n        --ip-masq=false \\\n        --bridge=none \\\n        --graph=/var/lib/docker-bootstrap --debug\n```\n1. Start container in second console:\n\n```\ndocker -H unix:///var/run/docker-bootstrap.sock run -it --rm busybox sh\n```\n\n**Describe the results you received:**\n\n```\nStatus: Downloaded newer image for busybox:latest\ndocker: Error response from daemon: rpc error: code = 2 desc = \"oci runtime error: rootfs (\\\"/var/lib/docker-bootstrap/devicemapper/mnt/8c8cc49901da0ddbdd24298a7b294dc7a516a9c72d05055fd882964101f46897/rootfs\\\") does not exist\".\n```\n\n**Excerpts from docker daemon logs with debugs enabled**\n\n```\nDEBU[0044] Calling POST /v1.23/containers/create        \nDEBU[0044] form data: {\"AttachStderr\":true,\"AttachStdin\":true,\"AttachStdout\":true,\"Cmd\":[\"sh\"],\"Domainname\":\"\",\"Entrypoint\":null,\"Env\":[],\"HostConfig\":{\"AutoRemove\":false,\"Binds\":null,\"BlkioBps\":0,\"BlkioDeviceReadBps\":null,\"BlkioDeviceReadIOps\":null,\"BlkioDeviceWriteBps\":null,\"BlkioDeviceWriteIOps\":null,\"BlkioIOps\":0,\"BlkioWeight\":0,\"BlkioWeightDevice\":null,\"CapAdd\":null,\"CapDrop\":null,\"Cgroup\":\"\",\"CgroupParent\":\"\",\"ConsoleSize\":[0,0],\"ContainerIDFile\":\"\",\"CpuCount\":0,\"CpuPercent\":0,\"CpuPeriod\":0,\"CpuQuota\":0,\"CpuShares\":0,\"CpusetCpus\":\"\",\"CpusetMems\":\"\",\"Devices\":[],\"DiskQuota\":0,\"Dns\":[],\"DnsOptions\":[],\"DnsSearch\":[],\"ExtraHosts\":null,\"GroupAdd\":null,\"IpcMode\":\"\",\"Isolation\":\"\",\"KernelMemory\":0,\"Links\":null,\"LogConfig\":{\"Config\":{},\"Type\":\"\"},\"Memory\":0,\"MemoryReservation\":0,\"MemorySwap\":0,\"MemorySwappiness\":-1,\"NetworkMode\":\"default\",\"OomKillDisable\":false,\"OomScoreAdj\":0,\"PidMode\":\"\",\"PidsLimit\":0,\"PortBindings\":{},\"Privileged\":false,\"PublishAllPorts\":false,\"ReadonlyRootfs\":false,\"RestartPolicy\":{\"MaximumRetryCount\":0,\"Name\":\"no\"},\"SandboxSize\":0,\"SecurityOpt\":null,\"ShmSize\":0,\"StorageOpt\":null,\"UTSMode\":\"\",\"Ulimits\":null,\"UsernsMode\":\"\",\"VolumeDriver\":\"\",\"VolumesFrom\":null},\"Hostname\":\"\",\"Image\":\"busybox\",\"Labels\":{},\"NetworkingConfig\":{\"EndpointsConfig\":{}},\"OnBuild\":null,\"OpenStdin\":true,\"StdinOnce\":true,\"Tty\":true,\"User\":\"\",\"Volumes\":{},\"WorkingDir\":\"\"} \nDEBU[0044] devmapper: AddDevice(hash=35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032-init basehash=a88c80f3742d46b2f22e9c41acb7d4ca83c59054bbe8efdd7f196b7d5f8a7ca3) \nDEBU[0044] devmapper: registerDevice(17, 35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032-init) \nDEBU[0044] devmapper: AddDevice(hash=35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032-init basehash=a88c80f3742d46b2f22e9c41acb7d4ca83c59054bbe8efdd7f196b7d5f8a7ca3) END \nDEBU[0044] devmapper: activateDeviceIfNeeded(35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032-init) \nDEBU[0044] devmapper: UnmountDevice(hash=35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032-init) \nDEBU[0044] devmapper: Unmount(/var/lib/docker-bootstrap/devicemapper/mnt/35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032-init) \nDEBU[0045] devmapper: Unmount done                      \nDEBU[0045] devmapper: deactivateDevice(35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032-init) \nDEBU[0045] devmapper: removeDevice START(docker-253:0-394747-35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032-init) \nDEBU[0045] devmapper: removeDevice END(docker-253:0-394747-35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032-init) \nDEBU[0045] devmapper: deactivateDevice END(35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032-init) \nDEBU[0045] devmapper: UnmountDevice(hash=35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032-init) END \nDEBU[0045] devmapper: AddDevice(hash=35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032 basehash=35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032-init) \nDEBU[0045] devmapper: registerDevice(18, 35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032) \nDEBU[0045] devmapper: AddDevice(hash=35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032 basehash=35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032-init) END \nDEBU[0045] devmapper: activateDeviceIfNeeded(35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032) \nDEBU[0045] container mounted via layerStore: /var/lib/docker-bootstrap/devicemapper/mnt/35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032/rootfs \nDEBU[0045] devmapper: UnmountDevice(hash=35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032) \nDEBU[0045] devmapper: Unmount(/var/lib/docker-bootstrap/devicemapper/mnt/35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032) \nDEBU[0045] devmapper: Unmount done                      \nDEBU[0045] devmapper: deactivateDevice(35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032) \nDEBU[0045] devmapper: removeDevice START(docker-253:0-394747-35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032) \nDEBU[0045] devmapper: removeDevice END(docker-253:0-394747-35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032) \nDEBU[0045] devmapper: deactivateDevice END(35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032) \nDEBU[0045] devmapper: UnmountDevice(hash=35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032) END \nDEBU[0045] Calling POST /v1.23/containers/f5ff62db4ba13a71321d8d5ea77e7c5990617de72214c417b441a63d1651c16b/attach?stderr=1&stdin=1&stdout=1&stream=1 \nDEBU[0045] attach: stdin: begin                         \nDEBU[0045] attach: stdout: begin                        \nDEBU[0045] attach: stderr: begin                        \nDEBU[0045] Calling POST /v1.23/containers/f5ff62db4ba13a71321d8d5ea77e7c5990617de72214c417b441a63d1651c16b/start \nDEBU[0045] devmapper: activateDeviceIfNeeded(35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032) \nDEBU[0045] container mounted via layerStore: /var/lib/docker-bootstrap/devicemapper/mnt/35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032/rootfs \nDEBU[0045] devmapper: UnmountDevice(hash=35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032) \nDEBU[0045] devmapper: Unmount(/var/lib/docker-bootstrap/devicemapper/mnt/35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032) \nDEBU[0045] attach: stdout: end                          \nDEBU[0045] attach: stdin: end                           \nDEBU[0045] attach: stderr: end                          \nDEBU[0045] devmapper: Unmount done                      \nDEBU[0045] devmapper: deactivateDevice(35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032) \nDEBU[0045] devmapper: removeDevice START(docker-253:0-394747-35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032) \nDEBU[0045] devmapper: removeDevice END(docker-253:0-394747-35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032) \nDEBU[0045] devmapper: deactivateDevice END(35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032) \nDEBU[0045] devmapper: UnmountDevice(hash=35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032) END \nERRO[0045] Handler for POST /v1.23/containers/f5ff62db4ba13a71321d8d5ea77e7c5990617de72214c417b441a63d1651c16b/start returned error: rpc error: code = 2 desc = \"oci runtime error: rootfs (\\\"/var/lib/docker-bootstrap/devicemapper/mnt/35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032/rootfs\\\") does not exist\" \nDEBU[0045] Calling DELETE /v1.23/containers/f5ff62db4ba13a71321d8d5ea77e7c5990617de72214c417b441a63d1651c16b?v=1 \nDEBU[0045] devmapper: DeleteDevice(hash=35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032 syncDelete=false) START \nDEBU[0045] devmapper: issueDiscard(device: 35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032). START \nDEBU[0045] devmapper: activateDeviceIfNeeded(35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032) \nDEBU[0045] devmapper: issueDiscard(device: 35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032). END \nDEBU[0045] devmapper: deactivateDevice(35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032) \nDEBU[0045] devmapper: removeDevice START(docker-253:0-394747-35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032) \nDEBU[0045] devmapper: removeDevice END(docker-253:0-394747-35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032) \nDEBU[0045] devmapper: deactivateDevice END(35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032) \nDEBU[0045] devmapper: unregisterDevice(18, 35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032) \nDEBU[0045] devmapper: DeleteDevice(hash=35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032 syncDelete=false) END \nDEBU[0045] devmapper: DeleteDevice(hash=35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032-init syncDelete=false) START \nDEBU[0045] devmapper: issueDiscard(device: 35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032-init). START \nDEBU[0045] devmapper: activateDeviceIfNeeded(35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032-init) \nDEBU[0045] devmapper: issueDiscard(device: 35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032-init). END \nDEBU[0045] devmapper: deactivateDevice(35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032-init) \nDEBU[0045] devmapper: removeDevice START(docker-253:0-394747-35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032-init) \nDEBU[0045] devmapper: removeDevice END(docker-253:0-394747-35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032-init) \nDEBU[0045] devmapper: deactivateDevice END(35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032-init) \nDEBU[0045] devmapper: unregisterDevice(17, 35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032-init) \nDEBU[0045] devmapper: DeleteDevice(hash=35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032-init syncDelete=false) END \nDEBU[0045] Closing buffered stdin pipe         \n```\n"},{"labels":[null,"documentation",null],"text":"I understand that the manifest format introduced in v1.10 includes the digest of every image layer, and that the Docker Daemon verifies the digest of every image layer on pull (regardless of whether the image is specified by tag or by digest).\n\nThis very important information seems to be absent from all public-facing docs I've been able to find -- e.g. https://docs.docker.com/engine/reference/api/docker_remote_api_v1.22/\n\nI'd appreciate a pointer to anything public-facing that does state this.  Thanks.\n"},{"labels":["documentation"],"text":"I was just looking into CVE-2015-5157. It seems to be a problem because modify_ldt syscall is allowed by default (https://github.com/docker/docker/blob/master/profiles/seccomp/default.json).\n\nHowever, on the docs page it says it should be blocked by default (https://docs.docker.com/engine/security/seccomp/) because \"Old syscall only used in 16-bit code and a potential information leak.\" which sounds like a sensible reason.\n\nSo why is the call allowed in default.json? \n"},{"labels":["documentation"],"text":"The argument to `--config` misbehave in those cases:\n\n`--config ~/.docker/` -> path is expanded by the shell and the config will be `/home/$USER/.docker/`\n`--config=~/.docker/` -> path is **not** expanded and the config will be at `~/.docker/`\n`--config=\"~/.docker/\"` -> path is **not** expanded and the config will be at `~/.docker/`\n`--config='~/.docker/'` -> path is **not** expanded and the config will be at `~/.docker/`\n\nSo the only thing which works is only the first case.\n\nYou can try it out playing around with `--config` and `--attach` for instance.\n1. Specify `detachKeys` in your `~/.docker/config.json` file\n   \n    `\"detachKeys\": \"ctrl-e,e\"`\n2. run a container with `-dit`\n3. attach to this container specifying `--config=~/.docker/`\n4. try to detach with the above sequence - it won't work\n5. try the other failing case above\n6. try with the first, working, case above where there's no `=` sign\n\nSo, the problem seems to be that `=` sign and shell expansion. Any other _relative_ path will fail the above cases of course (`../` for instance)\nNot sure what to do other that checking that the path is relative and warning the user.\n\nping @tianon @vdemeester @calavera @cpuguy83 @thaJeztah \n"},{"labels":["documentation"],"text":"<!--\nIf you are reporting a new issue, make sure that we do not have any duplicates\nalready open. You can ensure this by searching the issue list for this\nrepository. If there is a duplicate, please close your issue and add a comment\nto the existing issue instead.\n\nIf you suspect your issue is a bug, please edit your issue description to\ninclude the BUG REPORT INFORMATION shown below. If you fail to provide this\ninformation within 7 days, we cannot debug your issue and will close it. We\nwill, however, reopen it if you later provide the information.\n\nFor more information about reporting issues, see\nhttps://github.com/docker/docker/blob/master/CONTRIBUTING.md#reporting-other-issues\n\n---------------------------------------------------\nBUG REPORT INFORMATION\n---------------------------------------------------\nUse the commands below to provide key information from your environment:\nYou do NOT have to include this information if this is a FEATURE REQUEST\n-->\n\n**Output of `docker version`:**\n\n```\nDocker version 1.10.2, build c3959b1\n```\n\n**Steps to reproduce the issue:**\n1. Create the Dockerfile as specified in docs/admin/using_supervisord.md and the supervisors.conf\n2. Run docker build  --no-cache  -t <your name here>/supervisord .\n\n**Describe the results you received:**\nFailed to fetch http://archive.ubuntu.com/ubuntu/dists/raring/main/source/Sources  404  Not Found [IP: 91.189.91.23 80]\n\n**Describe the results you expected:**\n\nExpected the container to be built successfully\n\n**Additional information you deem important (e.g. issue happens only occasionally):**\n\nLooks as though ubuntu:13.04 repositories are no longer available. Changing the container to ubuntu:15.04 allowed the docker build to run successfully\n"},{"labels":["documentation",null],"text":"I had some trouble working out the correct way to use `docker run` with the sha256 digest. I found the documentation a little confusing with regard to this. For example the [run reference page](https://docs.docker.com/engine/reference/run) has the following example:\n\n```\n$ docker run [OPTIONS] IMAGE[:TAG|@DIGEST] [COMMAND] [ARG...]\n```\n\nHowever I had problems trying to run my image this way. For example:\n\n``` bash\ndocker run namespace/image@digest # Wrong - parse error\ndocker run namespace/image@sha256:digest # Correct\n```\n\nI had to work this out from trial and error. The link to the [Image[@digest]](https://docs.docker.com/engine/reference/run/#image-digest) section anchor doesn't have an example, which I think might have been useful. I believe therefore it might be beneficial to update the documentation regarding using digests.\n\nI suggest the **General Form** section to be:\n\n```\n$ docker run [OPTIONS] IMAGE[:TAG|@sha256:DIGEST] [COMMAND] [ARG...]\n```\n\nIf there are other possible digests, then sha256 could be changed to DIGEST_TYPE or something similar.\n\nSecondly I suggest that the [Image[@digest]](https://docs.docker.com/engine/reference/run/#image-digest) anchor have the following example of using the digest:\n\n```\ndocker run alpine@sha256:9cacb71397b640eca97488cf08582ae4e4068513101088e9f96c9814bfda95e0 date\n```\n\nThis is my feedback from initially trying to get digests to run with `docker run`. If this was confusing to me, it might possibly be confusing to other users.\n"},{"labels":["documentation"],"text":"The the Docker Remote API v1.24 (https://github.com/docker/docker/blob/master/docs/reference/api/docker_remote_api_v1.24.md), the REST function,\n\nTag an image into a repository\n\ndoes not really explain what the function does.\n"},{"labels":[null,"documentation"],"text":"1 - Image ID\n\nThe spec defines “Image ID”, but then explains what a layer ID is. An image is not a layer - an image is a set of layers (per the definition of “Layer” in the same document).\n\n2 - Tag\n\nThe spec defines “Tag” as,\n\n\"A tag serves to map a descriptive, user-given name to any single image ID. An image name suffix (the name component after :) is often referred to as a tag as well, though it strictly refers to the full name of an image.\"\n\na. This is ambiguous, because the term “image ID” is ambiguous, as a result of #1.\n\nb. The term “full name of an image” is ambiguous. Does it include the namespace? The hostname/port of the registry? (e.g., when one “tags an image into a repository”)\n\n3 - Repository\n\nIt is not clear if a repository refers to an image name, or an actual image stored in a registry. It is also not clear if the “repository” is the full image name - including the repository host name - or just the name part preceding the colon at the end of the name. It is not clear if the “repository” includes the “namespace”. In fact, the term “namespace” is not mentioned in the spec, but it is clearly an important element of an image name - or is it? (This is not clear.)\n\n4 - Tagging into a repository\n\nThe image spec does not mention this, but the phrase is used in other documentation, without explanation, and it is not clear what this means, especially given the lack of clarity on what “repository” means.\n\n5 - Image \"name\"\n\nThis term is used loosely in the spec and in other documentation - including the various REST APIs, and it is highly ambiguous. Many REST APIs have “name” parameters, and it is not clear if the parameter is a repository name, or can include a final tag (with semicolon) or not - and if it can include a registry host as part of the name. The term “image name” really needs to be precisely defined and used consistently throughout the documentation - especially the REST APIs since those APIs are untyped and thus there is ample opportunity for a programmer to get it wrong.\n"},{"labels":["documentation"],"text":"Tutorial  [Work with a development container](https://docs.docker.com/opensource/project/set-up-dev-env/) talks about the **binary** directory. Current development source makes **binary-client** and **binary-daemon**. This modifies a few steps, like the one where we copy the binary file.\n\nThe documentation can benefit from updates also.\n"},{"labels":["documentation",null],"text":"**Output of `docker version`:**\n\n```\nDocker version 1.11.0, build 4dc5990\n```\n\n**Output of `docker info`:**\n\n```\nContainers: 17\n Running: 16\n Paused: 0\n Stopped: 1\nImages: 182\nServer Version: swarm/1.2.0\nRole: primary\nStrategy: spread\nFilters: health, port, dependency, affinity, constraint\nNodes: 4\n swarm-data: 192.168.99.102:2376\n  └ Status: Healthy\n  └ Containers: 4\n  └ Reserved CPUs: 0 / 1\n  └ Reserved Memory: 0 B / 2.053 GiB\n  └ Labels: executiondriver=, kernelversion=4.1.19-boot2docker, operatingsystem=Boot2Docker 1.11.0 (TCL 7.0); HEAD : 32ee7e9 - Wed Apr 13 20:06:49 UTC 2016, provider=virtualbox, storagedriver=aufs, type=data\n  └ Error: (none)\n  └ UpdatedAt: 2016-04-28T09:06:14Z\n  └ ServerVersion: 1.11.0\n swarm-master: 192.168.99.101:2376\n  └ Status: Healthy\n  └ Containers: 6\n  └ Reserved CPUs: 0 / 1\n  └ Reserved Memory: 0 B / 1.021 GiB\n  └ Labels: executiondriver=, kernelversion=4.1.19-boot2docker, operatingsystem=Boot2Docker 1.11.0 (TCL 7.0); HEAD : 32ee7e9 - Wed Apr 13 20:06:49 UTC 2016, provider=virtualbox, storagedriver=aufs, type=frontend\n  └ Error: (none)\n  └ UpdatedAt: 2016-04-28T09:06:16Z\n  └ ServerVersion: 1.11.0\n swarm-node-01: 192.168.99.103:2376\n  └ Status: Healthy\n  └ Containers: 4\n  └ Reserved CPUs: 0 / 2\n  └ Reserved Memory: 0 B / 5.079 GiB\n  └ Labels: executiondriver=, kernelversion=4.1.19-boot2docker, operatingsystem=Boot2Docker 1.11.0 (TCL 7.0); HEAD : 32ee7e9 - Wed Apr 13 20:06:49 UTC 2016, provider=virtualbox, storagedriver=aufs, type=node\n  └ Error: (none)\n  └ UpdatedAt: 2016-04-28T09:06:35Z\n  └ ServerVersion: 1.11.0\n swarm-node-02: 192.168.99.104:2376\n  └ Status: Healthy\n  └ Containers: 3\n  └ Reserved CPUs: 0 / 2\n  └ Reserved Memory: 0 B / 5.079 GiB\n  └ Labels: executiondriver=, kernelversion=4.1.19-boot2docker, operatingsystem=Boot2Docker 1.11.0 (TCL 7.0); HEAD : 32ee7e9 - Wed Apr 13 20:06:49 UTC 2016, provider=virtualbox, storagedriver=aufs, type=node\n  └ Error: (none)\n  └ UpdatedAt: 2016-04-28T09:06:31Z\n  └ ServerVersion: 1.11.0\nPlugins: \n Volume: \n Network: \nKernel Version: 4.1.19-boot2docker\nOperating System: linux\nArchitecture: amd64\nCPUs: 6\nTotal Memory: 13.23 GiB\nName: a679a60fd15a\nDocker Root Dir: \nDebug mode (client): false\nDebug mode (server): false\nWARNING: No kernel memory limit support\n```\n\n**Additional environment details (AWS, VirtualBox, physical, etc.):**\nI used docker-machine to create a swarm cluster with 4 virtualbox VM.\n\n**Steps to reproduce the issue:**\n1. \n\n```\ndocker network create -d overlay test_lb \n\n# and then in different terminals :\ndocker run --net=test_lb -h first --rm -it debian bash\ndocker run --net=test_lb --net-alias=lb -h second --rm -it debian bash\ndocker run --net=test_lb --net-alias=lb -h third --rm -it debian bash\ndocker run --net=test_lb -h fourth --rm -it debian bash\ndocker run --net=test_lb -h fifth --rm -it debian bash\ndocker run --net=test_lb -h sixth --rm -it debian bash\ndocker run --net=test_lb -h seventh --rm -it debian bash\n```\n\n2.\nThere are now 2 containers with same alias `lb` and 5 containers that are here to use ip slots in the overlay network.\nI personnaly had the following ips assigned by docker in the overlay network:\nfirst : 10.0.0.2\nsecond : 10.0.0.3\nthird : 10.0.0.4\nfourth : 10.0.0.5\nfifth : 10.0.0.6\nsixth : 10.0.0.7\nseventh : 10.0.0.8\n3.\nTry to `ping lb`from the different containers\n\n**Describe the results you received:**\nFrom first, ping always connects to `10.0.0.3` (second)\nFrom second, it always reaches itself\nFrom third, it always reaches itself\nFrom fourth through sixth, it always connects to `10.0.0.4` (third)\nFrom seventh, it connects randomly to  `10.0.0.3` or  `10.0.0.4` \n\n**Describe the results you expected:**\nI expected to always reach randomly  `10.0.0.3` or  `10.0.0.4` \n\n**Additional information you deem important (e.g. issue happens only occasionally):**\nWith this test-case, I think that the cause of the DNS round-robin not working is due to RFC 3484 rule 9 which states that multiple A records are sorted by common prefix length, this breaks the round-robin.\n\nThis explains why seventh (`10.0.0.8`) can reach both containers because the prefix is different.\n\nThe problem is clearly caused by something other than docker but I think it completely voids the purpose of the DNS round-robin from 1.11.\n\nIf anyone can confirm the issue, is there a fix available so that the round-robin can be used in overlay networks?\n"},{"labels":["documentation",null],"text":"PLZ  forgive my poor english\n\nI used Docker Remote API to  Create an image , and post registry value (my private registry dockerregistry:5000 ) to the docker api server  like that \n\n`curl -v  -d \"fromImage=hl%2Fspark&registry=dockerregistry:5000&tag=v1.3\"     --unix-sock   /var/run/docker.sock http:/images/create`\n\nBut  the value of the registry  not worked,  and docker searchs  image from docker hub still .\n\nSo I  had to  use fromImage Query Parameter  like this\n\n`curl -v  -d \"fromImage=dockerregistry:5000/hl%2Fspark&tag=v1.3\"     --unix-sock   /var/run/docker.sock http:/images/create`\n\nand can pull image from my private registry  .\n\nThen l  go to the [https://github.com/docker/docker/blob/master/api/server/router/image/image_routes.go#L76](url) ,  and found the server did not handled Query Parameters registry .\n\nWHY ?\n"},{"labels":["documentation",null,null],"text":"I've tried various combinations of `$PATH` and `%PATH%` and `:` and `;`, but I just can't seem to get `ENV` concatenation to work with Dockerfiles for Windows.\n\nOther people seem to have given up too and just run `RUN setx`: https://github.com/StefanScherer/dockerfiles-windows/blob/197ac3a9a8fe8494915b9b62f517fa67151833cc/golang/Dockerfile#L9\n\n`setx /m` may be the most correct workaround for now.\n\n/cc @jhowardmsft @icecrime @dmp42 \n\n**Output of `docker info`:**\n\n```\ndocker info\nContainers: 71\n Running: 0\n Paused: 0\n Stopped: 71\nImages: 45\nServer Version: 1.11.0-dev\nStorage Driver: windowsfilter\n Windows:\nLogging Driver: json-file\nPlugins:\n Volume: local\n Network: null nat\nKernel Version: 10.0 14316 (14316.1000.amd64fre.rs1_release.160402-2217)\nOperating System: Windows Server 2016 Datacenter Technical Preview 5\nOSType: windows\nArchitecture: x86_64\nCPUs: 4\nTotal Memory: 1.242 GiB\nName: WIN-8F5EG07ROBB\nID: VKYM:E5F7:CMIT:4ZMS:OGUG:W43U:API4:ATWI:3S5X:RO54:DU4Q:YOFD\nDocker Root Dir: C:\\ProgramData\\docker\nDebug mode (client): false\nDebug mode (server): true\n File Descriptors: -1\n Goroutines: 24\n System Time: 2016-04-13T18:46:29.3959003-07:00\n EventsListeners: 0\nUsername: friism4test\nRegistry: https://index.docker.io/v1/\n```\n\n**Output of `docker version`:**\n\n```\ndocker version\nClient:\n Version:      1.11.0-rc3\n API version:  1.23\n Go version:   go1.5.3\n Git commit:   eabf97a\n Built:        Fri Apr  1 23:33:49 2016\n OS/Arch:      windows/amd64\n\nServer:\n Version:      1.11.0-dev\n API version:  1.24\n Go version:   go1.5.3\n Git commit:   577adcc\n Built:        Mon Apr 11 17:20:50 2016\n OS/Arch:      windows/amd64\n```\n\n**Steps to reproduce the issue:**\n\n```\n> \"FROM windowsservercore`n RUN echo %PATH%`n ENV PATH c:\\\\go\\\\bin;`$PATH\" | docker build -t test -\nSending build context to Docker daemon 2.048 kB\nStep 1 : FROM windowsservercore\n ---> e1e5fb4dbc32\nStep 2 : RUN echo %PATH%\n ---> Running in 91a3c7417bc3\nC:\\Windows\\system32;C:\\Windows;%localappdata%\\Microsoft\\WindowsApps;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\\n ---> 818d81426779\nRemoving intermediate container 91a3c7417bc3\nStep 3 : ENV PATH c:\\\\go\\\\bin;$PATH\n ---> Running in f6ab92ac3110\n ---> d6b86fdef7e5\nRemoving intermediate container f6ab92ac3110\nSuccessfully built d6b86fdef7e5\n> docker run test cmd /c echo %PATH%\nc:\\go\\bin;\n```\n\n**Describe the results you received:**\n\nIncorrect PATH\n\n**Describe the results you expected:**\n\nCorrectly concatenated PATH\n"},{"labels":["documentation",null],"text":"The image spec at https://github.com/docker/docker/blob/3d13fddd2bc4d679f0eaa68b0be877e5a816ad53/image/spec/v1.md hasn't been updated for the content addressability changes that went into Docker 1.10. This spec also seems to contain some outdated fields like \"image checksum\". It shouldn't be very hard to bring this up to date. The changes in 1.10 are described in https://gist.github.com/aaronlehmann/b42a2eaf633fc949f93b#new-image-config.\n\ncc @stevvooe @tonistiigi @dmcgowan \n"},{"labels":["documentation",null],"text":"The JSON for the  [`containers/create`](https://github.com/docker/docker/blob/master/docs/reference/api/docker_remote_api_v1.22.md#create-a-container) endpoint  is missing `NetworkConfig`. API versions 1.22, 1.23 and 1.24 need to be updated to contain this in the example JSON.\n\n/cc @aboch @mavenugo @dnephin  \n"},{"labels":["documentation",null],"text":"On the [official networking documentation page](https://docs.docker.com/engine/userguide/networking/default_network/container-communication/), there's a paragraph that addresses using iptables to restrict access to containers by IP:\n\n> Docker’s forward rules permit all external source IPs by default. To allow only a specific IP or network to access the containers, insert a negated rule at the top of the DOCKER filter chain. For example, to restrict external access such that only source IP 8.8.8.8 can access the containers, the following rule could be added:\n> \n> `$ iptables -I DOCKER -i ext_if ! -s 8.8.8.8 -j DROP`\n\nThis may have been true for older versions of Engine but I can't get this to work in 1.10.3. The rule is applied as advertised, it comes first in iptables -L DOCKER, but the containers are still reachable from the whole outside world. If the docs could be upgraded for the current version of Docker, that'd be very helpful. Thanks!\n"},{"labels":["documentation",null],"text":"It may just be a problem on my machine, but it seems that creating a container that sits on two networks is somehow interfering with port forwarding. The forwarding works when accessing 127.0.01, but not when accessing the IP address for another interface.\n\n**Output of `docker version`:**\n\n```\nClient:\n Version:      1.10.3\n API version:  1.22\n Go version:   go1.5.3\n Git commit:   20f81dd\n Built:        Thu Mar 10 15:54:52 2016\n OS/Arch:      linux/amd64\n\nServer:\n Version:      1.10.3\n API version:  1.22\n Go version:   go1.5.3\n Git commit:   20f81dd\n Built:        Thu Mar 10 15:54:52 2016\n OS/Arch:      linux/amd64\n```\n\n**Output of `docker info`:**\n\n```\nContainers: 2\n Running: 2\n Paused: 0\n Stopped: 0\nImages: 68\nServer Version: 1.10.3\nStorage Driver: aufs\n Root Dir: /var/lib/docker/aufs\n Backing Filesystem: extfs\n Dirs: 304\n Dirperm1 Supported: false\nExecution Driver: native-0.2\nLogging Driver: json-file\nPlugins: \n Volume: local\n Network: bridge null host\nKernel Version: 3.13.0-83-generic\nOperating System: Ubuntu 14.04.4 LTS\nOSType: linux\nArchitecture: x86_64\nCPUs: 8\nTotal Memory: 31.36 GiB\nName: kryton\nID: MFLN:XRFL:372N:VPKR:3AWK:USXB:3Q3E:EAH2:66ZK:T5U2:NEOP:TSCH\nUsername: bmerry\nRegistry: https://index.docker.io/v1/\nWARNING: No swap limit support\n```\n\n**Additional environment details (AWS, VirtualBox, physical, etc.):**\n\nPhysical machine\n\n**Steps to reproduce the issue:**\n1. Create a `docker-compose.yml` file with the following content\n\n```\nversion: \"2\"\nservices:\n    server:\n        image: nginx:1.9.12\n        networks:\n            - front\n            - back\n        ports:\n            - \"8080:80\"\nnetworks:\n    front:\n    back:\n```\n\nIn actual use, there would be other services connect to the `back` network but not the `front` network, but they're not necessary to demonstrate the bug.\n2. With docker-compose 1.6.2, run `docker-compose up`.\n3. From the host, run `curl http://localhost:8080`.\n4. From the host, run `curl http://IPADDRESS:8080`, where IPADDRESS is an IP address of a non-local interface on the machine.\n\n**Describe the results you received:**\nStep 3 spits out an HTML page from nginx. Step 4 outputs nothing and eventually times out.\n\n**Describe the results you expected:**\nStep 4 should return the same HTML page as step 3.\n\n**Additional information you deem important (e.g. issue happens only occasionally):**\nI'm not running any other firewall software on this machine. If I remove the config line putting the service on the `back` network, then the problem disappears. Similarly, if I run `docker network disconnect` to disconnect the container from the `back` network, the problem disappears, and reconnecting it makes the problem come back.\n\n**Output of iptables -vnL**:\n\n```\nChain INPUT (policy ACCEPT 4912 packets, 2311K bytes)\n pkts bytes target     prot opt in     out     source               destination         \n\nChain FORWARD (policy ACCEPT 0 packets, 0 bytes)\n pkts bytes target     prot opt in     out     source               destination         \n    0     0 DOCKER-ISOLATION  all  --  *      *       0.0.0.0/0            0.0.0.0/0           \n    0     0 DOCKER     all  --  *      br-b81344fadd68  0.0.0.0/0            0.0.0.0/0           \n    0     0 ACCEPT     all  --  *      br-b81344fadd68  0.0.0.0/0            0.0.0.0/0            ctstate RELATED,ESTABLISHED\n    0     0 ACCEPT     all  --  br-b81344fadd68 !br-b81344fadd68  0.0.0.0/0            0.0.0.0/0           \n    0     0 ACCEPT     all  --  br-b81344fadd68 br-b81344fadd68  0.0.0.0/0            0.0.0.0/0           \n    0     0 DOCKER     all  --  *      br-a4d09867c7ea  0.0.0.0/0            0.0.0.0/0           \n    0     0 ACCEPT     all  --  *      br-a4d09867c7ea  0.0.0.0/0            0.0.0.0/0            ctstate RELATED,ESTABLISHED\n    0     0 ACCEPT     all  --  br-a4d09867c7ea !br-a4d09867c7ea  0.0.0.0/0            0.0.0.0/0           \n    0     0 ACCEPT     all  --  br-a4d09867c7ea br-a4d09867c7ea  0.0.0.0/0            0.0.0.0/0           \n    0     0 DOCKER     all  --  *      docker0  0.0.0.0/0            0.0.0.0/0           \n    0     0 ACCEPT     all  --  *      docker0  0.0.0.0/0            0.0.0.0/0            ctstate RELATED,ESTABLISHED\n    0     0 ACCEPT     all  --  docker0 !docker0  0.0.0.0/0            0.0.0.0/0           \n    0     0 ACCEPT     all  --  docker0 docker0  0.0.0.0/0            0.0.0.0/0           \n\nChain OUTPUT (policy ACCEPT 4538 packets, 674K bytes)\n pkts bytes target     prot opt in     out     source               destination         \n\nChain DOCKER (3 references)\n pkts bytes target     prot opt in     out     source               destination         \n    0     0 ACCEPT     tcp  --  !docker0 docker0  0.0.0.0/0            172.17.0.2           tcp dpt:5000\n    0     0 ACCEPT     tcp  --  !br-a4d09867c7ea br-a4d09867c7ea  0.0.0.0/0            172.18.0.2           tcp dpt:80\n\nChain DOCKER-ISOLATION (1 references)\n pkts bytes target     prot opt in     out     source               destination         \n    0     0 DROP       all  --  br-a4d09867c7ea br-b81344fadd68  0.0.0.0/0            0.0.0.0/0           \n    0     0 DROP       all  --  br-b81344fadd68 br-a4d09867c7ea  0.0.0.0/0            0.0.0.0/0           \n    0     0 DROP       all  --  docker0 br-b81344fadd68  0.0.0.0/0            0.0.0.0/0           \n    0     0 DROP       all  --  br-b81344fadd68 docker0  0.0.0.0/0            0.0.0.0/0           \n    0     0 DROP       all  --  docker0 br-a4d09867c7ea  0.0.0.0/0            0.0.0.0/0           \n    0     0 DROP       all  --  br-a4d09867c7ea docker0  0.0.0.0/0            0.0.0.0/0           \n    0     0 RETURN     all  --  *      *       0.0.0.0/0            0.0.0.0/0           \n```\n\n**Output of iptables -t nat -vnL**\n\n```\nhain PREROUTING (policy ACCEPT 8 packets, 536 bytes)\n pkts bytes target     prot opt in     out     source               destination         \n    0     0 DOCKER     all  --  *      *       0.0.0.0/0            0.0.0.0/0            ADDRTYPE match dst-type LOCAL\n\nChain INPUT (policy ACCEPT 2 packets, 272 bytes)\n pkts bytes target     prot opt in     out     source               destination         \n\nChain OUTPUT (policy ACCEPT 528 packets, 34127 bytes)\n pkts bytes target     prot opt in     out     source               destination         \n    1    60 DOCKER     all  --  *      *       0.0.0.0/0           !127.0.0.0/8          ADDRTYPE match dst-type LOCAL\n\nChain POSTROUTING (policy ACCEPT 529 packets, 34187 bytes)\n pkts bytes target     prot opt in     out     source               destination         \n    0     0 MASQUERADE  all  --  *      !br-b81344fadd68  172.19.0.0/16        0.0.0.0/0           \n    0     0 MASQUERADE  all  --  *      !br-a4d09867c7ea  172.18.0.0/16        0.0.0.0/0           \n    0     0 MASQUERADE  all  --  *      !docker0  172.17.0.0/16        0.0.0.0/0           \n    0     0 MASQUERADE  tcp  --  *      *       172.17.0.2           172.17.0.2           tcp dpt:5000\n    0     0 MASQUERADE  tcp  --  *      *       172.18.0.2           172.18.0.2           tcp dpt:80\n\nChain DOCKER (2 references)\n pkts bytes target     prot opt in     out     source               destination         \n    0     0 RETURN     all  --  br-b81344fadd68 *       0.0.0.0/0            0.0.0.0/0           \n    0     0 RETURN     all  --  br-a4d09867c7ea *       0.0.0.0/0            0.0.0.0/0           \n    0     0 RETURN     all  --  docker0 *       0.0.0.0/0            0.0.0.0/0           \n    0     0 DNAT       tcp  --  !docker0 *       0.0.0.0/0            0.0.0.0/0            tcp dpt:5000 to:172.17.0.2:5000\n    1    60 DNAT       tcp  --  !br-a4d09867c7ea *       0.0.0.0/0            0.0.0.0/0            tcp dpt:8080 to:172.18.0.2:80\n```\n"},{"labels":["documentation",null,null],"text":"docker build and Dockerfile does not respect VOLUME if COPY or ADD move in multiple files or a whole directory.  If a single file is specified in either COPY or ADD it works as expected.  The file is available during the build and then not present in the image.\n\n---\n## BUG REPORT INFORMATION\n\n**Output of `docker version`:**\n\n```\n\nClient:\n Version:      1.9.1\n API version:  1.21\n Go version:   go1.4.3\n Git commit:   a34a1d5\n Built:        Fri Nov 20 17:56:04 UTC 2015\n OS/Arch:      darwin/amd64\n\nServer:\n Version:      1.10.0\n API version:  1.22\n Go version:   go1.5.3\n Git commit:   590d5108\n Built:        2016-02-04T19:55:25.696148927+00:00\n OS/Arch:      linux/amd64\n\n```\n\n**Output of `docker info`:**\n\n```\nContainers: 2\nImages: 5\nServer Version: 1.10.0\nStorage Driver: btrfs\nExecution Driver: native-0.2\nLogging Driver: json-file\nKernel Version: 4.3.3-dhyve\nOperating System: Buildroot 2015.11.1\nCPUs: 1\nTotal Memory: 3.86 GiB\nName: dlite\nID: MZRL:W4WC:2JDK:Z2JS:F5KM:UGUT:VFJV:ZO7M:ATVR:66HH:CS4L:5PXL\n```\n\ndlite 1.4.0\nOSx 10.11.4\n\n**Steps to reproduce the issue:**\n0. make a dir \"sample\" with a text file \"textfile.txt\" with some contents\n1. Dockerfile using an OS base and with contents\nVOLUME /opt/sample\nCOPY sample/ /opt/sample\n2. docker build volume_sample\n3. docker run -it volume_sample bash\n4. cat /opt/sample/textfile.txt\n\n**Describe the results you received:**\nthe contents of textfile.txt are output\n\n**Describe the results you expected:**\nan error of \"No such file or directory\"\n\n**Additional information you deem important (e.g. issue happens only occasionally):**\n"},{"labels":["documentation"],"text":"The current documentation for setting up devicemapper is out of date. The current suggested configuration using  `dm.datadev` and `dm.metadatadev`, er the man page `man docker daemon`, are deprecated and using `dm.thinpooldev` is now the preferred method.  We should update the documentation with new best practices/starting points.\nhttps://docs.docker.com/engine/userguide/storagedriver/device-mapper-driver/#configure-direct-lvm-mode-for-production\n\nI wouldn't claim to be a LVM or devicemapper expert but I put together an example set of steps based off of `docker-storage-setup` and some other defaults that work well from my experimenting:\n\n```\n# install lvm2\nyum install lvm2\n\n# ideally, perform these tasks before you start docker for the first time OR make sure docker is stopped; all containers, images and data will be lost during this process\n\n# create a physical volume (replace /dev/sdd with your block device)\npvcreate /dev/sdd\n\n# create a volume group named 'docker' (replace /dev/sdd with your block device)\nvgcreate docker /dev/sdd\n\n# create a thin pool named 'thinpool'; in this example, the data LV is 95% of the 'docker' volume group size (leaving free space allows for auto expanding of either the data or metadata if space is runs low as a temporary stopgap)\nlvcreate --wipesignatures y -n thinpool docker -l 95%VG\nlvcreate --wipesignatures y -n thinpoolmeta docker -l 1%VG\n\n# convert the pool to a thin-pool\nlvconvert -y --zero n -c 512K --thinpool docker/thinpool --poolmetadata docker/thinpoolmeta\n\n#  configure autoextension of thin pools via a lvm profile\nvi /etc/lvm/profile/docker-thinpool.profile\n\n# specify the value for 'thin_pool_autoextend_threshold' (where the number is the % of space used before lvm attempts to autoextend the available space; 100 = disabled)\nexample:\n    thin_pool_autoextend_threshold = 80\n\n# modify the autoextend percentage for when thin pool autoextension occurs (where the number is the % of space to increase the thin pool; 100 = disabled)\nexample:\n    thin_pool_autoextend_percent = 20\n\nexample /etc/lvm/profile/docker-thinpool.profile:\nactivation {\n    thin_pool_autoextend_threshold=80\n    thin_pool_autoextend_percent=20\n}\n\n# apply the lvm profile\nlvchange --metadataprofile docker-thinpool docker/thinpool\n\n# verified the lv is monitored\nlvs -o+seg_monitor\n\n# configure docker daemon with specific devicemapper options\n--storage-driver=devicemapper --storage-opt=dm.thinpooldev=/dev/mapper/docker-thinpool --storage-opt dm.use_deferred_removal=true\n    also see `man docker daemon` for more detail on the devicemapper options used.\n\nexample daemon.json:\n{\n        \"storage-driver\": \"devicemapper\",\n        \"storage-opts\": [\n                \"dm.thinpooldev=/dev/mapper/docker-thinpool\",\n                \"dm.use_deferred_removal=true\"\n        ]\n}\n\n# if docker was previously started, clear your graph driver directory\nrm -rf /var/lib/docker/*\n\n# start docker\nsystemctl start docker\n\n# make sure to monitor your thin pool and volume group free space!  it will auto-extend but the volume group can still fill up\n# monitor logical volumes\nlvs\nlvs -a (to see the data and metadata sizes)\n\n# monitor volume group free space\nvgs\n\n# logs can show the auto-extension of the thin pool when it hits the threshold\njournalctl -fu dm-event.service\n```\n\nIt would probably also make sense to add reference about https://github.com/docker/docker/pull/20786 which will be in 1.11 as that is important, especially for a production environment.  It has a sane default but can be easily configured to meet requirements in another environment.\n"},{"labels":["documentation"],"text":"For integration and acceptance testing I want access to data from the container. I would like to use `volumes` in docker-compose file to specify the relative host path. In many occasions the host path of the volume may need to be auto-created.\n\n**Problem**\n\nAuto-creation of the host path in a volume appears to be DEPRECATED, as stated in documentation [here](https://docs.docker.com/engine/userguide/containers/dockervolumes/#auto-creating-missing-host-paths-for-bind-mounts):\n\n> The directory on the host must be specified as an absolute path and if the directory doesn’t exist Docker will automatically create it for you. This auto-creation of the host path has been deprecated.\n\nThe documentation does not explain what will be the future behaviour. Will we get an error, or will the volume just not mount? Is there an additional flag to get auto-creation back, etc?\n\n**Desired outcome**\n- Describe the new behaviour in more detail. What should we use?\n- Update the documentation page at https://docs.docker.com/engine/userguide/containers/dockervolumes/ accordingly\n\nThanks!\n"},{"labels":["documentation",null],"text":"**Output of `docker version`:**\n\n```\nClient version: 1.7.1\nClient API version: 1.19\nGo version (client): go1.6\nGit commit (client): 786b29d\nOS/Arch (client): darwin/amd64\nServer version: 1.10.3\nServer API version: 1.22\nGo version (server): go1.5.3\nGit commit (server): 20f81dd\nOS/Arch (server): linux/amd64\n```\n\n**Output of `docker info`:**\n\n```\nContainers: 6\nImages: 1\nStorage Driver: aufs\n Root Dir: /mnt/sda1/var/lib/docker/aufs\n Backing Filesystem: extfs\n Dirs: 14\n Dirperm1 Supported: true\nExecution Driver: native-0.2\nLogging Driver: json-file\nKernel Version: 4.1.19-boot2docker\nOperating System: Boot2Docker 1.10.3 (TCL 6.4.1); master : 625117e - Thu Mar 10 22:09:02 UTC 2016\nCPUs: 2\nTotal Memory: 1.955 GiB\nName: 1.10.3-vmware\nID: NYFA:XWPO:HDL2:SDNL:LWHQ:WPS2:SU2X:IHRA:K5F3:5XJ2:RGZJ:HWTK\nDebug mode (server): true\nFile Descriptors: 25\nGoroutines: 38\nSystem Time: 2016-03-29T19:59:33.113353448Z\nEventsListeners: 0\nInit SHA1:\nInit Path: /usr/local/bin/docker\nDocker Root Dir: /mnt/sda1/var/lib/docker\nUsername: dxia\nRegistry: https://index.docker.io/v1/\nLabels:\n provider=vmwarefusion\n```\n\n**Additional environment details (AWS, VirtualBox, physical, etc.):**\n\n**Steps to reproduce the issue:**\n1. do a docker exec create\n2. do docker exec start\n3. docker exec inspect\n\n```\ncurl --insecure --cert ~/.docker/machine/machines/1.10.3-vmware/b2d-client-side.p12 --pass tcuser 'https://192.168.212.133:2376/exec/f33bbfb39f5b142420f4759b2348913bd4a8d1a6d7fd56499cb41a1bb91d7b3b/json' -vvv\n\n*   Trying 192.168.212.133...\n* Connected to 192.168.212.133 (192.168.212.133) port 2376 (#0)\n* WARNING: SSL: Certificate type not set, assuming PKCS#12 format.\n* Client certificate: dxia\n* TLS 1.2 connection using TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\n* Server certificate: dxia.1.10.3-vmware\n* Server certificate: dxia\n> GET /exec/f33bbfb39f5b142420f4759b2348913bd4a8d1a6d7fd56499cb41a1bb91d7b3b/json HTTP/1.1\n> Host: 192.168.212.133:2376\n> User-Agent: curl/7.43.0\n> Accept: */*\n>\n< HTTP/1.1 200 OK\n< Content-Type: application/json\n< Server: Docker/1.10.3 (linux)\n< Date: Tue, 29 Mar 2016 19:47:24 GMT\n< Content-Length: 379\n<\n{\"ID\":\"f33bbfb39f5b142420f4759b2348913bd4a8d1a6d7fd56499cb41a1bb91d7b3b\",\"Running\":false,\"ExitCode\":2,\"ProcessConfig\":{\"tty\":true,\"entrypoint\":\"sh\",\"arguments\":[\"-c\",\"exit 2\"],\"privileged\":false,\"user\":\"1000\"},\"OpenStdin\":true,\"OpenStderr\":true,\"OpenStdout\":true,\"CanRemove\":false,\"ContainerID\":\"b53ee82b53a40c7dca428523e34f741f3abc51d9f297a14ff874bf761b995126\",\"DetachKeys\":\"\"}\n```\n\n**Describe the results you received:**\nThere's only a `ContainerID` instead of the entire `Container` object as stated in the docs here https://github.com/docker/docker/blob/master/docs/reference/api/docker_remote_api_v1.22.md#exec-inspect.\n\n**Describe the results you expected:**\nThe docs should correspond to the behavior.\n\n**Additional information you deem important (e.g. issue happens only occasionally):**\n"},{"labels":[null,"documentation"],"text":"Every part of the remote API that returns a collection of objects (`GET /images/json`, `GET /containers/json`, `GET /events`, etc.) returns its values as a JSON list of objects: `[{...}, {...}, ...]`. Every part, that is, except `GET /volumes`. That endpoint returns an object of one element whose value is a list: `{ \"Volumes\": [{...}, {...}, ...] }`. This is still the case in the [most recent dev Remote API Docs](https://github.com/docker/docker/blob/master/docs/reference/api/docker_remote_api_v1.24.md#list-volumes).\n\nIs there a reason `GET /volumes` is inconsistent with the rest of the API? If there is no reason, I ask that it be made to return a flat list.\n"},{"labels":["documentation"],"text":"Just like https://docs.docker.com/compose/completion/, it would be useful to have https://docs.docker.com/engine/completion/\n\nThis is already answered at:\n\nhttp://stackoverflow.com/questions/26132451/how-to-add-bash-command-completion-for-docker-on-mac-os-x\n"},{"labels":["documentation"],"text":"Broken links at: https://docs.docker.com/docker-hub/overview/\n\nWebhooks link to https://docs.docker.com/docker-hub/builds/#webhooks instead of https://docs.docker.com/docker-hub/webhooks/.\n"},{"labels":["documentation",null,null],"text":"Loving the new seccomp BPF stuff; thanks for making it more \"within reach\" for typical users.\n\n[I wrote a little thing to allow ptrace in my containers](https://blog.afoolishmanifesto.com/posts/how-to-enable-ptrace-in-docker-1.10/) and while it worked I started getting these warnings:\n\n```\n2016/03/21 22:05:18 Error resolving syscall name copy_file_range: could not resolve name to syscall - ignoring syscall.\n2016/03/21 22:05:18 Error resolving syscall name mlock2: could not resolve name to syscall - ignoring syscall.\n```\n\nNot a huge deal, but I figured out I would go ahead and automate the exclusion of system calls that are \"unknown.\"  After scripting that there were five other system calls that were excluded:\n1. recv - this is, as far as I understand the exact same as recvfrom, seems safe to leave out\n2. send - same as recv, but sendto\n3. cacheflush - this is for a non-x86 arch (MIPS) which I'd be surprised if Go even worked on, but either way also seems safe (for me, but maybe not docker proper) to leave out\n4. breakpoint - I have no manpage for this; perhaps it is the same as 3 but undocumented?\n5. set_tls - same situation as 4.\n\nHonestly I am not super sure where to go from here.  Some documentation on why all of these are included might be nice.  The weirder thing to me was that I got a warning for mlock2 and copy_file_range but not cacheflush, breakpoint, and set_tls.\n\nSorry to have such a vague report, but I figured more information can't hurt.\n"},{"labels":["documentation"],"text":"<!--\nIf you are reporting a new issue, make sure that we do not have any duplicates\nalready open. You can ensure this by searching the issue list for this\nrepository. If there is a duplicate, please close your issue and add a comment\nto the existing issue instead.\n\nIf you suspect your issue is a bug, please edit your issue description to\ninclude the BUG REPORT INFORMATION shown below. If you fail to provide this\ninformation within 7 days, we cannot debug your issue and will close it. We\nwill, however, reopen it if you later provide the information.\n\nFor more information about reporting issues, see\nhttps://github.com/docker/docker/blob/master/CONTRIBUTING.md#reporting-other-issues\n\n---------------------------------------------------\nBUG REPORT INFORMATION\n---------------------------------------------------\nUse the commands below to provide key information from your environment:\nYou do NOT have to include this information if this is a FEATURE REQUEST\n-->\n\n**Output of `docker version`:**\n\n```\nClient:\n Version:      1.10.3\n API version:  1.22\n Go version:   go1.6\n Git commit:   20f81dd\n Built:        Sat Mar 12 04:07:44 UTC 2016\n OS/Arch:      darwin/amd64\n\nServer:\n Version:      1.10.3\n API version:  1.22\n Go version:   go1.5.3\n Git commit:   20f81dd\n Built:        Thu Mar 10 21:49:11 2016\n OS/Arch:      linux/amd64\n```\n\n**Output of `docker info`:**\n\n```\nContainers: 0\n Running: 0\n Paused: 0\n Stopped: 0\nImages: 1\nServer Version: 1.10.3\nStorage Driver: aufs\n Root Dir: /mnt/sda1/var/lib/docker/aufs\n Backing Filesystem: extfs\n Dirs: 2\n Dirperm1 Supported: true\nExecution Driver: native-0.2\nLogging Driver: json-file\nPlugins:\n Volume: local\n Network: bridge null host\nKernel Version: 4.1.19-boot2docker\nOperating System: Boot2Docker 1.10.3 (TCL 6.4.1); master : 625117e - Thu Mar 10 22:09:02 UTC 2016\nOSType: linux\nArchitecture: x86_64\nCPUs: 1\nTotal Memory: 996.1 MiB\nName: 1.10\nID: XS37:USGK:BVPL:4KKK:K6HN:EMVM:43DG:W2CY:JFO3:I6KX:OITN:E5F2\nDebug mode (server): true\n File Descriptors: 10\n Goroutines: 21\n System Time: 2016-03-19T01:28:14.590797867Z\n EventsListeners: 0\n Init SHA1:\n Init Path: /usr/local/bin/docker\n Docker Root Dir: /mnt/sda1/var/lib/docker\nLabels:\n provider=virtualbox\n```\n\n**Additional environment details (AWS, VirtualBox, physical, etc.):**\nVirtualBox\n\n**Steps to reproduce the issue:**\n1. Look up remote API docs to create a container (for example, [API version 1.22](https://docs.docker.com/engine/reference/api/docker_remote_api_v1.22/#create-a-container)).\n2. Issue a `curl` call to create a container with mounts.\n\n```\n$ curl -XPOST -H 'Content-Type: application/json' http://${docker}/containers/create?name=foo -d '{\"Image\": \"busybox\", \"Mounts\": [{ \"Destination\": \"/foo\" }]}'\n```\n1. Inspect the container. See that no `Mounts` were created.\n\n```\n$ curl http://${docker}/containers/foo/json | jq '.Mounts'\n[]\n```\n1. Ignore the docs, search on the issues, find #15908, specifically [this comment](https://github.com/docker/docker/issues/15908#issuecomment-137749134).\n2. Create a container using the undocumented `Volumes` key.\n\n```\n$ curl -XPOST -H 'Content-Type: application/json' http://${docker}/containers/create?name=foo -d '{\"Image\": \"busybox\", \"Volumes\": { \"/foo\": {}}}'\n```\n1. Inspect the container. See that `Mounts` were created.\n\n```\n$ curl http://${docker}/containers/foo/json | jq '.Mounts'\n[  \n    {\n        \"Name\": \"ee6a4252b747356d74e71c952401420af00dbfc704b9d560000dec0df5ea095b\",\n        \"Source\": \"/mnt/sda1/var/lib/docker/volumes/ee6a4252b747356d74e71c952401420af00dbfc704b9d560000dec0df5ea095b/_data\",\n        \"Destination\": \"/foo\",\n        \"Driver\": \"local\",\n        \"Mode\": \"\",\n        \"RW\": true,\n        \"Propagation\": \"\"\n    }\n]\n```\n\n**Describe the results you received:**\nRemote API docs describe an incorrect way to create a container with volumes. And the correct way is inconsistent in that the deprecated `\"Volumes\"` key must be used to create containers with volumes, but the newer `\"Mounts\"` key is used to deliver information on a container inspect.\n\n**Describe the results you expected:**\nEither the Remote API docs would correctly describe how to create a container with volumes, or the actual API would be fixed to be consistent between creating/inspecting.\n\n**Additional information you deem important (e.g. issue happens only occasionally):**\nThe example in the docs is incorrect in every version going back to when the `Mounts` key was introduced in API 1.20.\n"},{"labels":["documentation",null,null],"text":"For Docker 1.11, containerd integration (https://github.com/docker/docker/pull/20662)\nonly brings a minimum amount of user-facing changes.\n\nThere _are_ some changes that need to be documented. This is a first inventory\nof those changes (more changes may follow).\n## ~~Installation from binaries~~\n\n~~Docker Engine no longer is a single binary, and requires 4 binaries to run;\n(docker, containerd, containerd-shim, runc).~~\n\n~~We need to update the \"installation from binaries\" documentation;\nhttps://docs.docker.com/engine/installation/binaries/~~\n\naddressed in https://github.com/docker/docker/pull/21994\n## ~~New daemon flag~~\n\nThere is a new `--containerd=` option in the daemon that needs to be documented;\n- https://github.com/docker/docker/blob/master/docs/reference/commandline/daemon.md\n- https://github.com/docker/docker/blob/master/man/docker-daemon.8.md\n\nThis was resolved in https://github.com/docker/docker/pull/21576\n## ~~Changes in \"privileged\" containers~~\n\n~~There is a change with `--privileged` and restricted readonly paths. In docker 1.10\nthere are no restrictions, in 1.11 restrictions are applied but because the user is\nprivileged they can revert them inside container.~~\n\nFor reference; https://github.com/docker/docker/blob/e6573a5d18c3045fb021668f3c7539ffa52696fe/daemon/execdriver/native/template/default_template_linux.go#L86-L98\n\n(resolved by https://github.com/docker/docker/pull/21751)\n## ~~Systemd groups~~\n\n~~This is still being worked on, but there's a chance that systemd cgroups won't\nwork in the initial release, so `--exec-opt native.cgroupdriver=systemd` cannot \nbe used.~~\n\n~~If systemd cgroups are not supported, this should be documented. ~~\n\n(resolved in https://github.com/docker/docker/pull/21592)\n## Experimental features\n\nSlight user facing change is that in case of a daemon crash, containers will\nnot die but we will still shut them down on start. In experimental we will\nleave them running and reattach upon daemon start.\n\n(currently blocked on https://github.com/docker/docker/issues/21933, we can add documentation\nfor the experimental features once those are resolved)\n## ~~Controlling the containerd daemon~~\n\n~~t.b.d.; the docker daemon automatically takes care of starting/stopping the\ncontainerd daemon. Do we need to describe how to start/stop (and configure?) \nthe containerd daemon manually?~~\n\nno changes needed for the regular installation, and binary installation is\nupdated in https://github.com/docker/docker/pull/21994\n## Overview of binaries and their role\n\nt.b.d.; provide an overview of the binaries that are installed, and what their\nrole is.\n## Packagers documentation\n\nhttps://github.com/docker/docker/blob/master/project/PACKAGERS.md\n## Contributors guide\n\nhttps://github.com/docker/opensource/tree/master/docs\n"},{"labels":["documentation",null],"text":"Hello,\n\nIt looks like the documentation for [events](https://docs.docker.com/engine/reference/api/docker_remote_api/#docker-events) has become out of date, in particular around the `kill` event.  Prior to Docker 1.7.0, the `kill` event was only emitted on `SIGKILL` being sent to the container via `docker kill`.  Since 1.7.0, the semantic changed and the `kill` event started to be emitted on any signal sent via `docker kill`, and since 1.8.0 the semantic changed again and the `kill` event started to be emitted for any signal sent at all (including `SIGTERM` and `SIGKILL` sent as part of `docker stop`).  These changes in behavior led to a [bug](https://github.com/aws/amazon-ecs-agent/issues/335) with the Amazon ECS Agent, which we will be correcting with our next release.\n\nHere's the set of behavior changes I've found across different Docker versions:\n\n| Docker version | `docker kill -s USR1` | `docker kill` | `docker stop` | Container exit |\n| --- | --- | --- | --- | --- |\n| 1.5.0 | no event | `die`, `kill` | `die`, `stop` | `die` |\n| 1.6.0 | no event | `die`, `kill` | `die`, `stop` | `die` |\n| 1.6.1 | no event | `die`, `kill` | `die`, `stop` | `die` |\n| 1.6.2 | no event | `die`, `kill` | `die`, `stop` | `die` |\n| 1.7.0 | `kill` | `die`, `kill` | `die`, `stop` | `die` |\n| 1.7.1 | `kill` | `die`, `kill` | `die`, `stop` | `die` |\n| 1.8.0 | `kill` | `kill`, `die` | `kill`, `kill`, `die`, `stop` | `die` |\n| 1.8.1 | `kill` | `kill`, `die` | `kill`, `kill`, `die`, `stop` | `die` |\n| 1.8.2 | `kill` | `kill`, `die` | `kill`, `kill`, `die`, `stop` | `die` |\n| 1.8.3 | `kill` | `kill`, `die` | `kill`, `kill`, `die`, `stop` | `die` |\n| 1.9.0 | `kill` | `kill`, `die` | `kill`, `kill`, `die`, `stop` | `die` |\n| 1.9.1 | `kill` | `kill`, `die` | `kill`, `kill`, `die`, `stop` | `die` |\n| 1.10.0 | `kill`* | `kill`, `die`* | `kill`, `kill`, `die`, `stop`* | `die`* |\n| 1.10.1 | `kill`* | `kill`, `die`* | `kill`, `kill`, `die`, `stop`* | `die`* |\n| 1.10.2 | `kill`* | `kill`, `die`* | `kill`, `kill`, `die`, `stop`* | `die`* |\n| 1.10.3 | `kill`* | `kill`, `die`* | `kill`, `kill`, `die`, `stop`* | `die`* |\n\n\\* These events are now typed with `container`.  Other events are emitted with type `network` and `volume`.\n\nNote that `kill` is emitted under many more circumstances in recent versions of Docker, and that the ordering of `die`, `kill` changed to `kill`, `die` with Docker 1.8.0 as well.  The [available](https://docs.docker.com/engine/reference/commandline/events/) [documentation](https://docs.docker.com/engine/reference/api/docker_remote_api/#docker-events) for events is fairly light as a whole, but the [event diagram](https://docs.docker.com/engine/reference/api/images/event_state.png) has been out of date at least since 1.7.0.\n\nIt would be fantastic if the semantics of the different events were documented and any semantic changes were called out in the changelog for releases.\n\nThanks!\nSam\n"},{"labels":["documentation",null,null,null],"text":"Is there anything similar to the flowcharts on https://docs.docker.com/engine/extend/authorization/ for the volume plugin API?\n\nI am trying to write a simple volume plugin for some internal use cases and it would be nice to see a visual of what requests will be called for the relevant CLI/API commands.\n\nFor instance the first time I started testing my plugin I was surprised by the number of Path requests before/after other operations. Based on the documentation I assumed it would have only been used with docker inspect type commands.\n"},{"labels":["documentation",null],"text":"I've gone through a few Docker installs on Ubuntu both myself as well as with some new developers on my team.  I've noticed a fairly consistent series of missed steps or mistakes that keep happening during each setup.  This is not because the document is incomplete, but because the necessary steps are spread out and hidden amongst other **optional** steps.\n\nhttps://github.com/docker/docker/blob/master/docs/installation/linux/ubuntulinux.md\n\nIt would be nice if the following steps were put at the top of the instructions and noted as a \"typical\" flow for installation:\n\n---\n1. Add the new `GPG` key.\n   \n   ```\n   sudo apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D\n   ```\n2. Add an entry for your Ubuntu operating system to `/etc/apt/sources.list.d/docker.list`\n   - On Ubuntu Precise 12.04 (LTS)\n         `deb https://apt.dockerproject.org/repo ubuntu-precise main`\n   - On Ubuntu Trusty 14.04 (LTS)\n         `deb https://apt.dockerproject.org/repo ubuntu-trusty main`\n   - Ubuntu Wily 15.10\n         `deb https://apt.dockerproject.org/repo ubuntu-wily main`\n   - Ubuntu Wily 16.04\n         `deb https://apt.dockerproject.org/repo ubuntu-xenial main`\n3. Update the `APT` package index.\n   \n   ```\n   sudo apt-get update\n   ```\n4. Install Docker\n   \n   ```\n   sudo apt-get install docker-engine\n   ```\n5. Add your user to the `docker` group\n   \n   ```\n   sudo usermod -aG docker ubuntu\n   ```\n   ---\n\nThis series of steps is sufficient for the majority of the installations that happen.  While it's fine to keep the extended information - as it's helpful - burying the important parts has required me to assist every person I've instructed to install docker.\n\nIt's worth noting I think given the number of steps needed to install the Ubuntu package, would it not make sense for Docker to publish an official PPA?  Much of this would be mitigated by just doing that.\n"},{"labels":["documentation",null,null],"text":"> Whenever possible, use current Official Repositories as the basis for your image. We recommend the Debian image since it’s very tightly controlled and kept extremely minimal (currently under 100 mb), while still being a full distribution.\n\nThe docs suggest that the Debian image is under 100 mb. While this may have been true at some time point in the past, it's incorrect at present. https://github.com/docker-library/docs/blob/master/debian/tag-details.md#debianlatest suggests that the size is around 125 mb now - for latest and jessie.\n"},{"labels":["documentation"],"text":"I am trying to follow this guide https://docs.docker.com/engine/security/certificates/, but the paths are for linux. What would be the equivalent for Windows?\n"},{"labels":["documentation"],"text":"After #19953 closes, the volume documentation should be updated to account for the changes wherever we talk about anonymous volumes.\n"},{"labels":["documentation"],"text":"Create overview/parent pages for the engine sub commands `docker-volume` and `docker-network`.  Needed and necessary in the `/man` and `/docs` directory.  See #20190 \n"},{"labels":["documentation"],"text":"Reported by @jpetazzo\n\nIf I pass an invalid sequence --detach-keys just accepts it without showing an error (and silently reverts to `^P^Q`) also, I don't think that `[a-Z]` is a valid glob entry. I'm not sure exactly what the doc should say since I don't know what the code should do; but it needs more explanation IMHO For example:\n\n`--detach-keys ctrl-d,d` \n\nworks, but not \n\n`ctrl-D,d` or `CTRL-d,d`\n\nThere is one confusing thing -- the `--detach-keys` can be a global engine option, but when it is used for `docker run` or `docker attach` it is a local, non-sticky option (i.e. if I docker run `--detach-keys ctrl-x` then detach then reattach, it default to `^P^Q` again)\n"},{"labels":["documentation",null,null],"text":"This is with reference to https://github.com/docker/docker/issues/20827. But, that thread is already closed and is not getting traction. Can we open that thread or discuss the issue here?\n"},{"labels":["documentation",null],"text":"<!--\nIf you are reporting a new issue, make sure that we do not have any duplicates\nalready open. You can ensure this by searching the issue list for this\nrepository. If there is a duplicate, please close your issue and add a comment\nto the existing issue instead.\n\nIf you suspect your issue is a bug, please edit your issue description to\ninclude the BUG REPORT INFORMATION shown below. If you fail to provide this\ninformation within 7 days, we cannot debug your issue and will close it. We\nwill, however, reopen it if you later provide the information.\n\nFor more information about reporting issues, see\nhttps://github.com/docker/docker/blob/master/CONTRIBUTING.md#reporting-other-issues\n\n---------------------------------------------------\nBUG REPORT INFORMATION\n---------------------------------------------------\nUse the commands below to provide key information from your environment:\nYou do NOT have to include this information if this is a FEATURE REQUEST\n-->\n\nOutput of `docker version`:\n\n```\nDocker version 1.8.0, build 0d03096\n```\n\nOutput of `docker info`:\n\n```\nContainers: 1\nImages: 5\nStorage Driver: aufs\n Root Dir: /mnt/sda1/var/lib/docker/aufs\n Backing Filesystem: extfs\n Dirs: 21\n Dirperm1 Supported: true\nExecution Driver: native-0.2\nLogging Driver: json-file\nKernel Version: 4.1.18-boot2docker\nOperating System: Boot2Docker 1.10.2 (TCL 6.4.1); master : 611be10 - Mon Feb 22 22:47:06 UTC 2016\nCPUs: 8\nTotal Memory: 1.955 GiB\nName: boot2docker\nID: PVUD:7SAK:UKCM:SWAM:VO4D:HAVW:WJWE:L7J6:OKOY:EHOE:EOMP:ED3Y\nDebug mode (server): true\nFile Descriptors: 11\nGoroutines: 29\nSystem Time: 2016-03-03T17:42:38.217741179Z\nEventsListeners: 0\nInit SHA1: \nInit Path: /usr/local/bin/docker\nDocker Root Dir: /mnt/sda1/var/lib/docker\n```\n\nProvide additional environment details (AWS, VirtualBox, physical, etc.):\nMacOS X\n\nList the steps to reproduce the issue:\n1. Create a docker image with a file at `/app/build/version.txt`\n2. Start a container for that image with\n`CONTAINER_ID=$(docker create foo:123)`\n3. Attempt to copy the file out of the container to a path that doesn't exist with\n`docker cp ${CONTAINER_ID}:/app/build/version.txt build/version.txt`\n--> `lstat /path/to/working/directory/build: no such file or directory`\n4. Try again with just a destination directory with\n`docker cp ${CONTAINER_ID}:/app/build/version.txt build/`\n--> `no such directory`\n5. Create the directory with\n`mkdir build`\n6. Try again with either command.\n--> Notice success.\n\nDescribe the results you received:\n\n`no such file or directory`\n`no such directory`\n\nDescribe the results you expected:\n\nSuccessful copy of the file.\n\nProvide additional info you think is important:\nThe documentation [here](https://docs.docker.com/engine/reference/commandline/cp/) is very explicit about the expected behavior in this situation.  In particular, `SRC_PATH` specifies a file and `DEST_PATH` does not exist, so the file should be created at `DEST_PATH`.  The documentation implies that the directory structure leading up to `DEST_PATH` will be created if necessary.\n"},{"labels":["documentation",null],"text":"I have a local Ubuntu 12.04 machine that I want to run Docker on with some application code. However the code needs to read data off of a USB drive when it is plugged in. Because the drive can be swapped, it seems like volume mounting it does not work when the new one is plugged in. Is there a way to configure Docker so that the usb detection is passed to Docker instead of just the host os? \n\nUse docker run command and discussed here:\n\nhttps://docs.docker.com/engine/reference/run/#volume-shared-filesystems\n\nYou can mount /dev using the -v flag.  Any device that appears on /dev will show up in the container.  If you do this, you'll likely also want to change the cgroup value to restrict the permissions to just the USB device.\n\nJerome in our company also wrote this blog on doing this:\n\nhttps://jpetazzo.github.io/2015/01/13/docker-mount-dynamic-volumes/\n"},{"labels":[null,"documentation",null],"text":"<!--\nIf you are reporting a new issue, make sure that we do not have any duplicates\nalready open. You can ensure this by searching the issue list for this\nrepository. If there is a duplicate, please close your issue and add a comment\nto the existing issue instead.\n\nIf you suspect your issue is a bug, please edit your issue description to\ninclude the BUG REPORT INFORMATION shown below. If you fail to provide this\ninformation within 7 days, we cannot debug your issue and will close it. We\nwill, however, reopen it if you later provide the information.\n\nFor more information about reporting issues, see\nhttps://github.com/docker/docker/blob/master/CONTRIBUTING.md#reporting-other-issues\n\n---------------------------------------------------\nBUG REPORT INFORMATION\n---------------------------------------------------\nUse the commands below to provide key information from your environment:\nYou do NOT have to include this information if this is a FEATURE REQUEST\n-->\n\nOutput of `docker version`:\n\n```\nClient:\n Version:      1.10.2\n API version:  1.22\n Go version:   go1.5.3\n Git commit:   c3959b1\n Built:        Mon Feb 22 16:22:08 2016\n OS/Arch:      linux/amd64\n\nServer:\n Version:      1.10.2\n API version:  1.22\n Go version:   go1.5.3\n Git commit:   c3959b1\n Built:        Mon Feb 22 16:22:08 2016\n OS/Arch:      linux/amd64\n```\n\nOutput of `docker info`:\n\n```\nContainers: 24\n Running: 2\n Paused: 0\n Stopped: 22\nImages: 308\nServer Version: 1.10.2\nStorage Driver: devicemapper\n Pool Name: docker-253:2-413393-pool\n Pool Blocksize: 65.54 kB\n Base Device Size: 10.74 GB\n Backing Filesystem: ext4\n Data file: /dev/loop0\n Metadata file: /dev/loop1\n Data Space Used: 10.48 GB\n Data Space Total: 107.4 GB\n Data Space Available: 26.63 GB\n Metadata Space Used: 15.14 MB\n Metadata Space Total: 2.147 GB\n Metadata Space Available: 2.132 GB\n Udev Sync Supported: true\n Deferred Removal Enabled: false\n Deferred Deletion Enabled: false\n Deferred Deleted Device Count: 0\n Data loop file: /var/lib/docker/devicemapper/devicemapper/data\n WARNING: Usage of loopback devices is strongly discouraged for production use. Either use `--storage-opt dm.thinpooldev` or use `--storage-opt dm.no_warn_on_loop_devices=true` to suppress this warning.\n Metadata loop file: /var/lib/docker/devicemapper/devicemapper/metadata\n Library Version: 1.02.93 (2015-01-30)\nExecution Driver: native-0.2\nLogging Driver: json-file\nPlugins: \n Volume: local\n Network: host bridge null\nKernel Version: 4.3.4-200.fc22.x86_64\nOperating System: Fedora 22 (Twenty Two)\nOSType: linux\nArchitecture: x86_64\nCPUs: 4\nTotal Memory: 7.721 GiB\nName: tomas-dohnalek.brno.seznam.cz\nID: L3SZ:VAVV:WVWH:K37D:QTXP:A3QC:J3LU:OANJ:25A7:J2AR:OYHA:RWEF\nUsername: dohnto\nRegistry: https://index.docker.io/v1/\n```\n\nList the steps to reproduce the issue:\n1. Follow the documentation: (https://docs.docker.com/engine/reference/commandline/pull/ - `docker pull registry.hub.docker.com/debian` or https://github.com/docker/docker/blob/master/man/docker-pull.1.md - `docker pull registry.hub.docker.com/fedora:20`)\n2. Run `docker pull registry.hub.docker.com/debian`\n\nDescribe the results you received:\nThe actual output is  `Error response from daemon: Error parsing HTTP response: invalid character '<' looking for beginning of value: \"\\n\\n\\n<!DOCTYPE html><!....404: The page you were looking for is not here...`\n\nDescribe the results you expected:\nPull the image\n\nProvide additional info you think is important:\n**When I use docker 1.9.1 everything works as expected.**\n"},{"labels":["documentation",null,null,null],"text":"After adding the apt repository according to https://docs.docker.com/engine/installation/linux/ubuntulinux/ instructions, it fails to fetch Docker. There is nothing in the documentation to suggest that ppc64le is not supported in this setup.\n\nW: Failed to fetch https://apt.dockerproject.org/repo/dists/ubuntu-wily/Release  Unable to find expected entry 'main/binary-ppc64el/Packages' in Release file (Wrong sources.list entry or malformed file)\n\nE: Some index files failed to download. They have been ignored, or old ones used instead.\n"},{"labels":[null,"documentation",null,null,null],"text":"When I tried running `docker build --tag Trevor:FlaskCompose`, I received an exception:\n\n> invalid value \"Trevor:FlaskCompose\" for flag --tag: Error parsing reference: \"Trevor:FlaskCompose\" is not a valid repository/tag\n> See 'docker build --help'.\n\nUnfortunately, when running `docker build --help`, as suggested by the tool, there is no additional guidance provided.\n\n> -t, --tag=[]                    Name and optionally a tag in the 'name:tag' format\n\nHow does a user know what a valid \"tag\" is? I fiddled with the name, and apparently the `name` must be all lowercase, and the `tag` portion can have capital letters. However, I am not aware of what the other requirements are.\n\nThe less friction, and more clarity, that is provided by Docker, the more likely users will be to adopt it and be delighted by the experience of working with it. :smile: \n\nCheers,\nTrevor Sullivan\nMicrosoft MVP: PowerShell\n"},{"labels":["documentation",null,null],"text":"https://bugzilla.redhat.com/show_bug.cgi?id=1304808\n\nOutput of `docker version`:\nClient:\n Version:      1.8.2-el7\n API version:  1.20\n Package Version: docker-1.8.2-10.el7.x86_64\n Go version:   go1.4.2\n Git commit:   a01dc02/1.8.2\n Built:  \n OS/Arch:      linux/amd64\n\nServer:\n Version:      1.8.2-el7\n API version:  1.20\n Package Version: \n Go version:   go1.4.2\n Git commit:   a01dc02/1.8.2\n Built:  \n OS/Arch:      linux/amd64\n\nList the steps to reproduce the issue:\n1. docker images --all | tail -n +1 | wc -l\n2. docker info | grep 'Images'\n\nProvide additional info you think is important:\nDiscussions around this issue:\n\n---\n\nWhen you do `docker info` SystemInfo (https://github.com/docker/docker/blob/master/daemon/info.go#L26) method is called, which gets the images count from imageStore.\n\ndaemon.imageStore.Map()\nhttps://github.com/docker/docker/blob/master/daemon/info.go#L72\n\nThis map returns information about the images. (Tags are not part of this store).\nHence when you do `docker images --all|wc -l` you see a different count as tags are also included in the output.\n\nHope that clears up the confusion.\n\nShishir\n\n---\n\nFROM: Chris Evich\nOkay, just checked.  The man-page for 'docker info' is in need of some love.  Clarifying the 'Images' and 'Containers' count with what they actually represent would be 'nice to have'.  On F22, it has this blurb:\n\nThis  command  displays  system  wide information regarding the Docker installation. Information displayed includes the number of containers and images, pool name,  data file,  metadata file, data space used, total data space, metadata space used , total metadata space, execution driver, and the kernel version.\n\nand the example section is really out of date (OS: Ubuntu 14 and Kernel 3.13).  Would make the guys in marketing happier if it showed Fedora/CentOS/RHEL instead and maybe showed the typical devicemapper details instead of aufs (not used any more, anywhere IIRC).\n\nHere's a suggestion for the description blurb:\n\nThis  command  displays  system  wide information regarding the Docker installation. Information displayed includes the number of containers and (non-tagged) images, pool name,  image storage details, space available and used, execution driver, OS and the kernel versions.\n\n---\n"},{"labels":["documentation",null,null],"text":"The docker remote API documentation pages (f.ex. [Remote API v.1.22](https://docs.docker.com/engine/reference/api/docker_remote_api_v1.22/#get-container-logs)) describe how to connect and retrieve container logs, but does not describe _how_ the log messages are formatted. I expect to be able to understand what to do with the data I get back.\n\nFrom what I am able to tell, the log results is a sequence of chunks (I am unsure if these are separated by newline or not, but this seems to be the case). Each chunk seems to be on the format (`fd`, `chunk length`, `contents`). `fd` is a single (1) byte telling you from which file descriptor (1 for stdout, and 2 for stderr) the chunk is from. Next follows `chunk length`, which is 7 bytes telling you how long the length of the log chunk. The length does not include the `fd` field or the `chunk lenght` fields, only the contents. Finally, the contents follow.\n\nThis is, however, a result of look-and-guess based only on enabling stdin and stderr. I have no clue what would happen if I enable timestamps, if I only read data from a single source, or if I even use the right terminology here.\n\nIt would be much easier to use logs fetched via the remote API if this is properly documented.\n"},{"labels":["documentation",null],"text":"<!--\nIf you are reporting a new issue, make sure that we do not have any duplicates\nalready open. You can ensure this by searching the issue list for this\nrepository. If there is a duplicate, please close your issue and add a comment\nto the existing issue instead.\n\nIf you suspect your issue is a bug, please edit your issue description to\ninclude the BUG REPORT INFORMATION shown below. If you fail to provide this\ninformation within 7 days, we cannot debug your issue and will close it. We\nwill, however, reopen it if you later provide the information.\n\nFor more information about reporting issues, see\nhttps://github.com/docker/docker/blob/master/CONTRIBUTING.md#reporting-other-issues\n\n---------------------------------------------------\nBUG REPORT INFORMATION\n---------------------------------------------------\nUse the commands below to provide key information from your environment:\nYou do NOT have to include this information if this is a FEATURE REQUEST\n-->\n\nOutput of `docker version`:\n\n```\nClient:\n Version:      1.9.1\n API version:  1.21\n Go version:   go1.4.2\n Git commit:   a34a1d5/1.9.1\n Built:        \n OS/Arch:      linux/amd64\n\nServer:\n Version:      1.9.1\n API version:  1.21\n Go version:   go1.4.2\n Git commit:   a34a1d5/1.9.1\n Built:        \n OS/Arch:      linux/amd64\n\n```\n\nOutput of `docker info` (on a fresh host; an affected host does not respond to `docker info`):\n\n```\nContainers: 1\nImages: 6\nServer Version: 1.9.1\nStorage Driver: devicemapper\n Pool Name: docker-docker--pool\n Pool Blocksize: 524.3 kB\n Base Device Size: 107.4 GB\n Backing Filesystem: xfs\n Data file: \n Metadata file: \n Data Space Used: 100.7 MB\n Data Space Total: 9.437 GB\n Data Space Available: 9.337 GB\n Metadata Space Used: 77.82 kB\n Metadata Space Total: 25.17 MB\n Metadata Space Available: 25.09 MB\n Udev Sync Supported: true\n Deferred Removal Enabled: true\n Deferred Deletion Enabled: true\n Deferred Deleted Device Count: 0\n Library Version: 1.02.93-RHEL7 (2015-01-28)\nExecution Driver: native-0.2\nLogging Driver: json-file\nKernel Version: 4.1.17-22.30.amzn1.x86_64\nOperating System: Amazon Linux AMI 2015.09\nCPUs: 1\nTotal Memory: 995.6 MiB\nName: ip-172-31-34-29\nID: GO67:QAUR:ZN7D:LBC6:M366:GT2C:BQTV:F3UE:IMGD:YFNF:T37L:OQWC\n\n```\n\nProvide additional environment details (AWS, VirtualBox, physical, etc.): Amazon Linux AMI 2015.09.2 configured with a second EBS volume at /dev/xvdb and configured with direct LVM (using devicemapper) by `docker-storage-setup`.  By default, `docker-storage-setup` configures the thin pool originally sized at 40% of the available disk with an auto-extend policy, however the same behavior is exhibited when auto-extend is disabled and when `lv_when_full` is changed to `error`.\n\nList the steps to reproduce the issue:\n1. Configure Docker as described above (direct LVM with devicemapper using xfs)\n2. Run containers to progressively consume disk (I seemed to have reasonable results using `docker run ubuntu dd if=/dev/urandom of=sample.txt bs=64M count=1 iflag=fullblock`) until the disk is full (alternately, run my [repro script](https://gist.github.com/samuelkarp/6c8b5ebc0a9cc34006c8))\n3. Try to do something with Docker (any of `docker ps`, `docker info`, `docker run`, `docker stop`, `docker rm`, `docker images`, `docker rmi`)\n\nDescribe the results you received:\nDocker commands hang indefinitely.  dmesg fills with things like the following:\n\n```\n[ 3029.535199] device-mapper: thin: 253:2: reached low water mark for data device: sending event.\n[ 3029.589706] device-mapper: thin: 253:2: switching pool to out-of-data-space mode\n[ 3037.584626] vethac84d34: renamed from eth0\n[ 3037.588339] docker0: port 2(vethd9e484d) entered disabled state\n[ 3037.622172] docker0: port 2(vethd9e484d) entered disabled state\n[ 3037.626293] device vethd9e484d left promiscuous mode\n[ 3037.629420] docker0: port 2(vethd9e484d) entered disabled state\n[ 3089.592091] device-mapper: thin: 253:2: switching pool to read-only mode\n[ 3089.598147] Buffer I/O error on dev dm-4, logical block 144077, lost async page write\n[ 3089.603304] Buffer I/O error on dev dm-4, logical block 144078, lost async page write\n[ 3089.608669] Buffer I/O error on dev dm-4, logical block 144079, lost async page write\n[ 3089.614565] Buffer I/O error on dev dm-4, logical block 144080, lost async page write\n[ 3089.620112] Buffer I/O error on dev dm-4, logical block 144081, lost async page write\n[ 3089.624919] Buffer I/O error on dev dm-4, logical block 144082, lost async page write\n[ 3089.633141] Buffer I/O error on dev dm-4, logical block 144083, lost async page write\n[ 3089.638389] Buffer I/O error on dev dm-4, logical block 144084, lost async page write\n[ 3089.645177] Buffer I/O error on dev dm-4, logical block 144085, lost async page write\n[ 3089.650294] Buffer I/O error on dev dm-4, logical block 144086, lost async page write\n[ 3089.664084] XFS (dm-4): metadata I/O error: block 0x2c230 (\"xfs_buf_iodone_callbacks\") error 5 numblks 16\n[ 3089.684777] XFS (dm-5): metadata I/O error: block 0x2c230 (\"xfs_buf_iodone_callbacks\") error 5 numblks 16\n[ 3089.695953] XFS (dm-4): Unmounting Filesystem\n[ 3089.703478] XFS (dm-4): metadata I/O error: block 0x2c230 (\"xfs_buf_iodone_callbacks\") error 5 numblks 16\n[ 3089.710627] XFS (dm-5): metadata I/O error: block 0x2c230 (\"xfs_buf_iodone_callbacks\") error 5 numblks 16\n...\n[ 3150.336222] XFS (dm-6): metadata I/O error: block 0x2c230 (\"xfs_buf_iodone_callbacks\") error 5 numblks 16\n[ 3240.180102] INFO: task docker:3312 blocked for more than 120 seconds.\n[ 3240.184544]       Tainted: G            E   4.1.17-22.30.amzn1.x86_64 #1\n[ 3240.189691] \"echo 0 > /proc/sys/kernel/hung_task_timeout_secs\" disables this message.\n[ 3240.195639] docker          D ffff880037d03d48     0  3312      1 0x00000000\n[ 3240.200654]  ffff880037d03d48 ffff88003e321980 ffff88003745b300 0000000000000246\n[ 3240.206939]  ffff880037d04000 ffff88003d6aabe0 ffff880037e6cdc0 ffff880037e6cde8\n[ 3240.212569]  ffff880037e6cd90 ffff880037d03d68 ffffffff814df3e7 ffff88003d6aabe0\n[ 3240.218299] Call Trace:\n[ 3240.219963]  [<ffffffff814df3e7>] schedule+0x37/0x90\n[ 3240.223179]  [<ffffffffa048fb79>] xfs_ail_push_all_sync+0xa9/0xe0 [xfs]\n[ 3240.227811]  [<ffffffff810aafc0>] ? prepare_to_wait_event+0x110/0x110\n[ 3240.233513]  [<ffffffffa047b2e9>] xfs_unmountfs+0x59/0x170 [xfs]\n[ 3240.239390]  [<ffffffffa047bdab>] ? xfs_mru_cache_destroy+0x6b/0x90 [xfs]\n[ 3240.247251]  [<ffffffffa047dd36>] xfs_fs_put_super+0x36/0x90 [xfs]\n[ 3240.252770]  [<ffffffff811ccb06>] generic_shutdown_super+0x76/0x100\n[ 3240.256723]  [<ffffffff811ccea7>] kill_block_super+0x27/0x70\n[ 3240.260913]  [<ffffffff811cd1b9>] deactivate_locked_super+0x49/0x80\n[ 3240.265629]  [<ffffffff811cd7ae>] deactivate_super+0x4e/0x70\n[ 3240.269797]  [<ffffffff811e9a63>] cleanup_mnt+0x43/0x90\n[ 3240.274904]  [<ffffffff811e9b02>] __cleanup_mnt+0x12/0x20\n[ 3240.279970]  [<ffffffff81085b97>] task_work_run+0xb7/0xf0\n[ 3240.284063]  [<ffffffff81013bb1>] do_notify_resume+0x51/0x80\n[ 3240.288751]  [<ffffffff814e35bc>] int_signal+0x12/0x17\n```\n\nDescribe the results you expected:\nDocker itself would continue to be responsive, but operations that consume space (pulling images, writing inside a container, etc) would fail.  This is the behavior observed when I switch to ext4 instead of xfs.\n"},{"labels":["documentation",null],"text":"PR #17034 Added the capability to specify per volume mount propagation mode. This added the shared/slave/private options to the `--volume` option.\n\nAs was mentioned in https://github.com/docker/docker/pull/17034#issuecomment-164824550, the documentation for this was supposed to be updated in a follow-up PR, but that doesn't seem to have happened.\n\nPlaces where it is missing or completely underwhelming:\n- https://docs.docker.com/engine/reference/run/\n- https://docs.docker.com/engine/reference/commandline/run/\n- https://docs.docker.com/engine/userguide/containers/dockervolumes/\n\nJust Ctrl+F for the word \"slave\" on those pages, and see that it is missing, or has no explanation.\n\nThis was originally brought up in #20555.\n\ncc @thaJeztah\n"},{"labels":["documentation",null],"text":"The documentation https://docs.docker.com/engine/reference/builder/#impact-on-build-caching explains that build-args only invalidate the cache for the first step in the Dockerfile that _uses_ the build-arg.\n\nGiven that build-args are prepended to each `RUN` instruction, the cache is actually invalidated for each `RUN` instruction (the build-cache does not evaluate `RUN` commands to check if a build-arg is actually _used_).\n\nThe documentation should explain this more clearly.\n\nI haven't checked yet if the build-cache actually evaluates `ENV` instructions to determine if the cache should be used or not, so this has to be checked before updating the documentation as well.\n\nFor more information/example/background, see https://github.com/docker/docker/issues/20136#issuecomment-187688636\n"},{"labels":["documentation",null],"text":"Description of problem:\nMy docker version is 1.9.1. I use the RemoteAPI(https://github.com/docker/docker/blob/master/docs/reference/api/docker_remote_api_v1.21.md) to have some tests. And I found that the docs is incomplete. For example, 'GET /containers/(id)/json' but 'GET /containers/(name)/json' is right too. Maybe we should complete this.\n@thaJeztah @moxiegirl \n"},{"labels":["documentation",null],"text":"Hi,\n\nI saw that docker 1.10 introduced new volumn mount options as \"[[r]shared|[r]slave|[r]private]\", what does   [r] means here?\n\nAlso does there are any detailed explain for the meaning of each type? share, slave and private? \n\nThanks!\n"},{"labels":["documentation",null],"text":"The documentation for docker volumes (found here: https://docs.docker.com/engine/userguide/containers/dockervolumes/) is woefully out of date.\n\nSince docker 1.9 includes top-level `volume` subcommands, and support for volume plugins, this documentation should be updated to reflect these new features.\nIt should also de-emphasize data-only containers as these are no longer considered a recommended pattern.\n"},{"labels":["documentation",null],"text":"As a follow up of #17513, we should complete the network options table:\n\nhttps://github.com/aidanhs/docker/blob/d736a9d2c3758fcc4eac0b62e9c7b128388021c1/docs/reference/commandline/network_create.md#bridge-driver-options\n\n/cc @aidanhs \n"},{"labels":["documentation",null,null],"text":"This official documentation on dockerizing a Node.js app is so misleading, and should highlight not for production.\n\n<blockquote class=\"twitter-tweet\" data-partner=\"tweetdeck\"><p lang=\"en\" dir=\"ltr\">This official documentation on dockerizing a Node.js app is so misleading, and should highlight not for production.<a href=\"https://t.co/ieb0qkIxLK\">https://t.co/ieb0qkIxLK</a></p>&mdash; Manoj Mahalingam (@manojlds) <a href=\"https://twitter.com/manojlds/status/699666115849400320\">February 16, 2016</a></blockquote>\n\n<script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n"},{"labels":["documentation"],"text":"The current page for https://docs.docker.com/v1.10/engine/userguide/ is blank. It looks like the information that used to be there, such the information found in https://docs.docker.com/v1.8/userguide/ is now located at https://docs.docker.com/engine/userguide/intro/ but the only part of the docs that uses that link is the sidebar. The rest of the links still use either 'userguide/' or 'userguide/index'. I'm having difficulty finding the sidebar code but it seems like an easy fix to move the `userguide/intro.md` to `userguide/index.md` and then point the userguide introduction link found in the sidebar to that end point or change all the links from other documents to point to the intro. Not sure which way it should go but I can make PR if need be.\n"},{"labels":["documentation",null],"text":"Quoting the doc:\n\n> A plugin is a process running **on the same docker host** as the docker daemon, which registers itself by placing a file in one of the plugin directories described in Plugin discovery.\n\nThis is not entirely true because I can have a plugin listening on a domain/ip which can be located outside the daemon host (using the spec or json file).\n\nAlso, systemd socket activation isn't mentioned anywhere in the docs.\n"},{"labels":["documentation",null],"text":"I have an ELK cluster, configured to accept logs over a GELF socket, reachable on `$GELFADDR:$GELFPORT`.\n\nIf I send simple container logs to it, all is fine:\n\n```\ndocker run --log-driver gelf --log-opt gelf-address=udp://$GELFADDR:$GELFPORT \\\n  alpine echo hello world\n```\n\n→ The `hello world` log line shows up in Kibana. _Alles gut._\n\nIf I annotate the logs with a simple label, it still works:\n\n```\ndocker run --log-driver gelf --log-opt gelf-address=udp://$GELFADDR:$GELFPORT \\\n  --log-opt labels=mylabel -l mylabel=myvalue \\\n  alpine echo hello world\n```\n\n→ The log line (with the `mylabel=myvalue` custom field) shows up in Kibana.\n\nHowever, if I put a dot in the label name:\n\n```\ndocker run --log-driver gelf --log-opt gelf-address=udp://$GELFADDR:$GELFPORT \\\n  --log-opt labels=my.label -l my.label=myvalue \\\n  alpine echo hello world\n```\n\n→ The logstash logs show an error, because `.` is forbidden in field names.\n\nThis wouldn't be a big deal, if we weren't advocating the use of dotted labels (e.g. `com.docker.compose.project`).\n\nThere are multiple workarounds:\n- install the `de_dot` filter in logstash (but it doesn't ship by default; so it adds extra hoops compared to just using the stock logstash image from the registry)\n- add a custom Ruby filter to mangle the field names (super hackish, but works without authoring new images, just adding a few lines to the logstash config:\n\n```\nfilter {\n  ruby {\n    code => \"\n      event.to_hash.keys.each { |k| event[ k.gsub('.','_') ] = event.remove(k) if k.include?'.' }\n     \"\n  }\n}\n```\n\n(For the curious: see this [longer thread](https://discuss.elastic.co/t/field-name-cannot-contain/33251/12) about the issue with ElasticSearch))\n\nAt the very least, we should document that in the [logging section](https://docs.docker.com/engine/admin/logging/overview/).\n\nIf you want help to reproduce this behavior, I can provide Compose files to stage up an ELK cluster in a snap.\n\n/cc @moxiegirl \n"},{"labels":["documentation",null,null],"text":"I found some comments on an EMC blog that could point us to a doc error.\n\nhttp://blog.emccode.com/2016/02/04/what-you-need-to-know-about-storage-in-docker-1-10/#comments\n\n![image](https://cloud.githubusercontent.com/assets/1347209/12894929/b144dfc6-ce4e-11e5-8b70-ac9175a13380.png)\n\nhttps://docs.docker.com/engine/userguide/containers/dockervolumes/\n"},{"labels":["documentation",null],"text":"Hey,\n\nbecause I wasn’t very happy with the existing Docker API Client implementations in PHP, I’ve written a new one.\nYou can find the project here: https://github.com/jarkt/docker-php-client\n\nIt would be great, if you link the project here: https://docs.docker.com/engine/reference/api/remote_api_client_libraries/\n"},{"labels":["documentation"],"text":"I'm having issues getting the new `--volume /mnt/shared:/shared:shared` feature of 1.10 working (from #17034). \n\n``` bash\nroot@testhost:~# uname -a\nLinux testhost 3.18.5-031805-generic #201501292218 SMP Fri Jan 30 03:19:17 UTC 2015 x86_64 GNU/Linux\n\nroot@testhost:~# docker info\nContainers: 1\n Running: 0\n Paused: 0\n Stopped: 1\nImages: 9\nServer Version: 1.10.0-dev\nStorage Driver: overlay\n Backing Filesystem: extfs\nExecution Driver: native-0.2\nLogging Driver: json-file\nPlugins:\n Volume: local\n Network: host bridge null\nKernel Version: 3.18.5-031805-generic\nOperating System: Debian GNU/Linux 8 (jessie)\nOSType: linux\nArchitecture: x86_64\nCPUs: 8\nTotal Memory: 1.899 GiB\nName: loxflix\nID: RNAT:QYNF:66KE:DSN5:NRPC:ITAA:6G3M:WMR2:JABB:CPGO:ZN7O:FAVU\nDebug mode (server): true\n File Descriptors: 13\n Goroutines: 31\n System Time: 2016-01-24T08:45:00.139001319Z\n EventsListeners: 0\n Init SHA1: b84242d186971c8111d1f9de77b7c476bc049614\n Init Path: /usr/lib/docker/dockerinit\n Docker Root Dir: /var/lib/docker\nLabels:\n provider=generic\nExperimental: true\n\nroot@testhost:~# findmnt -o TARGET,PROPAGATION /mnt/testhost\nTARGET       PROPAGATION\n/mnt/shared shared\n\nroot@testhost:~# docker run --rm -it --volume /mnt/shared:/data:shared ubuntu:14.04\ndocker: Error response from daemon: Cannot start container 6859ea4fc2f23130da7e72f301c9a82528c6e78e406b6f68261d000410ad6960: Path /mnt/shared is mounted on /mnt/shared but it is not a shared mount..\n```\n\nI had this working under ubuntu. One of the key differences I noted was that `mount` indicated that the mount `/shared` had `-o bind` where as under debian, it doesn't seem to. \n"},{"labels":["documentation",null],"text":"I'm testing an overlay network in docker 1.10.0-rc1 that was not working in 1.9.1 (I'm running kernel 13.3)\n\nI run the following:\n\n```\ndocker network create --driver overlay es-bridge\n```\n\nI confirm the creation of the network:\n\n```\ndocker network ls\nNETWORK ID          NAME                DRIVER\ndf89455cbc24        bridge              bridge\n94df4ba9ba03        none                null\n1c4b0953f828        host                host\n4f0069ac54d2        es-bridge           overlay\n```\n\nThen add a busybox container to it:\n\n```\ndocker run -itd --net=es-bridge busybox\n3ab7ba1969c4084c9d0f0ed23525b05573405a21188fac67f890d6bdcc506807\ndocker: Error response from daemon: subnet sandbox join failed for \"10.0.0.0/24\": overlay subnet 10.0.0.0/24 has conflicts in the host while running in host mode.\n```\n\nThere are no other containers running on this node, and I've run the same container on several nodes and get the same result\n\n```\ndocker version\nClient:\n Version:      1.10.0-rc1\n API version:  1.22\n Go version:   go1.5.3\n Git commit:   677c593\n Built:        Fri Jan 15 18:17:17 2016\n OS/Arch:      linux/amd64\n\nServer:\n Version:      1.10.0-rc1\n API version:  1.22\n Go version:   go1.5.3\n Git commit:   677c593\n Built:        Fri Jan 15 18:17:17 2016\n OS/Arch:      linux/amd64\n```\n\n```\ndocker info\nContainers: 3\n Running: 0\n Paused: 0\n Stopped: 3\nImages: 88\nServer Version: 1.10.0-rc1\nStorage Driver: aufs\n Root Dir: /var/lib/docker/aufs\n Backing Filesystem: extfs\n Dirs: 104\n Dirperm1 Supported: false\nExecution Driver: native-0.2\nLogging Driver: json-file\nPlugins:\n Volume: local\n Network: overlay bridge null host\nKernel Version: 3.13.0-32-generic\nOperating System: Ubuntu 14.04.3 LTS\nOSType: linux\nArchitecture: x86_64\nCPUs: 8\nTotal Memory: 31.41 GiB\nName: c2b1s2.tera4.terascope.io\nID: EP32:TWMN:LIX6:5B2E:X3AR:FJAH:OVSG:PMVF:XQVQ:FUQ2:6NKF:HNH6\nWARNING: No swap limit support\nCluster store: zk://zk.host:2181\nCluster advertise: IP:2376\n```\n"},{"labels":["documentation"],"text":"I've wasted half a day because after I've created Vagrant-based Docker cluster + overlay networks, then a container could not ping another container even if /etc/hosts was updated properly when a container has joined or left a network. No Docker overlay networking doc or tutorial mentions the requirement that the Docker daemons that join the cluster are identified by the hostname they run on, and if a name clashes, then cross-host container communication is broken.\n"},{"labels":["documentation",null],"text":"Useful to read on a kindle or ipad on the daily commute.\n"},{"labels":["documentation",null],"text":"I used `apt-get install docker.io` and I ended up with version 1.6, though 1.9 is the latest.  So I had a look at https://docs.docker.com/engine/installation/ubuntulinux/ and my face melted, so I googled a bit harder and found that all I actually need run is this:\n\n```\ncurl -fsSL https://get.docker.com/ | sh\n```\n\n(edit: changed `wget` to `curl` because we use `curl` in all places now)\n"},{"labels":["documentation",null],"text":"Link at https://docs.docker.com/engine/extend/plugins/ to pachyderme volume plugin  link to 404 Not Found.\n"},{"labels":["documentation",null,null],"text":"Now that libnetwork uses DNS-based discovery, we should update the docs, and remove references to `/etc/hosts` being updated, see https://github.com/docker/docker/pull/19198#issuecomment-170384315\n\n/cc @sanimej \n"},{"labels":["documentation"],"text":"In the documentation we mention that AuthConfig objects are passed in the X-Registry-Auth header, but we never document the format of AuthConfig objects, or when/why they get passed.\n\nIf you've done a docker login, you'll get a base64 encoded json file which looks like:\n\n{\"username\":\"pdevine\",\"password\":\"mysecretpassword\",\"auth\":\"\",\"email\":\"pdevine@foo.com\",\"serveraddress\":\"192.168.1.101\"}\n\nIf you then do a docker logout, you'll get:\n\n{\"auth\":\"\",\"email\":\"\"}\n\nIf you're using passed tokens, you'll get something like:\n\n{\"registrytoken\": \"foo\"}\n\nWe should document:\n- each of the fields (I think the auth field is new and related to the recent authZ changes?)\n- when fields get omitted (not sure why we even pass anything back after a docker logout?)\n"},{"labels":["documentation",null],"text":"In this guide\nhttps://github.com/docker/docker/blob/master/docs/userguide/dockervolumes.md\n\nIt still refers \n\n```\nNote: Docker will not warn you when removing a container without providing the -v option to delete its volumes. If you remove containers without using the -v option, you may end up with \"dangling\" volumes; volumes that are no longer referenced by a container. Dangling volumes are difficult to get rid of and can take up a large amount of disk space. We're working on improving volume management and you can check progress on this in pull request #14214\n```\n\nBut the pull request was closed,  so either a new issue be linked with or remove that link\n"},{"labels":["documentation"],"text":"Hi,\n\nIn the apt installation instruction for Debian, seen here\nhttps://github.com/docker/docker/blob/master/docs/installation/debian.md#update-your-apt-repository\nyou should add a new point (e.g. after 3.) stating:\n\nInstall package `apt-transport-https` which is needed for https repository URIs.\n\n``` bash\napt-get install apt-transport-https\n```\n"},{"labels":["documentation",null],"text":"In many cases, the man pages are not \"self contained\" in that they don't contain the full documentation for a command.  All the information is only available on docs.docker.com. (Moved from #19034)\n\nFixing this problem should be part of a generation task.  \n"},{"labels":["documentation"],"text":"Markdown is OK: `Usage: docker import file|URL|- [REPOSITORY[:TAG]]`\n\nGenerated manpage is confusingly wrong:\n\n```\ndocker    import [-c|--change[=[]]] [-m|--message[=MESSAGE]] [--help]\nfile|URL|-[REPOSITORY[:TAG]]\n```\n\nbecause it misses the space between `file|URL|-` and `[REPOSITORY[:TAG]]`.\n\nOn a normal project I'd try to debug this, but the docker docs build is a bit mysterious to me, sorry.\n"},{"labels":["documentation",null],"text":"The current documentation and man pages are unclear about;\n- what a \"named\" volume is\n- differences between docker and docker-compose w.r.t. bind-mounted volumes (compose accepts paths relative to the docker-compose.yml, but docker only accepts absolute paths).\n- ~~man pages are not \"self contained\", I.e., in many cases, the full documentation is only available on docs.docker.com~~ (moving this to #19088 )\n\nAs reported on Twitter; https://twitter.com/mt_inside/status/683403251232944128\n"},{"labels":["documentation",null,null],"text":"Description of problem: adding a systemd config file to /etc/systemd/system/docker.service.d as documented in [Control and configure Docker with systemd](https://docs.docker.com/engine/articles/systemd) doesn't have the desired effect on storage driver used due to a missing =\n\n`docker version`: \n\n```\nClient:\n Version:      1.9.1\n API version:  1.21\n Go version:   go1.4.2\n Git commit:   a34a1d5\n Built:        Fri Nov 20 13:20:08 UTC 2015\n OS/Arch:      linux/amd64\n\nServer:\n Version:      1.9.1\n API version:  1.21\n Go version:   go1.4.2\n Git commit:   a34a1d5\n Built:        Fri Nov 20 13:20:08 UTC 2015\n OS/Arch:      linux/amd64\n```\n\n`docker info`:\n\n```\nContainers: 0\nImages: 0\nServer Version: 1.9.1\nStorage Driver: aufs\n Root Dir: /var/lib/docker/aufs\n Backing Filesystem: extfs\n Dirs: 0\n Dirperm1 Supported: true\nExecution Driver: native-0.2\nLogging Driver: json-file\nKernel Version: 4.2.0-16-generic\nOperating System: Ubuntu 15.10\nCPUs: 1\nTotal Memory: 3.843 GiB\nName: wily\nID: TMDH:I3EU:4QJW:QWOK:D6UV:MHTA:ZETE:THHF:5JAE:MVMW:LN7Q:X6DI\nWARNING: No swap limit support\n```\n\n`uname -a`:\n\n`Linux wily 4.2.0-16-generic #19-Ubuntu SMP Thu Oct 8 15:35:06 UTC 2015 x86_64 x86_64 x86_64 GNU/Linux`\n\nEnvironment details (AWS, VirtualBox, physical, etc.):\n\nVMware Workstation 11 VM running Ubuntu 15.10 Server\n\nHow reproducible:\n\nConsistently reproducible\n\nSteps to Reproduce:\n\nTry to configure as documented:\n\n```\nsudo mkdir /etc/systemd/system/docker.service.d`\nsudo bash -c 'cat <<EOF > /etc/systemd/system/docker.service.d/overlay.conf\n[Service]\nExecStart=\nExecStart=/usr/bin/docker daemon -H fd:// --storage-driver overlay\nEOF'\nsudo systemctl daemon-reload\nsudo systemctl restart docker\nsudo docker info\n```\n\nAdd in the required = at the end of --storage-driver as documented in [daemon options](https://docs.docker.com/engine/reference/commandline/daemon/):\n\n```\nsudo mkdir /etc/systemd/system/docker.service.d`\nsudo bash -c 'cat <<EOF > /etc/systemd/system/docker.service.d/overlay.conf\n[Service]\nExecStart=\nExecStart=/usr/bin/docker daemon -H fd:// --storage-driver overlay\nEOF'\nsudo systemctl daemon-reload\nsudo systemctl restart docker\nsudo docker info\n```\n\nActual Results:\n\n`--storage-driver overlay` at the end of ExecStart means that aufs gets used\n\nExpected Results:\n\noverlay should be used\n\nAdditional info:\n\n`--storage-driver=overlay` at the end of ExecStart will correctly use overlay\n`--storage-driver btrfs` is perhaps a bad example anyway when the Docker team has been encouraging use of overlay since March.\n"},{"labels":["documentation",null,null],"text":"``` bash\n❯ docker pull gliderlabs/alpine\nUsing default tag: latest\nCannot connect to the Docker daemon. Is the docker daemon running on this host?\n```\n\nIt would be nice to \n- have the docker cli check for the existence of  `boot2docker`, \n  - **true**: attempt to run `boot2docker up` automatically \n  - **false**: a link to this error in a Docker FAQ (can't seem to find one [here](https://docs.docker.com/engine/misc/faq/), surprisingly)\n"},{"labels":["documentation",null],"text":"In https://docs.docker.com/v1.8/userguide/dockervolumes/\n\nit had\n\n docker run --volumes-from dbdata -v $(pwd):/backup ubuntu tar cvf /backup/backup.tar /dbdata\n\nThis tar would keep dbdata directory and its content.\n\nSo in following \n\ndocker run --volumes-from dbdata2 -v $(pwd):/backup ubuntu cd /dbdata && tar xvf /backup/backup.tar\n\nIt would wrong get /dbdata/dbdata/**\nos it is not restore and backup ways.\n\nIt should be changed as \n\ndocker run --volumes-from dbdata2 -v $(pwd):/backup ubuntu tar xvf /backup/backup.tar\n"},{"labels":["documentation",null,null],"text":"Currently `docker top CONTAINER [ps OPTIONS]` is a sort of proxy to the linux command `ps` but with the ability to lookup containers on remote daemons.\nIt has also _a lot_ of gotchas which are currently undocumented.\n\nFirstly, it's totally undocumented that the default `docker top` command w/o arguments will use the UNIX style ps arguments `-ef`.\nIssues come when people start to use the `[ps OPTIONS]` arguments. I understand you should know how ps arguments work before attempting to use them with Docker but it's undocumented that, for instance, as soon as you provide an option, the default `-ef` is _correctly_ dropped (cause ppl may want to use BSD style arguments).\n\nA clear example of people running into troubles is:\n\n``` sh\n$ docker run -d fedora /usr/bin/vi\n2f6f2c1d9a22e820c4b54e8e6baf7f1a40fc43c5e6efae5bdf45987e59d74f6f\n\n$ docker run -ti --rm fedora /bin/bash\n[root@be3f718de20d /]#\n\n$ docker ps\nCONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES\nbe3f718de20d        fedora              \"/bin/bash\"         15 seconds ago      Up 15 seconds                           elegant_jepsen\n2f6f2c1d9a22        fedora              \"/usr/bin/vi\"       40 seconds ago      Up 40 seconds                           insane_einstein\n```\n\nNow people will run `docker top` for the above 2 containers (which shells out to `ps -ef` and then filters out to the containers' pid):\n\n``` sh\n$ docker top be3f718de20d\nUID                 PID                 PPID                C                   STIME               TTY                 TIME                CMD\nroot                21138               1400                0                   16:59               pts/2               00:00:00            /bin/bash\n\n$ docker top 2f6f2c1d9a22\nUID                 PID                 PPID                C                   STIME               TTY                 TIME                CMD\nroot                21072               1400                0                   16:58               ?                   00:00:00            /usr/bin/vi\n```\n\nSo far so good. While sometihng like the following is pretty the same (given the daemon runs on the same machine as the client):\n\n``` sh\n$ ps -ef | grep $(docker inspect --format '{{ .State.Pid }}' be3f718de20d)\nroot     21138  1400  0 16:59 pts/2    00:00:00 /bin/bash\n```\n\nReal issues starts when those users start to play with `docker top` to select fields for instance. Let's say they're just interested in getting `pid,cmd` of the above two containers. Let's run `docker top` (as users might do w/o any documentation or deep knowledge of the difference between ps UNIX and BSD arguments):\n\n``` sh\n$ docker top be3f718de20d -o pid,cmd\nPID                 CMD\n\n$ docker top 2f6f2c1d9a22 -o pid,cmd\nPID                 CMD\n21072               /usr/bin/vi\n```\n\nTheir first WTF is why the first command doesn't show any output. So they play again, this time dropping the dash in `-o`:\n\n``` sh\n$ docker top be3f718de20d o pid,cmd \nPID                 CMD\n21138               /bin/bash\n\n$ docker top 2f6f2c1d9a22 o pid,cmd\nPID                 CMD\n```\n\nThis time they get the inverted output. Because running with BSD flags doesn't show processes w/o a TTY while the first one is inverted because the opposite, kind of, applies.\nWhat they really wanted to do to list both was:\n\n``` sh\n# BSD style\n$ docker top be3f718de20d axo pid,cmd\nPID                 CMD\n21138               /bin/bash\n$ docker top 2f6f2c1d9a22 axo pid,cmd\nPID                 CMD\n21072               /usr/bin/vi\n\n# UNIX style\n$ docker top be3f718de20d -eo pid,cmd\nPID                 CMD\n21138               /bin/bash\n$ docker top 2f6f2c1d9a22 -eo pid,cmd\nPID                 CMD\n21072               /usr/bin/vi\n```\n\nWhat I'm proposing is to better document all this gotchas and pitfalls (cause right now there's lack for this).\nI've already actually summarized an explanation of the above issue in this bugzilla also https://bugzilla.redhat.com/show_bug.cgi?id=1293063#c1 (I'm planning to sumbit a PR to resolve this but there would be need for other examples as well)\n"},{"labels":["documentation",null],"text":"prerequisites:\n\n```\n$ mkdir -p test/foo\n$ touch test/foo/{run,dev}\n$ cd test\n```\n\nhere I know `COPY` is documented to not be allowed in builds from `STDIN` (https://docs.docker.com/engine/reference/builder/#copy), yet I can build and get the error for `COPY` which requires two arguments not that `COPY` isn't allowed from `STDIN`\n\n```\n$ docker build -t test1 - <<EOF\nheredoc> FROM busybox\nheredoc> COPY ./foo/ $NO_SUCH\nheredoc> RUN /bin/true\nheredoc> EOF\nSending build context to Docker daemon 2.048 kB\nStep 1 : FROM busybox\n ---> d9551b4026f0\nStep 2 : COPY ./foo/\nCOPY requires at least two arguments\n```\n\nThe above should be because my shell expands `$NO_SUCH` and I get the error.\nif I double quote `EOF`:\n\n```\n$ docker build -t test2 - <<\"EOF\"\nFROM busybox\nCOPY ./foo/ $NO_SUCH\nRUN /bin/true\nEOF\nSending build context to Docker daemon 2.048 kB\nStep 1 : FROM busybox\n ---> d9551b4026f0\nStep 2 : COPY ./foo/ $NO_SUCH\nlstat foo/: no such file or directory\n```\n\nNow with Dockerfile(s):\n\n```\n$ cat > Dockerfile <<\"EOF\"\nFROM busybox\nCOPY ./foo/ $NO_SUCH_THING\nRUN /bin/true\nEOF\n\n# I'm using \"EOF\" to not escape the env\n\n$ docker build -t test3 .\nSending build context to Docker daemon 4.608 kB\nStep 1 : FROM busybox\n ---> d9551b4026f0\nStep 2 : COPY ./foo/ $NO_SUCH_THING\n ---> 72b33ade0818\nRemoving intermediate container 2844bb1cab7c\nStep 3 : RUN /bin/true\n ---> Running in 9907a0595847\n ---> 0f489092922f\nRemoving intermediate container 9907a0595847\nSuccessfully built 0f489092922f\n```\n\nEverything goes well and the resulting image has a `run` file in the `/`\n\nSo, it isn't documented anywhere that in `COPY <src> <dest>`, if `<dest>` is an empty string (`COPY ./foo/ \"\"` is legal) it will copy `<src>` to the root directory.\nThe build from a Dockerfile isn't failing with the error of at least two arguments because when evaluating an env, if no ENV are declared at all (either with `-e`) the `ProcessWord` return the empty https://github.com/docker/docker/blob/master/builder/dockerfile/shell_parser.go#L313 string and everything is now legal  because args is a slice with a string and an empty string. But it's undocumented.\n\nShould we document this behavior? Should we error out when `<dest>` is an empty string (I don't think so)? Didn't tested `ADD` like `COPY` but I think most of this applies as well.\n\n@duglin WDYT?\n"},{"labels":["documentation"],"text":"in the example: https://docs.docker.com/opensource/project/set-up-dev-env/\n\nwhenever follow this:\n\nThis host has no images. You may have one or more dangling images. A dangling image is not used by a running container and is not an ancestor of another image on your system. A fast way to remove dangling containers is the following:\n\n$ docker rmi -f $(docker images -q -a -f dangling=true)\n\nsometimes, the env not have dangling images, so it would complain like below:\n\n$ docker rmi -f $(docker images -q -a -f dangling=true)\ndocker: \"rmi\" requires a minimum of 1 argument.\nSee 'docker rmi --help'.\n\nUsage:  docker rmi [OPTIONS] IMAGE [IMAGE...]\n\nI propose we improve like this:\n\n$ dangling_images=`docker images -q -a -f dangling=true`; [ -n \"$dangling_images\" ] &&  docker rmi -f ${dangling_images}\n"},{"labels":["documentation",null,null],"text":"Description of problem:\n\nThe [Installation on on Mac OS X](https://docs.docker.com/engine/installation/mac/) tutorial instructs users to mount a local folder as a container volume for nginx to serve.\n\n```\n$ docker run -d -P -v $HOME/site:/usr/share/nginx/html --name mysite nginx\n$ echo \"my new site\" > index.html\n$ echo \"This is cool\" > cool.html\netc.\n```\n\nThis works, but if you're a little red riding hood such as myself, you may let the whale-wolf trick you into venturing into the forrest to pick some flowers for your grandmother, or in my case overwrite one of the files with new data. This will drive you into the arms of a [5 years old vboxfs sendfile bug](https://www.virtualbox.org/ticket/9069), causing updates to the file to show only partially, or not at all, when served via nginx. And we all know how that story ends :smile: .\n\n`docker version`:\nClient:\n Version:      1.9.1\n API version:  1.21\n Go version:   go1.4.3\n Git commit:   a34a1d5\n Built:        Fri Nov 20 17:56:04 UTC 2015\n OS/Arch:      darwin/amd64\n\nServer:\n Version:      1.9.1\n API version:  1.21\n Go version:   go1.4.3\n Git commit:   a34a1d5\n Built:        Fri Nov 20 17:56:04 UTC 2015\n OS/Arch:      linux/amd64\n`docker info`:\nContainers: 12\nImages: 65\nServer Version: 1.9.1\nStorage Driver: aufs\n Root Dir: /mnt/sda1/var/lib/docker/aufs\n Backing Filesystem: extfs\n Dirs: 89\n Dirperm1 Supported: true\nExecution Driver: native-0.2\nLogging Driver: json-file\nKernel Version: 4.1.13-boot2docker\nOperating System: Boot2Docker 1.9.1 (TCL 6.4.1); master : cef800b - Fri Nov 20 19:33:59 UTC 2015\nCPUs: 1\nTotal Memory: 1.956 GiB\nName: default\nID: P2Y6:MOYK:HJRI:XNP2:LAZ5:JB4C:CLHS:I56K:BEVH:WTTK:ZY3G:IGPY\nDebug mode (server): true\n File Descriptors: 20\n Goroutines: 35\n System Time: 2015-12-15T13:16:40.814333675Z\n EventsListeners: 0\n Init SHA1: \n Init Path: /usr/local/bin/docker\n Docker Root Dir: /mnt/sda1/var/lib/docker\nUsername: felixge\nRegistry: https://index.docker.io/v1/\nLabels:\n provider=virtualbox\n`uname -a`:\nDarwin Felix-MBP-2012.local 15.0.0 Darwin Kernel Version 15.0.0: Sat Sep 19 15:53:46 PDT 2015; root:xnu-3247.10.11~1/RELEASE_X86_64 x86_64\n\nVirtualBox:  5.0.10 r104061\n\nSteps to Reproduce:\n1. Follow the tutorial\n2. Overwrite one of the html files with e.g. \"echo 1235\" > index.html after initially creating it\n3. Reload the file in the browser\n\nYou may need to overwrite several times with different data to see the problem. I've also found that `echo <data> > <file>`  produces the problem more reliably than editing it with vim.\n\nIdeally this bug could be fixed in VirtualBox. But short of that, I think the best solution is to create a dedicated description of this as a \"known issue\" somewhere, and link to that article from the installation tutorial, as well as other tutorials that make use of nginx / containers that are using sendfile.\n"},{"labels":["documentation",null],"text":"MHN requires 3.16.  Our installation documentation should mention this and cover the  upgrade of the kernel. \n"},{"labels":["documentation"],"text":"in doc https://github.com/docker/docker/blob/master/experimental/userns.md it only said, for example:\n\nThe following standard Docker features are currently incompatible when running a Docker daemon with experimental user namespaces enabled:\n\n```\nsharing namespaces with the host (--pid=host, --net=host, etc.)\n```\n\nWhen I enabled user namespace  feature, and try this\n\n$ docker run -it --ipc=host  ubuntu /bin/sh\n# \n\n~$ docker run -it --uts=host  ubuntu bash\nroot@dockerexper:/# \n\nBoth can works, I did not know what \" etc\" . here means and  what's the issue with pid or net ? what's failure for that, without it, it can not verify if this feature is work as design or not.\n"},{"labels":["documentation"],"text":"I believe the pull command list in [this section](https://docs.docker.com/userguide/dockerimages/#image-digests) is incorrect.\n\nHas:\n\n```\n$ docker pull ouruser/sinatra@cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfbdbf\n```\n\nShould be:\n\n```\n$ docker pull ouruser/sinatra@sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfbdbf\n```\n"},{"labels":["documentation"],"text":"https://docs.docker.com/reference/api/docker_remote_api/\n\n![image](https://cloud.githubusercontent.com/assets/668860/10025840/2b075478-6113-11e5-8b6c-b07477b1e507.png)\n"},{"labels":["documentation"],"text":"$ docker version\nClient:\n Version:      1.9.1\n API version:  1.21\n Go version:   go1.4.2\n Git commit:   a34a1d5\n Built:        Fri Nov 20 13:12:04 UTC 2015\n OS/Arch:      linux/amd64\n\nServer:\n Version:      1.9.1\n API version:  1.21\n Go version:   go1.4.2\n Git commit:   a34a1d5\n Built:        Fri Nov 20 13:12:04 UTC 2015\n OS/Arch:      linux/amd64\n\nFollow this guide  https://docs.docker.com/engine/reference/run/\nPID setting part: it has reference run \"docker run --pid=host rhel7 strace -p 1234\"\n\n$ docker run --pid=host rhel7 strace -p 1234\nUnable to find image 'rhel7:latest' locally\nPulling repository docker.io/library/rhel7\n6883d5422f4e: Download complete \nStatus: Downloaded newer image for rhel7:latestr.io/library/rhel7 \ndocker.io/library/rhel7: this image was pulled from a legacy registry.  Important: This registry version will not be supported in future versions of docker.\nexec: \"strace\": executable file not found in $PATH\nError response from daemon: Cannot start container ed48301d82536e4ff30d83f4c15a146661252fe60ddac50943de21572e01881e: [8] System error: exec: \"strace\": executable file not found in $PATH\n"},{"labels":["documentation"],"text":"The default network driver (I.e. Bridge) has additional options that can be passed when creating a custom network, these options aren't documented (unless I overlooked). We should add the options to the documentation.\n\nFor reference, see https://github.com/docker/docker/issues/18237#issuecomment-161737492\n"},{"labels":["documentation",null,null,null],"text":"I was quite surprised and disappointed when the installer said that it requires x64.\n\nYou should specify this \"little\" detail somewhere on the Docker site: in filename and on a couple of pages, like [here](https://docs.docker.com/windows/step_one/) and [here](https://www.docker.com/docker-toolbox), I think, so people know that it won't work on their x86 Windows BEFORE they download and try to install Docker.\n"},{"labels":["documentation",null],"text":"Found this when reading docs.docker.com;\nhttps://docs.docker.com/engine/reference/\n\nThat page is published using 192.168.99.100 as domain name\n\n<img width=\"1738\" alt=\"screen shot 2015-12-01 at 13 00 13\" src=\"https://cloud.githubusercontent.com/assets/1804568/11500207/e6f469ba-982b-11e5-8941-0d11a86d876f.png\">\n"},{"labels":["documentation",null,null,null],"text":"I'm sorry if this is a tiresome topic, but I can't find a good answer.\n\nI have started to look for which storage driver to use for my Docker machines in production.\nOverlayfs looked like the one to use, so I tried it out, getting a ton of errors with socket files. Then I started getting weird errors if a layer was deleting from another layer on buildtime. Switching to ext4 as backing filesystem instead of xfs for the overlay driver solved that. \nIt's confusing to need to dig down all this old issues to figure out that this are mostly known issues.\nIt's also confusing to go from devicemapper (loop) > devicemapper (thin) > overlayfs (with xfs) > overlayfs (with ext4).\n\nThe best that worked for me (less buggy) was actually devicemapper, both loop and thin.\n\nWhat is the \"at the time\" best option? Whats the pros and cons?\nMaybe this should be a part of the documentation that is updated from time to time. A matrix-style overview.\n"},{"labels":["documentation",null],"text":"For installing docker on cloud platforms we want to direct people to install machine and then deploy docker. \n\n@londoncalling I'd like you to do this update.  \n\ncc @shykes \n"},{"labels":["documentation",null],"text":"Hi, I have the latest win 10 build and got some problems following the guide:\n\nAdd ssh.exe to your PATH\n$Env:Path = \"${Env:Path};c:\\Program Files (x86)\\Git\\bin\"\n\nshould be\n\n$Env:Path = \"${Env:Path};c:\\Program Files (x86)\\Git\\bin;C:\\Program Files\\Git\\mingw64\\bin\"\n\nand the \"eval\" command isn't working in my PS. I setuped the ENV variables by hand\n"},{"labels":["documentation"],"text":"User asked on Stackoverflow.\n\nhttp://stackoverflow.com/questions/33784295/setting-dns-for-docker-daemon-using-systemd-drop-in\n"},{"labels":["documentation",null],"text":"I'm using the debian package from https://apt.dockerproject.org/repo/ on version 1.9.0-0~vivid and the --volume-driver option is not documented in the man page. It appears in the `docker run --help` but not in `man docker run`.\n"},{"labels":["documentation"],"text":"https://docs.docker.com/engine/userguide/networkingcontainers/ - one of the examples is missing --format (or -f) parameter.  In the \"Add containers to a network\" section, after the words:\n\"Then, get the IP address of your web\", there is an example:\n\n```\n$ docker inspect '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' web\n```\n\nIt should be, similar to the one above:\n\n```\n$ docker inspect --format='{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' web\n```\n\notherwise the user gets an error:\n\n```\n$ docker inspect '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' certsignd\nError: No such image or container: {{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}\n```\n\nand a very long JSON blob with the full config.\n"},{"labels":["documentation"],"text":"Title says it all\n"},{"labels":["documentation"],"text":"Being able to install a specific version of docker is a recurring question (see for example https://github.com/docker/docker/issues/9697, https://github.com/docker/docker/issues/13191, https://github.com/docker/docker/issues/13822, https://github.com/docker/docker/issues/15581, https://github.com/docker/docker/issues/15586, https://github.com/docker/docker/issues/15947)\n\nWe currently describe how to download a specific (static) binary on http://docs.docker.com/engine/installation/binaries/, but don't provide that information on how to do this using apt, yum, or dnf.\n\nWhile this may be \"general knowledge\" on working with package managers, it would be a nice addition to explain users how to do this (and how to \"pin\" to a specific major/minor version)\n\nfor example, on ubuntu\n\n``` bash\napt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D\nmkdir -p /etc/apt/sources.list.d\necho deb https://apt.dockerproject.org/repo3 ubuntu-trusty main > /etc/apt/sources.list.d/docker.list\napt-get update;\napt-get install -y -q docker-engine=1.x.x~\n```\n"},{"labels":["documentation"],"text":"The page https://docs.docker.com/engine/articles/security/#linux-kernel-capabilities links to the removed https://github.com/docker/docker/blob/master/daemon/execdriver/native/template/default_template.go instead of https://github.com/docker/docker/blob/master/daemon/execdriver/native/template/default_template_linux.go.\n## Possible solution to the maintenance problem\n\nYou might want to use a link to a specific version (which is never going to break) and update it as needed/wanted; if updates are forgotten, users can at least try to navigate through to a more recent version. Additionally, when pointing to a specific version, it becomes possible to link to specific lines _robustly_, that is, without having to update line numbers at each change.\n\nhttps://github.com/docker/docker/blob/87de5fdd5972343a11847922e0f41d9898b5cff7/daemon/execdriver/native/template/default_template_linux.go#L16-L29\n"},{"labels":["documentation",null],"text":"In this page: http://docs.docker.com/engine/userguide/dockerimages/\n\nInstead of \"Tip: You recommend you always use a specific tagged image, for example ubuntu:12.04. That way you always know exactly what variant of an image is being used.\", it should be \"Tip: We recommend you always use a specific tagged image, for example ubuntu:12.04. That way you always know exactly what variant of an image is being used.\"\n"},{"labels":["documentation"],"text":"I'm on a Mac OS X and following the [Get started with multi-host networking](https://docs.docker.com/engine/userguide/networking/get-started-overlay/) tutorial:\n\nIn Step 2, the following command fails after 60 retries:\n\n```\n$ docker-machine create \\\n-d virtualbox \\\n--swarm --swarm-image=\"swarm\" --swarm-master \\\n--swarm-discovery=\"consul://$(docker-machine ip mh-keystore):8500\" \\\n--engine-opt=\"cluster-store=consul://$(docker-machine ip mh-keystore):8500\" \\\n--engine-opt=\"cluster-advertise=eth1:2376\" \\\nmhs-demo0\n```\n\nwhen I add `--debug`, I see:\n\n```\n...\nDaemon not responding yet: dial tcp 192.168.99.101:2376: connection refused\nDaemon not responding yet: dial tcp 192.168.99.101:2376: connection refused\nDaemon not responding yet: dial tcp 192.168.99.101:2376: connection refused\n...\n```\n\nBut I can actually connect to this engine from my host machine (Mac OS X) like:\n\n```\n$ docker ...  '-H=tcp://192.168.99.100:2376' ps\nCONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                                                                            NAMES\nfdc11fc1609c        progrium/consul     \"/bin/start -server -\"   19 minutes ago      Up 19 minutes       53/tcp, 53/udp, 8300-8302/tcp, 8400/tcp, 8301-8302/udp, 0.0.0.0:8500->8500/tcp   nostalgic_visvesvaraya\n```\n# Debug info\n\n```\n➜  ~  docker info\nContainers: 1\nImages: 18\nStorage Driver: aufs\n Root Dir: /mnt/sda1/var/lib/docker/aufs\n Backing Filesystem: extfs\n Dirs: 20\n Dirperm1 Supported: true\nExecution Driver: native-0.2\nLogging Driver: json-file\nKernel Version: 4.0.9-boot2docker\nOperating System: Boot2Docker 1.8.1 (TCL 6.3); master : 7f12e95 - Thu Aug 13 03:24:56 UTC 2015\nCPUs: 1\nTotal Memory: 996.2 MiB\nName: mh-keystore\nID: ZCBE:XISI:3ZBC:NDXW:ASIH:V6RI:CON4:VNVJ:LOHU:LZ4S:6Q4D:KETE\nDebug mode (server): true\nFile Descriptors: 15\nGoroutines: 27\nSystem Time: 2015-11-09T23:31:18.109537018Z\nEventsListeners: 0\nInit SHA1:\nInit Path: /usr/local/bin/docker\nDocker Root Dir: /mnt/sda1/var/lib/docker\nUsername: ahmet\nRegistry: https://index.docker.io/v1/\nLabels:\n provider=virtualbox\n\n➜  ~  docker version\nClient:\n Version:      1.8.1\n API version:  1.20\n Go version:   go1.5\n Git commit:   d12ea79\n Built:        Mon Aug 31 22:27:45 UTC 2015\n OS/Arch:      darwin/amd64\n\nServer:\n Version:      1.8.1\n API version:  1.20\n Go version:   go1.4.2\n Git commit:   d12ea79\n Built:        Thu Aug 13 02:49:29 UTC 2015\n OS/Arch:      linux/amd64\n```\n\n```\n➜  ~  docker-machine -v\ndocker-machine version 0.4.1 (e2c88d6)\n```\n"},{"labels":["documentation",null],"text":"We should use on-premises not on-premise.\n"},{"labels":["documentation"],"text":"I just installed docker on my laptop with Ubuntu 14.04 and I just got a big scare, as my system ran out of space, and kept using all the space I did free.\nThis was due to /var/lib/docker/aufs/timeshift using up everything.\nIt turns out by default timeshift does not skip /var/lib, so one has to add an explicit exclusion.\nNot docker fault, but it would be good to have an \"head's up\" somewhere, in the installation info for ubuntu.\n"},{"labels":["documentation"],"text":"This is just hanging there in an odd place.\n\nhttp://docs.docker.com/engine/userguide/labels-custom-metadata/\n"},{"labels":["documentation"],"text":"Add Adam/Betty's list to docs.\n"},{"labels":["documentation",null],"text":"Looks like some code was removed in #17700 but not entirely removed throughout the docs.  Verify the docs were cleaned properly.\n"},{"labels":["documentation"],"text":"I was reading through the contribution documentation, and under the section https://github.com/docker/docker/blob/master/CONTRIBUTING.md#design-and-cleanup-proposals, there's a link to http://docs.docker.com/opensource/project/advanced-contributing/ for advanced contributor details. That link leads to a blank page (not a 404 - just a blank page).\n\nWanted to let y'all know about the broken link as well as ask where I could find the details on how you're asking folks to present design and refactor concepts to the project.\n\nThanks!\n\n-joe\n"},{"labels":["documentation",null,null],"text":"I started to experiment with volume plugins yesterday, had a bunch of questions, pestered my coworkers, tortured my Docker Engine, got answers, and here's some feedback (pre @thaJeztah's request).\n## How can I use two different plugins?\n\nWhen reading the docs, I wondered how I could start a container using two volumes with two different drivers. The [volume plugins docs](http://docs.docker.com/engine/extend/plugins_volume/) say nothing about this, nor do the `docker run` page.\n\nThe answer is to create the volumes separately with `docker volume` and then start the container.\n## Impact on `VOLUME`\n\nThen I wondered: \"since I have to use `docker volume`, do we really need `--volume-driver`, then?\" and it was pointed out that `--volume-driver` will be used for the implicit `VOLUME`s defined in the Dockerfile.\n\nI think the docs should also clarify that.\n## Terminology\n\nIt could be useful to clarify what is a `plugin` and what is a `driver`. Are they interchangeable, or is there a subtlety? (Like, \"a plugin can provide multiple drivers\" maybe?)\n"},{"labels":["documentation",null],"text":"Need to document the exact  required TCP/UDP ports to be open in order for overlay networks to work:\n\nengine port (e.g TCP 2376), \nvxlan: UDP 4789\nserf: TCP + UDP 7946\nkey-value store ( e.g for consul TCP 8500) \n\nAdditionally, in `Understand Docker container networks`\nneed to edit `--cluster-advertise=HOST_IP` and make it `--cluster-advertise=HOST_IP:ENGINE_PORT` or `--cluster-advertise=HOST_INTERFACE:ENGINE_PORT` \n"},{"labels":["documentation",null],"text":"Just worked through the examples at https://docs.docker.com/engine/userguide/networking/get-started-overlay/ and have the following corrections/suggestions:\n\nStep 2.2 - should this now just be --swarm-image=\"swarm\" rather than --swarm-image=\"swarm:1.0.0-rc2\" ?\n\nStep 4 - given that constraints are specified, any reason why the docker run commands are targeted at the individual nodes rather than the swarm master?\n\nStep 6.3 - doesn't indicate that the file needs to be in a directory called counter\nStep 6.4 - specifies a node constraint that is not consistent with those created earlier in the article\nStep 6.6 - has an extraneous 'up' after 'docker-compose' which is hard to diagnose from the usage instructions that you then get back given that the experimental option is not documented\nStep 6.x - would be good to have a final step to browse to the app\n"},{"labels":["documentation",null],"text":"The manual installation procedure for ubuntu doesn't install the requirements for aufs. we should add it to the requirements, because aufs is our recommended/default driver on ubuntu\n"},{"labels":["documentation"],"text":"Just built the latest version of the docs and noticed minor update would be required to [Organize our issues page](http://docs.docker.com/opensource/ways/issues/) for missing reference to `Windows` platform. Jump to section ===> `How Do I triage ?`\n\n```\nkitematic/kitematic     Kitematic is a simple application for managing Docker containers on Mac OS X.\n```\n\nshould be replaced to \n\n```\nkitematic/kitematic     Kitematic is a simple application for managing Docker containers on Mac OS X and Windows.\n```\n"},{"labels":["documentation",null],"text":"Hi ,\nI am using docker remote api version 1.19 and using below request to pull image. \nPOST /images/create?fromImage=ubuntu HTTP/1.1\n\nAbove request have Content-Type: application/json but it is not returning a valid json.\nIn case of wrong image it return \n{\"status\":\"Pulling repository docker.io/library/cento\"}\n{\"errorDetail\":{\"message\":\"Error while pulling image: Get https://index.docker.io/v1/repositories/library/cento/images: dial tcp: lookup index.docker.io: no such host\"},\"error\":\"Error while pulling image: Get https://index.docker.io/v1/repositories/library/cento/images: dial tcp: lookup index.docker.io: no such host\"}\n\nwhich is not a valid json so i am unable to send the proper response.\n"},{"labels":["documentation",null],"text":"Add more detail in Docs about each event state shown in this diagram: http://docs.docker.com/reference/api/docker_remote_api/#docker-events\n\nCloses #10654\n"},{"labels":["documentation",null,null],"text":"Please refer to #17205 \n\nThe documentation should be updated to differentiate between SystemD and normal init scripts when configuring changes to the startup options for docker.\n"},{"labels":["documentation"],"text":"I followed the site https://docs.docker.com/articles/https/\nbut at the end , docker --tlsverify ps  return an erro \n\n```\nAn error occurred trying to connect: Get https://xxxxx/v1.20/containers/json: x509: certificate signed by unknown authority\n```\n\nIf i test the same URL with CURL:\ncurl https://xxxxx/images/json   --cert ~/.docker/cert.pem   --key ~/.docker/key.pem   --cacert ~/.docker/ca.pem\n\nit return Json info.\n\nHow can i use TLS conf with auto signed CA?\n"},{"labels":["documentation",null],"text":"This page has a broken link https://docs.docker.com/userguide/image_management/ - links to https://docs.docker.com/dockter-trusted-registry but should https://docs.docker.com/docker-trusted-registry\n"},{"labels":["documentation",null],"text":"https://docs.docker.com/installation/ubuntulinux/\n\nThis:\n\n```\n$ apt-key adv --keyserver hkp://pgp.mit.edu:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D\n```\n\nShould be:\n\n```\n$ sudo apt-key adv --keyserver hkp://pgp.mit.edu:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D\n```\n\nAnd `sudo usermod -aG docker ubuntu` is listed under optional configurations, but that step is most definitely required.\n"},{"labels":["documentation"],"text":"The [names-generator states](https://github.com/docker/docker/blob/ab31d9500ebe0c3bf039321bb8c83c7b01c21e4e/pkg/namesgenerator/names-generator.go#L76-L77);\n\n```\n// Docker, starting from 0.7.x, generates names from notable scientists and hackers.\n// Please, for any amazing man that you add to the list, consider adding an equally amazing woman to it, and vice versa.\n```\n\nWe may want to be more specific about what we consider \"notable\", and what \"rules\" we use when adding people to this list. This came up a few times in the past, i.e. \"being a CEO or founder of a company\" does not per-definition make a person \"notable\".\n\nFor reference, see the discussion in https://github.com/docker/docker/pull/17156 and https://github.com/docker/docker/pull/15218#discussion_r36033279\n"},{"labels":["documentation"],"text":"Links are being deprecated with the implementation of the new networking material. We need to update the `trust_sandbox.md` example to use docker networking rather than links.\n\nping @endophage  @NathanMcCauley @diogomonica \n"},{"labels":["documentation",null,null],"text":"![image](https://cloud.githubusercontent.com/assets/1347209/10561981/fc412bd8-74f8-11e5-83ef-034953b5454e.png)\n"},{"labels":["documentation",null],"text":"The current \"usage\" for commands is in many cases not very helpful, for example if I want to see which filters are supported for `docker ps`:\n\n``` bash\n$ docker ps --filter\nflag needs an argument: --filter\nSee 'docker ps --help'.\n\n$ docker ps --help\n\nUsage:  docker ps [OPTIONS]\n\nList containers\n\n  -a, --all=false       Show all containers (default shows just running)\n  --before=             Show only container created before Id or Name\n  -f, --filter=[]       Filter output based on conditions provided\n  --format=             Pretty-print containers using a Go template\n  --help=false          Print usage\n  -l, --latest=false    Show the latest created container, include non-running\n  -n=-1                 Show n last created containers, include non-running\n  --no-trunc=false      Don't truncate output\n  -q, --quiet=false     Only display numeric IDs\n  -s, --size=false      Display total file sizes\n  --since=              Show created since Id or Name, include non-running\n```\n\nThe information does not give any clue what filters are available.\n\nWe should try to improve this output and, if possible, reuse the existing documentation (man-pages, docs) to prevent having to maintain this information in three locations (usage, man-page, docs).\n"},{"labels":["documentation"],"text":"Move the how to contribute to open source documentation to the opensource project.\n"},{"labels":["documentation"],"text":"The `GET /volumes` remote api [query parameter](https://github.com/docker/docker/blob/master/api/server/router/local/volume.go#L17) \"**filters**\" (plural) is consistent with similar list commands (e.g. `GET /images`), but the [v1.21 docs](https://github.com/docker/docker/blob/master/docs/reference/api/docker_remote_api_v1.21.md#list-volumes) state that the parameter is named \"**filter**\" (singular).\n\nWhich one is correct? I guess the docs are wrong, and if so, I could provide a PR to fix them. If the docs are right and the param was meant to be **filter** (singular), I'd like to discuss about consistency to the other endpoints ;-)\n"},{"labels":[null,"documentation"],"text":"[The docker-maven-plugin](https://github.com/spotify/docker-maven-plugin) can be used for Maven projects to push an image to the user's configured Docker registry at certain points in the build process. The plugin uses [the docker-client library](https://github.com/spotify/docker-client), which communicates with the docker daemon using the Remote API.\n\nWhen pushing an image, we would like for the plugin to be able to be aware of the registry-assigned digest for the image, so that it can be communicated to downstream plugins / build steps.\n\ndocker-client tries to find the image digest by basically grepping through the JSON status messages sent by the /push endpoint. We (docker-maven-plugin maintainers) [discovered that in docker v1.8 the format of the message changed](https://github.com/spotify/docker-client/issues/250) from\n\n```\nDigest: sha256:dbad7f727f340f4bfa1160689eaf57a60242bf9a48cc2c4c14f383c9b66e8f06\n```\n\nto something like \n\n```\n0.2.1-SNAPSHOT-efd3f71.DIRTY: digest: sha256:8138f3c93c333aa1db6634ae77fce1a50febb9b189ba6fb2121f22810b7841b3 size: 41358\n```\n1. Would it be possible to document the format of the status message containing the image digest to make it less susceptible to unintended changes in future docker versions?\n2. Is there a smarter way for the docker-client library to get the image digest after/during a push?\n"},{"labels":["documentation"],"text":"I followed the installation steps at https://docs.docker.com/installation/debian/ for Debian Wheezy. However, I was unable to install the package docker-engine because of this error:\n\n`The following packages have unmet dependencies: docker-engine : Depends: init-system-helpers (>= 1.18~) but it is not installable`\n\nIn issue https://github.com/docker/machine/issues/1607 I read that if support for Wheezy is requested, an issue should be openend - which I'm doing with this.\n\nWe have a large cluster currently running many Debian Wheezy machines. They won't be upgraded to Debian 8 in the foreseeable future, so support for Debian 7 would be highly appreciated.\n"},{"labels":["documentation"],"text":"Reported by \"univahpollinger\" on IRC; ([logs](https://botbot.me/freenode/docker-dev/msg/51414351/);\n\n> I'm running Docker 1.8.2 and use the RemoteAPI. The response on a \"GET /containers/<id>/stats\" request contains a \"precpu_stats\" field - this is not documented, but is the exact copy of the \"cpu_stats\" field - is the \"precpu_stats\" field intended - what is this then? - or is it just a copy&paste error in the code?\n\nPR https://github.com/docker/docker/pull/13320 introduced a `precpu_stats` field in the stats, but this field has not been documented\n\nping @coolljt0725 :smile:\n"},{"labels":["documentation",null],"text":"The \"configuring docker\" section is not updated to reflect the new packages, which no longer use /etc/sysconfig/docker on SystemD; https://docs.docker.com/engine/articles/configuring/#configuring-docker-1\n\nInstallation articles duplicate a lot of this same content.  Updating this should include fixing that material; we might want to update the installs to link to configuring rather than having a lot of material duplicated all around.\n\nSee #16662 for the origination story behind this issue\n"},{"labels":["documentation"],"text":"```\nubuntu@server:~$ docker version\nClient version: 1.7.1\nClient API version: 1.19\nGo version (client): go1.4.2\nGit commit (client): 786b29d\nOS/Arch (client): linux/amd64\nServer version: 1.7.1\nServer API version: 1.19\nGo version (server): go1.4.2\nGit commit (server): 786b29d\nOS/Arch (server): linux/amd64\n\nubuntu@server:~$ docker info\nContainers: 8\nImages: 63\nStorage Driver: aufs\n Root Dir: /var/lib/docker/aufs\n Backing Filesystem: extfs\n Dirs: 79\n Dirperm1 Supported: false\nExecution Driver: native-0.2\nLogging Driver: json-file\nKernel Version: 3.13.0-58-generic\nOperating System: Ubuntu 14.04.2 LTS\nCPUs: 2\nTotal Memory: 3.859 GiB\nName: ************\nID: 36XS:MMPO:MGBK:EEKA:T2UF:QJKH:FROW:EARP:G7MJ:ATXF:C3WT:5ZTQ\nWARNING: No swap limit support\n\nubuntu@server:~$ uname -a\nLinux ************ 3.13.0-58-generic #97-Ubuntu SMP Wed Jul 8 02:56:15 UTC 2015 x86_64 x86_64 x86_64 GNU/Linux\n```\n# Steps to reproduce the issue:\n1. Open the official \"Installation on Ubuntu\" documentation page\n2. Go to the Upgrade section https://docs.docker.com/installation/ubuntulinux/#upgrade-docker\n3. Run the suggested command in order to upgrade from 1.7.1 to the current stable version (1.8.2)\n   \n   `$ curl -sSL https://get.docker.com/ | sh`\n\nI received the following message:\n`Warning: the \"docker\" command appears to already exist on this system.\nIf you already have Docker installed, this script can cause trouble, which is\nwhy we're displaying this warning and provide the opportunity to cancel the\ninstallation.\nIf you installed the current Docker package using this script and are using it\nagain to update Docker, you can safely ignore this message.\nYou may press Ctrl+C now to abort this script.`\n\nWhat I expected:\nI've discovered that I've installed version 1.7.1 using the following command (please see the `/ubuntu` at the end):\n`$ curl -sSL https://get.docker.com/ubuntu | sh`\n\nIf I try to re-run the original command (the one with `/ubuntu`) nothing happens, the version stays at 1.7.1, so I can guess that the new command (the one without `/ubuntu`) is the only one able to perform the upgrade, but it is suggesting me to stop it using CTRL+C because the original installation were not performed using such a script.\n\nIn the end the issue is: I don't know how to proceed because neither the script nor the documentation page are suggesting me what to do in order to upgrade Docker. The only suggestion is to perform CTRL+C and stay with version 1.7.1.\n"},{"labels":["documentation"],"text":"When looking at the [remote API](https://docs.docker.com/reference/api/docker_remote_api_v1.20/), I noticed the links for the versions is sorted incorrectly:\nv1.20 --> v1.21 --> v1.19\n\n![screen shot 2015-10-01 at 8 32 38 pm](https://cloud.githubusercontent.com/assets/679475/10239004/b2adfcc8-687b-11e5-9480-e897eca64f6e.png)\n\nTried looking at the docs in Github, but not sure where this resides?\n"},{"labels":["documentation",null,null],"text":"https://docs.docker.com/reference/commandline/ps/\n\nThe placeholder .Names is missing in available placeholders for\n\n```\ndocker ps  --format\n```\n\n```\nClient:\n Version:      1.8.2\n API version:  1.20\n Go version:   go1.4.2\n Git commit:   0a8c2e3\n Built:        Thu Sep 10 19:21:21 UTC 2015\n OS/Arch:      linux/amd64\n\nServer:\n Version:      1.8.2\n API version:  1.20\n Go version:   go1.4.2\n Git commit:   0a8c2e3\n Built:        Thu Sep 10 19:21:21 UTC 2015\n OS/Arch:      linux/amd64\n```\n"},{"labels":["documentation",null],"text":"The Dockerfile documentation about the EXPOSE directive states it is used \"to determine which ports to expose to the host when using the -P flag.\"\n\nThen, it goes on to say:\n\n\"Note: EXPOSE doesn’t define which ports can be exposed to the host or make ports accessible from the host by default.\"\n\nIt seems to me the first statement is wrong and should be removed, because AFAIK EXPOSE does not determine which ports to expose to the host.  If I'm wrong about that, than the documentation should be updated with clarification.  \n"},{"labels":["documentation"],"text":"Was open here, but not fixed #3622\n\nThe documentation still don't give any examples on how this works!\n\nhttps://docs.docker.com/reference/api/docker_remote_api_v1.20/#create-a-container\n"},{"labels":["documentation"],"text":"https://twitter.com/scott_lowe/status/647174608844640256\n\nhttps://blog.docker.com/2015/07/new-apt-and-yum-repos/\n"},{"labels":["documentation",null,null],"text":"Description of problem:\nNeither the documentation itself nor the examples in the Remote API documentation (specifically for v1.20, https://docs.docker.com/reference/api/docker_remote_api_v1.20/ ) mention that the \"Content-Length\" field is necessary in all POST requests that have a body.\nThe value in this field is not exactly important, at least as it is larger or equal to the actual body size.\n\n`docker version`:\nClient:\n Version:      1.8.2\n API version:  1.20\n Go version:   go1.4.2\n Git commit:   0a8c2e3\n Built:        Thu Sep 10 19:19:00 UTC 2015\n OS/Arch:      linux/amd64\n\nServer:\n Version:      1.8.2\n API version:  1.20\n Go version:   go1.4.2\n Git commit:   0a8c2e3\n Built:        Thu Sep 10 19:19:00 UTC 2015\n OS/Arch:      linux/amd64\n\n`docker info`:\nContainers: 98\nImages: 9\nStorage Driver: aufs\n Root Dir: /var/lib/docker/aufs\n Backing Filesystem: extfs\n Dirs: 211\n Dirperm1 Supported: false\nExecution Driver: native-0.2\nLogging Driver: json-file\nKernel Version: 3.13.0-63-generic\nOperating System: Ubuntu 14.04.3 LTS\nCPUs: 4\nTotal Memory: 7.664 GiB\nName: sirius.mydomain.test\nID: OKAA:4QF6:6QJ4:R4SE:IWFG:YJLY:PFFW:YTEK:URCB:MTCV:QCOY:VP3Y\nWARNING: No swap limit support\n\n`uname -a`:\nLinux sirius.mydomain.test 3.13.0-63-generic #103-Ubuntu SMP Fri Aug 14 21:42:59 UTC 2015 x86_64 x86_64 x86_64 GNU/Linux\n\nEnvironment details (AWS, VirtualBox, physical, etc.):\nPhysical\n\nHow reproducible:\nAlways\n\nSteps to Reproduce:\n1. Execute the following command line in the terminal\n$ echo -e \"POST /containers/4d50a1065a88/copy HTTP/1.1\\r\\nContent-Type: application/json\\r\\n\\r\\n{\\r\\n\\\"Resource\\\": \\\"test.txt\\\"\\r\\n}\\r\\n\" | sudo nc -U /var/run/docker.sock\n\nActual Results:\nHTTP/1.1 500 Internal Server Error\nContent-Type: text/plain; charset=utf-8\nServer: Docker/1.8.2 (linux)\nDate: Wed, 23 Sep 2015 08:35:54 GMT\nContent-Length: 4\n\nEOF\nHTTP/1.1 400 Bad Request\n\nExpected Results:\nHTTP/1.1 500 Internal Server Error\nContent-Type: text/plain; charset=utf-8\nServer: Docker/1.8.2 (linux)\nDate: Wed, 23 Sep 2015 08:39:53 GMT\nContent-Length: 59\n\nCould not find the file test.txt in container 4d50a1065a88\n\nAdditional info:\nThe expected result is printed with this command line:\n$ echo -e \"POST /containers/4d50a1065a88/copy HTTP/1.1\\r\\nContent-Type: application/json\\r\\nContent-Length: 1000\\r\\n\\r\\n{\\r\\n\\\"Resource\\\": \\\"test.txt\\\"\\r\\n}\\r\\n\" | sudo nc -U /var/run/docker.sock\n"},{"labels":["documentation"],"text":"docker version: Docker version 1.8.2, build 0a8c2e3\nuname: Linux 13.0-63-generic #103-Ubuntu SMP Fri Aug 14 21:42:59 UTC 2015 x86_64 x86_64 x86_64 GNU/Linux\n\nI have added the following to my `/etc/init/docker`:\n\n``` bash\nDOCKER_OPTS=\"-H unix:///var/run/docker.sock --log-opt max-size=25m --log-opt max-file=2\"\n```\n\noutput of ps:\n\n```\nroot       928  0.0  0.1 2019352 33980 ?       Ssl  Sep16   4:18 /usr/bin/docker daemon -H unix:///var/run/docker.sock --log-opt max-size=25m --log-opt max-file=2\n```\n\n```\nroot@[redacted]:/var/lib/docker/containers/4ca6a18d58bb6df9d77d30d64f17d208f3e02b3018888143f51522f2dcf8ddff# ls -lah\ntotal 30M\ndrwx------ 2 root root 4.0K Sep 16 19:47 .\ndrwx------ 9 root root 4.0K Sep 16 18:51 ..\n-rw------- 1 root root  30M Sep 21 14:40 4ca6a18d58bb6df9d77d30d64f17d208f3e02b3018888143f51522f2dcf8ddff-json.log\n-rw-r--r-- 1 root root 3.4K Sep 16 19:47 config.json\n-rw-r--r-- 1 root root  764 Sep 16 19:47 hostconfig.json\n-rw-r--r-- 1 root root   13 Sep 16 19:47 hostname\n-rw-r--r-- 1 root root  638 Sep 16 19:47 hosts\n-rw-r--r-- 1 root root  248 Sep 16 19:47 resolv.conf\n-rw------- 1 root root   71 Sep 16 19:47 resolv.conf.hash\n```\n\n```\nroot@[redacted]:/var/lib/docker/containers/4ca6a18d58bb6df9d77d30d64f17d208f3e02b3018888143f51522f2dcf8ddff# docker ps | grep 4ca6a18d58bb\n4ca6a18d58bb        my-app     \"npm start\"   4 days ago          Up 4 days           3001/tcp, 0.0.0.0:32779->3000/tcp            my_app_1\n```\n"},{"labels":["documentation",null],"text":"The docs (https://docs.docker.com/mac/step_six/) encourage users to enter their Docker Hub passwords in shell commands. This is bad because it exposes the password in clear text in the user's bash history. It would be better to have the user enter his or her password interactively.\n"},{"labels":["documentation",null],"text":"If you look at Docker run reference page at https://docs.docker.com/reference/run/ , the \"Runtime Constraints on CPU and Memory\" link in the Operator exclusive options is broken and \"goes nowhere\": https://docs.docker.com/reference/run/#runtime-constraints-on-cpu-and-memory\n"},{"labels":["documentation"],"text":"In docs/README.md:\nThe ### Generate the man pages section should refer to the README.md document in the man pages instead of referring in general to the man pages directory.\n\nIn man/README.mD:\nThe directory \"/docker\" is used to represent the user's '<'docker-fork'>' directory.. but the readme does not mention this.  Thus, the user may have problems following the instructions provided.\n\nI'll associate a PR with suggested changes.\n"},{"labels":["documentation"],"text":"We need better documentation about choosing a storage driver.  Jerome's presentation is a good place to start.\n"},{"labels":["documentation",null,null],"text":"i think, the follow example on file \n- docker/docs/reference/api/docker_remote_api_v1.21.md\n- docker/docs/reference/api/docker_remote_api_v1.20.md\n- docker/docs/reference/api/docker_remote_api_v1.19.md\n- ...\n\n```\nUlimits: { \"Name\": \"nofile\", \"Soft\": 1024, \"Hard\", 2048 }}\n```\n\nshould be\n\n```\nUlimits: { \"Name\": \"nofile\", \"Soft\": 1024, \"Hard\": 2048 }\n```\n"},{"labels":["documentation",null],"text":"As the Docker website continues to expand, it is going to become increasing difficult to find the information required by navigation alone. \n\neg. To find more information about a particular command, such as docker info, I used the following search string in Google: `docker info site:docs.docker.com`\n\nSee: https://www.python.org/\n"},{"labels":["documentation"],"text":"It seems the systemd service file doesn't load the config file from sysconfig which prevents any docker startup options from taking effect.\n\nDoc reference: https://docs.docker.com/articles/configuring/#configuring-docker-1\n"},{"labels":["documentation",null],"text":"As far as I know, we don't have documentation about how the volume, networking and other external driver proxies are generated. I don't think we have a make command to generate them. We should add documentation and a script to facilitate those tasks.\n"},{"labels":["documentation"],"text":"We don't yet have a style guide or instructions for creating man pages.\n"},{"labels":["documentation",null],"text":"If virtualization (VT-X) is not supported on the hardware that Docker Toolbox / VirtualBox is installed on, the VirtualBox VM will fail to start.\n\nWe should document that;\n- `VT-X` must be supported _and enabled_ on the hardware\n- How to check if `VT-X` is supported and enabled\n- Some basic instructions (or links to) to enable VT-X\n\nI opened an issue in the Docker Toolbox repository to track improvements in the installer; https://github.com/docker/toolbox/issues/166\n\nThis problem is reported in https://github.com/docker/docker/issues/11877, and mentioned in https://github.com/docker/docker/issues/15982#issuecomment-138822418, but there are various reports in the Docker Machine and Docker Toolbox repository as well.\n\n/cc @moxiegirl @jeffdm @ehazlett \n"},{"labels":["documentation",null,null],"text":"I noticed an incomplete sentence on the following link: https://docs.docker.com/articles/basics/. The \"Please\" is not followed by a proper sentence. Thought I'd bring it to your attention!\n\nIf you get docker: command not found or something like/var/lib/docker/repositories: permission denied you may have an incomplete Docker installation or insufficient privileges to access Docker on your machine. Please\n"},{"labels":["documentation",null],"text":"The new labels are now present, as decided on in https://github.com/docker/docker/pull/14719, and described in [project/ISSUE-TRIAGE.md](https://github.com/docker/docker/blob/master/project/ISSUE-TRIAGE.md), so the [\"find an issue\"](https://github.com/docker/docker/blob/master/docs/project/find-an-issue.md) page should be updated to reflect the new labels.\n"},{"labels":["documentation",null],"text":"This page has a typo: https://docs.docker.com/reference/commandline/cp/\n\nthe typo is : SRC_PAPTH => SRC_PATH\n"},{"labels":["documentation"],"text":"The API reference makes several references to the `AuthConfig` structure, but it's not described anywhere as far as I can tell.\n"},{"labels":["documentation",null,null],"text":"This:\n\n`docker run -v /path/to/nonexistent/directory:/container-path ...`\n\nResults in docker creating `/path/to/nonexistent/directory`.  I didn't expect this, and AFAICT, it's undocumented. \n\n`Linux mg-mesos 3.19.0-26-generic #28-Ubuntu SMP Tue Aug 11 14:16:32 UTC 2015 x86_64 x86_64 x86_64 GNU/Linux`\n\n```\nClient:\n Version:      1.8.1\n API version:  1.20\n Go version:   go1.4.2\n Git commit:   d12ea79\n Built:        Thu Aug 13 02:40:42 UTC 2015\n OS/Arch:      linux/amd64\n\nServer:\n Version:      1.8.1\n API version:  1.20\n Go version:   go1.4.2\n Git commit:   d12ea79\n Built:        Thu Aug 13 02:40:42 UTC 2015\n OS/Arch:      linux/amd64\n```\n\n```\nContainers: 30\nImages: 112\nStorage Driver: aufs\n Root Dir: /var/lib/docker/aufs\n Backing Filesystem: extfs\n Dirs: 172\n Dirperm1 Supported: true\nExecution Driver: native-0.2\nLogging Driver: json-file\nKernel Version: 3.19.0-26-generic\nOperating System: Ubuntu 15.04\nCPUs: 4\nTotal Memory: 11.62 GiB\nName: mg-mesos\nID: 7AES:SDZ5:WNYM:NM33:3FKF:SQK6:KYMM:DBXJ:DLGK:MN6L:WYRR:EFTI\nUsername: mgummelt\nRegistry: https://index.docker.io/v1/\nWARNING: No swap limit support\n```\n"},{"labels":[null,"documentation"],"text":"It would be useful to have a list of error codes and their corresponding cause. This could be in a tabular format such as:\n\n| Error Code | Meaning |\n| --- | --- |\n| NNN | Text |\n| NNN | Text |\n"},{"labels":["documentation",null],"text":"We currently have https://get.docker.com to get users up and running in \"no\" time, so that they can play around with Docker. Let's call it \"express install\".\n\nFor Linux, this is https://get.docker.com, for Windows and Mac users, we have Docker Toolbox, which (to me) fall in the same category; get users started quickly.\n\nHowever, the \"express install\" is in many cases _not_ suitable for production; we make many assumptions, and some settings we use are just to \"get it working\", but require manual configuration to be really useful (for example, the default device mapper configuration is not suitable for production).\n\nWe should point users to an \"advanced install\" section in the documentation, and _warn_ users that the \"express install\" should be reviewed before using in production.\n\nThe advanced install section in the documentation, should cover (or link to) - this is not a full list, just some initial thoughts;\n- Checking prerequisites (e.g., using `/contrib/check-config.sh`)\n- Pinning to a specific version of Docker\n- Picking, setting up, and configuring a graph driver (e.g. Setting up aufs)\n- Configuring daemon options (SysVinit, SystemD)\n- Picking, and configuring a default logging-driver\n- Securing Docker (Certificates, AppArmor, SeLinux)\n- Networking options and related (e.g. Certificates, Userland Proxy, FireWall issues)\n\nTL;DR; we should make it as easy as possible for people to get to \"play\" with Docker, but equally (if not more) important, we should explain that Docker uses advanced techniques; making optimum use of Docker _does_ require careful planning and configuration, and making informed decisions (e.g. The best graph driver for your situation). \n"},{"labels":["documentation"],"text":"In https://docs.docker.com/project/set-up-dev-env/ (Start a container and run a test, part 8)\n\nThe command line example has been updated to use `daemon` rather than `-d`:\n\n> `root@5f8630b873fe:/go/src/github.com/docker/docker#  docker daemon -D`\n\nBut the following explanation still refers to `-dD`, which was previously there\n\n> The -dD flag starts the daemon in debug mode. You’ll find this useful when debugging your code.\n"},{"labels":["documentation",null,null],"text":"The options for the `-v` flag on `docker run` seem to be lacking.\nSpecifically they only mention `rw` and `ro` as valid flags mean while there are also `z` and `Z`, which can be used independently or concatenated as such: `rw,Z`\n"},{"labels":["documentation"],"text":"I believe https://github.com/docker/docker/pull/14242 introduced a regression where if you run a container with an external volume, and then kill the docker daemon, any following usage of the volume results in system errors.\n\nIt looks like the volume name is recognized, but it does not try and mount the volume.\n\n```\n./docker -d --storage-driver=vfs &\n./docker run -ti --volume-driver=rexray -v testa15:/test busybox\nkill pid\n```\n\n```\n./docker -d --storage-driver=vfs &\n./docker run -ti --volume-driver=rexray -v testa15:/test busybox\nINFO[0003] POST /v1.21/containers/create                \nINFO[0003] POST /v1.21/containers/deb4b572c3fa950d16279d0e5485c7322e2b865f5f0d666a94a561f4140dfb4c/attach?stderr=1&stdin=1&stdout=1&stream=1 \nINFO[0003] POST /v1.21/containers/deb4b572c3fa950d16279d0e5485c7322e2b865f5f0d666a94a561f4140dfb4c/start \nTimestamp: 2015-08-27 07:18:29.736025403 +0000 UTC\nCode: System error\n\nMessage: stat /var/lib/docker/volumes/testa15/_data: no such file or directory\n\nFrames:\n\n---\n0: setupRootfs\nPackage: github.com/opencontainers/runc/libcontainer\nFile: rootfs_linux.go@37\n\n```\n\n```\n[root@mdm2 centos]# ./docker version\nINFO[0457] GET /v1.21/version                           \nClient:\n Version:      1.9.0-dev\n API version:  1.21\n Go version:   go1.4.2\n Git commit:   44ea7e9\n Built:        Thu Aug 27 07:14:12 UTC 2015\n OS/Arch:      linux/amd64\n```\n"},{"labels":["documentation",null,null],"text":"The build and run commands both have long sections of examples.  In run them come in the middle of the page in build they come at the end.\n- Standardize examples at the end of every page\n- Design a consistent structure for calling out \"categories of examples\" in these larger sections\n\nhttp://docs.docker.com/reference/commandline/build/\nhttp://docs.docker.com/reference/commandline/run/\n"},{"labels":["documentation",null],"text":"Hi,\n\nI have a graph driver related question.\n\nSuppose one wants to design and implement a graph driver for some new file system, what would be the general rule to do so? I mean, one can look into existing graph drivers (e.g., btrfs, aufs, zfs, vfs, devmapper, etc) to figure out interfaces and data structures for the new file system driver, but is there any driver specification doc available somewhere? It will make it easier to design new file system driver for docker.\n\nAny suggestions/comments would be helpful! Thanks.\n\nBest,\n"},{"labels":["documentation"],"text":"The Docker engine install steps on Ubuntu include a step to install linux-image-(uname -r), followed by a step to reboot the system.  (see: https://github.com/docker/docker/blob/master/docs/installation/ubuntulinux.md)\n\nHowever, the Docker install script (https://github.com/docker/docker/blob/master/hack/install.sh) automatically performs this step.\n\nCan we remove the instructions to manually install linux-image-\\* and to reboot?\n"},{"labels":["documentation"],"text":"The [Content trust in Docker](https://docs.docker.com/security/trust/content_trust/) docs state (my emphasis on creating):\n\n> Make sure you read [Manage keys for content trust](https://docs.docker.com/security/trust/trust_key_mng) information for details on **creating**, securing, and backing up your keys.\n\nBut there's nothing about creating keys on the [Manage keys for content trust](https://docs.docker.com/security/trust/trust_key_mng) page because they're actually created on the first push as per:\n\n> When you push your first tagged image with content trust enabled, the docker client recognizes this is your first push and:\n> - alerts you that it will create a new offline key\n> - requests a passphrase for the key\n> - generates an offline key in the ~/.docker/trust directory\n> - generates a tagging key for in the ~/.docker/trust directory\n\nIt would be beneficial if the key creation process was explained outside of the **Push trusted content** section.\n\nDocumentation issue - so not copying in version/info etc.\n"},{"labels":["documentation",null],"text":"There's a lot of work to do here :)\n"},{"labels":["documentation"],"text":"- Current installation docs for Toolbox don't show how to upgrade a vm\n- Should show after version information how to upgrade VM as opposed to install/upgrade Toolbox\n"},{"labels":["documentation"],"text":"Or at least give a kind doc. \nSolution in #9697 seems not quite working now.\nFeel free to close it if there is a dup. Yet i didn't find one.\n"},{"labels":["documentation"],"text":"Hi,\n\nThere is a mistake in documentation for windows installation, in the part to connect with putty (Login with PUTTY instead of using the CMD).\n\nWith DockerToolbox, RSA keys was not generated in **%USERPROFILE%.ssh\\id_boot2docker** but in **%USERPROFILE%.docker\\machine\\machines<nameOfYourMachin\\**\n\nThe file to be modify :\ndocker/docs/installation/windows.md\n\nThanks :)\n"},{"labels":["documentation",null],"text":"Found a dead link in logging run reference: docs.docker.com/reference/run/…\n"},{"labels":["documentation",null],"text":"- Replace any links to the files in /terms with links to reference/glossary.md\n- Remove the /terms directory\n"},{"labels":["documentation",null],"text":"Earlier a missing page(404) redirected to the homepage, now it shows the following error : \n\n![image](https://cloud.githubusercontent.com/assets/796949/9212494/2ae7cc8e-403e-11e5-811d-6c4a4d7846e5.png)\n"},{"labels":["documentation"],"text":"The CentOS installation instructions at https://docs.docker.com/docker/installation/centos/ (`docs/installation/centos.md`) suggest that after installing the package one should:\n\n```\n4. Start the Docker daemon.\n\n                $ sudo service docker start\n```\n\n`service` is a thin layer on top of systemctl on CentOS.  And starting a systemctl service is only half the job.  After a reboot, the service will be stopped again.  To make it run on every boot, it needs to be \"enabled\" as well:\n\n```\n    sudo systemctl enable docker\n    sudo systemctl start docker\n```\n"},{"labels":["documentation"],"text":"It's not clear from any documentation that I can find whether `docker run --rm` is equivalent to doing a `docker rm -v` on the created container. Caveat: I usually can't find the mustard in the fridge because I'm looking everywhere _except_ right in front of me.\n"},{"labels":["documentation",null,null],"text":"Someone came to me trying to understand how `--publish` worked, confused that `--publish 1234` wasn't publishing `1234` on the host. They had come from the builder `EXPOSE` documentation and had left confused.\r\n\r\n[This link is broken in the builder documentation is broken](https://github.com/docker/docker/blame/f3af9c8bdb68e5db7aaed7aec11aa2a78fd7e546/docs/reference/builder.md#L457).\r\n\r\nOr at least, it doesn't go where I think was intended. In addition, [the `docker run`](https://docs.docker.com/engine/reference/run/#expose-incoming-ports) documentation doesn't mention the long form of `-p` (`--publish`) at all. \r\n\r\nIf someone is new to docker trying to understand how port publishing works, the `EXPOSE` section in the `docker run` documentation is not as up front as it could be about how to control the host port. (likewise with the `EXPOSE` in the builder docs).\r\n\r\nI would have submitted a fix to just point the link to `/reference/run/#expose-incoming-ports` but then I realised that it wouldn't really fix the problem of explaining what `-p` is, and that this would mean repeating the same link many times, which I don't think would have made for very good documentation.\r\n\r\nSo I thought I would punt the problem to the documentation experts here - sorry! :)\r\n\r\n/cc @SvenDowideit\r\n"},{"labels":["documentation"],"text":"In particular, the CLI lacks a full description and syntax.\n"},{"labels":["documentation"],"text":"https://docs.docker.com/reference/api/docker_remote_api/\n\nThere is a state diagram under \"Docker Events\" and it looks okay on a large screen. However, on smaller screens (such as laptops), due to the page flow, the diagram can become too small to read.\n\nWould be nice from a UX perspective if there was a way to zoom-in / maximize the picture when clicked. :relaxed:\n"},{"labels":["documentation"],"text":"Docker labels are included in the json output for /containers/json (probably since docker 1.6), but there is no mention of this in the API. Please add/describe these expected fields.\n\nLink for reference: https://docs.docker.com/reference/api/docker_remote_api_v1.19/#list-containers\n"},{"labels":["documentation"],"text":"For openSUSE Tumbleweed there is a wrong path to 'Routing' menu in docker installation docs.  \nHere is the link: https://docs.docker.com/installation/SUSE/\n\n> \"If you want your containers to be able to access the external network you must enable the net.ipv4.ip_forward rule. This can be done using YaST by browsing to the Network Devices -> Network Settings -> Routing menu and ensuring that the Enable IPv4 Forwarding box is checked.\" \n\nIt's true for openSUSE 12.3, 13.1, 13.2 and also for SLES12, but for openSUSE Tumbleweed there is no 'Network devices' menu in YaST and 'Network settings' menu in 'System' menu of YaST. \nSo I believe that we need to add that information into docs. \n"},{"labels":["documentation"],"text":"Now we can do `docker rm $(docker ps -aq)` and ignore the errors if a container is running.\n\nBut it doesn't seem like a good solution.\n\nCould `docker rm --stopped` be a solution?\n\nAfter a lot of builds via Dockerfiles, many stopped, only used once containers are left in the system and takes up much space.\n\nThanks for looking into this.\n"},{"labels":["documentation"],"text":"Hi, would it be possible to display a page-title in the docs? When browsing the documentation with multiple tabs it is hard to distinguish which tab has which section open:\n\n![screen shot 2015-07-30 at 10 03 16](https://cloud.githubusercontent.com/assets/23406/8978403/3e8e8b74-36a2-11e5-8bb4-aca98146513e.png)\n"},{"labels":["documentation",null],"text":"The docs for 'docker run' should explain the `security-opts` flag.\n"},{"labels":["documentation",null],"text":"Hello,\n\nI have an hard time figuring out how to get the real remote ip of a client connecting to a (web) service inside a container which port is exposed to a port on the host.\n\nSo far the solution seems to be either one of:\n- use `--net=host`\n- disable the userland proxy\n- configure nginx on the host to forward the real ip address?\n\nHere are related issues:\n\nhttps://github.com/docker/docker/issues/7540\nhttps://github.com/jwilder/nginx-proxy/issues/130\nhttps://github.com/jwilder/nginx-proxy/issues/133\n\nNone of the current solutions seems to be \"right\" and they all seem temporary. Can you clarify/explain how things _should_ be, even if that means that the current docker 1.7.1 is bugged in that regard and that we have to use hack X or Y until things are fixed in 1.8.0.\n"},{"labels":["documentation",null],"text":"[Docs for API v1.19](https://docs.docker.com/reference/api/docker_remote_api_v1.19/#create-an-image) states that it is possible to specify `registry` query parameter:\n\n```\nQuery Parameters:\n    ...\n    registry – The registry to pull from.\n    ...\n```\n\nI'm trying to do so, but it's ignores registry parameter:\n\n```\n$ curl -v -XPOST --unix-socket /var/run/docker.sock \"http:/images/create?fromImage=bronislav/clsi-sharelatex:latest&registry=quay.io\"\n*   Trying /var/run/docker.sock...\n* Connected to http (/var/run/docker.sock) port 80 (#0)\n> POST /images/create?fromImage=bronislav/clsi-sharelatex:latest&registry=quay.io HTTP/1.1\n> Host: http\n> User-Agent: curl/7.42.1\n> Accept: */*\n>\n< HTTP/1.1 200 OK\n< Content-Type: application/json\n< Date: Tue, 28 Jul 2015 14:22:51 GMT\n< Transfer-Encoding: chunked\n<\n{\"status\":\"Pulling repository bronislav/clsi-sharelatex\"}\n{\"errorDetail\":{\"message\":\"Error: image bronislav/clsi-sharelatex:latest not found\"},\"error\":\"Error: image bronislav/clsi-sharelatex:latest not found\"}\n* Connection #0 to host http left intact\n```\n\nIf I move registry parameter to the image path than docker started to pull image:\n\n```\ncurl -v -XPOST --unix-socket /var/run/docker.sock \"http:/images/create?fromImage=quay.io/bronislav/clsi-sharelatex:latest\"\n*   Trying /var/run/docker.sock...\n* Connected to http (/var/run/docker.sock) port 80 (#0)\n> POST /images/create?fromImage=quay.io/bronislav/clsi-sharelatex:latest HTTP/1.1\n> Host: http\n> User-Agent: curl/7.42.1\n> Accept: */*\n>\n< HTTP/1.1 200 OK\n< Content-Type: application/json\n< Date: Tue, 28 Jul 2015 14:48:16 GMT\n< Transfer-Encoding: chunked\n<\n{\"status\":\"Pulling repository quay.io/bronislav/clsi-sharelatex\"}\n...\n{\"status\":\"Status: Image is up to date for quay.io/bronislav/clsi-sharelatex:latest\"}\n* Connection #0 to host http left intact\n```\n\nMy environment:\n\n```\n$ docker version\nClient version: 1.7.1\nClient API version: 1.19\nGo version (client): go1.4.2\nGit commit (client): 786b29d-dirty\nOS/Arch (client): linux/amd64\nServer version: 1.7.1\nServer API version: 1.19\nGo version (server): go1.4.2\nGit commit (server): 786b29d-dirty\nOS/Arch (server): linux/amd64\n```\n\n```\n$ docker info\nContainers: 2\nImages: 27\nStorage Driver: overlay\n Backing Filesystem: extfs\nExecution Driver: native-0.2\nLogging Driver: journald\nKernel Version: 4.0.9-coreos\nOperating System: CoreOS 752.1.0\nCPUs: 2\nTotal Memory: 7.341 GiB\nName: ip-10-5-3-181.empire\nID: 7APU:UBUI:7WEM:X5DL:BY7B:MQM6:4IAX:VZUN:2GZ4:LV7I:7PWI:42UC\n```\n\n```\n$ uname -a\nLinux ip-10-5-3-181.empire 4.0.9-coreos #2 SMP Thu Jul 23 20:22:11 UTC 2015 x86_64 Intel(R) Xeon(R) CPU E5-2670 v2 @ 2.50GHz GenuineIntel GNU/Linux\n```\n\nFurther investigation shows that this parameter simply ignored in the request handler. It's only takes in account `fromImage`, `repo` and `tag` parameters: [api/server/server.go#L729-L733](https://github.com/docker/docker/blob/master/api/server/server.go#L729-L733).\n"},{"labels":["documentation",null],"text":"In the Installation step 3.\n\n![image](https://cloud.githubusercontent.com/assets/1347209/8911222/e878495a-343f-11e5-8bbd-4109eb00cb37.png)\n"},{"labels":["documentation"],"text":"Under \"Creating a Dockerfile\", the last line is missing an indent\nhttps://docs.docker.com/docker-trusted-registry/quick-start/#creating-a-dockerfile\n\n```\n FROM jenkins\n\n #New plugins must be placed in the plugins file\n COPY plugins /usr/share/jenkins/plugins\n\n #The plugins.sh script will install new plugins\n RUN /usr/local/bin/plugins.sh /usr/share/jenkins/plugins\n\n #Copy private key and cert to image\n COPY https.pem /var/lib/jenkins/cert\n COPY https.key /var/lib/jenkins/pk\n\n #Configure HTTP off and HTTPS on, using port 1973\nENV JENKINS_OPTS --httpPort=-1 --httpsPort=1973 --httpsCertificate=/var/lib/jenkins/cert --httpsPrivateKey=/var/lib/jenkins/pk\n```\n\nIf someone can point out where the file is, I can fix.\n"},{"labels":["documentation",null],"text":"The FAQ on docs.docker.com has broken links. Need to fix them.\n"},{"labels":["documentation"],"text":"In your tutorial documentation on https://docs.docker.com/mac/step_four/ you have in steap 1.5:\n\nCMD /usr/games/fortunes -a | cowsay\n\nand then on step 2.2:\n\nCMD /usr/games/fortune -a | cowsay # Singular fortune\n\nThe 2nd example is correct.\n"},{"labels":["documentation"],"text":"Description of problem: The `docker run --user` documentation states:\n\n> The default user within a container is root (id = 0), but if the developer created additional users, \n> those are accessible too. \n\nThis is misleading, as it is possible to just pass an arbitrary uid:gid to `-u` and run using that. As stackoverflow is also full of suggestions to use `groupadd && useradd && sudo -u` tricks to achieve the same effect, it seems like many people fall for this.\n\n`docker version`: N/A, but https://docs.docker.com/reference/run/#user as of 2015-07-21 11:22 UTC shows this issue.\n\n`docker info`: N/A\n\n`uname -a`: N/A\n\nEnvironment details (AWS, VirtualBox, physical, etc.): Docker website\n\nHow reproducible: 100%\n\nSteps to Reproduce:\n1. Point browser at https://docs.docker.com/reference/run/#user\n2. Read misleading documentation\n3. Compare with what happens on `docker run debian:jessie /usr/bin/id 1000; docker run -u 1000 debian:jessie /usr/bin/id`\n\nActual Results:\n\n```\n/usr/bin/id: 1000: no such user\nuid=1000 gid=0(root) groups=0(root)\n```\n\nExpected Results:\n\n```\n/usr/bin/id: 1000: no such user\n# something blows up because no user with uid 1000 exists\n```\n\nAdditional info:\nThe actual behaviour is much more useful than what the documentation describes. The documentation should be updated accordingly.\n"},{"labels":["documentation",null,null],"text":"Upstart, Ubuntu's init replacement, listens on an \"abstract socket pathname\" AF_UNIX socket for commands.\n\n```\ndbus/upstart.h\n79:#  define DBUS_ADDRESS_UPSTART \"unix:abstract=/com/ubuntu/upstart\"\n```\n\nNormally, you'd expect AF_UNIX class sockets to be governed by filesystem isolation, same as a `chroot`.  However the \"abstract\" names seem to escape this restriction and instead use the networking restriction.  [This is documented as a way to bypass chroot security, for example](http://blog.eduardofleury.com/archives/2007/09/13)  This means that disabling network isolation gives a container effectively full control of your host, no matter what other restrictions you may place on it:\n\n```\nroot@mesos-slave9-qa-uswest2:~# docker run --net=host ubuntu reboot\nubuntu:latest: The image you are pulling has been verified. Important: image verification is a tech preview feature and should not be relied on to provide security.\nStatus: Downloaded newer image for ubuntu:latest\nFATA[0009] Error response from daemon: engine is shutdown\nroot@mesos-slave9-qa-uswest2:~# Connection to mesos-slave9-qa-uswest2.qasql.opentable.com closed by remote host.\nConnection to mesos-slave9-qa-uswest2.qasql.opentable.com closed.\n```\n\nWhile this may be \"working as designed\" from a kernel isolation standpoint, this is an extremely unintuitive behavior for end users and quite possibly a huge security problem.  In particular that within the class AF_UNIX there are some sockets which are governed by network isolation (those beginning with a magical '\\0') and some by filesystem isolation (the rest).  Some combination of the following may help:\n- [Upstart should not use confusing abstract sockets, but prefer filesystem sockets](https://bugs.launchpad.net/upstart/+bug/1476353)\n- Docker should control isolation of AF_UNIX class sockets separately from AF_INET and others (i.e. I want to share my host's network stack without allowing side channels to init)\n- A specific security rule blocking access to the `com/ubuntu/upstart` socket in particular.  Somewhat ugly, but maybe practical.\n\n```\nroot@mesos-slave6-qa-uswest2:~# docker version\nClient version: 1.6.2\nClient API version: 1.18\nGo version (client): go1.4.2\nGit commit (client): 7c8fca2\nOS/Arch (client): linux/amd64\nServer version: 1.6.2\nServer API version: 1.18\nGo version (server): go1.4.2\nGit commit (server): 7c8fca2\nOS/Arch (server): linux/amd64\nContainers: 8\nImages: 62\nStorage Driver: overlay\n Backing Filesystem: extfs\nExecution Driver: native-0.2\nKernel Version: 4.0.4\nOperating System: Ubuntu 14.04.2 LTS\nCPUs: 8\nTotal Memory: 29.45 GiB\nName: mesos-slave6-qa-uswest2\nID: DQ77:L5SM:2ZH6:NHRP:D72D:SIFN:XJDS:7H7Y:MHRR:UX4Y:HTWK:UVB6\n```\n"},{"labels":["documentation"],"text":"Found a few problems with this section:\nhttps://docs.docker.com/reference/builder/#environment-replacement\n\n> Note: prior to 1.3, Dockerfile environment variables were handled similarly, in that they would be replaced as described below. However, there was no formal definition on as to which instructions handled environment replacement at the time. After 1.3 this behavior will be preserved and canonical.\n> \n> ... there was no formal definition on as to which instructions handled environment replacement at the time\n> 1. This sentence doesn't make sense.\n\nDockerfile environment variables were handled similarly\n2. Similarly to what? Perhaps the note block should be moved after the explanation of Environment variable.\n\nPerhaps someone could review the Environment variable section and reorganize the material presented.\n"},{"labels":["documentation"],"text":"https://docs.docker.com/installation/ubuntulinux/\n\nUnder Installation, step 3, there are odd > characters in the paragraph:\n![screen shot 2015-07-18 at 6 39 52 am](https://cloud.githubusercontent.com/assets/679475/8761787/fae2db20-2d17-11e5-91b6-f9781c99b372.png)\n\nI think the > is used as quote in GitHub's markdown and does not render properly on the docs site.\nhttps://github.com/docker/docker/blob/master/docs/installation/ubuntulinux.md\n"},{"labels":["documentation"],"text":"The basic docs for swarm use `docker run swarm`, keeping it clear that the binary is in a container. The \"discovery\" section refers to `swarm` as a binary. The [swarm docs on GitHub](https://github.com/docker/swarm) show how to build the `swarm` binary, but this is not mentioned in docs.docker.com\n\nPlease pick one method and use that for all documentation or otherwise make it clear how to execute the commands.\n"},{"labels":["documentation"],"text":"Need to point to the reference/logging page from the logs.md page as per comments on this PR: https://github.com/docker/docker/pull/11485/files#diff-bf81424845bcab2902c9809e30dfe6e0\n\nAlso should update the page to point that other drivers have other options\n"},{"labels":[null,"documentation",null],"text":"As discussed in https://github.com/docker/docker/pull/13375#issuecomment-120170880, the [Docker Hub and Registry V1](https://github.com/docker/docker/blob/master/docs/reference/api/hub_registry_spec.md) API reference needs to be deprecated or rewritten.\n\nAdding this issue as a reminder, but there might be an overlap here with the distribution docs, so not sure what the best approach is here.\n\nAlso, technical guidance is needed here (https://github.com/docker/docker/pull/13375#issuecomment-120173326)\n\n/cc @moxiegirl @tiborvass @stevvooe \n"},{"labels":["documentation"],"text":"The recommanded installation procedure on Linux with `wget` is failing:\n\n```\nwget -qO- https://get.docker.com/ | sh\n```\n\nreturns no error (exit 0) but nothing happen either.\n\nTrying a simple `wget https://get.docker.com` reveals an SSL certificate verification issue:\n\n```\n--2015-07-15 10:44:50--  https://get.docker.com/\nResolving get.docker.com (get.docker.com)... 52.0.250.56, 52.6.66.251, 54.210.203.88\nConnecting to get.docker.com (get.docker.com)|52.0.250.56|:443... connected.\nERROR: cannot verify get.docker.com's certificate, issued by `/C=US/O=GeoTrust Inc./CN=RapidSSL SHA256 CA - G3':\n  Unable to locally verify the issuer's authority.\nTo connect to get.docker.com insecurely, use `--no-check-certificate'.\n```\n\nSo, unfortunately, passing the `--no-check-certificate` option to grab the script is the only way to go at the moment.\n"},{"labels":["documentation",null],"text":"User reports:\n\nhttps://docs.docker.com/articles/dockerfile_best-practices/#run-only-one-process-per-container implies that process=application=service which IMO may not be always true, WDYT?\n\n\"In almost all cases, you should only run a single process in a single container. Decoupling applications into multiple containers makes it much easier to scale horizontally and reuse containers. If that service depends on another service, make use of container linking.\"\n"},{"labels":["documentation",null],"text":"I thought they were already removed, we have talked about this in the past (can't remember who it was), and I thought we agreed we would remove the API docs, or at least mark as deprecated, so it wouldn't cause confusion.\n"},{"labels":["documentation"],"text":"https://docs.docker.com/articles/dockerfile_best-practices/\n\nI read the following suggestion a number of times and I don't quite understand what it means?\n\n> Don’t do RUN apt-get update on a single line. This will cause caching issues if the referenced archive gets updated, which will make your subsequent apt-get install fail without comment.\n1. Is it referring to Docker cache or apt cache?\n2. What referenced archive is it referring to?\n\nIt would be nice if this first bullet can be improved. For example, the information the 2nd bullet is clear.\n\nAlso, it is important to clarify the documentation because other people may be using yum package manager and needs to understand the mechanics of the RUN command to follow the best practices.\n"},{"labels":["documentation"],"text":"This issue transfer of https://github.com/docker/docs-base/issues/102\n\nFor me, it seems this link:\n\nhttp://docs.docker.com/installation/mac/\n\ndoesn't fully work.  When using nginx, the SSL ports are not working (can't curl, telnet, etc.)\n\nAlso, some of the commands like under section \"Mount a volume on the container\" step 5 don't show any wrapping, so unless you know to look, you miss part of the command.  Aka, I only see:\n\ndocker run -d -P -v $HOME/site:/usr/share/nginx/html --name\n\nWhen you should see\n\ndocker run -d -P -v $HOME/site:/usr/share/nginx/html --name mysite nginx\n\nClearly that could be a css browser issue, but in my latest Chrome, there is no eye candy to show the command goes long.\n\nRegards.\n\nRon \n"},{"labels":["documentation"],"text":"Version, Os, and KernelVersion are being returned even for `/v1.17/version` calls.\n\nRef: https://bugzilla.redhat.com/show_bug.cgi?id=1241699\n"},{"labels":["documentation",null],"text":"Hi,\n\nI spun up two Ubuntu 14.04 VMs in AWS, and on each, upgraded to the 3.18 kernel, installed docker, did a git clone https://github.com/docker/docker.git; followed by a make DOCKER_EXPERIMENTAL=1 . I then created a soft link to docker/bundles/1.8.0-dev/binary/docker-1.8.0-dev at /usr/bin/docker, effectively replacing the older docker that was installed.\n\nThen, I followed the instructions at https://github.com/docker/libnetwork/blob/master/docs/overlay.md, copy-pasting each instruction and replacing the IPs as applicable. Consul came up, docker daemons came up well on each node, and I was able to create services, networks, attach containers to services, etc, as described in the document.\n\nThe problem I'm seeing is that while pings between containers on the same host work fine, I'm not able to ping one container from another across the two hosts. \n\nAny idea why this doesn't work? I'll be testing libnetwork on my vagrant setup in a short while, and will update the bug with those results.\n\nThanks,\nRegards,\nVijay\n"},{"labels":["documentation"],"text":"Hello,\n\nOn this page: http://docs.docker.com/installation/mac/\n\nUnder this heading: \"From your command line\"\n\nStep 3: Display the environment variables for the Docker client.\n\nIt says to run 'boot2docker shellinit' to display your environment variables for the Docker client. It does not.\n\n> boot2docker shellinit \n> Writing /Users/rpetty/.boot2docker/certs/boot2docker-vm/ca.pem \n> Writing /Users/rpetty/.boot2docker/certs/boot2docker-vm/cert.pem \n> Writing /Users/rpetty/.boot2docker/certs/boot2docker-vm/key.pem \n> Your environment variables are already set correctly.\n\nThis might only be on fresh installs. I tried running boot2docker via the Mac 'applications', then I tried as the instructions say to start via the cli. In either case, it did not show the environment variables. If its only during the vary first time (like during initial set up, then maybe mention that.) Could be something else, not sure yet.\n\nRegards.\n\nRon\n"},{"labels":["documentation"],"text":"https://docs.docker.com/userguide/dockervolumes/\n\nUnder \"Adding a data volume\" you create a volume.  You then go to confirm it via the next section \"Locating a volume\".  When I run 'docker inspect web', I see similar output but not exact.  I see the following:\n\n```\n...\n    \"Volumes\": {\n        \"/webapp\": \"/mnt/sda1/var/lib/docker/volumes/d2c56f0880cb121190e0d5b50c98c57d241109f37139d995da55883b7955427b/_data\"\n    },\n    \"VolumesRW\": {\n        \"/webapp\": true\n    },\n...\n\"Volumes\": {\n            \"/webapp\": {}\n        },\n...\n```\n\nMight want to clarify when you scroll up to see results the first 'Volumes' is not the one showing in the article, you need to scroll further up to see the detailed ones.  The empty Volumes is under the 'Config' block.  I am not sure what it is or represents.  Might just want to add a warning about seeing that or explain what it is.\n\nRegards.\n\nRon\n"},{"labels":["documentation",null],"text":"Using the `docker.service` from here and creating a drop-in  `/etc/systemd/system/docker.service.d/override.conf` to tweak command line parameters (as documented at https://docs.docker.com/articles/systemd/)\n\n```\n[Service]                                                                                                                       \nExecStart=/usr/bin/docker -d -H fd:// --bip=172.17.42.1/16  \n```\n\nends up with systemd refusing to start the daemon:\n\n```\ndocker.service has more than one ExecStart= setting, which is only allowed for Type=oneshot services. Refusing. \n```\n\nWhat is the recommended way to tweak the daemon command-line?\n"},{"labels":["documentation"],"text":"The guide here on the docker documentation (https://docs.docker.com/articles/b2d_volume_resize/) suggests using the gparted livecd iso, however, the current version does not work. Others have experienced this problem too, see: https://gist.github.com/joost/a7cfa7b741d9d39c1307\n\nVersion of gparted livecd: gparted-live-0.22.0-2-i586.iso\nVersion of boot2docker:\nBoot2Docker-cli version: v1.6.0\nGit commit: 9894ae9\n"},{"labels":["documentation"],"text":"Please provide documentation on how to properly create a bind between the container and the host machine. \n"},{"labels":["documentation",null,null,null],"text":"While it's no secret I've been hugely against this feature since back when it was just a proposal/PR (#12528/#11034), upon further investigation, it seems that the feature was implemented without much understanding, as proven by the fact that it doesn't even work :-)\n\nOk, so first subject, it doesn't work (docker 1.7.0):\nI don't know where docker thinks it's setting the cgroup parameter to disable the oom killer, but it's not on the cgroup used by the container.\n\n```\n# docker run -i --privileged --oom-kill-disable fedora:20 bash <<'EOF' \nmount -n -t tmpfs -o uid=0,gid=0,mode=0755 cgroup /sys/fs/cgroup\nmkdir /sys/fs/cgroup/memory\nmount -n -t cgroup -o memory cgroup /sys/fs/cgroup/memory\nmemcgpath=\"/sys/fs/cgroup/memory/$(awk -F: '$2 == \"memory\" { print $3 }' < /proc/1/cgroup)\"\necho \"memcgpath=$memcgpath\"\ncat $memcgpath/memory.oom_control\nEOF\n\nmemcgpath=/sys/fs/cgroup/memory//system.slice/docker-dc1408974e62968ff7e73fe3206045a98a540a0f455d864677be5e9a47d76cc5.scope\noom_kill_disable 0\nunder_oom 0\n```\n\nSecondly, the cgroup oom_kill_disable setting only does anything if a cgroup memory limit is also in place. Currently nothing enforces or advises the oom-kill-disable option only be used in conjunction with a memory limit.\n\nThirdly, using this flag requires manual intervention if the container does hit an OOM condition. The flag does prevent the process from being killed, but the process hangs instead (goes into defunct state). This means manual intervention is required to either kill the process/container, or to increase the memory limits. If you want to increase the limits, you have to go mucking around in the cgroup filesystem. So realistically, the action to take here is to manually kill the container.\nTo compound this, the fact that the process has been sent defunct is not easily observable. From the perspective of someone using the docker client, the container is still running, the processes inside it are still there, they just stop responding.\n\n&nbsp;\n\nHere's a little test container I created for this: [phemmer/do-oom](https://registry.hub.docker.com/u/phemmer/do-oom/) ([github](http://github.com/phemmer/docker-do-oom))\nThe container runs a process which allocates 20gb of memory, and then tries to use that 20gb (which invokes OOM).\n**NOTE**: I do not advise running this container on a system which you care about. The OOM killer is very indiscriminate, and can kill anything. Also don't run it on a system with swap enabled, or the entire system will likely come grinding to a halt.\n\nThe first example, we run the container with oom killer (supposedly) disabled:\n\n```\n# docker run -ti --oom-kill-disable do-oom \nmallocs complete\nUsed 0 bytes\nUsed 104857600 bytes\nUsed 209715200 bytes\nUsed 314572800 bytes\nUsed 419430400 bytes\nUsed 524288000 bytes\nUsed 629145600 bytes\nUsed 734003200 bytes\nUsed 838860800 bytes\nUsed 943718400 bytes\nUsed 1048576000 bytes\nUsed 1153433600 bytes\nUsed 1258291200 bytes\nUsed 1363148800 bytes\nUsed 1468006400 bytes\nUsed 1572864000 bytes\nUsed 1677721600 bytes\nUsed 1782579200 bytes\nUsed 1887436800 bytes\nUsed 1992294400 bytes\nUsed 2097152000 bytes\nUsed 2202009600 bytes\nUsed 2306867200 bytes\nKilled\n#\n```\n\nHere we see the container was killed due to OOM.\n\n&nbsp;\n\nNow we set a limit of 500M\n\n```\n# docker run -ti --oom-kill-disable -m 500M do-oom \nmallocs complete\nUsed 0 bytes\nUsed 104857600 bytes\nUsed 209715200 bytes\nUsed 314572800 bytes\nUsed 419430400 bytes\nKilled\n#\n```\n\n&nbsp;\n\nNow lets run it with the fix enabled, but no memory limit:\n\n```\n# docker run -ti --oom-kill-disable --privileged do-oom fix do-oom\nmallocs complete\nUsed 0 bytes\nUsed 104857600 bytes\nUsed 209715200 bytes\nUsed 314572800 bytes\nUsed 419430400 bytes\nUsed 524288000 bytes\nUsed 629145600 bytes\nUsed 734003200 bytes\nUsed 838860800 bytes\nUsed 943718400 bytes\nUsed 1048576000 bytes\nUsed 1153433600 bytes\nUsed 1258291200 bytes\nUsed 1363148800 bytes\nUsed 1468006400 bytes\nUsed 1572864000 bytes\nUsed 1677721600 bytes\nUsed 1782579200 bytes\nUsed 1887436800 bytes\nUsed 1992294400 bytes\nUsed 2097152000 bytes\nUsed 2202009600 bytes\nUsed 2306867200 bytes\nUsed 2411724800 bytes\n#\n```\n\nStill was killed\n\n&nbsp;\n\nNow we run it with a memory limit, and the fix enabled:\n\n```\n# docker run -ti --oom-kill-disable -m 500M --privileged do-oom fix do-oom \nmallocs complete\nUsed 0 bytes\nUsed 104857600 bytes\nUsed 209715200 bytes\nUsed 314572800 bytes\nUsed 419430400 bytes\n```\n\nHere the process just hangs as it's gone defunct. CTRL+C doesn't work, and we have to detach & kill the container.\n\n---\n\n```\n# docker version\nClient version: 1.7.0\nClient API version: 1.19\nGo version (client): go1.4.2\nGit commit (client): 0baf609\nOS/Arch (client): linux/amd64\nServer version: 1.7.0\nServer API version: 1.19\nGo version (server): go1.4.2\nGit commit (server): 0baf609\nOS/Arch (server): linux/amd64\n\n# docker info\nContainers: 107\nImages: 376\nStorage Driver: btrfs\nExecution Driver: native-0.2\nLogging Driver: json-file\nKernel Version: 3.18.1-gentoo\nOperating System: Gentoo/Linux\nCPUs: 4\nTotal Memory: 7.512 GiB\nName: gadget\nID: KLI3:BPWQ:CK45:NJCL:ULCH:BV6Z:XDFM:YKTZ:EZ7D:UBE7:ZQCK:HOGN\nUsername: phemmer\nRegistry: https://index.docker.io/v1/\n\n# uname -a\nLinux gadget 3.18.1-gentoo #1 SMP Sun Dec 21 12:15:16 EST 2014 x86_64 Intel(R) Core(TM) i7-3517U CPU @ 1.90GHz GenuineIntel GNU/Linux\n```\n"},{"labels":["documentation"],"text":"In the [Dockerfile best practices](https://docs.docker.com/articles/dockerfile_best-practices/) documentation, we read:\n\n> In the case of the ADD and COPY instructions, the contents of the file(s) being put into the image are examined. Specifically, a checksum is done of the file(s) and then that checksum is used during the cache lookup. If anything has changed in the file(s), including its metadata, then the cache is invalidated.\n\nThe first sentence is incomplete and misleading, _files_, _files contents_, and _files contents and metadata_ are used interchangeably, but there is actually only the latter. The purpose of mentioning the checksum is unclear, and mentioning it breaks the logical connection between the first and and the third sentence. A better wording would be:\n\n> In the case of the ADD and COPY instructions, the files being put into the image are examined and if anything has changed in their contents or their metadata, then the cache is invalidated. The comparison mechanism actually uses a checksum deduced from the files contents and metadata. Therefore, in some extremely rare occurrences, some cache entry might not be invalidated as expected.\n\n---\n\n```\ndocker version:     Not relevant,\ndocker info:          this is about \nuname -a:                   the website\n```\n"},{"labels":["documentation",null],"text":"YOu have a dangling link in line 80 of docs/reference/commandline/run.md:\n\n```\nThe `docker run` command can be used in combination with `docker commit` to\n[*change the command that a container runs*](#commit-an-existing-container).\n```\n\nThis should probably point to docs/reference/commandline/commit.md,\nbut I'm not sure exactly how that link should look (there didn't seem\nto be any examples in the existing run.md document).\n\nIdentified here: https://github.com/docker/docker/pull/13987\n"},{"labels":["documentation",null],"text":"docs/userguide/dockervolumes.md\n\nSee https://github.com/docker/docker/pull/14235 for discussion\n"},{"labels":["documentation",null,null],"text":"We have a document for reference/run which looks like it might be better suited as  a \"how to use run\" and the commandline/run.md file which is actually a reference.\n\nNeed to take a closer look and see what the intention was in the original design and solve it.\n\n![image](https://cloud.githubusercontent.com/assets/1347209/8503836/a61aa1de-217a-11e5-92bc-2c79777e6505.png)\n"},{"labels":["documentation"],"text":"I am confused about how dockerignore works.  I think it needs a more formal specification, and/or the examples should get into tricky cases more.  Here is a slightly pedantic list of some unclear things in the online documentation:\n\n\"Filepaths in .dockerignore are absolute with the current directory as the root.\"  Yet in the example .dockerignore file you give, either all or some of the patterns only match relative paths (depending on whether a leading asterisk can match the empty string).  I think what is meant is that filepaths are interpreted relative to the current directory but as if a chroot command had made that directory the root?\n\n\"the search is not recursive\".  What does this mean?\n\n\"Globbing (file name expansion) is done using Go’s filepath.Match rules.\"  In the linked documentation, we read that asterisk \"matches any sequence of non-Separator characters\" (which means characters other than '/'?) and that \"Match requires pattern to match all of name, not just a substring\".  Yet in the example file, you say that the pattern \"*.md\" will exclude all markdown files.  All four of these claims can't be true.\n\n\"Formats like [^temp*] are ignored.\"  I don't understand what this means. Is it a qualification of the claim that globbing is done using Go's filepath.Match rules?\n"},{"labels":["documentation"],"text":"People are using `https://get.docker.com/ubuntu/` to install docker and end up with problems because it does not install aufs (Example : https://github.com/docker/docker/issues/14204). https://get.docker.com/ubuntu/ should just redirect to `https://get.docker.com/`, so that people install docker on ubuntu correctly.\n\nCC : @moxiegirl @thaJeztah @jfrazelle \n"},{"labels":["documentation"],"text":"Is there a documentation/specification available about the stream format returned by accessing the `GET /containers/(id)/logs` endpoint of the REST API?\n\nIt looks like each line is prefixed with `8 bytes` of binary data, which might encode line length, a time code, line codes, char offsets, or ... but I haven't found any documentation about that format (at least not in the [docker remote api v1.19 docs](https://docs.docker.com/reference/api/docker_remote_api_v1.19/)).\n\nI am running:\n\n```\nDocker version 1.7.0, build 0baf609\n```\n\nE.g.: running this request:\n\n```\ncurl \"http://localhost:2375/containers/8c579/logs?follow=true&stderr=true&stdout=true&timestamps=true\"\n```\n\ngives this result (note the garbage characters in front of the time stamps):\n\n``````\n☺      ½2015-06-25T18:10:22.916242788Z 1:C 25 Jun 18:10:22.914 # Warning: no config file specified, using the default config. In order to specify a config file use redis-server /path/to/redis.conf\n☺      e2015-06-25T18:10:22.921992353Z                 _._\n☺      e2015-06-25T18:10:22.922012790Z            _.-``__ ''-._\n☺      g2015-06-25T18:10:22.922020284Z       _.-``    `.  `_.  ''-._           Redis 3.0.2 (00000000/0) 64 bit\n☺      e2015-06-25T18:10:22.922026895Z   .-`` .-```.  ```\\/    _.,_ ''-._\n☺      b2015-06-25T18:10:22.922033469Z  (    '      ,       .-`  | `,    )     Running in standalone mode\n☺      R2015-06-25T18:10:22.922039644Z  |`-._`-...-` __...-.``-._|'` _.-'|     Port: 6379\n☺      N2015-06-25T18:10:22.922045827Z  |    `-._   `._    /     _.-'    |     PID: 1\n☺      e2015-06-25T18:10:22.922052038Z   `-._    `-._  `-./  _.-'    _.-'\n☺      e2015-06-25T18:10:22.922057983Z  |`-._`-._    `-.__.-'    _.-'_.-'|\n☺      e2015-06-25T18:10:22.922064221Z  |    `-._`-._        _.-'_.-'    |           http://redis.io\n☺      e2015-06-25T18:10:22.922070404Z   `-._    `-._`-.__.-'_.-'    _.-'\n☺      e2015-06-25T18:10:22.922078420Z  |`-._`-._    `-.__.-'    _.-'_.-'|\n☺      e2015-06-25T18:10:22.922084460Z  |    `-._`-._        _.-'_.-'    |\n☺      e2015-06-25T18:10:22.922090389Z   `-._    `-._`-.__.-'_.-'    _.-'\n☺      e2015-06-25T18:10:22.922096333Z       `-._    `-.__.-'    _.-'\n☺      e2015-06-25T18:10:22.922102155Z           `-._        _.-'\n☺      e2015-06-25T18:10:22.922108076Z               `-.__.-'\n☺       2015-06-25T18:10:22.922113903Z\n☺      ]2015-06-25T18:10:22.923169420Z 1:M 25 Jun 18:10:22.923 # Server started, Redis version 3.0.2\n``````\n"},{"labels":["documentation"],"text":"https://docs.docker.com/reference/run/\n\nThe table format is messy after the paragraph shown as below.\n\n> In addition to --privileged, the operator can have fine grain control over the capabilities using --cap-add and --cap-drop. By default, Docker has a default list of capabilities that are kept. The following table lists the Linux capability options which can be added or dropped.\n\nI have checked other tables in `run` reference - **markdown** issue - has been converted to **html** format. \n"},{"labels":["documentation"],"text":"`Docker version 1.6.2, build 7c8fca2`\n\nFrom documentation:\nhttps://docs.docker.com/reference/builder/#volume\n\n> The `docker run` command initializes the newly created volume with any data that exists at the specified location within the base image.\n\n(1) This works as excepted:\n\n```\nRUN mkdir -p /foo/bar && touch /foo/bar/test.txt\nVOLUME /foo/bar\n```\n\n(2) but this not:\n\n```\nVOLUME /foo/bar\nRUN touch /foo/bar/test.txt\n```\n\nFile in image is created successfully, but when container is created `/foo/bar` becomes empty.\nStrangely, (2) seems to work when `VOLUME` part is taken from cache, and `RUN` part is freshly appended to Dockerfile. But full rebuild of image breaks this.\n\n---\n\nBUG REPORT INFORMATION\n\nUse the commands below to provide key information from your environment:\n\ndocker version:\n\n```\ndocker@boot2docker:~$ docker version\nClient version: 1.6.2\nClient API version: 1.18\nGo version (client): go1.4.2\nGit commit (client): 7c8fca2\nOS/Arch (client): linux/amd64\nServer version: 1.6.2\nServer API version: 1.18\nGo version (server): go1.4.2\nGit commit (server): 7c8fca2\nOS/Arch (server): linux/amd64\n```\n\ndocker info:\n\n```\ndocker@boot2docker:~$ docker info\nContainers: 13\nImages: 195\nStorage Driver: aufs\n Root Dir: /mnt/sda1/var/lib/docker/aufs\n Backing Filesystem: extfs\n Dirs: 221\n Dirperm1 Supported: true\nExecution Driver: native-0.2\nKernel Version: 4.0.3-boot2docker\nOperating System: Boot2Docker 1.6.2 (TCL 5.4); master : 4534e65 - Wed May 13 21:24:28 UTC 2015\nCPUs: 2\nTotal Memory: 1.957 GiB\nName: boot2docker\nID: EDZ6:D6NA:EKMP:HL4L:LUQ3:MGLZ:CAEW:EXEZ:HPJU:Q7RT:3CL3:TBNI\nDebug mode (server): true\nDebug mode (client): false\nFds: 54\nGoroutines: 88\nSystem Time: Sat May 30 08:05:47 UTC 2015\nEventsListeners: 1\nInit SHA1: 7f9c6798b022e64f04d2aff8c75cbf38a2779493\nInit Path: /usr/local/bin/docker\nDocker Root Dir: /mnt/sda1/var/lib/docker\n```\n\nuname -a:\n\n```\ndocker@boot2docker:~$ uname -a\nLinux boot2docker 4.0.3-boot2docker #1 SMP Wed May 13 20:54:49 UTC 2015 x86_64 GNU/Linux\n```\n\nProvide additional environment details (AWS, VirtualBox, physical, etc.):\n- VirtualBox, boot2docker\n\nList the steps to reproduce the issue:\nDescribe the results you received:\nDescribe the results you expected:\nSee above.\n\n----------END REPORT ---------\n# ENEEDMOREINFO\n"},{"labels":["documentation"],"text":"Here is what you get when you search in the docker repo for the string `\"VolumesFrom\"`: https://github.com/docker/docker/search?utf8=%E2%9C%93&q=VolumesFrom\n\nThe issue is that most of the response formats ascribed to docker inspect say that the endpoint will return something like\n\n`\"VolumesFrom\":\"\"`\n\nThis is untrue - as of docker 1.7 (and probably much earlier), docker returns either `null` or something like `[\"contrainerid\"]` as the value for that key.\n\nThe tricky part is that early docker (1.0) used to accept a string as input for `VolumesFrom` in the remote api, before a change (maybe around 1.4?) had it take an array instead. I'm not sure when both the input and output changed, but someone more knowledgeable should probably retroactively correct the documentation thereof.\n\nI stumbled across this issue because docker 1.7's remote API started **throwing errors** when passed string values for `VolumesFrom` - it used to silently accept the empty string as a valid input. I don't count this as a bug, but it was certainly surprising.\n\n_As an aside there has GOT to be a better way to arrange all of these docs besides a series of increasingly large and self-contradictory markdown files._\n"},{"labels":["documentation",null,null,null],"text":"Using this issue to solicit feedback on the exciting new networking experimental features introduced during the Docker 1.7 / 1.8 release time-frame.\nhttps://github.com/docker/docker/blob/master/experimental/networking.md\n"},{"labels":["documentation"],"text":"I'm a newbie and trying to contribute. Where I could find the docs file for getting started for linux https://docs.docker.com/linux/started/\nand the getting started link in https://docs.docker.com/linux/started/ is broken\n"},{"labels":["documentation"],"text":"docs/reference/run.md in section \"Overriding Dockerfile image defaults\" implies that the docker run --expose option overrides the EXPOSE command in a Dockerfile. It does not. docker run --expose simply adds to the list of exposed ports. It does not override the Dockerfile EXPOSE list of ports.\n\nIf you think this is trivial, this actually cost me a cycle, because I _assumed_ from the doc that I could put an EXPOSE command in the Dockerfile, and override it later. \n\nThere should be a --unexpose option but that's a different issue. This issue is just about correcting the doc.\n"},{"labels":["documentation"],"text":"According to the [documentation](https://docs.docker.com/userguide/dockervolumes/#data-volumes), new volumes should be initialized with the contents of the base image in the volume location.\n\nThis indeed works when running `docker -v /path/inside/container ...`, but not when running `docker -v /path/on/host:/path/inside/container ...`.\n\nThe documentation doesn't mention there should be a different behavior, so we should either:\n1. Update the documentation to mention that the behavior is different when the volume is bound to a host directory\n2. Find a way to initialize the volume when binding it to a host directory. Perhaps if the host directory does not initially exist, or with an extra `docker` flag?\n"},{"labels":["documentation",null],"text":"Setting pid=host or ipc=host sets the \"disabled\" selinux policy. This should be documented (or fixed), as it is neither obvious nor apparent. A warning message on usage may also be appropriate.\n\nVerified in 1.7.0-rc2\n"},{"labels":["documentation"],"text":"For the Fedora 21 and later installation instructions, I was thinking that updating the instructions to reflect the dnf update in Fedora 22 would be useful and helpful to users. \n"},{"labels":["documentation",null],"text":"According to the now (official) dockerbench rule [#2.7](https://benchmarks.cisecurity.org/tools2/docker/CIS_Docker_1.6_Benchmark_v1.0.0.pdf) \"`2.7 Do not use the aufs storage driver`\" Its seems recommended to just use the devicemapper. Shouldn't the [magic install url](https://get.docker.io/) reflect this and _not_ install the -extra linux image packages in order to allow for AUFS?\n\nI'd say just dropping the aufs packages and requirements for (at least) Ubuntu 14.04+ would suffice?\n\nThanks!\n"},{"labels":["documentation",null],"text":"Was running through the tutorial and accidentally did:\n`docker run learn/ping www.google.com`\n\ninstead of\n`docker run learn/ping ping www.google.com` (as the answer states)\n\nMy mistake validated as a incorrect answer in the emulator with a popup claiming it was correct.\n\n![dockerissue](https://cloud.githubusercontent.com/assets/1414307/7973411/ff3fcb82-0a22-11e5-90ce-eeb4faefaa8a.png)\n"},{"labels":["documentation"],"text":"He reports a TLS error and suggests the work around is to start the daemon directly.  Using 14.04.2 \n\nhttps://plus.google.com/116544552139899093398/posts/NFE4ubBAabo\n"},{"labels":["documentation"],"text":"The MAINTAINERS file says all decisions can be expressed as a pull request (https://github.com/docker/docker/blob/master/MAINTAINERS#L76). But I was unable to find any documentation explaining the release cadence (when is a minor as in semver's MAJOR.MINOR.PATCH). The closes thing I could find was https://github.com/docker/docker/blob/master/project/RELEASE-CHECKLIST.md which discusses what to do once you know you are working on making a release\n"},{"labels":["documentation",null],"text":"As of https://github.com/docker/docker/commit/1df87b95066198c30312147393c18e0be0564fd0 the `create container` remote api endpoint still accepts a `HostConfig` as POST body, but a [code comment indicates](https://github.com/docker/docker/blob/master/daemon/start.go#L27) that the HostConfig should only be used for `start container`.\n\nThe relevant docs produced some confusion (see #13466) after the request body description had been removed and [added](https://github.com/docker/docker/commit/ac12c8053779d36409e248f41c4d80ef0e4fbe9f) again.\n\nI propose to explictly indicate in the docs that the HostConfig is only allowed on `start container` for backwards compatibility.\n"},{"labels":["documentation"],"text":"![image](https://cloud.githubusercontent.com/assets/1347209/7888740/8df9e62e-05ef-11e5-8d55-c67425ba7039.png)\n"},{"labels":["documentation"],"text":"@moxiegirl can we add @justone tool to documentation somewhere and reference to docker images.\n@justone Thank you! This is so cool!\n\nSee https://github.com/docker/docker/pull/12333\n"},{"labels":["documentation"],"text":"A little email just to tell you that the documentation about installing Docker on Debian Jessie (https://docs.docker.com/installation/debian/) is not up-to-date as it seems that the docker.io does not exist anymore in backports.\n\nThe installation through wget -qO- https://get.docker.com/ | sh works though. I would just add a mention about systemctl enable docker to have Docker starts at each machine start.\n\nKind regards,\nPhilippe\n"},{"labels":["documentation",null,null],"text":"doc: docker images should explain repository column and when none. Or provide a link to where these are explained.\n\nhttps://docs.docker.com/reference/commandline/cli/#images\n\n`docker images` starts \"The default docker images will show all top level images, their repository and tags, and their virtual size.\"  It goes on to do a good job of explaining the last item \"virtual size\".\n"},{"labels":["documentation",null],"text":"---- TRIAGE -----\n\n**Problem:** Systemd is not supported on RHEL6 kernels (and this won't be fixed). As such containers which include systemd will not work.\n\n**Resolution:** Update docs to reflect issues attempting to run systemd based images on kernels < 3.8\n\n---- END TRIAGE ----\n\nHi,\n\nthis is more a documentation / information related problem:\n\n\"Develop, Ship and Run Any Application, Anywhere\" NOT true for:\n- Anywhere = [Redhat | CentOS] 6) AND\n- Application dependent on systemd\n\nThis should be at least mentioned in the [install description](https://docs.docker.com/installation/rhel/) for RH6.\n\n_In our case we realized this only when we wanted to deploy ready, working containerized Apps to production at a customer. Their operations and security departments disallows major Kernel or OS upgrades so we have a real problem - which bit us unexpectedly, due to the claim that the docker enabled series 2 RH kernel is fine._\n# Description of problem:\n\nAny systemd enabled container can't start on RH 6, with systemd as Pid 1\n- With --privileged or without\n- With -e 'container:docker' or without\n\nThe root cause is the missing /sys/fs/cgroup interface of the kernel - which can't be created there (sysfs) - allthough all cgroups are actually supported, mounted to /cgroup\n\nI'm clear that docker supports the one container per process approach but for various reasons (many legacy) we require a full init system - and systemd is the default in Linux these days.\n## `docker version`:\n\nTried 1.3.0 and also Docker version 1.6.2, build 7c8fca2\n## `docker info`:\n\n[root@ip-172-30-0-24 ~]# docker info\nContainers: 19\nImages: 11\nStorage Driver: devicemapper\n Pool Name: docker-202:80-3145731-pool\n Pool Blocksize: 65.54 kB\n Backing Filesystem: extfs\n Data file:\n Metadata file:\n Data Space Used: 2.375 GB\n Data Space Total: 107.4 GB\n Data Space Available: 105 GB\n Metadata Space Used: 2.879 MB\n Metadata Space Total: 2.147 GB\n Metadata Space Available: 2.145 GB\n Udev Sync Supported: false\n Library Version: 1.02.82-git (2013-10-04)\nExecution Driver: native-0.2\nKernel Version: 2.6.32-504.el6.x86_64\nOperating System: <unknown> (containerized)\nCPUs: 1\nTotal Memory: 994.7 MiB\nName: ip-172-30-0-24.eu-west-1.compute.internal\nID: IZBN:IMN5:OGHI:L2LQ:IVB7:RBPC:7KPS:KKSW:ZKZF:SHMD:EPNF:ABXB\n## `uname -a`:\n\nLinux ip-172-30-0-24.eu-west-1.compute.internal 2.6.32-504.el6.x86_64 #1 SMP Tue Sep 16 01:56:35 EDT 2014 x86_64 x86_64 x86_64 GNU/Linux\n## Environment details (AWS, VirtualBox, physical, etc.):\n\n[root@ip-172-30-0-24 ~]# cat /etc/redhat-release\nRed Hat Enterprise Linux Server release 6.6 (Santiago)\nReproduced on AWS (ami-9cfd53eb)\n\nOn customer site its in vmware server.\n## How reproducible:\n\n100% \n## Steps to Reproduce:\n\nWe tried various ways. Here the most naive ones:\n\na) # docker run -ti --privileged -e \"container=docker\" debian:jessie  /sbin/init\n-> Failed to mount tmpfs at /sys/fs/cgroup: No such file or directory\n\nb) # docker run -ti --privileged -e \"container=docker\" -v '/cgroup:/sys/fs/cgroup' debian:jessie  /sbin/init\n-> FATA[0000] Error response from daemon: Cannot start container 3c37ba2028310fcfbe7fa3e8f8f084ecb28670d7b1566e4865d3c9ff0eeca590: [8] System error: mkdir /var/lib/docker/devicemapper/mnt/3c37ba2028310fcfbe7fa3e8f8f084ecb28670d7b1566e4865d3c9ff0eeca590/rootfs/sys/fs/cgroup: no such file or directory\n\nc) # ./docker-1.3.0 run -t -i --privileged --lxc-conf=\"lxc.mount.auto = proc:rw sys:rw cgroup-full:mixed\" -e 'container=docker' debian:jessie  /sbin/init\n-> Failed to mount tmpfs at /sys/fs/cgroup: No such file or directory\n\nd) # ./docker-1.3.0 run -it --privileged cloudbees/archbase\n-> Failed to mount tmpfs at /sys/fs/cgroup: No such file or directory\n\ne) # ./docker-1.3.0 run -it cloudbees/archbase\n-> Failed to mount tmpfs at /run: Operation not permitted\n## Expected Results:\n\nsystemd as pid1 inside (as working with ubuntu as base OS or also when we upgrade the kernel according to http://nareshv.blogspot.com/2014/02/installing-docker-08-version-on-centos.html  (which is not allowed in production))\n## Additional info:\n- https://github.com/jpetazzo/dind/issues/17\n- http://developerblog.redhat.com/2014/05/05/running-systemd-within-docker-container/ (which is only working on RH7)\n- https://registry.hub.docker.com/u/offlinehacker/nixos/ (does also not work)\n\nIn general I want to say that the problem is **not a bug in docker as such**. Since it is also not possible to get systemd up on RH6 using lxc.\n\nBut it should be made very clear to users of dockers that their containers can't work on default RH 6 - if systemd is used as init system inside.\n\nPS: If there is any workaround whatsoever (dind?) I would be very happy if I'm proven wrong with the main claim of this issue.\n"},{"labels":["documentation"],"text":"I've checked docker --version before and after running the command and I still have version `Docker version 1.5.0, build a8a31ef`\n\n```\nwget -N https://get.docker.com/ | sh\n--2015-05-15 11:09:03--  https://get.docker.com/\nResolving get.docker.com (get.docker.com)... 162.242.195.82\nConnecting to get.docker.com (get.docker.com)|162.242.195.82|:443... connected.\nHTTP request sent, awaiting response... 200 OK\nLength: 7452 (7.3K) [text/plain]\nSaving to: ‘index.html’\n\n100%[===============================================================================================================================================================================>] 7,452       --.-K/s   in 0s\n\n2015-05-15 11:09:04 (1.46 GB/s) - ‘index.html’ saved [7452/7452]\n```\n\n```\n#uname -a\nLinux UBUNTU4117V 3.13.0-49-generic #83-Ubuntu SMP Fri Apr 10 20:11:33 UTC 2015 x86_64 x86_64 x86_64 GNU/Linux\n```\n\n```\n# docker info\nContainers: 0\nImages: 129\nStorage Driver: aufs\n Root Dir: /var/lib/docker/aufs\n Backing Filesystem: extfs\n Dirs: 129\nExecution Driver: native-0.2\nKernel Version: 3.13.0-49-generic\nOperating System: Ubuntu 14.04.2 LTS\nCPUs: 2\nTotal Memory: 15.67 GiB\nName: UBUNTU4117V\nID: QTIT:JXGL:A6XO:7YXZ:5LKY:PCKL:EG7T:FD4A:CZID:UE72:A77K:3WAY\nWARNING: No swap limit support\n```\n"},{"labels":["documentation"],"text":"The docker-pull man page usage line is missing an entry for alternate registries.  Right now it looks like:\n\ndocker pull [-a|--all-tags[=false]] [--help] NAME[:TAG]\n\nbut should probably look like:\n\ndocker pull [-a|--all-tags[=false]] [--help] [REGISTRY_HOST[:REGISTRY_PORT]/]NAME[:TAG]\n\nThe docker-push man page has a more correct usage line which includes alternate registries, but it's a little misleading because it looks like:\n... NAME[:TAG] | [REGISTRY_HOST[:REGISTRY_PORT]/]NAME[:TAG]\n"},{"labels":["documentation",null,null],"text":"Windows installation step 2 has a typo change \"or Windows\" to \"for Windows\"\n"},{"labels":["documentation"],"text":"I'm not sure where the problem lies, but the upgrade documentation for Ubuntu is messed up.\n\nHere's what the docs say at (http://docs.docker.com/installation/ubuntulinux/#upgrade-docker):\n\n```\nUpgrade Docker\nTo install the latest version of Docker, use the standard -N flag with wget:\n\n$ wget -N https://get.docker.com/ | sh\n```\n\nExecuting this command when you have Docker installed does nothing - it simply downloads the contents of https://get.docker.com/index.html and saves it in the current directory as `index.html`.\n\nIf you execute the downloaded script, you get a warning message:\n\n```\nWarning: \"docker\" or \"lxc-docker\" command appears to already exist.\nPlease ensure that you do not already have docker installed.\nYou may press Ctrl+C now to abort this process and rectify this situation.\n```\n\nBeing the cautious sort, I cancelled, then attempted to uninstall (via `apt-get purge`) docker before proceeding. This worked.\n\nBut I don't know if I needed to do that. The warning above seems to indicate that I did need to, but I wouldn't know that from the documentation.\n\nFirst,\n\nThe command given in the documentation needs to be changed,\n\nthen either:\n1. the documentation needs to advise users to uninstall docker before attempting to upgrade, or\n2. the warning message in the install script needs to be amended (or dropped) if it's not accurate\n\nThanks\n"},{"labels":["documentation",null],"text":"Hi,\n\nI've look a bit at the label documentation, the `labels-custom-metadata.md` file (and it [online version](https://docs.docker.com/userguide/labels-custom-metadata/)) and it seems something has not been updated — or at least it is not working.\n\nAssuming 4fa6e0f0c678 is a container, the command specified in the document won't work as expected.\n\n``` bash\n$ docker inspect -f \"{{json .Labels }}\" 4fa6e0f0c678\nnull\n$ docker inspect -f \"{{json .Config.Labels }}\" 4fa6e0f0c678\n{\"Vendor\":\"ACME Incorporated\",\"com.example.is-beta\":\"\",\"com.example.version\":\"0.0.1-beta\",\"com.example.release-date\":\"2015-02-12\"}\n```\n\nAnd it's not the same format to use for inspect on images, the format would  be `{{json .ContainerConfig.Labels }}`.\n\nCorrect me if I'm wrong, but for now, I'll send a PR to fix that :)\n"},{"labels":["documentation"],"text":"Hi,\n\nafter the release of Debian jessie the package docker.io doesn't exists in the main or backports repository of jessie anymore.\nThe docs should provide a valid and official way to install docker on jessie.\n\nMy currently workaround is to use the docker repository which is provided for ubuntu.\n\n``` bash\napt-get install apt-transport-https\napt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 36A1D7869245C8950F966E92D8576A8BA88D21E9\necho \"deb https://get.docker.com/ubuntu docker main\" >> /etc/apt/sources.list\napt-get update\napt-get install lxc-docker\n```\n"},{"labels":["documentation",null],"text":"http://docs.docker.com/project/get-help/ recommends using webchat and has a little procedure to get people started.  IRCloud has a free account and better usability. We should switch it out.\n"},{"labels":["documentation"],"text":"The `--cgroup-parent` option was proposed in https://github.com/docker/docker/issues/8551, and implemented in https://github.com/docker/docker/pull/11428 and (for `docker build`) in https://github.com/docker/docker/pull/11844\n\nThe documentation for this feature is currently very limited, and even _missing_ in some places (for example, in the `docker run` [command line reference](https://github.com/docker/docker/blob/8bd5a95e1e39541dfc5dc635c5c8e7604fe10028/docs/sources/reference/commandline/cli.md#run)). In addition, there's no example on how to use this feature, which might help users understand on how to use this.\n\nObviously, care should be taken to not to explain cgroups in itself, but I found a nice short walk-through here; http://linuxaria.com/article/introduction-to-cgroups-the-linux-conrol-group)\n"},{"labels":["documentation"],"text":"I was going to install the latest docker via \n\n`wget -qO- https://get.docker.com/ | sh`\n\nHowever, uninstalling after doing so is not documented.\n1. It should be. \n2. I should be able to find it in the docs by searching for 'uninstall'.\n3. The documentation ought to say that the solution is \"run the command `sudo docker uninstall`\" or something along those lines.\n"},{"labels":["documentation",null],"text":"The main docker manpage, `man docker`, makes it look like you can do things like `docker-ps` instead of `docker ps`, which is unintentionally misleading.\n\nGiven these parts of the manpage:\n\n> **COMMANDS**\n> &nbsp;&nbsp;&nbsp;&nbsp;**docker-attach(1)**\n> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Attach to a running container\n\nThis formatting _suggests_ that I might want to run `docker-attach` as opposed to `docker attach`. This doesn't work of course, but it might be more clear to specifically refer to `attach` as the command, and point out that full documentation for attach is found in the `docker-attach(1)` manpage.\n\n> **COMMANDS**\n> &nbsp;&nbsp;&nbsp;&nbsp;**attach**\n> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Attach to a running container.\n> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;See **docker-attach(1)** for full documentation on the **attach** command.\n"},{"labels":["documentation",null],"text":"The `nproc` setting for `--ulimit` seems to be a special case in that it is limited per user (and per process). As such if you start up multiple containers using the same uid, they are limited by the same `nproc` value, for example:\n\n```\ndocker run -d -u daemon --ulimit nproc=3 busybox top\ndocker run -d -u daemon --ulimit nproc=3 busybox top\ndocker run -d -u daemon --ulimit nproc=3 busybox top\ndocker run -d -u daemon --ulimit nproc=3 busybox top\n```\n\nThe last `docker run` will fail since each container is using the same uid, and nproc for that user has been limited to 3... this is, unfortunately, how the system handles `nproc`\n\nSome extra docs explaining this would be extremely helpful.\n"},{"labels":["documentation"],"text":"https://github.com/docker/docker/blob/master/docs/sources/articles/security.md\n\nShould mention --read-only on container here.\n"},{"labels":["documentation",null],"text":"hey there, I'm totally new to Docker but I've heard so much about it that I figured I'd give it a shot.\n\nI checked this out on the website: https://www.docker.com/tryit/\n\nI must say, I have a lot of questions after going through this tutorial. Before I move on and find answers to all my questions, I thought I'd leave them here to improve the tutorial.\n\n---\n\nThere seems to be some concept of an image and a container which are different things, but I have no idea what the difference is so I'm just going to call everything a container.\n\nWe download `learn/tutorial`. We run an echo command through it. Then we install ping though it. My understanding is that ping was installed in the `learn/tutorial` container. But then what's the difference between `docker ps` and `docker ps -l`? We then commit this \"change\" to learn/ping -- I'm assuming this is analogous to creating a new branch from learn/tutorial. I could have just as easily committed back to learn/tutorial?\n\n---\n\nAnyways, I hope those questions make sense. I think it would help to give some git analogies in there. No need to answer all the questions -- I can figure  it out. I just figured getting these questions out could improve the \"try it\" experience.\n"},{"labels":["documentation",null],"text":"http://docs.docker.com/reference/commandline/cli/#default-ulimits\n\ninheritted > inherited\n"},{"labels":["documentation"],"text":"http://docs.docker.com/userguide/dockerimages\n"},{"labels":["documentation",null],"text":"The [Debian install documentation for jessie](https://docs.docker.com/installation/debian/#debian-jessie-80-64-bit) states that there is a Debian package for jessie, while [it has been removed since March 31st](https://tracker.debian.org/pkg/docker.io). Please update the docs.\n"},{"labels":["documentation",null],"text":"The last `git push` at the bottom of https://docs.docker.com/project/work-issue/#pull-and-rebase-frequently will fail, I think, unless it has `-f` added.\n\nThis is because the tip of the current branch will not match the remote repository, so Git will reject the update.\n"},{"labels":["documentation"],"text":"I created and linked to containers.  When I try to remove a link  as per the example here:\n\nhttps://docs.docker.com/reference/commandline/cli/#rm\n\nThe example doesn't work. The example shows a leading slash but this appears to be problematic.  Including the leading slash causes the command to return with and apparently remove the link. But it doesn't.\n\n```\n$ docker ps\nCONTAINER ID        IMAGE                      COMMAND                CREATED             STATUS              PORTS                     NAMES\n8e9c5dd470b7        training/webapp:latest     \"python app.py\"        2 minutes ago       Up 2 minutes        0.0.0.0:49159->5000/tcp   web                 \n5551a83d8f32        training/postgres:latest   \"su postgres -c '/us   2 minutes ago       Up 2 minutes        5432/tcp                  db                  \n\nmary at meepers in ~/repos/distribution on docs-part-two [!]\n$ docker ps\nCONTAINER ID        IMAGE                      COMMAND                CREATED             STATUS              PORTS                     NAMES\n8e9c5dd470b7        training/webapp:latest     \"python app.py\"        3 minutes ago       Up 3 minutes        0.0.0.0:49159->5000/tcp   web                 \n5551a83d8f32        training/postgres:latest   \"su postgres -c '/us   3 minutes ago       Up 3 minutes        5432/tcp                  db                  \n\nmary at meepers in ~/repos/distribution on docs-part-two [!]\n$ docker inspect -f \"{{ .HostConfig.Links }}\" web\n[/db:/web/db]\n\nmary at meepers in ~/repos/distribution on docs-part-two [!]\n$ docker rm --link /web/db\n/web/db\n\nmary at meepers in ~/repos/distribution on docs-part-two [!]\n$ docker inspect -f \"{{ .HostConfig.Links }}\" web\n[/db:/web/db]\n\nmary at meepers in ~/repos/distribution on docs-part-two [!]\n$ docker ps\nCONTAINER ID        IMAGE                      COMMAND                CREATED             STATUS              PORTS                     NAMES\n8e9c5dd470b7        training/webapp:latest     \"python app.py\"        4 minutes ago       Up 4 minutes        0.0.0.0:49159->5000/tcp   web                 \n5551a83d8f32        training/postgres:latest   \"su postgres -c '/us   4 minutes ago       Up 4 minutes        5432/tcp                  db      \n```\n\nSpecifying a totally bogus link appears to work:\n\n```\n$ docker rm --link /web/df\n/web/df\n```\n\nBut of course the link didn't exist:\n\nHere is the only command that works:\n\n```\nmary at meepers in ~/repos/distribution on docs-part-two [!]\n$ docker rm --link web/db\nweb/db\n\nmary at meepers in ~/repos/distribution on docs-part-two [!]\n$ docker inspect -f \"{{ .HostConfig.Links }}\" web\n<no value>\n```\n\nHere is how I think it should work:\n- If a user specified a link that doesn't exist, we should tell them\n- If a user specifies the leading slash or not, we should remove the link -- the alternative is to return an error if the leading slash is include (or fix this command)\n"},{"labels":[null,"documentation"],"text":"I am using docker via boot2docker on my mac. Recently I've decided to setup private docker repository for my images. I've found [great article](https://github.com/MarvAmBass/docker-nginx-registry-proxy) how to setup docker registry behind nginx proxy with basic auth and ssl security. When I try to do a push I experienced strange issue:\n\n```\nMacBook-Pro-Pavel:cron vintik$ docker push registry.sashi.me/sashime-cron\nThe push refers to a repository [registry.sashi.me/sashime-cron] (len: 1)\nSending image list\n2015/04/10 23:53:23\n```\n\nAnd nothing happened.\nThen I tried to check connection with a curl call to my registry and got this:\n\n```\ndocker@boot2docker:~$ curl -k -v https://registry.sashi.me/v1/_ping\n* About to connect() to registry.sashi.me port 443 (#0)\n*   Trying 148.251.11.50...\n* Adding handle: conn: 0x9ffdad8\n* Adding handle: send: 0\n* Adding handle: recv: 0\n* Curl_addHandleToPipeline: length: 1\n* - Conn 0 (0x9ffdad8) send_pipe: 1, recv_pipe: 0\n* Connected to registry.sashi.me (148.251.11.50) port 443 (#0)\n* successfully set certificate verify locations:\n*   CAfile: none\n  CApath: /usr/local/etc/ssl/certs\n* SSLv3, TLS handshake, Client hello (1):\n* SSLv3, TLS handshake, Server hello (2):\n* SSLv3, TLS handshake, CERT (11):\n* SSLv3, TLS handshake, Server key exchange (12):\n* SSLv3, TLS handshake, Server finished (14):\n* SSLv3, TLS handshake, Client key exchange (16):\n* SSLv3, TLS change cipher, Client hello (1):\n* SSLv3, TLS handshake, Finished (20):\n* SSLv3, TLS change cipher, Client hello (1):\n* SSLv3, TLS handshake, Finished (20):\n* SSL connection using ECDHE-RSA-AES256-SHA\n* Server certificate:\n*    subject: C=RU; ST=Moscow Region; L=Moscow; O=Sashime; CN=registry.sashi.me\n*    start date: 2015-04-10 18:38:43 GMT\n*    expire date: 2025-04-07 18:38:43 GMT\n*    issuer: C=RU; ST=Moscow Region; L=Moscow; O=Sashime; CN=registry.sashi.me\n*    SSL certificate verify result: self signed certificate (18), continuing anyway.\n> GET /v1/_ping HTTP/1.1\n> User-Agent: curl/7.33.0\n> Host: registry.sashi.me\n> Accept: */*\n> \n* Empty reply from server\n* Connection #0 to host registry.sashi.me left intact\ncurl: (52) Empty reply from server\n```\n\nThen I make a try directly from my mac:\n\n```\nMacBook-Pro-Pavel:files vintik$ curl -k -v https://registry.sashi.me/v1/_ping\n* Hostname was NOT found in DNS cache\n*   Trying 148.251.11.50...\n* Connected to registry.sashi.me (148.251.11.50) port 443 (#0)\n* TLS 1.2 connection using TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384\n* Server certificate: torl.org\n* Server certificate: COMODO RSA Domain Validation Secure Server CA\n* Server certificate: COMODO RSA Certification Authority\n* Server certificate: AddTrust External CA Root\n> GET /v1/_ping HTTP/1.1\n> User-Agent: curl/7.37.1\n> Host: registry.sashi.me\n> Accept: */*\n> \n< HTTP/1.1 200 OK\n* Server nginx/1.4.1 (Ubuntu) is not blacklisted\n< Server: nginx/1.4.1 (Ubuntu)\n< Date: Sat, 11 Apr 2015 07:59:22 GMT\n< Content-Type: application/json\n< Content-Length: 1521\n< Connection: keep-alive\n< X-Docker-Registry-Config: dev\n< Expires: -1\n< X-Docker-Registry-Standalone: True\n< Pragma: no-cache\n< Cache-Control: no-cache\n< Strict-Transport-Security: max-age=31536000; includeSubdomains\n< \n* Connection #0 to host registry.sashi.me left intact\n{\"host\": [\"Linux\", \"bf6ccd9bf43c\", \"3.18.6\", \"#2 SMP Sat Feb 28 02:23:04 UTC 2015\", \"x86_64\", \"x86_64\"], \"launch\": [\"/usr/local/bin/gunicorn\", \"--access-logfile\", \"-\", \"--error-logfile\", \"-\", \"--max-requests\", \"100\", \"-k\", \"gevent\", \"--graceful-timeout\", \"3600\", \"-t\", \"3600\", \"-w\", \"4\", \"-b\", \"0.0.0.0:5000\", \"--reload\", \"docker_registry.wsgi:application\"], \"versions\": {\"M2Crypto.m2xmlrpclib\": \"0.22\", \"SocketServer\": \"0.4\", \"argparse\": \"1.1\", \"backports.lzma\": \"0.0.3\", \"blinker\": \"1.3\", \"cPickle\": \"1.71\", \"cgi\": \"2.6\", \"ctypes\": \"1.1.0\", \"decimal\": \"1.70\", \"distutils\": \"2.7.6\", \"docker_registry.app\": \"0.9.1\", \"docker_registry.core\": \"2.0.3\", \"docker_registry.server\": \"0.9.1\", \"email\": \"4.0.3\", \"flask\": \"0.10.1\", \"gevent\": \"1.0.1\", \"greenlet\": \"0.4.5\", \"gunicorn\": \"19.1.1\", \"gunicorn.arbiter\": \"19.1.1\", \"gunicorn.config\": \"19.1.1\", \"gunicorn.six\": \"1.2.0\", \"jinja2\": \"2.7.3\", \"json\": \"2.0.9\", \"logging\": \"0.5.1.2\", \"parser\": \"0.5\", \"pickle\": \"$Revision: 72223 $\", \"platform\": \"1.0.7\", \"pyexpat\": \"2.7.6\", \"python\": \"2.7.6 (default, Mar 22 2014, 22:59:56) \\n[GCC 4.8.2]\", \"re\": \"2.2.1\", \"redis\": \"2.10.3\", \"requests\": \"2.3.0\", \"requests.packages.chardet\": \"2.2.1\", \"requests.packages.urllib3\": \"dev\", \"requests.packages.urllib3.packages.six\": \"1.2.0\", \"requests.utils\": \"2.3.0\", \"simplejson\": \"3.6.2\", \"sqlalchemy\": \"0.9.4\", \"tarfile\": \"$Revision: 85213 $\", \"urllib\": \"1.17\", \"urllib2\": \"2.7\", \"werkzeug\": \"0.10.4\", \"xml.parsers.expat\": \"$Revision: 17\n```\n\nAnd it returns expected result!\nSo I've figured out that boot2docker and my mac works with ssl quite different. So finally I've made some work with my nginx config and here it is:\n\n```\n# For versions of Nginx > 1.3.9 that include chunked transfer encoding support\n# Replace with appropriate values where necessary\n\nupstream docker-registry {\n  server {{ ip }}:5000;\n}\nserver {\n  listen 80;\n  server_name {{ inventory_hostname }};\n  proxy_set_header Host       $http_host;   # required for Docker client sake\n  proxy_set_header X-Real-IP  $remote_addr; # pass on real client IP\n  proxy_set_header Authorization  \"\"; # see https://github.com/dotcloud/docker-registry/issues/170\n  proxy_read_timeout               900;\n  location / {\n    return 301 https://{{ inventory_hostname }}$request_uri;\n  }\n  location /_ping {\n    auth_basic off;\n    proxy_pass                       http://docker-registry;\n  }\n  location /v1/_ping {\n    auth_basic off;\n    proxy_pass                       http://docker-registry;\n  }\n}\n\nserver {\n  listen 443;\n  server_name {{ inventory_hostname }};\n\n  ssl on;\n  ssl_certificate /etc/ssl/cert.pem;\n  ssl_certificate_key /etc/ssl/key.pem;\n# fix issue with boot2docker ssl\n  ssl_session_cache   shared:SSL:10m;\n  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;\n  ssl_prefer_server_ciphers on;\n  ssl_ciphers \"EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH+aRSA+RC4 EECDH EDH+aRSA RC4 !aNULL !eNULL !LOW !3DES !MD5 !EXP !PSK !SRP !DSS +RC4 RC4\";\n\n  # set HSTS-Header because we only allow https traffic\n  add_header Strict-Transport-Security \"max-age=31536000; includeSubdomains\";\n\n  proxy_set_header Host       $http_host;   # required for Docker client sake\n  proxy_set_header X-Real-IP  $remote_addr; # pass on real client IP\n  proxy_set_header Authorization  \"\"; # see https://github.com/dotcloud/docker-registry/issues/170\n  proxy_read_timeout               900;\n\n  client_max_body_size 0; # disable any limits to avoid HTTP 413 for large image uploads\n\n  # required to avoid HTTP 411: see Issue #1486 (https://github.com/dotcloud/docker/issues/1486)\n  chunked_transfer_encoding on;\n\n  location / {\n    # let Nginx know about our auth file\n    auth_basic              \"Restricted\";\n    auth_basic_user_file    /etc/pass.htpasswd;\n    proxy_pass                       http://docker-registry;\n  }\n  location /_ping {\n    auth_basic off;\n    proxy_pass                       http://docker-registry;\n  }\n  location /v1/_ping {\n    auth_basic off;\n    proxy_pass                       http://docker-registry;\n  }\n}\n```\n\nSo the main fix is to add this strings:\n\n```\n  ssl_session_cache   shared:SSL:10m;\n  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;\n  ssl_prefer_server_ciphers on;\n  ssl_ciphers \"EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH+aRSA+RC4 EECDH EDH+aRSA RC4 !aNULL !eNULL !LOW !3DES !MD5 !EXP !PSK !SRP !DSS +RC4 RC4\";\n```\n\nI don't know which one of this really helps, I simply grub them from one of my nginx configs.\nI believe it should help somebody! Good luck!\n"},{"labels":["documentation"],"text":"The api doc for the [`Binds` argument](https://docs.docker.com/reference/api/docker_remote_api_v1.17/#create-a-container) is incorrect.  When creating a new volume, the volume should not appear in \"Binds\".  The [implementation](https://github.com/docker/docker/blob/master/daemon/volumes.go#L225) explicity checks for a string with two or three components separated by \":\".\n\nMoreover, the resulting error message is \"Invalid volume specification\", which is confusing, as it doesn't mention the `Binds` argument at all.\n"},{"labels":["documentation",null],"text":"the docs that end up here --> http://docs.docker.com/reference/commandline/cli/#daemon\n\nsince the commit 29d01b7, now the examples for running the daemon have a PS1 command prompt of `$` which indicates a non-privileged user. Though correctly marking the command prompt with `#` which indicates root user, would make them appear as comments. \n\nWe should find a markdown way to show the prompt for a `#` PS1 to be normal, or add back `sudo` for the `docker -d` type examples.\n\n/cc @moxiegirl @thaJeztah @SvenDowideit \n"},{"labels":["documentation",null],"text":"This is minor and probably won't be caught for some time but... \nSee code command snippet\n\n```\nvagrant@ubuntu-1:~$ docker -v\nDocker version 1.6.0-rc4, build e2e39fc\nvagrant@ubuntu-1:~$ cid=$(docker run -itd --ulimit data=8192 ubuntu)\nvagrant@ubuntu-1:~$ docker logs $cid\nbash: xmalloc: .././locale.c:81: cannot allocate 2 bytes (0 bytes allocated)\n```\n"},{"labels":["documentation",null],"text":"All the [Installation docs](https://docs.docker.com/installation/) cover how to install docker in detail, but none of them talk about configuring the docker daemon after the installation.\n\nThere should be a short section in there describing the config process. For example, in Ubuntu, the daemon can be configured by adding options in `/etc/default/docker` and in CentOS/RHEL, the daemon can be configured by editing `/etc/sysconfig/docker`\n\nThere is [one article](https://docs.docker.com/articles/systemd/) which covers this, but it is very specific. It would be nice to have a short config article after every installation step for various Operating Systems\n"},{"labels":["documentation"],"text":"I'm gong to pick this up after the release...also...I'm not sure how this fits with the recent commentary coming in on Joyent installation.\n"},{"labels":["documentation"],"text":"In the last example of [userguide/dockervolumes](http://docs.docker.com/userguide/dockervolumes/) we want to restore backed up data into a `dbdata2` container:\n\n```\nsudo docker run -v /dbdata --name dbdata2 ubuntu /bin/bash\nsudo docker run --volumes-from dbdata2 -v $(pwd):/backup busybox tar xvf /backup/backup.tar\n```\n\nThis snippet has 2 issues:\n1. If we dig into the logic of the snippet, we'll see that restored data should get into `/dbdata` directory of `dbdata2` container. Instead the data is left in `/` directory of a temporary container. The second line should like this:\n   \n   ```\n   sudo docker run --volumes-from dbdata2 -v $(pwd):/backup busybox cd /dbdata && tar xvf /backup/backup.tar\n   ```\n   \n   (Added `cd /dbdata &&`)\n2. As it was previously stated in the userguide, we'd like to use the same base containers for most operations to reduce network and disk usage. So that in the second line `busybox` should be replaced by `ubuntu`. Though considering the size of busybox this may be not a very serious issue :smile:.\n"},{"labels":["documentation"],"text":"For the reasons discussed at #3793, the signal will be passed to the container but in many cases it won't actually terminate because it is running as PID 1.\n\nI could not find any mention of this in any of the documentation for `-sig-proxy`, `docker kill`, etc., which is where I looked to try to understand why it wasn't working for me.\n\nhttps://bugzilla.redhat.com/show_bug.cgi?id=1189865 has a nice example to experiment with.\n"},{"labels":["documentation"],"text":"I was following this page: https://docs.docker.com/installation/ubuntulinux/\n\nAfter I installed docker but and ran the command: $ sudo docker run hello-world\n\nIt returned:\n\nFATA[0000] Get http:///var/run/docker.sock/v1.17/version: dial unix /var/run/docker.sock: no such file or directory. Are you trying to connect to a TLS-enabled daemon without TLS?\n\ncan you please add a step in the instructions to run: service docker restart\n\nThis fixed the issue for me.\n"},{"labels":["documentation",null],"text":"On https://docs.docker.com/installation/rhel/ it's mentioned that you can use the command:\n\n```\n$ sudo subscription-manager repos --enable=rhel-7-server-extras-rpms\n```\n\nhowever, this doesn't work by default on RHEL 7 EC2 instances.  Instead, you need to modify the file:\n\n```\n/etc/yum.repos.d/redhat-rhui.repo\n```\n\nand modify the \"[rhui-REGION-rhel-server-extras]\" section to include \"enabled=1\".\n"},{"labels":["documentation",null],"text":"Or docker/docs/README.md should include information for how to get the Man pages in Mac OSX.\n\nhttp://stackoverflow.com/questions/26368263/how-to-install-docker-man-pages-on-mac-os\n"},{"labels":["documentation"],"text":"Fixing typos, grammar, concise wording, etc. \n"},{"labels":["documentation",null],"text":"On the [Work with a development container](http://docs.docker.com/project/set-up-dev-env/) page (from the Contributor Guide), the output from running `hack/make.sh binary` needs to be updated to reference `binary` instead of `ubuntu`. \n\nCurrently, the output is:\n\n```\n---> Making bundle: ubuntu (in bundles/1.5.0-dev/ubuntu)\nCreated package {:path=>\"lxc-docker-1.5.0-dev_1.5.0~dev~git20150223.181106.0.1ab0d23_amd64.deb\"}\nCreated package {:path=>\"lxc-docker_1.5.0~dev~git20150223.181106.0.1ab0d23_amd64.deb\"}\n```\n\nRather, it should be something akin to:\n\n```\n---> Making bundle: binary (in bundles/1.5.0-dev/binary)\nCreated binary: /go/src/github.com/docker/docker/bundles/1.5.0-dev/binary/docker-1.5.0-dev\n```\n"},{"labels":["documentation",null],"text":"\"Configure Git for contributing\" section does not mention where to configure git in Windows. \n"},{"labels":["documentation",null],"text":"Support for setting ulimits for containers was added with #9437, but has a couple of quirks (like `as` ulimit not being supported) and could use some extra docs love.\n"},{"labels":["documentation"],"text":"Currently the documentation notes that \"_In addition to `--privileged`, the operator can have fine grain control over the capabilities using `--cap-add` and `--cap-drop`. By default, Docker has a default list of capabilities that are kept._\" (ref: https://github.com/docker/docker/blame/master/docs/sources/reference/run.md#L632-L636)\n\nHowever, at that point a few examples are given, but no information is provided on what that list of capabilities are, making it hard for users to search/find what those capabilities and, specifically, their names, are.\n\nThe current capabilities list in Docker is here: https://github.com/docker/docker/blob/master/daemon/execdriver/utils.go\n\nThey can be mapped to these additional descriptions here: http://linux.die.net/man/7/capabilities\n\nPotentially a table might be a nice way to list this information if we agree that's how we want to display, or if we want an external pointer that may be reasonable as well.  The docs team may have guidance here (ping @SvenDowideit @moxiegirl @fredlf @jamtur01)\n"},{"labels":["documentation",null],"text":"Hello,\nI've been struggling with this on ubuntu 14.10, docker 1.5.0. More than should be the case.\n\nMy problems came from the following:\n- Assuming that the ulimit is set the same inside a container than on the host. (it isn't). But also, that the output of the ulimit command was a bit misleading because:\n\n``` sh\n$ ulimit\nunlimited\n```\n\nis not the same thing as \n\n``` sh\n$ ulimit -c\n0\n```\n\nIn the container, base image was `ubuntu-debootstrap:14.04`.\n- On ubuntu the default setting - core files get piped to `apport` program. This is no good in containers. It must be overridden to something else if `apport` is not installed inside the container.\n\nIt would also be a help if linux kernel could have a different value of `/proc/sys/kern/pattern` inside the container than outside it. Since in the 2 environments they may need to point to different locations. I'm not sure that is something that Docker can do anything about but might be worth to think about.\n- It is not clear, as core dumps are a kernel managed thing, whether resulting core files are written by kernel to the host filesystem or the container filesystem. This should also be clearly documented. They are written inside the container.\n- Open question: How best to save the core files as when the container exits the filesystem is not remembered. I think docker could give a clear instruction here too - e.g. how or what to mount where to write the core files to.\n\nMany thanks for any consideration. Else it will have to be answered on stack overflow.\n"},{"labels":["documentation",null],"text":"Dockerfile appears broken and outdated. Running \"wget -qO- http://cfengine.com/pub/gpg.key | apt-key add - \" returns a 403. \n\nhttps://github.com/docker/docker/blob/b64558907139911b86d846de70ab859504cc45a2/docs/sources/articles/cfengine_process_management.md\n\nLink to article with error: https://docs.docker.com/engine/articles/cfengine_process_management/\n"},{"labels":["documentation",null],"text":"References to editing the `DOCKER_OPTS` in the `/etc/default/docker` file seem to be sprinkled throughout the documentation, but never explicitly stated or explained. Also everywhere it is referenced it specifies Ubuntu, but I believe it is also true for CentOS.\n"},{"labels":["documentation",null,null],"text":"**Problem**\n\nThere are no clear documentation on what it takes to create an official image.\n\n**Solution**\n\nDocument the steps to create and submit a new official image to the correct repositories.  @tianon can be a source for information on what needs to happen and what is expected.\n"},{"labels":["documentation",null,null],"text":"**Problem**\n\nDocker lacks documentation on what the defaults mounts that are added for network files.\n\n**Solution**\n\nDocument the docker provided mounts for things like `/etc/hosts`, `/etc/hostname`, and `/etc/resolv.conf` that docker automatically sets up and bind mounts into containers as read-write as the default container profile.\n"},{"labels":["documentation"],"text":"**Problem**\n\nDocument `DockerCli` methods or make them private function in `api/client/cli.go`.\n\n**Solution**\n\nMake methods not used outside package private, document remained public methods in godoc-style.\n"},{"labels":["documentation"],"text":"**Problem**\n\nDocument DockerCli `Cmd...` method\n\n**Solution**\n\nWrite godoc-style docstrings for each `Cmd...` method(which cli command it represents, maybe something about parameters) in `api/client/commands.go`.\n"},{"labels":["documentation"],"text":"**Problem**\n\nDocument `DockerCli` struct and `NewDockerCli` function in `api/client/cli.go`.\n\n**Solution**\n\nWrite godoc-style comments which describe idea of DockerCli(each Cmd... method represents cli command) and NewDockerCli parameters. Examples of such comments can be found in golang standard library golang.org/pkg/.\n"},{"labels":["documentation",null],"text":"**Problem**\n\nDocument `builtins.Register`\n\n**Solution**\n\nWrite godoc-style docstring form Register function in `builtins/builtins.go`.\n"},{"labels":["documentation",null,null],"text":"**Problem**\n\nDocument public functions and method in builder\n\n**Solution**\n\nOr make them private. Probably builder public things is not used by other packages.\n"},{"labels":["documentation",null],"text":"**Problem**\n\nDocument constants in api/common.go\n\n**Solution**\n\nShort explanation why we need them here(used both by daemon and client) and short inline comment for each. Example: http://golang.org/src/math/const.go#L8\n"},{"labels":["documentation",null,null],"text":"**Problem**\n\npkg/system - Document exported functions and types\n\n**Solution**\n\nThe `pkg/system` package is used for portable low level functions throughout Docker code. It is meant to be reused by other applications, however it lacks documentation.\n\nAdd a README.md to the package, and code comments to the package's exported symbols.\n"},{"labels":["documentation",null],"text":"**Problem**\n\nDocument running Docker on RaspberryPI\n\n**Solution**\n\nMany blogs are out there, some of which are quite old, that talk about ways to get Docker running on a RaspberryPI.  We should put together better documentation in a central place on how to run Docker on various common OS distros used on RaspberryPI (raspbian, snappy ubuntu, etc.)\n"},{"labels":["documentation",null],"text":"**Problem**\n\npkg/truncindex - Documentation\n\n**Solution**\n\nAll things in the `pkg/` subdirectories are meant to be general purpose packages to be reused outside of Docker. The `truncindex` package provides a general 'index tree', used by Docker in order to be able to reference containers by only a few unambiguous characters of their id.\n\nHowever, to be easily reused by another application, this package needs documentation. Add a README.md file in `pkg/truncindex/` explaining the purpose of the package, and comment exported functions and types to make it easy to use.\n"},{"labels":["documentation",null,null],"text":"The hello world page in the user guide would strongly benefit from a few screenshots and other graphics to help the users.\n\nhttp://docs.docker.com/userguide/dockerizing/\n"},{"labels":["documentation",null],"text":"On the page https://docs.docker.com/reference/commandline/cli/#rm, in the RM command reference the following paragraph seems to be missing the command example\n\n\"This command will delete all stopped containers. The command docker ps -a -q will return all existing container IDs and pass them to the rm command which will delete them. Any running containers will not be deleted.\"\n\n@moxiegirl \n"},{"labels":["documentation",null],"text":"Add information for getting around key errors when installing Docker on Ubuntu and Debian \n-->\nIf your company is behind a filtering proxy, you may find the `apt-key` command fails for the Docker repo during installation. To work around this, add the key directly using the following:\n\n`wget -qO- https://get.docker.com/gpg  | sudo apt-key add -`\n"},{"labels":["documentation"],"text":"Hi guys,\r\n\r\n```\r\ne@e#24: docker pull --help\r\n\r\nUsage: docker pull [OPTIONS] NAME[:TAG]\r\n\r\nPull an image or a repository from the registry\r\n\r\n  -a, --all-tags=false    Download all tagged images in the repository\r\n  --help=false            Print usage\r\ne@e#24\r\n```\r\n\r\nAs is well-known, there isn't just \"the registry\". Therefore, the help text should be updated to explain how to specify the registry as well. Maybe something like:\r\n\r\n```\r\nUsage: docker pull [OPTIONS] [REGISTRY_HOST[:REGISTRY_PORT]/]NAME[:TAG]\r\n\r\nPull an image or a repository from the given registry (or the default docker registry if none specified).\r\n\r\n  -a, --all-tags=false    Download all tagged images in the repository\r\n  --help=false            Print usage\r\n```\r\n"},{"labels":["documentation",null,null],"text":"**Summary**: There is no documentation on \"how to\" migrate containers/images to another host\n**Proposed solution**: write an article that describes how containers, images and their volumes can be migrated to a new/other host. The article should contain practical examples and limitations of the process. Possible alternatives/best practices can be considered to be included in the article.\n\n---\n\nThis came up in another issue (see https://github.com/docker/docker/issues/10702#issuecomment-76508564); how can image, containers (and their volumes) be migrated to another host.\n"},{"labels":["documentation"],"text":"We need docs to explain the by design behavior changed at #11148. Feel free to assign to me, although I'm not sure where to document this. Maybe ADD/COPY instructions in Dockerfile documentation would be nice. @tiborvass \n"},{"labels":["documentation",null],"text":"I encountered an obscure error a few days ago and I felt compelled to publish it where it might help some people.\n\nHere is the story.\n\nFor a while I've been facing permissions errors from within containers trying to access certain files and I couldn't work out why this was happening. It only affected files when mounting them to the container, not when added to the container. Further more, when executing a shell inside the container, the files existed and the user could write to the mounted directory.\n\nThis bugged me for weeks and I'd reverted to rebuilding the containers whenever I made a change. Strangely, when a friend of mine pulled the code from git and mounted the volume... it worked. I concluded this was an error on my personal machine.. However when he pushed new code it miraculously worked on my machine... \n\nAfter some inspection I noticed that the file downloaded with safari contained an extended attribute 'com.apple.quarentine'. Removing this made everything work again. And because git strips extended attributes before committing this is why 'git files' worked.\n\nIt turns out, when downloading files with Safari on OS X, OS X adds an attribute to refuse access to the file until it has been opened. Now this was causing OS X to refuse access when boot2docker wanted to access the files. SILENTLY. Yay. \n\nSo if a warning could be given when mounting 'quarentined' files, it would be fantastic... And perhaps save others the wasted time figuring this out. \n\nCool.\n"},{"labels":["documentation",null,null],"text":"From a user via docs feedback.\n\n\"How much disk space containers will take up. The registry doesn't appear to\nhave any indication and AFAICT one would need to visit several places to\nget an estimate. Maybe I have missed some crucial point? I understand\nhow containers could be \"lightweight\" if a one was intended to be hosted\non the same OS/version I have on my desktop but if not then potentially\nI'm looking a several gigs of download yes?\"\n\nhttps://docs.docker.com/userguide/dockerimages/ Has information  --- is the closests but this user was more about \"predicting\" the size prior to download.\n"},{"labels":["documentation",null,null],"text":"The documentation at https://docs.docker.com obviously lacks any discussion of the available storage-drivers which imo is essential to guide people to their docker-setup.\n\nOne lesson, i learned today, is that you cannot run containers with the btrfs-driver if the `/var/lib/docker`-path itself is a subvolume of a btrfs-tree. This directory must sit in the `default`-volume of a btrfs-volume.\nAnd i think this should be covered in the documentation.\n"},{"labels":["documentation",null],"text":"Please change the EPEL link on RHEL 6.5+ installation documentation from https to http because https doesn’t work anymore. Thanks a lot.\n\nhttps://docs.docker.com/installation/rhel/\n"},{"labels":["documentation",null,null],"text":"In some or many organisations the HTTP_PROXY is appropriate only for external registry access and may not function correctly for an internal private registry. The purely global nature of the proxy from the environment makes running a private registry problematic.\nThe code in registry.go for defining registry access could be made conditional through a new unproxied_registry flag - so instead of an unconditional\nhttpTransport := &http.Transport{\n        DisableKeepAlives: true,\n        Proxy:             http.ProxyFromEnvironment,\n        TLSClientConfig:   &tlsConfig,\n    }\nthe Proxy: could be conditional. This might be conditional based on an address map or other specification of registry addresses that should not be proxied even when the proxy is set in the environment.\n\nIt could be argued that this is working around broken internal proxies. This is a fair argument but it is not necessarily straightforward to modify proxy configuration in large organisations. It is also a network optimisation to use a private registry rather than use a proxy in many cases.\n"},{"labels":["documentation",null,null,null],"text":"Kernel keyrings are not namespaced and thus not secure on hosts running Docker. This should be made clear and explicit in the security article.\n\nMachines running full disk encryption and Docker may be vulnerable to attacks to the system keyring.\n"},{"labels":["documentation",null,null],"text":"Reading Docker documentation as a first time user. The general structure and tutorial are great, but texts have some problems. For example\n\nhttps://docs.docker.com/reference/builder/\n\nIt's not clear at some places, contains details but not general information, referring to ambiguous terms. e.g. for CMD, ENTRYPOINT, ENV, ADD, .... \n- each topic does not start with clear description of the command purpose and what problem it tries to solve\n- the context is not clearly defined (e.g. CMD vs RUN): is it for process of building an image or for running inside of a container based on the image being built.\n- the reference like \"this is to set defaults\" is completely confusing. For defaults in which context and what kind of commands?\n- ADD copies files from source to destination. Where are source and destination, copying on which phase?\n- environment - there must be a clear explanation about one environment that exists in a Dockerfile scope, another for commands that are RUN to build image, third - for everything that will be run inside a container built on the image.\n- word \"container\" here often is confusing. Container at the build time or after running a container based on built image?\n"},{"labels":["documentation"],"text":"https://docs.docker.com/userguide/dockerlinks/  and related should provide guidance on how or why a user would choose one method of creating container versus another (security, management, data).  Also, do we have general guidelines as to which we recommend as the \"default\" technique.\n\nCorollary, it would be good if containers in the Hub follow the default technique to avoid confusing messages.\n"},{"labels":["documentation",null],"text":"The new /stats endpoint seems like a great idea. Unfortunately the way it is currently defined, there is no description of what the fields are or what values they can have. This seems like it will cause problems moving forward especially for porting docker to other platforms.\n\nAs far as I can tell, the new fields are defined based on their implementation which appears to be the cgroups statistics. This makes some sense on Linux with a specific version of the cgroups stats but if those stats ever changed or if you were porting docker to another platform this immediately becomes problematic.\n\nIn the same way that the /top data is currently different on other hosts and platforms (as described in #9232) this endpoint as it is, seems like it's going to cause a lot of problems for portability.\n\nIs it possible for the next version of the API to at least define the fields? Ideally they'd have been defined as something implementation independent to start with but if that ship has sailed, at least defining the fields using the current cgroups names and listing what the possible keys and values are would be a huge step forward for portability.\n"},{"labels":["documentation"],"text":"Shouldn't there be a way for me to easily empty docker's cache in order to save disk space?\n\nSomething like `docker clear-cache`\n"},{"labels":["documentation",null],"text":"There are errors in the manpages because parameters in angle brackets aren't included in `md2man` output. For [example](https://github.com/docker/docker/blame/master/docs/man/Dockerfile.5.md#L137), \n\n```\n**ADD [\"<src>\"... \"<dest>\"]** This form is required for paths containing whitespace.\n```\n\nrenders as\n\n```\nADD [\"\"... \"\"] This form is required for paths containing whitespace.\n```\n\nNote the missing `<src>` and `<dest>`.\nThis can also be seen in GitHub's rendering of the text:\n\n**ADD [\"<src>\"... \"<dest>\"]** This form is required for paths containing whitespace.\n\n---\n\n**PROBLEM**: man docs are often imporoperly formatted, using quotes or bolds when code blocks/segments are required\n\n**PROPOSED SOLUTION**: man docs should be updated to use appropriate backticks for either inline or blocked code.\nThe `dockerfile.5.md` has already been gone through, but wouldn't hurt another set of eyes.\n"},{"labels":["documentation",null,null],"text":"At first glance I thought \"die\" means the container stopped unexpectedly. \nBut when I stop a container manually I see the \"die\" event followed by a \"stop\" event. I think the \"die\" event here is unnecessary.\nI want to implement a web interface and need to show the user all the history events of the container, but with the current docker events API it seems that it's hard to distinguish \"normally stop\" from \"unexpectedly stop\".\n"},{"labels":["documentation"],"text":"In container:\n\n```\nyum install -y epel-release\nyum install -y http://iredmail.org/yum/rpms/7/cluebringer-2.0.14-4.el7.centos.noarch.rpm\n```\n\nAfter install, some files are missing: \n/usr/share/doc/cluebringer-2.0.14/\nonly have contrib directory, but it should be \nAUTHORS  ChangeLog  contrib  database  INSTALL  LICENSE  TODO  WISHLIST\n\nThis works under host.\n"},{"labels":["documentation",null],"text":"The section on docker login does not explain where the \"login state\" is kept, or what can happen to lose the credentials.  For example, if the credentials are stored in a file, which file is updated?  Does resolving credentials depend on the UID of the current process, the $HOME variable (to find a dot-file), etc.\n\nhttps://docs.docker.com/reference/commandline/cli/#login\n"},{"labels":["documentation",null,null],"text":"I just run over a rather undokumented behaviour from a docker ecosystem viewpoint.\nI needed to figure out, how ENV are processed (if in single or double quoted notion by default, which implies caution about escaping.)\n\nSo I would love to see a hint on the docs to clarify the point.\nhttp://docs.docker.com/reference/builder/#env\n\n**_Suggestion:**_\n\"ENV are processed in the double quoted notion by default which makes strings subject to shell escaping acording to the shell used in the target image. You can use the alternative declaration with single quotes instead.\"\n"},{"labels":["documentation",null],"text":"The \"Finding the Cgroup for a Given Container\" section of https://docs.docker.com/articles/runmetrics/ is out of date, at least for containers that do not use LXC.\n\nHere is an example: \"Putting everything together to look at the memory metrics for a Docker container, take a look at /sys/fs/cgroup/memory/lxc/<longid>/.\"  I don't use LXC.  On my Ubuntu 14.04 machine running Docker 1.4.1, the correct path is /sys/fs/cgroup/memory/docker/<longid>/.\n"},{"labels":["documentation",null,null],"text":"If you want to remove a link between containers, you can use `docker rm --link`. The current documentation says:\n\n```\n $ docker help rm\n\nUsage: docker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers\n\n  -f, --force=false      Force the removal of a running container (uses SIGKILL)\n  -l, --link=false       Remove the specified link and not the underlying container\n  -v, --volumes=false    Remove the volumes associated with the container\n```\n\nI eventually figured out that you need to use the syntax `docker rm -l HOSTCON/LINKCON`, but I'm not sure how I was meant to know that. It doesn't feel symmetrical to the syntax used to create a link or other commands which typically use : as a separator.\n\nAlso, I'm really not convinced `docker rm` is the right place for the functionality - all other flags remove the container including `-v`. Could this be moved to a `docker unlink` subcommand or similar and the documentation improved?\n"},{"labels":["documentation",null],"text":"There is no mention of what the permitted parameters are for starting a container are in the remote documentation API. I _know_ that some options are permitted, for example I've been using `\"PublishAllPorts\"` . I'm not sure if its mostly the same as /containers/create or not.\n\nhttps://docs.docker.com/reference/api/docker_remote_api_v1.16/#start-a-container\n"},{"labels":["documentation",null,null,null],"text":"I ran an experiment today to see how these things intersect.\n\nhttps://gist.github.com/thockin/c44a88b84c2a1041a1bd\n\nThere are three cells in this matrix that are totally nonsensical.  Worse the dockerfile spec says \"The shell form prevents any CMD or run command line arguments from being used\", which is clearly untrue.\n\nMore that this, though, the semantic between the two is sort of weird, especially since they can be arrays or strings.\n\nI wonder if there has been any thought put into simplifying the semantics around these things?\n"},{"labels":["documentation",null],"text":"Hi\n\nHere's a transcript from a chat I had (with one of your employees?) a few minutes ago, that describes everything:\n\nyaronr: Strange. After bind-mounting a file, it changes to be a directory. removing the -v - and the file is a file again..\nyaronr: has anyone seen this?\nerikh: it's a known issue\nyaronr: erikh: really ?! I've spent hours on it\nyaronr:it used to work.\nerikh: when?\nyaronr: up until a couple of weeks ago. I have this unit file that uses this approach to map a config file from the host to the container\nyaronr: erikh: I actually have a few of them..\nerikh: what version of docker were you using before?\nyaronr: 1.3.x\nerikh: and it doesn't work in 1.4 now?\nerikh: put in an issue\nyaronr: yup\nerikh: I swear it never worked this way though\nyaronr: I'm pretty sure there even was an example for mounting specific files, in the docs.\nyaronr: erikh: you said it's a known issue - what do you mean?\nerikh: well, then definitely put in an issue :)\nerikh: I swear that we didn't support this\nerikh: but I could be wrong\nerikh: other people know that code better than me, like cpuguy83\nerikh: but I think he's at lunch\nyaronr: erikh: AHA, it IS (or should be) supported, read the docs: https://docs.docker.com/userguide/dockervolumes/  'Mount a Host File as a Data Volume'\nyaronr\nerikh: don't swear so quickly ;)\nyaronr: so I guess what you're saying is that you think something has changed in this area?\nyaronr: this explains why one day, a bunch of my unit files stopped responding..\nyaronr: ping?\n"},{"labels":["documentation",null],"text":"##### Steps To Reproduce\n- Create an image using the following Dockerfile source:\n\n```\n    FROM       ubuntu:12.04\n    RUN apt-get update;  \\\n        apt-get install -y screen;\n    RUN adduser --disabled-password --gecos -- dlw; \\\n        passwd -d dlw;\n    USER dlw\n    ENTRYPOINT  /bin/bash\n```\n- Execute image: `'docker run -i -t <imageGUID>.'`\n- On resulting container's command line attempt to start:  `screen`.\n  Screen will issue the following message:\n  `Cannot open your terminal '/dev/console' - please check.`\n  Here are the permissions as displayed by `'ls -al /dev/console'`:\n\n```\n    crw------- 1 root root 136, 7 Dec 24 12:15 /dev/console\n```\n- Alter Dockerfile so 'root' becomes default user and explicitly log in 'dlw' (non-root) account:\n\n```\nFROM       ubuntu:12.04\nRUN apt-get update;  \\\n    apt-get install -y screen;\nRUN adduser --disabled-password --gecos -- dlw; \\\n    passwd -d dlw;\nUSER root\nENTRYPOINT  login dlw\n```\n- Execute image: `'docker run -i -t <imageGUID>.'`\n- Start: `screen`.\n  Screen works as expected.\n  Here are the permissions as displayed by `'ls -al /dev/console'`:\n\n```\n    crw------- 1 dlw tty 136, 7 Dec 24 12:33 /dev/console\n```\n##### Environment\n- Using docker version 1.3.1.\n- Ubuntu  12.04.4 LTS\n##### Behavior Assessment\n\nAn implicit login request, implemented by Dockerfile USER statement, that isn't 'root' doesn't seem to completely prepare a container's permissions to the /dev/console device for the implicit user.  However, an explicit 'login' request (event) triggers the container permissions for '/dev/console' to allow  non-root container accounts access to this device.  Are there potentially other permission issues resulting from this difference between implicit/explicit login requests?\n"},{"labels":["documentation",null,null],"text":"When you are browsing the documentation at https://docs.docker.com/ , the links for the release notes for previous versions is inconsistent or broken.   I was trying to find the Docker 1.2 release notes and had to go on a bit of a hunt to finally get to it.\n\nStarting at the main page\n https://docs.docker.com/  \nThe LHS link to release notes takes you to the bottom of the page, to the release notes section\nhttps://docs.docker.com/#release-notes\n\nThe link there takes you to\nhttps://docs.docker.com/release-notes/\nWhich has the Docker 1.4 documentation version of Release Notes.  This is missing the previous 1.3, 1.2 and other release notes.  This made me think that the drop down in the top right was how you got other release note versions.\n\nGoing to Version v1.3 will take you to\nhttps://docs.docker.com/v1.3/release-notes/\nWhich has the release notes as of v1.3  which also contains the previous versions of 1.2, 1.1 and 1.0 release notes on the LHS.  Those links take you to the various sections of that v1.3 release notes page.\n\nGoing to Version 1.2 from the drop down, you get taken to\nhttps://docs.docker.com/v1.2/release-notes/\nWhich does not exist.  Same for other versions.\n\nBut there does exist a v1.2 release notes page, it is just not a separate page and is a section on the main v1.2 page.\nhttps://docs.docker.com/v1.2/#release-notes\n\nAdditionally if you are on the main page for docs\nhttps://docs.docker.com/\n\nGo to v1.3 from the drop down menu, now at\nhttps://docs.docker.com/v1.3/\n\nThe release notes link on the LHS takes you to bottom of page\nhttps://docs.docker.com/v1.3/#release-notes\n\nThe link in that section takes you to\nhttps://docs.docker.com/release-notes/\n\nWhich is the release notes for v1.4 not v1.3 \nDrop down menu top right will change to v1.4\nChanging it to v1.3 will now take you to \nhttps://docs.docker.com/v1.3/release-notes/\n\nHope that describes the different click workflows I had to go through\n\nI think the following should happen:\nRelease notes for 1.4 should be updated with previous versions (similar to 1.3) if it is suppose to be a comprehensive living release notes document\nIf not, then each previous version should get a separate release notes page in their respective areas so the drop down selector when on the release notes page works for them.\n"},{"labels":["documentation",null,null,null],"text":"Description of problem:\n\nAfter installing the lxc-docker package from the repositories\nprovided by Docker on Ubuntu 14.04.1 the Docker daemon fails to\nstart because of the missing executable `/sbin/apparmor_parser`.\n\n`docker version`:\n\n```\nClient version: 1.4.1\nClient API version: 1.16\nGo version (client): go1.3.3\nGit commit (client): 5bc2ff8\nOS/Arch (client): linux/amd64\nFATA[0000] Cannot connect to the Docker daemon. Is 'docker -d' running on this host? \n```\n\n`docker info`:\n\n```\nFATA[0000] Cannot connect to the Docker daemon. Is 'docker -d' running on this host? \n```\n\n`uname -a`:\n\n```\nLinux srv28 3.13.0-43-generic #72-Ubuntu SMP Mon Dec 8 19:35:06 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux\n```\n\nEnvironment details (AWS, VirtualBox, physical, etc.):\n\nA new physical server with a fresh minimal install of Ubuntu 14.04.1.\n\nHow reproducible:\n\nOn a custom minimal Ubuntu install without apparmor this is always reproducable. The standard Ubuntu install seems to include apparmor and therefore the problem is not apparent. \n\nSteps to Reproduce:\n1. Follow install instructions: http://docs.docker.com/installation/ubuntulinux/#docker-maintained-package-installation\n2. `service docker start`\n2. `docker info`\n\nActual Results:\n\nThe Docker daemon fails to start.  `docker info` outputs\n\n```\nFATA[0000] Cannot connect to the Docker daemon. Is 'docker -d' running on this host? \n```\n\nand `/var/log/upstart/docker.log` contains\n\n```\nINFO[0000] +job serveapi(unix:///var/run/docker.sock)   \nINFO[0000] Listening for HTTP on unix (/var/run/docker.sock) \nINFO[0000] +job init_networkdriver()                    \nINFO[0000] -job init_networkdriver() = OK (0)           \nINFO[0000] WARNING: Your kernel does not support cgroup swap limit. \nFATA[0000] Error loading docker apparmor profile: fork/exec /sbin/apparmor_parser: no such file or directory () \n```\n\nExpected Results:\n\nThe Docker daemon should be up and running.  `docker info`\nshould output something like\n\n```\nContainers: 0\nImages: 0\nStorage Driver: aufs\n Root Dir: /var/lib/docker/aufs\n Dirs: 0\nExecution Driver: native-0.2\nKernel Version: 3.13.0-43-generic\nOperating System: Ubuntu 14.04.1 LTS\nCPUs: 12\nTotal Memory: 62.89 GiB\nName: srv28\nID: SDXF:XYT2:PAMA:OSYS:2QJD:VIZN:MDUU:PYJK:YJXY:2RCA:4A6F:ZCDL\nWARNING: No swap limit support\n```\n\nand `/var/log/upstart/docker.log` should contains something like\n\n```\nINFO[0000] +job serveapi(unix:///var/run/docker.sock)   \nINFO[0000] Listening for HTTP on unix (/var/run/docker.sock) \nINFO[0000] +job init_networkdriver()                    \nINFO[0000] -job init_networkdriver() = OK (0)           \nINFO[0000] WARNING: Your kernel does not support cgroup swap limit. \nINFO[0000] Loading containers: start.                   \nINFO[0000] Loading containers: done.                    \nINFO[0000] docker daemon: 1.4.1 5bc2ff8; execdriver: native-0.2; graphdriver: aufs \n```\n\nAdditional info:\n\nRunning the following command allows the Docker daemon to start\nproperly:\n\n```\napt-get install apparmor\n```\n\nThus the lxc-docker package should depend on apparmor which contains the missing executable `/sbin/apparmor_parser`.\n"},{"labels":["documentation",null,null],"text":"This is a request for comments to either build our own tooling, or use existing tools to do the following:\n- Keep bash completions in sync with the client (when flags are added, etc)\n- Keep API docs up to date when the API is updated/ new things are added\n- Keep man pages in sync with changes to the client\n\nIf anyone has existing tools they think would be good for this, please comment. The problems that we have seen with suggested tools in the past are that they are not easily integrated to our setup and we cannot benefit from all the features they provide. Also we wind up only solving part of the problem. So it ends up feeling like a big, heavy bandaid and is not ideal.\n"},{"labels":["documentation",null,null],"text":"I might take a crack at this if there's interest, but I'd like to at least note down that I'm keen on having a page in documentation dedicated to discussing the upgrade path for users running versions of Docker that lag behind the latest.  In particular it would be useful to formalize what to do in the case of when the user has installed with `curl get.docker.com | sh` and they want to upgrade.  Especially when urgent security fixes come out, it'd be nice to have a canonical way to do this (and possibly a script or something that does much of the work for you).\n\nRight now what I do for hobby use is:\n1. download the latest binary i.e. https://docs.docker.com/installation/binaries/#get-the-docker-binary\n2. replace the existing binary \n3. `sudo service docker restart`\n4. `docker run` the containers that were previously running again.  I can't remember if the processes that were run when the daemon restart happens get ghosted (which might cause odd issues), but they didn't show up in `docker ps` after a daemon reset with a new version last time that I checked.  I'm not sure if this is expected behavior or not.\n\nMy way of doing things might be completely broken but without an official word from us I'm not entirely sure if it is or isn't.\n\nAlso, if you're running a version from a package manager (say, 1.2) that is vulnerable and the official package archives lag behind the latest docker release, what do you do?\n"},{"labels":["documentation",null],"text":"Related: https://github.com/docker/docker/issues/9393, https://github.com/docker/docker/issues/5545\n\nThe way that default values for boolean flags/options is documented is confusing for some people and choosing a simpler notation could take away that confusion.\n\nFor example;\n\n```\n-v, --version=false               Print version information and quit\n```\n\nCould be interpreted as;\n\n\"To print version information, run `docker --version=false`\", whereas it _should_ be used;\n`docker --version`.\n\n_Technically_, it could be used as `docker --version=true`, but I doubt many people will find\nthat useful, so _not_ documenting this seems reasonable to me.\n### Proposed change\n\nChange the documentation (and help) for flags/options that _don't_ require/expect a value, and \nremove the default value. Flags that _do_ accept a value should still mention this.\n\nThe documentation will look like this;\n\n```\n-v, --version               Print version information and quit\n```\n### Other software\n\nI did a quick check how other software handles this. Some examples are below;\n\n```\n# MySQL:\n -V, --version       Output version information and exit.\n --select-limit=#    Automatic limit for SELECT when using --safe-updates.\n\n --server-arg=name   Send embedded server this as a parameter.\n\n# GIT\nusage: git [--version] [--help] [-C <path>] [-c name=value]    \n\n# Fig\nOptions:\n  --version                 Print version and exit\n  -f, --file FILE           Specify an alternate fig file (default: fig.yml)\n  -p, --project-name NAME   Specify an alternate project name (default: directory name)\n\n# SubVersion (svn checkout)\nValid options:\n  -r [--revision] ARG      : ARG (some commands also take ARG1:ARG2 range)\n                             [edited]\n  -q [--quiet]             : print nothing, or only summary information\n```\n\n**NOTE**\nThis proposal does _not_ intent to change the way flags are working right now, \nonly change the way it is _documented_. Changing the behavior of flags and renaming\nwas proposed in the past (https://github.com/docker/docker/pull/5760, https://github.com/docker/docker/pull/5764) and voted against / rejected, so please do not bring that up here again.\n"},{"labels":["documentation",null],"text":"This should be similar to https://github.com/docker/docker/issues/1024\nI am using:\nOSX yosemite\ndocker 1.3.1\nboot2docker 1.3.2\nI use as a **centos** base from sequenceiq: https://github.com/sequenceiq/hadoop-docker \nI try to install R and RStudio.  R does not give any problem, but this is what I get from RStudio:\n### \n\nInstall       1 Package(s)\nTotal size: 276 M\nInstalled size: 276 M\nDownloading Packages:\nRunning rpm_check_debug\nRunning Transaction Test\nTransaction Test Succeeded\nRunning Transaction\n  Installing : rstudio-server-0.98.1091-1.x86_64                            1/1 \ngroupadd: group 'rstudio-server' already exists\nrsession: no process killed\n**initctl: Unable to connect to Upstart: Failed to connect to socket /com/ubuntu/upstart: Connection refused**\ninitctl: Unable to connect to Upstart: Failed to connect to socket /com/ubuntu/upstart: Connection refused\n  Verifying  : rstudio-server-0.98.1091-1.x86_64                            1/1 \nInstalled:\n  rstudio-server.x86_64 0:0.98.1091-1  \nComplete!\n### \n\nAt the end of all the components load, I get:\n\nStep 31 : RUN echo rstudio | passwd --stdin rstudio\n ---> Running in 6bd3038eec99\n/usr/share/cracklib/pw_dict.pwd: No such file or directory\nPWOpen: Invalid argument\n## \n\nPlease note that the error message referring to ubuntu does not help to understand what is the issue.\n\nThanks in advance for any help.\n"},{"labels":["documentation",null],"text":"https://github.com/docker/docker/blob/master/docs/sources/articles/b2d_volume_resize.md\n"},{"labels":["documentation",null],"text":"http://docs.docker.com/userguide/dockerrepos/#find-public-images-on-docker-hub\n\nI tried the same steps except searching for node, and sure, I get the main top-level node result. The docs however seem to indicate this is image results I'm seeing, but they seem to be repositories. In fact, when I continue to the next step and run docker pull node, docker tries to download all images in the repo, clearly not what you expect from reading the documentation. \n\nAlso, there doesn't seem to be a clear way to list all images in the node repo from the command line. I only realised \"docker pull node:latest\" is what I was looking for from looking at the node repo website on the docker hub. \n"},{"labels":["documentation",null],"text":"Hi All,\n\nI am setting up the docker build environment. There is a step in docker makefile that:\n\ndocker build -t \"docker:master\" .\n\nand in the dockerfile, it need install golang as followed:\n# Install Go\n\nRUN    curl -sSL https://golang.org/dl/go1.3.3.src.tar.gz | tar -v -C /usr/local -xz\n\nUnfortunately, I can not directly visit golang from local so I setup a ssh tunnel and I can successfully vist the go source file through the pipe by command \" curl --socks5 127.0.0.1:9090 -sSL https://golang.org/dl/go1.3.3.src.tar.gz\". And then, I change the dockerfile as:\n# Install Go\n\nRUN    curl --socks5 127.0.0.1:9090 -sSL https://golang.org/dl/go1.3.3.src.tar.gz | tar -v -C /usr/local -xz\n\nBut it failed by:\n\nStep 5 : RUN curl --socks5 127.0.0.1:9090 -sSL https://golang.org/dl/go1.3.3.src.tar.gz | tar -v -C /usr/local -xz\n ---> Running in 00ea81fe6596\ncurl: (7) Failed to connect to 127.0.0.1 port 9090: Connection refused\n\nIt seems that docker build running in different network stacks as my host. Is there any idea to help resolve it?\n"},{"labels":["documentation",null],"text":"I just found this today; \n Docker Remote API wrapper for Haskell - a Work in progress ; https://github.com/denibertovic/docker-hs \nThe doc page said to add a bug if new API's were discovered :).\nhttps://docs.docker.com/reference/api/remote_api_client_libraries/\n"},{"labels":[null,"documentation",null],"text":"**Summary**: \nThere is no standardised \"naming\" for (sub)commands on the CLI (e.g. plural vs singular, create vs add), sometimes leading to inconsistencies.  \n\n**Proposed solution**:\nA design document should be written, describing the (naming) conventions to follow for commands and the UX in general.\n\n---\n\nA number of new features are currently proposed via PRs for addition to Docker. These features add new commands to the CLI and I have noticed that the UI for those commands (and _existing_ commands) is inconsistent.\n\nWhile there still a chance to change those proposals before they are merged, I think it would be a good thing to review those PRs and reach consensus on what the UI should look like to be consistent.\n\nI've created a (far from complete) overview of some _existing_ and _proposed_ commands;\n\n| Entity | Action | Command | Notes |\n| --- | --- | --- | --- |\n| Container | list | `docker ps` |  |\n| Device | list | - | (not supported) |\n| Host | list | `docker hosts` | no sub command. see https://github.com/docker/docker/issues/8681 |\n| Image | list | `docker images` | no sub command (`ls`) |\n| Links | list | `docker links list` | see https://github.com/docker/docker/issues/7468 |\n| Volume | list | `docker volumes ls` | see https://github.com/docker/docker/pull/8484 |\n| Container | delete | `docker rm (id)` |  |\n| Device | delete | `docker device remove (id)` | see https://github.com/docker/docker/pull/8826 |\n| Host | delete | - | (not supported?) |\n| Image | delete | `docker rmi (id)` |  |\n| Links | delete | `docker links remove (id)` |  |\n| Volume | delete | `docker volumes rm (id)` |  |\n| Container | create | `docker create` | no \"containers\" before \"create\" |\n| Device | create | `docker device add` | note: _singular_ \"device\", others are \"plural\" |\n| Host | create | `docker hosts create` | `run` [is proposed as alternative](https://github.com/docker/docker/issues/8681#issuecomment-60349475) |\n| Link | create | `docker links add` |  |\n| Volume | create | `docker volumes add` |  |\n- The `ls` and `list` subcommands could be omitted dropped for `volumes` and `links` to be in line with the existing `images` command. \n- The subcommand for \"delete\" should either be \"remove\" or \"rm\" for all entities.\n- The subcommand for \"create\" could be renamed from \"add\" to \"create\" to be in line with the existing `docker create` command (not sure, I actually like \"add\")\n- All entities / top-level commands should be either plural or singular (rename `device` to `devices`?)\n\nNow that the \"links\" (https://github.com/docker/docker/issues/7468), \"volumes\" (https://github.com/docker/docker/pull/8484), \"hosts\" (https://github.com/docker/docker/issues/8681) and \"devices\" (https://github.com/docker/docker/pull/8826) changes are still a proposal, I think the creators those proposals should discuss a consistent UI before they're implemented to keep things consistent.\n\nFor the _existing_ commands I understand that most frequently used commands are deliberately left short for convenience, perhaps \"long\" versions (`docker images rm`?) could be added to make the UI more consistent.\n\n(This is a follow up on a comment I placed here https://github.com/docker/docker/pull/8484#issuecomment-60827328)\n\n**update**\nAdded the \"hosts\" proposal to the list and sorted the list a bit\n"},{"labels":[null,"documentation"],"text":"I think the ADD and COPY directives don't work as one would expect. Given this directory layout:\n\n```\n.:\ndir  Dockerfile  rootfile.txt\n\n./dir:\nchild  dirfile.txt\n\n./dir/child:\nchildfile.txt\n```\n\nand this Dockerfile:\n\n```\nFROM debian:wheezy\nCOPY rootfile.txt dir /test/\nCMD [\"ls\", \"-R\", \"/test\"]\n```\n\nI get this image result:\n\n```\n/test:\nchild  dirfile.txt  rootfile.txt\n\n/test/child:\nchildfile.txt\n```\n\nThe documentation states that `If <src> is a directory, the entire directory is copied, including filesystem metadata.`\nThis sound like the COPY and ADD directive should behave like a `cp -r <src> <dest>` (which I expected), but if `<src>` is a directory, not the directory itself is copied but the contents of the directory.\n\nIs this intended behavior?  When yes, then the documentation should clearly say that the contents of a <src> directory is copied and not the directory.\n\n```\ndocker version:\nClient version: 1.3.0\nClient API version: 1.15\nGo version (client): go1.3.3\nGit commit (client): c78088f\nOS/Arch (client): linux/amd64\nServer version: 1.3.0\nServer API version: 1.15\nGo version (server): go1.3.3\nGit commit (server): c78088f\n\ndocker info:\nContainers: 8\nImages: 69\nStorage Driver: aufs\n Root Dir: /var/lib/docker/aufs\n Dirs: 85\nExecution Driver: native-0.2\nKernel Version: 3.17.1-1-aufs_friendly\nOperating System: Arch Linux\nDebug mode (server): false\nDebug mode (client): true\nFds: 10\nGoroutines: 15\nEventsListeners: 0\nInit SHA1: e244de98e642144b162d1936978b8ac5d024d546\nInit Path: /usr/lib/docker/dockerinit\nWARNING: No swap limit support\n```\n"},{"labels":["documentation",null],"text":"Hi guys,\n\n**Basic problem:**\nthe doc section on Dockerfiles is rather confusing, because it doesn't really explain an important concept: why is the dockerfile named \"Dockerfile\" similar to \"Makefile\", and what does that mean for the folder is it in? Why is it not just a \"buildmyimage\" file and that's it? Why a whole folder around it, what is it for?\n\n**Current situation:**\nThe docs make a basic attempt at explaining it here: http://docker.readthedocs.org/en/v0.5.3/use/builder/ 1. Usage: \"To build an image from a source repository, create a description file called Dockerfile at the root of your repository.\"\n\nHowever, the docs completely drop the ball clarifying this. What is a repository here? Is that something special with special other files that are automatically used? Does it need a specific layout?\n\nEven worse, if you are sufficiently confused to click \"Working with repositories\" in the navigation to clear this up, that section introduces a confusing online image thing where the basic concept of what a single repository is _in practise on my hard disk as a basic folder_ is entirely missing.\n\n**Proposal:**\nhttp://docker.readthedocs.org/en/v0.5.3/use/builder/ 1. Usage: \"To build an image from a source repository, create a description file called Dockerfile at the root of your repository.\"\n\nChange to: \"To build an image from a source repository, create a description file called Dockerfile at the root of your repository, which is just the basic folder containing all sorts of other resources you might need and later reference from your Dockerfile to include and use for your image as needed.\"\n\nOr whatever you see fit. But please add a proper explanation!\n\n**Disclaimer:**\nI started reading the docker docs a few hours ago, so I might be misunderstanding basic concepts. But this really seemed confusing to me, so it would be neat if you could look into it - unless the explanation is already there and I was just too blind to stumble across it.\n"},{"labels":["documentation",null],"text":"Bugzilla https://bugzilla.redhat.com/show_bug.cgi?id=1121689 \n\nDescription of problem:\nThe handling of stdout/stderr stream is not correct in tty mode (works fine in non-tty mode). You can see it on the example bellow. (`ls non_existing_file` prints into stderr stream)\n\nVersion-Release number of selected component (if applicable):\ndocker-1.1.1-1.el7.x86_64\n\nHow reproducible:\nAlways\n\nSteps to Reproduce:\nTTY:\n[root@localhost ~]# docker run -t -a stderr fedora ls non_existing_file\n[root@localhost ~]# docker run -t -a stdout fedora ls non_existing_file\nls: cannot access non_existing_file: No such file or directory\nNON-TTY:\n[root@localhost ~]# docker run -a stderr fedora ls non_existing_file\nls: cannot access non_existing_file: No such file or directory\n[root@localhost ~]# docker run -a stdout fedora ls non_existing_file\n\nActual results:\nIn tty mode the output is visible only when STDOUT is attached, in non-tty mode it's visible in STDERR\n\nExpected results:\nIn booth modes the output should be in STDERR stream.\n\nAdditional info:\nWhen I use `ls /` it prints the info correctly into STDOUT in booth modes.\n"},{"labels":[null,"documentation",null,null],"text":"Registry 0.8.0 and the Hub and Registry Spec v1.2 do not match up for pushing images. I haven't tested pulling images yet.\n\nCan you clarify which version of the spec goes with which version of the registry?\n\nAs far as I can tell steps are wrong.\n\nFor pushing an image I'm seeing this request GET /v1/repositories/dockerfile/nginx/layer/27cf784147099545/access, yet there is no documentation talking about an access endpoint, and the built in no-auth index apart of the registry code doesn't event reference an access endpoint.\n\nThe behavior I see is the following. This is version 0.8.0 of the registry and 1.2.0 of the docker client/daemon\n\n(this flow here does not include the registry actions, just the actions I am seeing on the index/hub)\n1. GET /v1/_ping\n2. PUT /v1/repositories/:namespace/:repo\n3. GET /v1/repositories/:namespace/:repo/images\n4. GET /v1/repositories/:namespace/:repo/images\n5. GET /v1/repositories/:namespace/:repo/layer/:image/access\n\nAt step 5 it fails with `2014/09/08 12:11:34 HTTP code 400 while uploading metadata: {\"error\": \"Image depends on an unauthorized parent\"}`\n\nThanks.\n"},{"labels":["documentation",null],"text":"Based on https://docs.docker.com/articles/runmetrics/#interface-level-counters but scripted/refined and working on Ubuntu 14.04. The main thing needed in the documentation a comment for 14.04 showing the path to the cgroup device is /sys/fs/cgroup/devices/docker/$CID_/tasks instead of /sys/fs/cgroup/devices/$CID_/tasks, but here's a script to show the interface stats in one command.\n\n```\n#!/bin/bash\nif [ $# -ne 1 ]; then\n  echo \"usage: $0 {container_id}\"\n  exit 1\nfi\n\nSHORT_CID=$1\nCID=$(docker inspect --format=\"{{.Id}}\" ${SHORT_CID} 2>/dev/null)\nif [ $? -ne 0 ]; then\n  echo \"No container: ${SHORT_CID}\"\n  echo \"Are you running with sudo?\"\n  exit 2\nfi\n\n\nTASKS=/sys/fs/cgroup/devices/docker/$CID/tasks\nPID=$(head -n 1 ${TASKS})\nNETNS_PATH=/var/run/netns/${CID}\n\nmkdir -p /var/run/netns\nln -sf /proc/$PID/ns/net ${NETNS_PATH}\nip netns exec ${CID} netstat -i\n\nunlink ${NETNS_PATH}\n```\n"},{"labels":["documentation",null],"text":"Many fields in the response objects that I actually get in my local calls do not exist in Remote API v1.13 documentation.\n\nAnd documentation is so bad that there are no types specified.\n\ne.g. it just says:\n\n```\n \"PortSpecs\":null,\n```\n\nwhat is the type of this field? It is just a null in JSON response.\n\nThat doesn't make sense. Docs are very vague and it's almost impossible to write a correctly working client without reading other clients and keep testing every single corner case (e.g. you gotta reproduce a case where portspecs is not null by creating a container etc).\n\nThis is crazy and will not help things move forward very well.\n"},{"labels":["documentation",null],"text":"The `USER user` command in Dockerfiles does the equivalent of `su user -c command` for all future `RUN command` commands.\n\nI propose adding the `GROUP group` command, which would do the equivalent of `sg group -c command` for all future `RUN command` commands.\n\n`newgrp` is a command that works a lot like `su` without a `-c` command, and sets the gid for future commands in the shell, but due to the way docker works, this is cleared between each command in the Dockerfile, so something like the following does _NOT_ work:\n\n```\nUSER user\nnewgrp group\n```\n\nInstead, my hope would be to be able to do something like:\n\n```\nUSER user\nGROUP group\n```\n"},{"labels":["documentation",null],"text":"https://docs.docker.com/examples/running_riak_service/\n\nhttp://jpetazzo.github.io/2014/06/23/docker-ssh-considered-evil/\n"},{"labels":["documentation",null],"text":"This page http://docs.docker.com/docker-hub/accounts/#organizations-groups should have more information about groups and how groups work with orgs. It should also have more information about roles of groups (read, write, admin) and what the permissions are for each group. I believe they are proper subsets of each other (admin ( write ( read ))) but I don't see that documented anywhere.\n"},{"labels":["documentation",null,null],"text":"When using volumes, the usefullness of the volume is limited without coupling it with a data-container.\nThe reason for this is the tie between a container and the volume... when the container goes away so does the possibility of actually using the data in that volume again, unless you'd happened to copy the host path of that volume.\n\n**Sumary**: referencing a volume is impossible when last container is removed\n\n**Proposed Solution**: Provide volume management API/UI.  This has started to be implemented in #8484\n"},{"labels":["documentation",null],"text":"which is a bit of a shame\n"},{"labels":["documentation",null],"text":"Operators need to know where the data in \"volumes\" is stored on the host so that they can monitor size, perform backups, migrate data, etc.\n\nHere is one way to dump the bindmounts on a container:\n\n```\n# Create a test container with volumes\n$ docker run --name testvol -v /vol-anon -v /tmp/vol:/vol-named ubuntu true\n\n# Ok, let's see where those volumes went...\n$ docker inspect --format={{.Volumes}} testvol\nmap[/vol-anon:/var/lib/docker/vfs/dir/1ed44639019c10269718628da26d792857c01dc0d383169841855db83c2d6904 /vol-named:/tmp/vol]\n```\n\nI think this would be a helpful addition to http://docs.docker.io/use/working_with_volumes/\n"},{"labels":["documentation",null,null],"text":"The `docker cp` command can currently copy a file from the container to the host. It should also be able to do the reverse.\n\nPing @crosbymichael \n"},{"labels":["documentation",null],"text":"We currently prefix commands with `#` or `$`. We should either:\n1. replace this/remove these.\n2. Have some JS magic so people who select commands in highlight boxes don't get the prefix.\n"},{"labels":["documentation",null],"text":"(on a just installed 14.04)\n\ncurl https://get.docker.io | sh\nsudo apt-get install docker.io\n\n(the second removes our package, and installs the ubuntu one)\n\nleaves us with `service --status-all` listing 2 services: `docker` and `docker.io`\n\nwhich makes me think our lxc-docker package is not cleaning up quite well enough.\n\nrebooting at this point leaves us with a happily working Docker 0.9.1\n\nthen `ln -s /usr/bin/docker.io /usr/bin/docker` and rebooting causes things to go bad.\n\non my system, there is only one docker daemon running, but its un-contactable.\n\n`service docker stop` does nothing, as its not running\n`service docker.io stop` stops the rogue daemon, and then \n`service docker.io start` makes everything happy again.\n\nsimilarly, after stopping which ever service is  running, \n`service docker start` works.\n\nso its probably _just_ something that happens if you start 2 daemons at almost the same time.\n"},{"labels":["documentation",null],"text":"Surely it should read \"--no-trunc=true: Don't truncate output\" or \"--no-trunc=false: Truncate output (default behaviour)\".\n\nSimilar for \"--quiet=false\".  I presume it was intended to show the alternatives (either \"-q\" or \"--quiet=false\"), however the textual description is misleading.\n\nI think a better format would be  \"-q, --quiet=<true|false>: whether to only display numeric IDs\", or something along those lines.\n\n```\nanni@helium:~/src/Redis$ docker ps -h\n\nUsage: docker ps [OPTIONS]\n\nList containers\n\n  -a, --all=false: Show all containers. Only running containers are shown by default.\n  --before=\"\": Show only container created before Id or Name, include non-running ones.\n  -l, --latest=false: Show only the latest created container, include non-running ones.\n  -n=-1: Show n last created containers, include non-running ones.\n  --no-trunc=false: Don't truncate output\n  -q, --quiet=false: Only display numeric IDs\n  -s, --size=false: Display sizes\n  --since=\"\": Show only containers created since Id or Name, include non-running ones.\nanni@helium:~/src/Redis$\nanni@helium:~/src/Redis$ docker version\nClient version: 0.10.0\nClient API version: 1.10\nGo version (client): go1.2.1\nGit commit (client): dc9c28f\nServer version: 0.10.0\nServer API version: 1.10\nGit commit (server): dc9c28f\nGo version (server): go1.2.1\nLast stable version: 0.10.0\nanni@helium:~/src/Redis$\n```\n"},{"labels":[null,"documentation"],"text":"Similar to #1136.\n\nI want to be able to say `CMD [ \"$CATALINA_HOME/bin/catalina.sh\", \"run\"]`\n"},{"labels":["documentation",null],"text":"When there is nothing to show in TOC, maybe we could hide it or display the main title?\n\nExample on contribution:\n![screen shot 2014-04-17 at 3 56 00 pm](https://cloud.githubusercontent.com/assets/521701/2737901/8a524fe0-c683-11e3-89a3-1fa97a2726d4.png)\n\n/cc @SvenDowideit @ostezer @jamtur01 \n"},{"labels":["documentation",null],"text":"While `docker logs` is extremely useful for inspecting containers, [the documentation gives no hints as to how it should be handled operationally](http://docs.docker.io/en/latest/reference/commandline/cli/#logs).\n\nOutstanding questions include:\n- Where are logs stored (or are they an inmemory ring buffer like dmesg)?\n- If they are stored, how are they rotated so they don't grow without bound?\n- Is it a best practice for daemons running in containers to _not_ using `std{out,err}` for logging (and instead use the host's syslog, a log file in a mounted voulme, a remote daemon, etc.)?\n\nAs per guidelines for contribution:\n\n```\nClient version: 0.9.1\nGo version (client): go1.2.1\nGit commit (client): 3600720\nServer version: 0.9.1\nGit commit (server): 3600720\nGo version (server): go1.2.1\nLast stable version: 0.9.1\n\nContainers: 3\nImages: 47\nStorage Driver: aufs\n Root Dir: /var/lib/docker/aufs\n Dirs: 57\nExecution Driver: native-0.1\nKernel Version: 3.11.0-18-generic\nWARNING: No swap limit support\n```\n\nI tried searching existing issues for duplicates, but logging is a very difficult thing to search on. Please feel free to close if this is a dupe.\n"},{"labels":[null,"documentation"],"text":"http://docs.docker.io/en/latest/reference/api/docker_remote_api_v1.10/#tag-an-image-into-a-repository\n\nDoesn't describe how to set the tag on the image...just allows you to provide the image repo.\n"},{"labels":["documentation",null,null],"text":"I was using the following\n\nENV MYPATH /usr/local/myPath\nCMD [ \"ls\", \"-la\", \"$MYPATH\"]\n\nand I get \nls: cannot access $MYPATH: No such file or directory\n\nBut, if I used the other format\nCMD ls -la $MYPATH\n\nthen the listing is correct.\n\nCMD [ \"ls\", \"-la\", $NMMHOME ] simply doesn't work\n\nNow I also was trying something like this.\n\nENTRYPOINT [ \"$MYPATH/start.sh\"]\n\ndoesn't work. Some problem : unable to locate $MYPATH/start.sh\n\nBut similarly to CMD 'shell version'\n\nENTRYPOINT $MYPATH/start.sh\n\nworks fine.\n\nAlso the start.sh is referencing the $MYPATH as well and it sees the correct value.\n\nSo I think there is still a bug in specifying the environment variables within the CMD / ENTRYPOINT commands when using the exec like way (preferred method)\n"},{"labels":["documentation",null],"text":"**Description**\r\nI was visiting https://mobyproject.org/ and when I clicked github link it redirected to 404 Page Not found.\r\n\r\n**Steps to reproduce the issue:**\r\n1. Go to https://mobyproject.org/\r\n2.Click on Github Link\r\n\r\n**Describe the results you received:**\r\nIt redirected to `https://github.com/moby/moby/blob/moby/README.md` \r\n\r\n**Describe the results you expected:**\r\nI think it should be `https://github.com/moby/moby/` or to README page `https://github.com/moby/moby/blob/master/README.md`\r\n"},{"labels":[null,"documentation",null,null],"text":"**Description**\r\n\r\nThe SwarmJoin API supports `Availability` (https://github.com/moby/moby/blob/master/daemon/cluster/swarm.go#L147-L188), which the CLI client also uses, but it is not documented in the API docs (https://github.com/moby/moby/blob/master/api/swagger.yaml#L10008).\r\n"},{"labels":["documentation",null],"text":"<!--\r\nIf you are reporting a new issue, make sure that we do not have any duplicates\r\nalready open. You can ensure this by searching the issue list for this\r\nrepository. If there is a duplicate, please close your issue and add a comment\r\nto the existing issue instead.\r\n\r\nIf you suspect your issue is a bug, please edit your issue description to\r\ninclude the BUG REPORT INFORMATION shown below. If you fail to provide this\r\ninformation within 7 days, we cannot debug your issue and will close it. We\r\nwill, however, reopen it if you later provide the information.\r\n\r\nFor more information about reporting issues, see\r\nhttps://github.com/moby/moby/blob/master/CONTRIBUTING.md#reporting-other-issues\r\n\r\n---------------------------------------------------\r\nGENERAL SUPPORT INFORMATION\r\n---------------------------------------------------\r\n\r\nThe GitHub issue tracker is for bug reports and feature requests.\r\nGeneral support for **docker** can be found at the following locations:\r\n\r\n- Docker Support Forums - https://forums.docker.com\r\n- Slack - community.docker.com #general channel\r\n- Post a question on StackOverflow, using the Docker tag\r\n\r\nGeneral support for **moby** can be found at the following locations:\r\n\r\n- Moby Project Forums - https://forums.mobyproject.org\r\n- Slack - community.docker.com #moby-project channel\r\n- Post a question on StackOverflow, using the Moby tag\r\n\r\n---------------------------------------------------\r\nBUG REPORT INFORMATION\r\n---------------------------------------------------\r\nUse the commands below to provide key information from your environment:\r\nYou do NOT have to include this information if this is a FEATURE REQUEST\r\n-->\r\n\r\n**Description**\r\n\r\nsystemd is not recognized. There seems to be some relation to the login method [see stack exchange question & answer](https://unix.stackexchange.com/questions/587674/systemd-not-detected-dockerd-daemon-needs-to-be-started-manually)\r\n\r\n<!--\r\nBriefly describe the problem you are having in a few paragraphs.\r\n-->\r\n\r\n**Steps to reproduce the issue:**\r\n1. Open [Docker Rootless Tutorial on Katacoda](https://www.katacoda.com/courses/docker/rootless)\r\n2. Execute every command in the turorial\r\n\r\n\r\n**Describe the results you received:**\r\n\r\nreceive the warnings \r\n```\r\nsystemd is not detected, dockerd daemon needs to be started manually\r\n...\r\n#WARN: systemd not found. You have to remove XDG_RUNTIME_DIR manually on every logout\r\n``` \r\nand watch the first command in step 3 fail with\r\n![image](https://user-images.githubusercontent.com/29106652/91537131-17702800-e916-11ea-9454-aa7eaa9d7eec.png)\r\n\r\n**Describe the results you expected:**\r\nA tutorial [suggested by the maintainer of the project](https://youtu.be/Qq78zfXUq18?t=659) should work. Especially since it is identical to the tutorial on https://docs.docker.com/engine/security/rootless/ which also results in these warnings on my machine.\r\n\r\n**Additional information you deem important (e.g. issue happens only occasionally):**\r\n\r\n**Output of `docker version`:**\r\n\r\n![image](https://user-images.githubusercontent.com/29106652/91537740-14296c00-e917-11ea-8559-128c79e19036.png)\r\n\r\n\r\n**Output of `docker info`:**\r\n![image](https://user-images.githubusercontent.com/29106652/91537683-fd831500-e916-11ea-80f4-e77ba371dbae.png)\r\n\r\n\r\nI barely even understand what systemd does. So I really have no idea what is happening. If you have suggestions how to get this working it would be greatly appreciated.\r\n"},{"labels":[null,"documentation",null],"text":"**Description**\r\n\r\nThe documentation does not AFAIK mention that environment would take precedence over command line arguments, which is AFAIK not conventional.\r\n\r\nOnly mention is this [1]\r\n\r\n> You can also set the current context using the DOCKER_CONTEXT environment variable. This overrides the context set with docker context use.\r\n\r\n[1] https://docs.docker.com/engine/context/working-with-contexts/#use-a-different-context\r\n\r\n**Steps to reproduce the issue:**\r\n\r\n```bash\r\n  ~ ls test\r\nDockerfile\r\n➜  ~ DOCKER_CONTEXT=/dev/null docker build ./test\r\nunable to resolve docker endpoint: context \"/dev/null\" does not exist\r\n```\r\n\r\n**Describe the results you received:**\r\n\r\nEnvironment is read instead of the positional `PATH`\r\n\r\n**Describe the results you expected:**\r\n\r\nCommand line is read.\r\n\r\n**Additional information you deem important (e.g. issue happens only occasionally):**\r\n\r\nn/a\r\n\r\n**Output of `docker version`:**\r\n\r\nn/a - happens on all version I tried\r\n\r\n**Output of `docker info`:**\r\n\r\nn/a - happens on multiple systems\r\n\r\n**Additional environment details (AWS, VirtualBox, physical, etc.):**\r\n\r\nalso n/a"},{"labels":["documentation"],"text":"<!--\r\nIf you are reporting a new issue, make sure that we do not have any duplicates\r\nalready open. You can ensure this by searching the issue list for this\r\nrepository. If there is a duplicate, please close your issue and add a comment\r\nto the existing issue instead.\r\n\r\nIf you suspect your issue is a bug, please edit your issue description to\r\ninclude the BUG REPORT INFORMATION shown below. If you fail to provide this\r\ninformation within 7 days, we cannot debug your issue and will close it. We\r\nwill, however, reopen it if you later provide the information.\r\n\r\nFor more information about reporting issues, see\r\nhttps://github.com/moby/moby/blob/master/CONTRIBUTING.md#reporting-other-issues\r\n\r\n---------------------------------------------------\r\nGENERAL SUPPORT INFORMATION\r\n---------------------------------------------------\r\n\r\nThe GitHub issue tracker is for bug reports and feature requests.\r\nGeneral support for **docker** can be found at the following locations:\r\n\r\n- Docker Support Forums - https://forums.docker.com\r\n- Slack - community.docker.com #general channel\r\n- Post a question on StackOverflow, using the Docker tag\r\n\r\nGeneral support for **moby** can be found at the following locations:\r\n\r\n- Moby Project Forums - https://forums.mobyproject.org\r\n- Slack - community.docker.com #moby-project channel\r\n- Post a question on StackOverflow, using the Moby tag\r\n\r\n---------------------------------------------------\r\nBUG REPORT INFORMATION\r\n---------------------------------------------------\r\nUse the commands below to provide key information from your environment:\r\nYou do NOT have to include this information if this is a FEATURE REQUEST\r\n-->\r\n\r\n**Description**\r\n\r\nIn the OpenAPI documentation for the SystemDataUsage operation, the response schema describes a BuildCache as having properties CreatedAt and LastUsedAt of type integer. However, in the code types.BuildCache is defined as having properties CreatedAt and LastUsedAt of type time.time, and when a time.time value is passed to json.Encoder the type emitted in the JSON document is a RFC 3339 string because of time.time's MarshalJSON implementation.\r\n\r\nThis causes problems for anyone who is using the API documentation to autogenerate API clients.\r\n\r\n**Steps to reproduce the issue:**\r\n1. Run builds using BuildKit.\r\n2. Request SystemDataUsage via the API.\r\n\r\n**Describe the results you received:**\r\n\r\n    {\r\n      \"ID\": \"rrc3gr2ks5mm41ntmlqsqu2k4\",\r\n      \"Parent\": \"2tub3atjmssqqh0ji08jjc5oj\",\r\n      \"Type\": \"regular\",\r\n      \"Description\": \"fileop target\",\r\n      \"InUse\": false,\r\n      \"Shared\": false,\r\n      \"Size\": 353,\r\n      \"CreatedAt\": \"2020-06-17T14:55:03.5952988Z\",\r\n      \"LastUsedAt\": \"2020-06-17T14:55:44.6490503Z\",\r\n      \"UsageCount\": 1\r\n    }\r\n\r\nThis causes [Bollard](https://github.com/fussybeaver/bollard) to return a parse error because the CreatedAt property is found, but cannot be converted to an integer for storage into the struct.\r\n\r\n**Describe the results you expected:**\r\n\r\nEither CreatedAt and LastUsedAt should be integers, or the API specification should define these properties as strings (or being possibly being either type?).\r\n\r\n**Additional information you deem important (e.g. issue happens only occasionally):**\r\n\r\n**Output of `docker version`:**\r\n\r\n```\r\n$ docker version\r\nClient: Docker Engine - Community\r\n Version:           19.03.8\r\n API version:       1.40\r\n Go version:        go1.12.17\r\n Git commit:        afacb8b\r\n Built:             Wed Mar 11 01:21:11 2020\r\n OS/Arch:           darwin/amd64\r\n Experimental:      false\r\n\r\nServer: Docker Engine - Community\r\n Engine:\r\n  Version:          19.03.8\r\n  API version:      1.40 (minimum version 1.12)\r\n  Go version:       go1.12.17\r\n  Git commit:       afacb8b\r\n  Built:            Wed Mar 11 01:29:16 2020\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     false\r\n containerd:\r\n  Version:          v1.2.13\r\n  GitCommit:        7ad184331fa3e55e52b890ea95e65ba581ae3429\r\n runc:\r\n  Version:          1.0.0-rc10\r\n  GitCommit:        dc9208a3303feef5b3839f4323d9beb36df0a9dd\r\n docker-init:\r\n  Version:          0.18.0\r\n  GitCommit:        fec3683\r\n```\r\n\r\n**Output of `docker info`:**\r\n\r\nI don't have the output of docker info because this issue was originally found by @mac-chaffee and raised as stepchowfun/docuum#78.\r\n\r\n**Additional environment details (AWS, VirtualBox, physical, etc.):**\r\n"},{"labels":[null,"documentation",null],"text":"<!--\r\nIf you are reporting a new issue, make sure that we do not have any duplicates\r\nalready open. You can ensure this by searching the issue list for this\r\nrepository. If there is a duplicate, please close your issue and add a comment\r\nto the existing issue instead.\r\n\r\nIf you suspect your issue is a bug, please edit your issue description to\r\ninclude the BUG REPORT INFORMATION shown below. If you fail to provide this\r\ninformation within 7 days, we cannot debug your issue and will close it. We\r\nwill, however, reopen it if you later provide the information.\r\n\r\nFor more information about reporting issues, see\r\nhttps://github.com/moby/moby/blob/master/CONTRIBUTING.md#reporting-other-issues\r\n\r\n---------------------------------------------------\r\nGENERAL SUPPORT INFORMATION\r\n---------------------------------------------------\r\n\r\nThe GitHub issue tracker is for bug reports and feature requests.\r\nGeneral support for **docker** can be found at the following locations:\r\n\r\n- Docker Support Forums - https://forums.docker.com\r\n- Slack - community.docker.com #general channel\r\n- Post a question on StackOverflow, using the Docker tag\r\n\r\nGeneral support for **moby** can be found at the following locations:\r\n\r\n- Moby Project Forums - https://forums.mobyproject.org\r\n- Slack - community.docker.com #moby-project channel\r\n- Post a question on StackOverflow, using the Moby tag\r\n\r\n---------------------------------------------------\r\nBUG REPORT INFORMATION\r\n---------------------------------------------------\r\nUse the commands below to provide key information from your environment:\r\nYou do NOT have to include this information if this is a FEATURE REQUEST\r\n-->\r\n\r\n**Description**\r\nIn api document `/version` response looks like wrong.\r\nhttps://github.com/moby/moby/blob/master/docs/api/v1.40.yaml#L7715\r\n\r\n<!--\r\nBriefly describe the problem you are having in a few paragraphs.\r\n-->\r\n\r\n**Steps to reproduce the issue:**\r\n1. `curl --unix-socket /var/run/docker.sock localhost/version`\r\n\r\n**Describe the results you received:**\r\n```\r\n{\r\n  \"Platform\": {\r\n    \"Name\": \"Docker Engine - Community\"\r\n  },\r\n  \"Components\": [\r\n    {\r\n      \"Name\": \"Engine\",\r\n      \"Version\": \"19.03.12\",\r\n      \"Details\": {\r\n        \"ApiVersion\": \"1.40\",\r\n        \"Arch\": \"amd64\",\r\n        \"BuildTime\": \"2020-06-22T15:44:07.000000000+00:00\",\r\n        \"Experimental\": \"false\",\r\n        \"GitCommit\": \"48a66213fe\",\r\n        \"GoVersion\": \"go1.13.10\",\r\n        \"KernelVersion\": \"5.3.0-62-generic\",\r\n        \"MinAPIVersion\": \"1.12\",\r\n        \"Os\": \"linux\"\r\n      }\r\n    },\r\n    ...\r\n  ],\r\n  \"Version\": \"19.03.12\",\r\n  \"ApiVersion\": \"1.40\",\r\n  \"MinAPIVersion\": \"1.12\",\r\n  \"GitCommit\": \"48a66213fe\",\r\n  \"GoVersion\": \"go1.13.10\",\r\n  \"Os\": \"linux\",\r\n  \"Arch\": \"amd64\",\r\n  \"KernelVersion\": \"5.3.0-62-generic\",\r\n  \"BuildTime\": \"2020-06-22T15:44:07.000000000+00:00\"\r\n}\r\n```\r\n\r\n**Describe the results you expected:**\r\nLooks like document is wrong.\r\nWe should update document?\r\n\r\n**Additional information you deem important (e.g. issue happens only occasionally):**\r\n\r\n**Output of `docker version`:**\r\n\r\n```\r\nClient: Docker Engine - Community\r\n Version:           19.03.12\r\n API version:       1.40\r\n Go version:        go1.13.10\r\n Git commit:        48a66213fe\r\n Built:             Mon Jun 22 15:45:36 2020\r\n OS/Arch:           linux/amd64\r\n Experimental:      false\r\n\r\nServer: Docker Engine - Community\r\n Engine:\r\n  Version:          19.03.12\r\n  API version:      1.40 (minimum version 1.12)\r\n  Go version:       go1.13.10\r\n  Git commit:       48a66213fe\r\n  Built:            Mon Jun 22 15:44:07 2020\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     false\r\n containerd:\r\n  Version:          1.2.13\r\n  GitCommit:        7ad184331fa3e55e52b890ea95e65ba581ae3429\r\n runc:\r\n  Version:          1.0.0-rc10\r\n  GitCommit:        dc9208a3303feef5b3839f4323d9beb36df0a9dd\r\n docker-init:\r\n  Version:          0.18.0\r\n  GitCommit:        fec3683\r\n```\r\n\r\n**Output of `docker info`:**\r\n\r\n```\r\nClient: Docker Engine - Community\r\n Version:           19.03.12\r\n API version:       1.40\r\n Go version:        go1.13.10\r\n Git commit:        48a66213fe\r\n Built:             Mon Jun 22 15:45:36 2020\r\n OS/Arch:           linux/amd64\r\n Experimental:      false\r\n\r\nServer: Docker Engine - Community\r\n Engine:\r\n  Version:          19.03.12\r\n  API version:      1.40 (minimum version 1.12)\r\n  Go version:       go1.13.10\r\n  Git commit:       48a66213fe\r\n  Built:            Mon Jun 22 15:44:07 2020\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     false\r\n containerd:\r\n  Version:          1.2.13\r\n  GitCommit:        7ad184331fa3e55e52b890ea95e65ba581ae3429\r\n runc:\r\n  Version:          1.0.0-rc10\r\n  GitCommit:        dc9208a3303feef5b3839f4323d9beb36df0a9dd\r\n docker-init:\r\n  Version:          0.18.0\r\n  GitCommit:        fec3683\r\n[I] docker.vim )\r\n[I] docker.vim ) docker info\r\nClient:\r\n Debug Mode: false\r\n\r\nServer:\r\n Containers: 2\r\n  Running: 1\r\n  Paused: 0\r\n  Stopped: 1\r\n Images: 52\r\n Server Version: 19.03.12\r\n Storage Driver: overlay2\r\n  Backing Filesystem: extfs\r\n  Supports d_type: true\r\n  Native Overlay Diff: true\r\n Logging Driver: json-file\r\n Cgroup Driver: cgroupfs\r\n Plugins:\r\n  Volume: local\r\n  Network: bridge host ipvlan macvlan null overlay\r\n  Log: awslogs fluentd gcplogs gelf journald json-file local logentries splunk syslog\r\n Swarm: inactive\r\n Runtimes: runc\r\n Default Runtime: runc\r\n Init Binary: docker-init\r\n containerd version: 7ad184331fa3e55e52b890ea95e65ba581ae3429\r\n runc version: dc9208a3303feef5b3839f4323d9beb36df0a9dd\r\n init version: fec3683\r\n Security Options:\r\n  apparmor\r\n  seccomp\r\n   Profile: default\r\n Kernel Version: 5.3.0-62-generic\r\n Operating System: Ubuntu 18.04.4 LTS\r\n OSType: linux\r\n Architecture: x86_64\r\n CPUs: 8\r\n Total Memory: 31.09GiB\r\n Name: thinkpad\r\n ID: EKKH:UC2C:RDMA:JDP2:KDIG:GW2W:T2H3:S3LT:MWNI:D5YG:X24P:K2DC\r\n Docker Root Dir: /var/lib/docker\r\n Debug Mode: false\r\n Username: skanehira\r\n Registry: https://index.docker.io/v1/\r\n Labels:\r\n Experimental: false\r\n Insecure Registries:\r\n  127.0.0.0/8\r\n Live Restore Enabled: false\r\n\r\nWARNING: No swap limit support\r\n```\r\n\r\n**Additional environment details (AWS, VirtualBox, physical, etc.):**\r\nOS: Ubuntu 18.04.01"},{"labels":["documentation",null,null,null],"text":"**Description**\r\n\r\nI don't find anywhere any resource to raise ulimits with Docker Rootless. The documentation is [way too limited about it](https://docs.docker.com/engine/security/rootless/#limiting-resources) :\r\n\r\n> However, traditional ulimit and cpulimit can be still used, though they work in process-granularity rather than in container-granularity.\r\n\r\nI've edited my local limits (`/etc/security/limits.conf`) so my user has these ulimits : \r\n\r\n```\r\nopen files                  (-n) 40000\r\nmax user processes              (-u) 40000\r\n```\r\n\r\nMy daemon is automatically started by my `systemctl --user` service.\r\n\r\nWhen I run `docker run -it --rm ubuntu bash -c \"ulimit -n\"`, I get : `4096`\r\n\r\nWhat is very interesting is when I manually run the docker daemon (I stop the systemctl service, then run) : \r\n\r\n```console\r\n/home/myuser/bin/dockerd-rootless.sh --experimental --storage-driver=overlay2\r\n```\r\n\r\nAnd that I run `docker run -it --rm ubuntu bash -c \"ulimit -n\"`, I get : `40000`\r\n\r\n**So I don't know what is going on ! Why is my daemon loaded by systemctl ignoring my user ulimits ?**\r\n\r\nHere is my `~/.config/systemd/user/docker.service` file : \r\n\r\n```\r\n[Unit]\r\nDescription=Docker Application Container Engine (Rootless)\r\nDocumentation=https://docs.docker.com\r\n\r\n[Service]\r\nEnvironment=PATH=/home/myuser/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\r\nExecStart=/home/myuser/bin/dockerd-rootless.sh --experimental --storage-driver=overlay2\r\nExecReload=/bin/kill -s HUP $MAINPID\r\nTimeoutSec=0\r\nRestartSec=2\r\nRestart=always\r\nStartLimitBurst=3\r\nStartLimitInterval=20s\r\nLimitNOFILE=infinity\r\nLimitNPROC=infinity\r\nLimitCORE=infinity\r\nTasksMax=infinity\r\nDelegate=yes\r\nType=simple\r\n\r\n[Install]\r\nWantedBy=default.target\r\n```\r\n\r\n<details><summary>Docker Info</summary>\r\n<p>\r\n\r\n```\r\nClient:\r\n Debug Mode: false\r\n\r\nServer:\r\n Containers: 0\r\n  Running: 0\r\n  Paused: 0\r\n  Stopped: 0\r\n Images: 2\r\n Server Version: 19.03.8\r\n Storage Driver: vfs\r\n Logging Driver: json-file\r\n Cgroup Driver: none\r\n Plugins:\r\n  Volume: local\r\n  Network: bridge host ipvlan macvlan null overlay\r\n  Log: awslogs fluentd gcplogs gelf journald json-file local logentries splunk syslog\r\n Swarm: inactive\r\n Runtimes: runc\r\n Default Runtime: runc\r\n Init Binary: docker-init\r\n containerd version: 7ad184331fa3e55e52b890ea95e65ba581ae3429\r\n runc version: dc9208a3303feef5b3839f4323d9beb36df0a9dd\r\n init version: fec3683\r\n Security Options:\r\n  seccomp\r\n   Profile: default\r\n  rootless\r\n Kernel Version: 4.15.0-99-generic\r\n Operating System: Ubuntu 18.04.2 LTS\r\n OSType: linux\r\n Architecture: x86_64\r\n CPUs: 3\r\n Total Memory: 3.849GiB\r\n Name: somelinux\r\n ID: CHQ7:K7CT:QQ7H:NKAD:PCYY:G4HK:HY7K:WLRU:CIGY:C6PD:CO6J:XKZ2\r\n Docker Root Dir: /home/dfob/.local/share/docker\r\n Debug Mode: false\r\n Registry: https://index.docker.io/v1/\r\n Labels:\r\n Experimental: true\r\n Insecure Registries:\r\n  127.0.0.0/8\r\n Live Restore Enabled: false\r\n Product License: Community Engine\r\n\r\nWARNING: No swap limit support\r\nWARNING: bridge-nf-call-iptables is disabled\r\nWARNING: bridge-nf-call-ip6tables is disabled\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\nThank you"},{"labels":[null,"documentation"],"text":"<!--\r\nIf you are reporting a new issue, make sure that we do not have any duplicates\r\nalready open. You can ensure this by searching the issue list for this\r\nrepository. If there is a duplicate, please close your issue and add a comment\r\nto the existing issue instead.\r\n\r\nIf you suspect your issue is a bug, please edit your issue description to\r\ninclude the BUG REPORT INFORMATION shown below. If you fail to provide this\r\ninformation within 7 days, we cannot debug your issue and will close it. We\r\nwill, however, reopen it if you later provide the information.\r\n\r\nFor more information about reporting issues, see\r\nhttps://github.com/moby/moby/blob/master/CONTRIBUTING.md#reporting-other-issues\r\n\r\n---------------------------------------------------\r\nGENERAL SUPPORT INFORMATION\r\n---------------------------------------------------\r\n\r\nThe GitHub issue tracker is for bug reports and feature requests.\r\nGeneral support for **docker** can be found at the following locations:\r\n\r\n- Docker Support Forums - https://forums.docker.com\r\n- Slack - community.docker.com #general channel\r\n- Post a question on StackOverflow, using the Docker tag\r\n\r\nGeneral support for **moby** can be found at the following locations:\r\n\r\n- Moby Project Forums - https://forums.mobyproject.org\r\n- Slack - community.docker.com #moby-project channel\r\n- Post a question on StackOverflow, using the Moby tag\r\n\r\n---------------------------------------------------\r\nBUG REPORT INFORMATION\r\n---------------------------------------------------\r\nUse the commands below to provide key information from your environment:\r\nYou do NOT have to include this information if this is a FEATURE REQUEST\r\n-->\r\n\r\n**Description**\r\n\r\n<!--\r\nBriefly describe the problem you are having in a few paragraphs.\r\n-->\r\n\r\nWhen using ARG to specify an image or tag in a multi-stage Dockerfile, the ARG is not being applied correctly.\r\n\r\nThis is a simplified version of my Dockerfile which does not work:\r\n```\r\nFROM scratch\r\n\r\nARG node_version\r\n\r\nFROM node:${node_version}-alpine\r\n```\r\n\r\nThis example does work, but should not according to how I understand ARG to work:\r\n```\r\nARG node_version\r\n\r\nFROM scratch\r\n\r\nARG node_version=${node_version}\r\n\r\nFROM node:${node_version}-alpine\r\n```\r\n\r\nThis example also works:\r\n```\r\nARG node_version\r\n\r\nFROM node:${node_version}-alpine\r\n```\r\n\r\nThis leads to believe that there is a mishandling of the variables in multi-stage builds.\r\n\r\n**Steps to reproduce the issue:**\r\n1. run \"docker build . --build-arg=node_version=12.14.1\" with the Dockerfile above.\r\n\r\n**Describe the results you received:**\r\nDocker reports:\r\n```\r\nStep 3/3 : FROM node:${node_version}-alpine\r\ninvalid reference format\r\n```\r\n\r\n**Describe the results you expected:**\r\nI expect to be able to use a variable defined by ARG before the FROM in the FROM statement itself, even in multi-stage builds.\r\n\r\n**Additional information you deem important (e.g. issue happens only occasionally):**\r\n\r\n**Output of `docker version`:**\r\n```\r\nDocker version 19.03.8, build afacb8b\r\n```\r\n\r\n**Output of `docker info`:**\r\n\r\n```\r\nClient:\r\n Debug Mode: false\r\n\r\nServer:\r\n Containers: 24\r\n  Running: 20\r\n  Paused: 0\r\n  Stopped: 4\r\n Images: 19\r\n Server Version: 19.03.8\r\n Storage Driver: overlay2\r\n  Backing Filesystem: <unknown>\r\n  Supports d_type: true\r\n  Native Overlay Diff: true\r\n Logging Driver: json-file\r\n Cgroup Driver: cgroupfs\r\n Plugins:\r\n  Volume: local\r\n  Network: bridge host ipvlan macvlan null overlay\r\n  Log: awslogs fluentd gcplogs gelf journald json-file local logentries splunk syslog\r\n Swarm: inactive\r\n Runtimes: runc\r\n Default Runtime: runc\r\n Init Binary: docker-init\r\n containerd version: 7ad184331fa3e55e52b890ea95e65ba581ae3429\r\n runc version: dc9208a3303feef5b3839f4323d9beb36df0a9dd\r\n init version: fec3683\r\n Security Options:\r\n  seccomp\r\n   Profile: default\r\n Kernel Version: 4.19.76-linuxkit\r\n Operating System: Docker Desktop\r\n OSType: linux\r\n Architecture: x86_64\r\n CPUs: 2\r\n Total Memory: 1.943GiB\r\n Name: docker-desktop\r\n ID: AAU3:FDX7:NZ7A:MCNC:L5DC:NGLG:XMFS:NVNO:WPW3:OJKH:6YSQ:6JMR\r\n Docker Root Dir: /var/lib/docker\r\n Debug Mode: true\r\n  File Descriptors: 142\r\n  Goroutines: 134\r\n  System Time: 2020-04-16T16:20:01.016176142Z\r\n  EventsListeners: 3\r\n Registry: https://index.docker.io/v1/\r\n Labels:\r\n Experimental: false\r\n Insecure Registries:\r\n  127.0.0.0/8\r\n Live Restore Enabled: false\r\n Product License: Community Engine\r\n```\r\n\r\n**Additional environment details (AWS, VirtualBox, physical, etc.):**\r\nThis is reproducible under Google Cloud Builder when using the standard Docker build image here: gcr.io/cloud-builders/docker."},{"labels":["documentation",null],"text":"**Description**\r\nAccording to commit https://github.com/moby/moby/commit/32915b1d0a315598edb737785d0357b5a1b8aa11, we can no longer build `binary-client` by running `./hack/make.sh binary-client`.\r\nThe document could be updated."},{"labels":[null,"documentation",null,null],"text":"I noticed that we still have some old release branches in this repository. Some of those branches have changes that never made it into a release (or documentation cherry-picks that were published in the documentation, but not tagged as a release)\r\n\r\n\r\nBranch                                               | Changes not in a release\r\n-----------------------------------------------------|--------------------------------------------------------------\r\n[1.12.x](https://github.com/moby/moby/tree/1.12.x)   | https://github.com/moby/moby/compare/v1.12.6...1.12.x\r\n[1.13.x](https://github.com/moby/moby/tree/1.13.x)   | https://github.com/moby/moby/compare/v1.13.1...1.13.x\r\n[17.03.x](https://github.com/moby/moby/tree/17.03.x) | https://github.com/moby/moby/compare/v17.03.2-ce...17.03.x\r\n[17.04.x](https://github.com/moby/moby/tree/17.04.x) | https://github.com/moby/moby/compare/v17.04.0-ce...17.04.x\r\n[17.05.x](https://github.com/moby/moby/tree/17.05.x) | https://github.com/moby/moby/compare/v17.05.0-ce...17.05.x (no diff)\r\n[docs](https://github.com/moby/moby/tree/docs)       | documentation-only changes\r\n\r\n\r\nSome care should be taken when removing these branches, because the docker documentation fetches some resources from some of these branches; https://github.com/docker/docker.github.io/blob/ec57364ede82a135021e2e762bd0833d92a0cc0f/_scripts/fetch-upstream-resources.sh#L74 https://github.com/docker/docker.github.io/blob/ec57364ede82a135021e2e762bd0833d92a0cc0f/_scripts/fetch-upstream-resources.sh#L89-L95\r\n\r\n\r\nIn addition, with the introduction of the Swagger file (which is used to document current versions of the API), this repository only has a definition of the _current_ version of the API. Older versions of the API need to be fetched from either tags in various repositories, or from release-branches in those repositories. Having those files spread in various locations makes building the docs complicated, but also makes it more difficult to _compare_ changes between API versions, or to make fixes to the API documentation (if there's a bug or missing documentation in existing API versions).\r\n\r\nI'm planning to add copies of the swagger.yml for each API version. in this repository to address that.\r\n\r\n- [x] update docker-ce-packaging to build from upstream repositories instead of the mono-repo; https://github.com/docker/docker-ce-packaging/pull/449\r\n    - note: more changes needed in the private release packaging repositories, but those are tracked separately\r\n- [x] update fetch-upstream-resources.sh script in documentation repository to not depend on these branches (https://github.com/docker/docker.github.io/pull/10101)\r\n    - [x] https://github.com/docker/docker.github.io/pull/10343 Engine API: use template for API reference pages\r\n    - [x] https://github.com/docker/docker.github.io/pull/10348 Simplify use of \"ENGINE_BRANCH\" and \"DISTRIBUTION_BRANCH\"\r\n    - [x] https://github.com/docker/docker.github.io/pull/10344 [WIP] simplify fetching API versions\r\n    - [x] https://github.com/docker/docker.github.io/pull/10578 Engine API: remove per-branch fetching of API docs\r\n- [x] backport fetch-upstream-resources.sh changes to documentation archive branches\r\n    - [x] v18.09 archive branch https://github.com/docker/docker.github.io/pull/10196\r\n    - [x] v18.03 archive branch https://github.com/docker/docker.github.io/pull/10349\r\n    - [x] ~v17.12 archive branch~ won't fix\r\n    - [x] ~v17.09 archive branch~ won't fix\r\n    - [x] ~v17.06 archive branch~ won't fix\r\n    - [x] ~v17.03 archive branch~ won't fix\r\n    - [x] ~v1.13 archive branch~ won't fix\r\n- [x] add a copy of the swagger.yml for each released version of the API\r\n    - [x] v1.40 - docker v19.03 https://github.com/moby/moby/pull/40570 \r\n    - [x] v1.39 - docker v18.09 https://github.com/moby/moby/pull/40570 \r\n    - [x] v1.38 - docker v18.06 https://github.com/moby/moby/pull/40570 \r\n    - [x] v1.37 - docker v18.03 - v18.05 https://github.com/moby/moby/pull/40778\r\n    - [x] v1.36 - docker v18.02 https://github.com/moby/moby/pull/40778\r\n    - [x] v1.35 - docker v17.12 - v18.01 https://github.com/moby/moby/pull/40778\r\n    - [x] v1.34 - docker v17.11 https://github.com/moby/moby/pull/40778\r\n    - [x] v1.33 - docker v17.10 https://github.com/moby/moby/pull/40778\r\n    - [x] v1.32 - docker v17.09 https://github.com/moby/moby/pull/40778\r\n    - [x] v1.31 - docker v17.07 https://github.com/moby/moby/pull/40778\r\n    - [x] v1.30 - docker v17.06 https://github.com/moby/moby/pull/40778\r\n    - [x] v1.29 - docker v17.05 https://github.com/moby/moby/pull/40570 \r\n    - [x] v1.28 - docker v17.04 https://github.com/moby/moby/pull/40570 \r\n    - [x] v1.27 - docker v17.03 https://github.com/moby/moby/pull/40570 \r\n    - [x] v1.26 - docker v1.13.1 https://github.com/moby/moby/pull/40570 \r\n    - [x] v1.25 - docker v1.13.0 https://github.com/moby/moby/pull/40570 \r\n- [x] cherry-pick copy of swagger.yaml to current release branch\r\n    - [x] https://github.com/moby/moby/pull/40575 [19.03 backport] docs: add API versions v1.25 - v1.29, v1.38 - v1.40\r\n    - [x] https://github.com/moby/moby/pull/40779 [19.03 backport] docs: add API versions v1.30 - v1.37\r\n- [x] ~remove unused release-branches~ we can't update all archives, so we may want to keep the old branches (but eventually, \"archive\" the docker/docker-ce repository once it's no longer used in the build pipeline\r\n"},{"labels":[null,"documentation"],"text":"The `docker inspect` documentation doesn't describe the `Health` object being returned once healthchecks are configured.\r\n\r\n\r\n**Steps to reproduce the issue:**\r\n1. `docker run -it --rm nginx`\r\n2. _docker inspect_ the container: `docker inspect --format '{{json .State.Health }}' ` and observe `null` according to the documentation (since the field doesn't exist). \r\n3. `docker run -it --rm --health-cmd=\"exit 0\" nginx`\r\n4. _docker inspect_ the container: `docker inspect --format '{{json .State.Health }}' ` and observe a valid JSON:\r\n\r\n `{\"Status\":\"healthy\",\"FailingStreak\":0,\"Log\":[{\"Start\":\"2019-12-22T10:59:05.6385933Z\",\"End\":\"2019-12-22T10:59:05.8078452Z\",\"ExitCode\":0,\"Output\":\"\"}]}`\r\n\r\n**Additional information you deem important (e.g. issue happens only occasionally):**\r\n\r\n**Output of `docker version`:**\r\n\r\n```\r\nClient: Docker Engine - Community\r\n Version:           19.03.5\r\n API version:       1.40\r\n Go version:        go1.12.12\r\n Git commit:        633a0ea\r\n Built:             Wed Nov 13 07:22:34 2019\r\n OS/Arch:           darwin/amd64\r\n Experimental:      false\r\n\r\nServer: Docker Engine - Community\r\n Engine:\r\n  Version:          19.03.5\r\n  API version:      1.40 (minimum version 1.12)\r\n  Go version:       go1.12.12\r\n  Git commit:       633a0ea\r\n  Built:            Wed Nov 13 07:29:19 2019\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     false\r\n containerd:\r\n  Version:          v1.2.10\r\n  GitCommit:        b34a5c8af56e510852c35414db4c1f4fa6172339\r\n runc:\r\n  Version:          1.0.0-rc8+dev\r\n  GitCommit:        3e425f80a8c931f88e6d94a8c831b9d5aa481657\r\n docker-init:\r\n  Version:          0.18.0\r\n  GitCommit:        fec3683\r\n```\r\n\r\n**Output of `docker info`:**\r\n\r\n```\r\nClient:\r\n Debug Mode: false\r\n\r\nServer:\r\n Containers: 2\r\n  Running: 2\r\n  Paused: 0\r\n  Stopped: 0\r\n Images: 51\r\n Server Version: 19.03.5\r\n Storage Driver: overlay2\r\n  Backing Filesystem: extfs\r\n  Supports d_type: true\r\n  Native Overlay Diff: true\r\n Logging Driver: json-file\r\n Cgroup Driver: cgroupfs\r\n Plugins:\r\n  Volume: local\r\n  Network: bridge host ipvlan macvlan null overlay\r\n  Log: awslogs fluentd gcplogs gelf journald json-file local logentries splunk syslog\r\n Swarm: inactive\r\n Runtimes: runc\r\n Default Runtime: runc\r\n Init Binary: docker-init\r\n containerd version: b34a5c8af56e510852c35414db4c1f4fa6172339\r\n runc version: 3e425f80a8c931f88e6d94a8c831b9d5aa481657\r\n init version: fec3683\r\n Security Options:\r\n  seccomp\r\n   Profile: default\r\n Kernel Version: 4.9.184-linuxkit\r\n Operating System: Docker Desktop\r\n OSType: linux\r\n Architecture: x86_64\r\n CPUs: 4\r\n Total Memory: 4.833GiB\r\n Name: docker-desktop\r\n ID: CBCJ:MNIU:ICXC:77PL:YXBA:K5EF:NE3L:5OHR:BIE4:TFOW:G4BB:2A2N\r\n Docker Root Dir: /var/lib/docker\r\n Debug Mode: false\r\n HTTP Proxy: gateway.docker.internal:3128\r\n HTTPS Proxy: gateway.docker.internal:3129\r\n Registry: https://index.docker.io/v1/\r\n Labels:\r\n Experimental: false\r\n Insecure Registries:\r\n  127.0.0.0/8\r\n Live Restore Enabled: false\r\n Product License: Community Engine\r\n```\r\n"},{"labels":[null,"documentation",null,null,null],"text":"The `.dockerignore` file has been around for a while, but there's still room for improvement. Opening this as a ticket, based on some notes I had, and some existing issues. I can break down this issue further (and open separate tickets where needed)\r\n\r\n#### Some related issues:\r\n\r\n- [ ] https://github.com/moby/moby/issues/40318 Verify parity between .dockerignore and .gitignore syntax\r\n- [ ] https://github.com/moby/moby/issues/30018 Exception patterns in .dockerignore do not support wildcard directories\r\n- [ ] https://github.com/moby/moby/issues/41433 wildcard directories not implemented correctly in dockerignore\r\n- [ ] https://github.com/moby/moby/issues/12843 Global .dockerignore\r\n- [ ] (re)consider nested .dockerignore files https://github.com/moby/moby/issues/20944, and https://github.com/moby/moby/pull/21020#issuecomment-210106299\r\n- [ ] https://github.com/moby/moby/issues/9294 \"Output the reason while cache need to be invalidated on docker build\"\r\n- [ ] https://github.com/moby/moby/issues/15771 COPY with excluded files is not possible\r\n\r\n#### Assorted issues / suggestions / topics\r\n\r\n- Improve performance where possible. Ignoring files should make builds smaller and _faster_, not cause builds to be slow.\r\n    - Would be great if it's possible to profile builds, and see how much time was taken by _excluding_ files. Having this would allow users to make better informed decisions wether or not `.dockerignore` is the right solution.\r\n    - The dockerignore file is often used to make the build-context smaller in order to speed up builds, but with the introduction of BuildKit, some of those may no longer be relevant (and `.dockerignore` could actually have a negative impact in some situations)\r\n- Make `.dockerignore` follow the _exact_ same patterns as `.gitignore` (which it was originally modeled after)\r\n    - `.gitignore` pattern reference: https://git-scm.com/docs/gitignore#_pattern_format\r\n    - if possible, run the .git test-suite / tests to verify this\r\n- Add a global `.dockerignore` to allow excluding common files (`.idea`, `Thumbs.db` files and such). See [moby#12843](https://github.com/moby/moby/issues/12843 Global .dockerignore)\r\n    - allow easy discovery _why_ a file or directory was ignored (which becomes more important if a global ignore file is active). Also see next bullet\r\n- Introduce a command similar to [`git check-ignore`](https://git-scm.com/docs/git-check-ignore) for debugging\r\n    - related: https://github.com/moby/moby/issues/9294 \"Output the reason while cache need to be invalidated on docker build\"\r\n- Note: recursive `.dockerignore` files were proposed at some point, but were considered a risky, breaking change (see https://github.com/moby/moby/issues/20944, and https://github.com/moby/moby/pull/21020#issuecomment-210106299)\r\n    - should this be reconsidered?\r\n- Improve and validate the [`.dockerignore` documentation](https://docs.docker.com/engine/reference/builder/#dockerignore-file)\r\n    - document the per-Dockerfile dockerignore (when using BuildKit and Docker 19.03 or up: https://github.com/moby/moby/issues/12886#issuecomment-480575928, https://github.com/moby/moby/issues/12886#issuecomment-518843764)\r\n    - improve docs by referring to / borrowing from `.gitignore` (where applicable) (see https://github.com/moby/moby/issues/40318 \"BUG: `.dockerignore` sometimes ignores `**`\")\r\n    - could be moved to a separate page if needed\r\n    - provide better examples (also for Windows platforms)\r\n    - best practices (what files to consider for excluding to optimize caching; when to use `.dockerignore`, when *not* to use and (e.g.) use BuildKit, optimize your Dockerfile, use multi-stage builds etc.)\r\n    - common pitfalls\r\n- (related) consider implementing `COPY --exclude` to allow specifying ignore-rules in the Dockerfile itself; this can help with situations where (e.g.) frequently changing files are mixed with \"cacheable\" files (proposal in https://github.com/moby/moby/issues/15771). Allowing such files to be `COPY`'d separately would give more control over layers/caching.\r\n- (Slightly related) improve errors produced due to files that were excluded. The current error for missing files is confusing (as it mentions the file path on the _daemon_ side), therefore making it hard to trace the error back to `.dockerignore` (see the discussion on https://github.com/docker/for-mac/issues/1922, and https://github.com/moby/moby/issues/37605)\r\n\r\n\r\n\r\n"},{"labels":["documentation",null],"text":"**Description**\r\n\r\n`docker volume prune` does not remove dangling bind volumes\r\n\r\n**Steps to reproduce the issue:**\r\n\r\n```\r\n$ docker volume create --name bind_volume --opt type=none --opt device=/tmp --opt o=bind\r\nbind_volume\r\n\r\n$ docker volume inspect bind_volume\r\n[\r\n    {\r\n        \"CreatedAt\": \"2019-10-29T17:41:09Z\",\r\n        \"Driver\": \"local\",\r\n        \"Labels\": {},\r\n        \"Mountpoint\": \"/var/lib/docker/volumes/bind_volume/_data\",\r\n        \"Name\": \"bind_volume\",\r\n        \"Options\": {\r\n            \"device\": \"/tmp\",\r\n            \"o\": \"bind\",\r\n            \"type\": \"none\"\r\n        },\r\n        \"Scope\": \"local\"\r\n    }\r\n]\r\n\r\n$ docker volume ls -f dangling=true\r\nDRIVER              VOLUME NAME\r\nlocal               bind_volume\r\n\r\n$ docker volume prune -f\r\nTotal reclaimed space: 0B\r\n```\r\n\r\n**Describe the results you received:**\r\n\r\nA dangling bind volume is not removed.\r\n\r\n**Describe the results you expected:**\r\n\r\nA dangling bind volume is removed.\r\n\r\n**Additional information you deem important (e.g. issue happens only occasionally):**\r\n\r\nThe issue happens 100% of time.\r\n\r\n**Workaround**\r\n\r\nFeed the list of dangling volumes to `docker volume rm` manually:\r\n\r\n```\r\n$ docker volume rm $(docker volume ls -qf dangling=true)\r\nOR\r\n$ docker volume ls -qf dangling=true | xargs -r docker volume rm\r\n```\r\n\r\n**Output of `docker version`:**\r\n\r\n```\r\n$ docker version\r\nClient:\r\n Version:           18.09.2\r\n API version:       1.39\r\n Go version:        go1.10.6\r\n Git commit:        6247962\r\n Built:             Sun Feb 10 04:13:47 2019\r\n OS/Arch:           linux/amd64\r\n Experimental:      false\r\n\r\nServer: Docker Engine - Community\r\n Engine:\r\n  Version:          18.09.2\r\n  API version:      1.39 (minimum version 1.12)\r\n  Go version:       go1.10.6\r\n  Git commit:       6247962\r\n  Built:            Sun Feb 10 03:42:13 2019\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     false\r\n```\r\n\r\n**Output of `docker info`:**\r\n\r\n```\r\n$ docker info\r\nContainers: 152\r\n Running: 16\r\n Paused: 0\r\n Stopped: 136\r\nImages: 80\r\nServer Version: 18.09.2\r\nStorage Driver: overlay2\r\n Backing Filesystem: extfs\r\n Supports d_type: true\r\n Native Overlay Diff: true\r\nLogging Driver: json-file\r\nCgroup Driver: cgroupfs\r\nPlugins:\r\n Volume: local\r\n Network: bridge host macvlan null overlay\r\n Log: awslogs fluentd gcplogs gelf journald json-file local logentries splunk syslog\r\nSwarm: active\r\n NodeID: x9jkazxqv6noz8od01g8gzm0h\r\n Is Manager: true\r\n ClusterID: uxkuiv5ijmosd54chjohkfoqe\r\n Managers: 1\r\n Nodes: 1\r\n Default Address Pool: 10.0.0.0/8  \r\n SubnetSize: 24\r\n Orchestration:\r\n  Task History Retention Limit: 5\r\n Raft:\r\n  Snapshot Interval: 10000\r\n  Number of Old Snapshots to Retain: 0\r\n  Heartbeat Tick: 1\r\n  Election Tick: 10\r\n Dispatcher:\r\n  Heartbeat Period: 5 seconds\r\n CA Configuration:\r\n  Expiry Duration: 3 months\r\n  Force Rotate: 0\r\n Autolock Managers: false\r\n Root Rotation In Progress: false\r\n Node Address: 192.168.64.1\r\n Manager Addresses:\r\n  192.168.64.1:2377\r\nRuntimes: runc\r\nDefault Runtime: runc\r\nInit Binary: docker-init\r\ncontainerd version: bb71b10fd8f58240ca47fbb579b9d1028eea7c84\r\nrunc version: 2b18fe1d885ee5083ef9f0838fee39b62d653e30\r\ninit version: fec3683\r\nSecurity Options:\r\n apparmor\r\n seccomp\r\n  Profile: default\r\nKernel Version: 4.15.0-1021-aws\r\nOperating System: Ubuntu 18.04.1 LTS\r\nOSType: linux\r\nArchitecture: x86_64\r\nCPUs: 4\r\nTotal Memory: 15.48GiB\r\nName: ip-172-31-5-235\r\nID: ZG4Q:UHEI:5G7S:6H6I:A22K:YZZX:JUER:TASL:HXB3:CZKZ:WOHK:BDYB\r\nDocker Root Dir: /data/var/lib/docker\r\nDebug Mode (client): false\r\nDebug Mode (server): false\r\nRegistry: https://index.docker.io/v1/\r\nLabels:\r\nExperimental: false\r\nInsecure Registries:\r\n 127.0.0.0/8\r\nLive Restore Enabled: false\r\nProduct License: Community Engine\r\n```\r\n\r\n**Additional environment details (AWS, VirtualBox, physical, etc.):**\r\n\r\nTested with docker 18.09.2 and 19.03.4"},{"labels":["documentation",null],"text":"<!--\r\nIf you are reporting a new issue, make sure that we do not have any duplicates\r\nalready open. You can ensure this by searching the issue list for this\r\nrepository. If there is a duplicate, please close your issue and add a comment\r\nto the existing issue instead.\r\n\r\nIf you suspect your issue is a bug, please edit your issue description to\r\ninclude the BUG REPORT INFORMATION shown below. If you fail to provide this\r\ninformation within 7 days, we cannot debug your issue and will close it. We\r\nwill, however, reopen it if you later provide the information.\r\n\r\nFor more information about reporting issues, see\r\nhttps://github.com/moby/moby/blob/master/CONTRIBUTING.md#reporting-other-issues\r\n\r\n---------------------------------------------------\r\nGENERAL SUPPORT INFORMATION\r\n---------------------------------------------------\r\n\r\nThe GitHub issue tracker is for bug reports and feature requests.\r\nGeneral support for **docker** can be found at the following locations:\r\n\r\n- Docker Support Forums - https://forums.docker.com\r\n- Slack - community.docker.com #general channel\r\n- Post a question on StackOverflow, using the Docker tag\r\n\r\nGeneral support for **moby** can be found at the following locations:\r\n\r\n- Moby Project Forums - https://forums.mobyproject.org\r\n- Slack - community.docker.com #moby-project channel\r\n- Post a question on StackOverflow, using the Moby tag\r\n\r\n---------------------------------------------------\r\nBUG REPORT INFORMATION\r\n---------------------------------------------------\r\nUse the commands below to provide key information from your environment:\r\nYou do NOT have to include this information if this is a FEATURE REQUEST\r\n-->\r\n\r\n**A mistake in the moby/image/spec/v1.md **\r\n\r\n**Steps to reproduce the issue:**\r\nIt looks like that titles below were swapped in the doc file moby/image/spec/v1.md :\r\n\r\n**Entrypoint array of strings**\r\nA list of arguments to use as the command to execute when the container starts. This value acts as a default and is replaced by an entrypoint specified when creating a container.\r\n\r\n**Cmd array of strings**\r\nDefault arguments to the entry point of the container. These values act as defaults and are replaced with any specified when creating a container. If an Entrypoint value is not specified, then the first entry of the Cmd array should be interpreted as the executable to run.\r\n\r\n**Describe the results you received:\r\n\r\n**\r\n\r\n**Describe the results you expected:\r\n\r\n**\r\n\r\n**Additional information you deem important (e.g. issue happens only occasionally):**\r\n\r\n**Output of `docker version`:**\r\n\r\n```\r\n(paste your output here)\r\n```\r\n\r\n**Output of `docker info`:**\r\n\r\n```\r\n(paste your output here)\r\n```\r\n\r\n**Additional environment details (AWS, VirtualBox, physical, etc.):**"},{"labels":["documentation",null],"text":"The SDK is very unfriendly for beginners.\r\n\r\nApart from the fact every program imports `docker/docker` (including `docker-ce` and `kubernetes`) and that redirects to `moby/moby` on the website, the default version you get from go is `v1.13.1` and people just seem to import specific commits. The releases can not be seen on `moby/moby` but can be found on `docker/engine` however you can not import specific version from there, since other dependencies will crash. \r\n\r\nEven the documentation on the website does not work. This is from https://docs.docker.com/develop/sdk/examples/:\r\n```\r\n\tstatusCh, errCh := cli.ContainerWait(ctx, resp.ID, container.WaitConditionNotRunning)\r\n\tselect {\r\n\tcase err := <-errCh:\r\n\t\tif err != nil {\r\n\t\t\tpanic(err)\r\n\t\t}\r\n\tcase <-statusCh:\r\n\t}\r\n```\r\n`cli.ContainerWait` does not return chans, it returns `(int64, error)` on v1.13.1, and the website does not say how to get other versions of the SDK. Even the documentation on `godoc.org` is wrong since it tells you to get `import \"github.com/docker/docker/client\"` and that will get you `v1.13.1`, which does not return `(<-chan container.ContainerWaitOKBody, <-chan error)` as specified in the documentation.\r\n\r\nAre there any plans to offer some proper documentation and releases so that people can actually use the SDK, without having to dig from git?"},{"labels":["documentation"],"text":"I thought someone forgot to update the docs, but it looks like this might be done on purpose. If this is the former case, I can make a quick PR. However if its the latter, I hope someone will be able to fill me in why this is done this way.\r\n\r\nhttps://github.com/moby/moby/blob/0243936d92ea57f48c6a32beac797ee3b388ba28/api/swagger.yaml#L2246-L2251\r\n\r\nhttps://github.com/moby/moby/blob/be97c66708c24727836a22247319ff2943d91a03/daemon/names/names.go#L5-L9"},{"labels":[null,"documentation",null,null],"text":"When building with `BuildKit`, the `--no-cache` option is (partially) ignored;\r\n\r\nBuild a Dockerfile;\r\n\r\n```bash\r\nDOCKER_BUILDKIT=1 docker build -t bla https://github.com/thaJeztah/go-top.git\r\n[+] Building 29.1s (8/8) FINISHED                                                                                                                                                                                          \r\n => [internal] load git source https://github.com/thaJeztah/go-top.git                                                                                                                                                1.3s\r\n => [internal] load metadata for docker.io/library/golang:1.10-alpine                                                                                                                                                 2.3s\r\n => CACHED [internal] helper image for file operations                                                                                                                                                                0.0s\r\n => [build 1/3] FROM docker.io/library/golang:1.10-alpine@sha256:df75dc8049519981ef51a6e37fe4e79c0cfe9d5a0432ba9b36afe1a1df835f3b                                                                                    17.9s\r\n => => resolve docker.io/library/golang:1.10-alpine@sha256:df75dc8049519981ef51a6e37fe4e79c0cfe9d5a0432ba9b36afe1a1df835f3b                                                                                           0.0s\r\n => => sha256:d830d821f1ea39178886c4853e25ec07369f037cb758e07c3cbab832eabc9a14 1.36kB / 1.36kB                                                                                                                        0.0s\r\n => => sha256:2f577258bd101df535742773fc8d03fe9ea0350e8e132ab55da7dbbc508c89f2 3.80kB / 3.80kB                                                                                                                        0.0s\r\n => => sha256:2d13b02809266f700fe9d5a5002b4b8731fd5c8ff9218240bdc69005e678b158 78.11MB / 78.11MB                                                                                                                     14.3s\r\n => => sha256:0934a9e519360feba9d140548eebdab7cab66c55d04de2bde94a3dffa79a1122 125B / 125B                                                                                                                            1.1s\r\n => => sha256:df75dc8049519981ef51a6e37fe4e79c0cfe9d5a0432ba9b36afe1a1df835f3b 2.04kB / 2.04kB                                                                                                                        0.0s\r\n => => extracting sha256:2d13b02809266f700fe9d5a5002b4b8731fd5c8ff9218240bdc69005e678b158                                                                                                                             2.6s\r\n => => extracting sha256:0934a9e519360feba9d140548eebdab7cab66c55d04de2bde94a3dffa79a1122                                                                                                                             0.0s\r\n => [build 2/3] COPY . .                                                                                                                                                                                              1.6s\r\n => [build 3/3] RUN go install -v ./...                                                                                                                                                                               3.1s\r\n => [stage-1 1/1] COPY --from=build /go/bin/go-top /                                                                                                                                                                  2.7s\r\n => exporting to image                                                                                                                                                                                                0.0s\r\n => => exporting layers                                                                                                                                                                                               0.0s\r\n => => writing image sha256:e7320ea8c5feabd7e31e4f084fd69f52a4a44325caee01beedd6a0d7f004c198                                                                                                                          0.0s\r\n => => naming to docker.io/library/bla                                                                                                                                                                                0.0s\r\n```\r\n\r\nBuild the same image again, but this time with `--no-cache`;\r\n\r\n```bash\r\nDOCKER_BUILDKIT=1 docker build -t bla --no-cache https://github.com/thaJeztah/go-top.git\r\n[+] Building 7.9s (8/8) FINISHED                                                                                                                                                                                           \r\n => CACHED [internal] load git source https://github.com/thaJeztah/go-top.git                                                                                                                                         0.0s\r\n => [internal] load metadata for docker.io/library/golang:1.10-alpine                                                                                                                                                 0.9s\r\n => CACHED [build 1/3] FROM docker.io/library/golang:1.10-alpine@sha256:df75dc8049519981ef51a6e37fe4e79c0cfe9d5a0432ba9b36afe1a1df835f3b                                                                              0.0s\r\n => CACHED [internal] helper image for file operations                                                                                                                                                                0.0s\r\n => [build 2/3] COPY . .                                                                                                                                                                                              1.4s\r\n => [build 3/3] RUN go install -v ./...                                                                                                                                                                               2.7s\r\n => [stage-1 1/1] COPY --from=build /go/bin/go-top /                                                                                                                                                                  2.7s\r\n => exporting to image                                                                                                                                                                                                0.0s\r\n => => exporting layers                                                                                                                                                                                               0.0s\r\n => => writing image sha256:8a8b64198a7f7da426fd5783ae0b0d8958cd154424a060ca2b37a4a17ec0510c                                                                                                                          0.0s\r\n => => naming to docker.io/library/bla                                                                                                                                                                                0.0s\r\n```\r\n\r\nNotice that various steps show `CACHED`\r\n\r\n\r\n\r\nReproduced on Docker 18.09.0;\r\n\r\n```\r\nClient: Docker Engine - Community\r\n Version:           18.09.0\r\n API version:       1.39\r\n Go version:        go1.10.4\r\n Git commit:        4d60db4\r\n Built:             Wed Nov  7 00:47:43 2018\r\n OS/Arch:           darwin/amd64\r\n Experimental:      true\r\n\r\nServer: Docker Engine - Community\r\n Engine:\r\n  Version:          18.09.0\r\n  API version:      1.39 (minimum version 1.12)\r\n  Go version:       go1.10.4\r\n  Git commit:       4d60db4\r\n  Built:            Wed Nov  7 00:55:00 2018\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     true\r\n```"},{"labels":["documentation",null,null],"text":"<!--\r\nIf you are reporting a new issue, make sure that we do not have any duplicates\r\nalready open. You can ensure this by searching the issue list for this\r\nrepository. If there is a duplicate, please close your issue and add a comment\r\nto the existing issue instead.\r\n\r\nIf you suspect your issue is a bug, please edit your issue description to\r\ninclude the BUG REPORT INFORMATION shown below. If you fail to provide this\r\ninformation within 7 days, we cannot debug your issue and will close it. We\r\nwill, however, reopen it if you later provide the information.\r\n\r\nFor more information about reporting issues, see\r\nhttps://github.com/moby/moby/blob/master/CONTRIBUTING.md#reporting-other-issues\r\n\r\n---------------------------------------------------\r\nGENERAL SUPPORT INFORMATION\r\n---------------------------------------------------\r\n\r\nThe GitHub issue tracker is for bug reports and feature requests.\r\nGeneral support for **docker** can be found at the following locations:\r\n\r\n- Docker Support Forums - https://forums.docker.com\r\n- Slack - community.docker.com #general channel\r\n- Post a question on StackOverflow, using the Docker tag\r\n\r\nGeneral support for **moby** can be found at the following locations:\r\n\r\n- Moby Project Forums - https://forums.mobyproject.org\r\n- Slack - community.docker.com #moby-project channel\r\n- Post a question on StackOverflow, using the Moby tag\r\n\r\n---------------------------------------------------\r\nBUG REPORT INFORMATION\r\n---------------------------------------------------\r\nUse the commands below to provide key information from your environment:\r\nYou do NOT have to include this information if this is a FEATURE REQUEST\r\n-->\r\n\r\n**Description**\r\n\r\n<!--\r\nBriefly describe the problem you are having in a few paragraphs.\r\n-->\r\ndockerd start failed when daemon config with some log driver options\r\n\r\n\r\n**Steps to reproduce the issue:**\r\n1.install docker-ce (17.03 up to latest version) on ubuntu 16.04 LTS\r\n2.config the `/etc/docker/daemon.json` as following:\r\n```\r\n{\r\n  \"log-driver\": \"json-file\",\r\n  \"log-opts\": {\r\n    \"max-size\": \"10m\"\r\n  }\r\n}\r\n```\r\n3.restart dockerd by `sudo service docker restart`, and it works\r\n4.if change `/etc/docker/daemon.json` to:\r\n```\r\n{\r\n  \"log-driver\": \"json-file\",\r\n  \"log-opts\": {\r\n    \"max-size\": \"10m\",\r\n    \"max-file\": 3\r\n  }\r\n}\r\n```\r\nrestart dockerd will get error:\r\n```\r\n-- Subject: Unit docker.socket has begun start-up\r\n-- Defined-By: systemd\r\n-- Support: http://lists.freedesktop.org/mailman/listinfo/systemd-devel\r\n--\r\n-- Unit docker.socket has begun starting up.\r\nNov 21 15:55:58 ubuntu systemd[1]: Listening on Docker Socket for the API.\r\n-- Subject: Unit docker.socket has finished start-up\r\n-- Defined-By: systemd\r\n-- Support: http://lists.freedesktop.org/mailman/listinfo/systemd-devel\r\n--\r\n-- Unit docker.socket has finished starting up.\r\n--\r\n-- The start-up result is done.\r\nNov 21 15:55:58 ubuntu systemd[1]: Starting Docker Application Container Engine...\r\n-- Subject: Unit docker.service has begun start-up\r\n-- Defined-By: systemd\r\n-- Support: http://lists.freedesktop.org/mailman/listinfo/systemd-devel\r\n--\r\n-- Unit docker.service has begun starting up.\r\nNov 21 15:55:58 ubuntu dockerd[16761]: unable to configure the Docker daemon with file /etc/docker/daemon.json\r\nNov 21 15:55:58 ubuntu systemd[1]: docker.service: Main process exited, code=exited, status=1/FAILURE\r\nNov 21 15:55:58 ubuntu systemd[1]: Failed to start Docker Application Container Engine.\r\n-- Subject: Unit docker.service has failed\r\n-- Defined-By: systemd\r\n-- Support: http://lists.freedesktop.org/mailman/listinfo/systemd-devel\r\n--\r\n-- Unit docker.service has failed.\r\n--\r\n-- The result is failed.\r\nNov 21 15:55:58 ubuntu systemd[1]: docker.service: Unit entered failed state.\r\nNov 21 15:55:58 ubuntu systemd[1]: docker.service: Failed with result 'exit-code'.\r\nNov 21 15:55:58 ubuntu sudo[16726]: pam_unix(sudo:session): session closed for user root\r\nNov 21 15:58:35 ubuntu sudo[16769]:   shaoan : TTY=pts/0 ; PWD=/home/shaoan ; USER=root ; COMMAND=/usr/bin/vi\r\nNov 21 15:58:35 ubuntu sudo[16769]: pam_unix(sudo:session): session opened for user root by shaoan(uid=0)\r\nNov 21 16:01:39 ubuntu sudo[16769]: pam_unix(sudo:session): session closed for user root\r\n```\r\n\r\n\r\nIs the parameter `max-file` not supported in in `daemon.json` config? or a bug with docker daemon?\r\n\r\n"},{"labels":["documentation",null,null],"text":"<!--\r\nIf you are reporting a new issue, make sure that we do not have any duplicates\r\nalready open. You can ensure this by searching the issue list for this\r\nrepository. If there is a duplicate, please close your issue and add a comment\r\nto the existing issue instead.\r\n\r\nIf you suspect your issue is a bug, please edit your issue description to\r\ninclude the BUG REPORT INFORMATION shown below. If you fail to provide this\r\ninformation within 7 days, we cannot debug your issue and will close it. We\r\nwill, however, reopen it if you later provide the information.\r\n\r\nFor more information about reporting issues, see\r\nhttps://github.com/moby/moby/blob/master/CONTRIBUTING.md#reporting-other-issues\r\n\r\n---------------------------------------------------\r\nGENERAL SUPPORT INFORMATION\r\n---------------------------------------------------\r\n\r\nThe GitHub issue tracker is for bug reports and feature requests.\r\nGeneral support for **docker** can be found at the following locations:\r\n\r\n- Docker Support Forums - https://forums.docker.com\r\n- Slack - community.docker.com #general channel\r\n- Post a question on StackOverflow, using the Docker tag\r\n\r\nGeneral support for **moby** can be found at the following locations:\r\n\r\n- Moby Project Forums - https://forums.mobyproject.org\r\n- Slack - community.docker.com #moby-project channel\r\n- Post a question on StackOverflow, using the Moby tag\r\n\r\n---------------------------------------------------\r\nBUG REPORT INFORMATION\r\n---------------------------------------------------\r\nUse the commands below to provide key information from your environment:\r\nYou do NOT have to include this information if this is a FEATURE REQUEST\r\n-->\r\n\r\n**Description**\r\n\r\n<!--\r\nBriefly describe the problem you are having in a few paragraphs.\r\n-->\r\n\r\n**Steps to reproduce the issue:**\r\n1. Go through the [doc](https://github.com/moby/moby/blob/master/docs/contributing/test.md#run-unit-tests)\r\n\r\n\r\n**Describe the results you received:**\r\nAfter issuing:\r\n```\r\n$ TESTDIRS='opts' TESTFLAGS='-test.run ^TestValidateIPAddress$' make test-unit\r\n```\r\nfrom the test documents, I got:\r\n```\r\ncan't load package: package opts: cannot find package \"opts\" in any of:\r\n        /usr/local/go/src/opts (from $GOROOT)\r\n        /go/src/opts (from $GOPATH)\r\nmake: *** [Makefile:161: test-unit] Error 1\r\n```\r\n\r\n**Describe the results you expected:**\r\nHowever I managed to get it to work with:\r\n```\r\n$ TESTDIRS='github.com/docker/docker/opts' TESTFLAGS='-test.run $^TestValidateIPAddress$' make test-unit\r\n```\r\nNote the full path `github.com/docker/docker/opts`. Which is expected since\r\n```\r\n    go test \"${BUILDFLAGS[@]}\" \\\r\n        -cover \\\r\n        -coverprofile=profile.out \\\r\n        -covermode=atomic \\\r\n        $TESTFLAGS \\\r\n        \"${pkg}\"\r\n```\r\nfrom `hack/test/unit` should probably not be issuing `go test opts`.\r\nThis resulted in:\r\n```\r\nok      github.com/docker/docker/opts   0.028s  coverage: 0.0% of statements [no tests to run]                                                                           \r\n```\r\n\r\n**Additional information you deem important (e.g. issue happens only occasionally):**\r\n\r\n**Output of `docker version`:**\r\n\r\n```\r\nClient:\r\n Version:           18.06.1-ce\r\n API version:       1.38\r\n Go version:        go1.11\r\n Git commit:        e68fc7a215\r\n Built:             Fri Sep  7 11:26:59 2018\r\n OS/Arch:           linux/amd64\r\n Experimental:      false\r\n\r\nServer:\r\n Engine:\r\n  Version:          18.06.1-ce\r\n  API version:      1.38 (minimum version 1.12)\r\n  Go version:       go1.11\r\n  Git commit:       e68fc7a215\r\n  Built:            Fri Sep  7 11:26:11 2018\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     false\r\n```\r\n\r\n**Output of `docker info`:**\r\n\r\n```\r\nContainers: 1\r\n Running: 1\r\n Paused: 0\r\n Stopped: 0\r\nImages: 83\r\nServer Version: 18.06.1-ce\r\nStorage Driver: overlay2\r\n Backing Filesystem: extfs\r\n Supports d_type: true\r\n Native Overlay Diff: false\r\nLogging Driver: json-file\r\nCgroup Driver: cgroupfs\r\nPlugins:\r\n Volume: local\r\n Network: bridge host macvlan null overlay\r\n Log: awslogs fluentd gcplogs gelf journald json-file logentries splunk syslog\r\nSwarm: inactive\r\nRuntimes: runc\r\nDefault Runtime: runc\r\nInit Binary: docker-init\r\ncontainerd version: 468a545b9edcd5932818eb9de8e72413e616e86e\r\nrunc version: 69663f0bd4b60df09991c08812a60108003fa340\r\ninit version: fec3683\r\nSecurity Options:\r\n seccomp\r\n  Profile: default\r\nKernel Version: 4.14.70-1-lts\r\nOperating System: Arch Linux\r\nOSType: linux\r\nArchitecture: x86_64\r\nCPUs: 4\r\nTotal Memory: 7.679GiB\r\nName: colonelthink\r\nID: J6N7:37O7:PQEO:VI7Y:NQAQ:JFJ5:77WR:FFF7:7CF7:MUIC:MZF2:ZVTZ\r\nDocker Root Dir: /var/lib/docker\r\nDebug Mode (client): false\r\nDebug Mode (server): false\r\nRegistry: https://index.docker.io/v1/\r\nLabels:\r\nExperimental: false\r\nInsecure Registries:\r\n 127.0.0.0/8\r\nLive Restore Enabled: false\r\n```\r\n\r\n"},{"labels":[null,"documentation",null,null],"text":"There are a HostConfig.DiskQuota option with description \"Disk limit (in bytes).\" on https://docs.docker.com/engine/api/v1.37/#operation/ContainerCreate.\r\n\r\nBut, unfortunately, I can't find any other information about what does it mean. What constrains of use does it have? Is it can be used on all platfroms/storage drivers? What would be if this limit will be exceeded?"},{"labels":[null,"documentation"],"text":"https://docs.docker.com/develop/develop-images/dockerfile_best-practices/#using-pipes\r\n\r\nI think this should mention \r\n\r\n    SHELL [\"/bin/bash\", \"-c\"]\r\n\r\nas an alternative to make `set -o pipefail` work on Debian base images. Using the exec form, especially when you have the need to add pipefail to an existing long RUN sequence, is intrusive and would incur a lot of rewriting work."},{"labels":["documentation",null],"text":"<!--\r\nIf you are reporting a new issue, make sure that we do not have any duplicates\r\nalready open. You can ensure this by searching the issue list for this\r\nrepository. If there is a duplicate, please close your issue and add a comment\r\nto the existing issue instead.\r\n\r\nIf you suspect your issue is a bug, please edit your issue description to\r\ninclude the BUG REPORT INFORMATION shown below. If you fail to provide this\r\ninformation within 7 days, we cannot debug your issue and will close it. We\r\nwill, however, reopen it if you later provide the information.\r\n\r\nFor more information about reporting issues, see\r\nhttps://github.com/moby/moby/blob/master/CONTRIBUTING.md#reporting-other-issues\r\n\r\n---------------------------------------------------\r\nGENERAL SUPPORT INFORMATION\r\n---------------------------------------------------\r\n\r\nThe GitHub issue tracker is for bug reports and feature requests.\r\nGeneral support for **docker** can be found at the following locations:\r\n\r\n- Docker Support Forums - https://forums.docker.com\r\n- Slack - community.docker.com #general channel\r\n- Post a question on StackOverflow, using the Docker tag\r\n\r\nGeneral support for **moby** can be found at the following locations:\r\n\r\n- Moby Project Forums - https://forums.mobyproject.org\r\n- Slack - community.docker.com #moby-project channel\r\n- Post a question on StackOverflow, using the Moby tag\r\n\r\n---------------------------------------------------\r\nBUG REPORT INFORMATION\r\n---------------------------------------------------\r\nUse the commands below to provide key information from your environment:\r\nYou do NOT have to include this information if this is a FEATURE REQUEST\r\n-->\r\n**Description**\r\n\r\nFrom documentation:\r\nhttps://docs.docker.com/config/containers/container-networking/#ip-address-and-hostname\r\n> a container’s hostname defaults to be the container’s name in Docker. You can override the hostname using --hostname\r\n\r\nhttps://docs.docker.com/config/containers/container-networking/#dns-services\r\n> --hostname | The hostname a container uses for itself. Defaults to the container’s name if not specified.\r\n\r\nWhen I omit --hostname, I only get container ID as hostname.\r\nThat is either a bug in functionality or in documentation.\r\n\r\n<!--\r\nBriefly describe the problem you are having in a few paragraphs.\r\n-->\r\n\r\n**Steps to reproduce the issue:**\r\n```\r\n$ docker run --rm --name test1 jayprakashji/ubuntu-network-tools tail -n1 /etc/hosts\r\n172.17.0.3\t91f7517eec46\r\n\r\n$ docker run --rm --name test1 jayprakashji/ubuntu-network-tools ping -c1 test1\r\nping: unknown host\r\n\r\n\r\n$ docker run --rm --name test1 -h test1 jayprakashji/ubuntu-network-tools tail -n1 /etc/hosts\r\n172.17.0.3\ttest1\r\n\r\n$ docker run --rm --name test1 -h test1 jayprakashji/ubuntu-network-tools ping -c1 test1\r\nPING test1 (172.17.0.3): 56 data bytes\r\n64 bytes from 172.17.0.3: icmp_seq=0 ttl=64 time=0.039 ms\r\n--- test1 ping statistics ---\r\n1 packets transmitted, 1 packets received, 0% packet loss\r\nround-trip min/avg/max/stddev = 0.039/0.039/0.039/0.000 ms\r\n```\r\n\r\n**Describe the results you received:**\r\nWithout --hostname (-h), ping is unable to resolve container name.\r\n\r\n**Describe the results you expected:**\r\n\r\nContainer name and hostname are same, so according to mentioned doc, both variants should behave equally.\r\n\r\n\r\n**Output of `docker version`:**\r\n\r\n```\r\n Version:           18.06.0-ce\r\n API version:       1.38\r\n Go version:        go1.10.3\r\n Git commit:        0ffa825\r\n Built:             Wed Jul 18 19:11:45 2018\r\n OS/Arch:           linux/amd64\r\n Experimental:      false\r\n\r\nServer:\r\n Engine:\r\n  Version:          18.06.0-ce\r\n  API version:      1.38 (minimum version 1.12)\r\n  Go version:       go1.10.3\r\n  Git commit:       0ffa825\r\n  Built:            Wed Jul 18 19:14:07 2018\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     false\r\n```\r\n\r\n**Output of `docker info`:**\r\n\r\n```\r\nContainers: 11\r\n Running: 2\r\n Paused: 0\r\n Stopped: 9\r\nImages: 69\r\nServer Version: 18.06.0-ce\r\nStorage Driver: devicemapper\r\n Pool Name: docker-253:1-5768343-pool\r\n Pool Blocksize: 65.54kB\r\n Base Device Size: 10.74GB\r\n Backing Filesystem: xfs\r\n Udev Sync Supported: true\r\n Data file: /dev/loop0\r\n Metadata file: /dev/loop1\r\n Data loop file: /var/lib/docker/devicemapper/devicemapper/data\r\n Metadata loop file: /var/lib/docker/devicemapper/devicemapper/metadata\r\n Data Space Used: 12.52GB\r\n Data Space Total: 107.4GB\r\n Data Space Available: 67.38GB\r\n Metadata Space Used: 22.36MB\r\n Metadata Space Total: 2.147GB\r\n Metadata Space Available: 2.125GB\r\n Thin Pool Minimum Free Space: 10.74GB\r\n Deferred Removal Enabled: true\r\n Deferred Deletion Enabled: true\r\n Deferred Deleted Device Count: 0\r\n Library Version: 1.02.146 (2017-12-18)\r\nLogging Driver: json-file\r\nCgroup Driver: cgroupfs\r\nPlugins:\r\n Volume: local\r\n Network: bridge host macvlan null overlay\r\n Log: awslogs fluentd gcplogs gelf journald json-file logentries splunk syslog\r\nSwarm: active\r\n NodeID: g87d69ja2y0wy5i9m8pn5b7ai\r\n Is Manager: true\r\n ClusterID: czn8ge5ue920y81jcg2eunijh\r\n Managers: 1\r\n Nodes: 1\r\n Orchestration:\r\n  Task History Retention Limit: 5\r\n Raft:\r\n  Snapshot Interval: 10000\r\n  Number of Old Snapshots to Retain: 0\r\n  Heartbeat Tick: 1\r\n  Election Tick: 3\r\n Dispatcher:\r\n  Heartbeat Period: 5 seconds\r\n CA Configuration:\r\n  Expiry Duration: 3 months\r\n  Force Rotate: 0\r\n Autolock Managers: false\r\n Root Rotation In Progress: false\r\n Node Address: 192.168.1.65\r\n Manager Addresses:\r\n  192.168.1.65:2377\r\nRuntimes: runc\r\nDefault Runtime: runc\r\nInit Binary: docker-init\r\ncontainerd version: d64c661f1d51c48782c9cec8fda7604785f93587\r\nrunc version: 69663f0bd4b60df09991c08812a60108003fa340\r\ninit version: fec3683\r\nSecurity Options:\r\n seccomp\r\n  Profile: default\r\nKernel Version: 4.17.7-200.fc28.x86_64\r\nOperating System: Fedora 28 (Workstation Edition)\r\nOSType: linux\r\nArchitecture: x86_64\r\nCPUs: 4\r\nTotal Memory: 15.54GiB\r\nName: jxi15zf\r\nID: PHMZ:56J6:TKPH:NYRZ:3UQ5:ZTAR:BTA6:CDOJ:3DDF:32CW:5OMR:4J5O\r\nDocker Root Dir: /var/lib/docker\r\nDebug Mode (client): false\r\nDebug Mode (server): false\r\nUsername: jayprakashji\r\nRegistry: https://index.docker.io/v1/\r\nLabels:\r\nExperimental: false\r\nInsecure Registries:\r\n 127.0.0.0/8\r\nLive Restore Enabled: false\r\n\r\nWARNING: devicemapper: usage of loopback devices is strongly discouraged for production use.\r\n         Use `--storage-opt dm.thinpooldev` to specify a custom block storage device.\r\n```\r\n\r\n**Additional environment details (AWS, VirtualBox, physical, etc.):**\r\nI don't suspect that it matters, but I have active swarm (single node), which I use for running apps as services. (i.e. pma for local DB )"},{"labels":["documentation",null,null],"text":"**Description**\r\n\r\nAttempting to follow the steps at https://success.docker.com/article/how-do-i-change-the-docker-gwbridge-address to remove the docker_gwbridge network fails with message: \"Error response from daemon: network docker_gwbridge id xxxxx has active endpoints\"\r\n\r\n**Steps to reproduce the issue:**\r\n1.  Stop all running containers\r\n2. docker network rm docker_gwbridge\r\n\r\n**Describe the results you received:**\r\n\r\n\"Error response from daemon: network docker_gwbridge id xxxxx has active endpoints\"\r\n\r\n**Describe the results you expected:**\r\n\r\ndocker_gwbridge is successfully removed\r\n\r\n**Additional information you deem important (e.g. issue happens only occasionally):**\r\n\r\nStopping and starting the docker daemon did not help.  To succeed, I had to use \r\n```\r\ndocker network disconnect --force docker_gwbridge gateway_ingress-sbox\r\n```\r\n\r\n**Output of `docker version`:**\r\n\r\n```\r\nClient:\r\n Version:      18.03.1-ce\r\n API version:  1.37\r\n Go version:   go1.9.5\r\n Git commit:   9ee9f40\r\n Built:        Thu Apr 26 07:20:16 2018\r\n OS/Arch:      linux/amd64\r\n Experimental: false\r\n Orchestrator: swarm\r\n\r\nServer:\r\n Engine:\r\n  Version:      18.03.1-ce\r\n  API version:  1.37 (minimum version 1.12)\r\n  Go version:   go1.9.5\r\n  Git commit:   9ee9f40\r\n  Built:        Thu Apr 26 07:23:58 2018\r\n  OS/Arch:      linux/amd64\r\n  Experimental: false\r\n```\r\n\r\n**Output of `docker info`:**\r\n\r\n```\r\nContainers: 0\r\n Running: 0\r\n Paused: 0\r\n Stopped: 0\r\nImages: 22\r\nServer Version: 18.03.1-ce\r\nStorage Driver: overlay2\r\n Backing Filesystem: extfs\r\n Supports d_type: true\r\n Native Overlay Diff: true\r\nLogging Driver: journald\r\nCgroup Driver: cgroupfs\r\nPlugins:\r\n Volume: local\r\n Network: bridge host macvlan null overlay\r\n Log: awslogs fluentd gcplogs gelf journald json-file logentries splunk syslog\r\nSwarm: active\r\n NodeID: skgf4dv4ux9h1hx3e72mdbfd8\r\n Is Manager: true\r\n ClusterID: zn70moohy7c4flpt96g4begj7\r\n Managers: 1\r\n Nodes: 1\r\n Orchestration:\r\n  Task History Retention Limit: 5\r\n Raft:\r\n  Snapshot Interval: 10000\r\n  Number of Old Snapshots to Retain: 0\r\n  Heartbeat Tick: 1\r\n  Election Tick: 3\r\n Dispatcher:\r\n  Heartbeat Period: 5 seconds\r\n CA Configuration:\r\n  Expiry Duration: 3 months\r\n  Force Rotate: 0\r\n Autolock Managers: false\r\n Root Rotation In Progress: false\r\n Node Address: 10.7.53.227\r\n Manager Addresses:\r\n  10.7.53.227:2377\r\nRuntimes: runc\r\nDefault Runtime: runc\r\nInit Binary: docker-init\r\ncontainerd version: 773c489c9c1b21a6d78b5c538cd395416ec50f88\r\nrunc version: 4fc53a81fb7c994640722ac585fa9ca548971871\r\ninit version: 949e6fa\r\nSecurity Options:\r\n seccomp\r\n  Profile: default\r\nKernel Version: 3.10.0-693.21.1.el7.x86_64\r\nOperating System: CentOS Linux 7 (Core)\r\nOSType: linux\r\nArchitecture: x86_64\r\nCPUs: 8\r\nTotal Memory: 31.26GiB\r\nName: docker_host\r\nID: DRLU:OX6M:MHCB:46AZ:ZAHV:XLCW:272G:PUZ4:P62L:UILM:RIVX:6JIR\r\nDocker Root Dir: /var/lib/docker\r\nDebug Mode (client): false\r\nDebug Mode (server): false\r\nRegistry: https://index.docker.io/v1/\r\nLabels:\r\nExperimental: false\r\nInsecure Registries:\r\n 127.0.0.0/8\r\nLive Restore Enabled: false\r\n\r\n```\r\n\r\n**Additional environment details (AWS, VirtualBox, physical, etc.):**\r\n\r\nVM running on VMWare ESXI/VCenter 6\r\n\r\nComplete steps for troubleshooting:\r\n\r\n```\r\n[centos@docker_host ~]$ docker ps\r\nCONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES\r\n[centos@docker_host ~]$ docker container ls\r\nCONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES\r\n[centos@docker_host ~]$ sudo docker container ls\r\nCONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES\r\n[centos@docker_host ~]$ docker network rm docker_gwbridge\r\nError response from daemon: network docker_gwbridge id 804653507da34e773059ff28f5dfb1055cfbd7c16e01808b372c810af2e6a58c has active endpoints\r\n[centos@docker_host ~]$ docker network inspect docker_gwbridge\r\n[\r\n    {\r\n        \"Name\": \"docker_gwbridge\",\r\n        \"Id\": \"804653507da34e773059ff28f5dfb1055cfbd7c16e01808b372c810af2e6a58c\",\r\n        \"Created\": \"2018-05-01T15:28:49.63617387-07:00\",\r\n        \"Scope\": \"local\",\r\n        \"Driver\": \"bridge\",\r\n        \"EnableIPv6\": false,\r\n        \"IPAM\": {\r\n            \"Driver\": \"default\",\r\n            \"Options\": null,\r\n            \"Config\": [\r\n                {\r\n                    \"Subnet\": \"172.18.0.0/16\",\r\n                    \"Gateway\": \"172.18.0.1\"\r\n                }\r\n            ]\r\n        },\r\n        \"Internal\": false,\r\n        \"Attachable\": false,\r\n        \"Ingress\": false,\r\n        \"ConfigFrom\": {\r\n            \"Network\": \"\"\r\n        },\r\n        \"ConfigOnly\": false,\r\n        \"Containers\": {\r\n            \"ingress-sbox\": {\r\n                \"Name\": \"gateway_ingress-sbox\",\r\n                \"EndpointID\": \"dab9a444acf208de35b164054db597d4c658117a5dba90536c65c6f164fb589d\",\r\n                \"MacAddress\": \"02:42:ac:12:00:02\",\r\n                \"IPv4Address\": \"172.18.0.2/16\",\r\n                \"IPv6Address\": \"\"\r\n            }\r\n        },\r\n        \"Options\": {\r\n            \"com.docker.network.bridge.enable_icc\": \"false\",\r\n            \"com.docker.network.bridge.enable_ip_masquerade\": \"true\",\r\n            \"com.docker.network.bridge.name\": \"docker_gwbridge\"\r\n        },\r\n        \"Labels\": {}\r\n    }\r\n]\r\n[centos@docker_host ~]$ docker system prune\r\nWARNING! This will remove:\r\n        - all stopped containers\r\n        - all networks not used by at least one container\r\n        - all dangling images\r\n        - all build cache\r\nAre you sure you want to continue? [y/N] y\r\nDeleted Containers:\r\n05b07339348a2fc1dd6bac9fbd59e5940b39171d5f96d8ce075bba796e7fdb1e\r\n...\r\n7c06b626377174003790cd32f7f217dd7add6b7fba92c121d3922057addf379a\r\n\r\nDeleted Images:\r\nuntagged: dockersamples/visualizer@sha256:bc680132f772cb44062795c514570db2f0b6f91063bc3afa2386edaaa0ef0b20\r\n...\r\ndeleted: sha256:5bef08742407efd622d243692b79ba0055383bbce12900324f75e56f589aedb0\r\n\r\nTotal reclaimed space: 450MB\r\n[centos@docker_host ~]$ docker network inspect docker_gwbridge\r\n[\r\n    {\r\n        \"Name\": \"docker_gwbridge\",\r\n        \"Id\": \"804653507da34e773059ff28f5dfb1055cfbd7c16e01808b372c810af2e6a58c\",\r\n        \"Created\": \"2018-05-01T15:28:49.63617387-07:00\",\r\n        \"Scope\": \"local\",\r\n        \"Driver\": \"bridge\",\r\n        \"EnableIPv6\": false,\r\n        \"IPAM\": {\r\n            \"Driver\": \"default\",\r\n            \"Options\": null,\r\n            \"Config\": [\r\n                {\r\n                    \"Subnet\": \"172.18.0.0/16\",\r\n                    \"Gateway\": \"172.18.0.1\"\r\n                }\r\n            ]\r\n        },\r\n        \"Internal\": false,\r\n        \"Attachable\": false,\r\n        \"Ingress\": false,\r\n        \"ConfigFrom\": {\r\n            \"Network\": \"\"\r\n        },\r\n        \"ConfigOnly\": false,\r\n        \"Containers\": {\r\n            \"ingress-sbox\": {\r\n                \"Name\": \"gateway_ingress-sbox\",\r\n                \"EndpointID\": \"dab9a444acf208de35b164054db597d4c658117a5dba90536c65c6f164fb589d\",\r\n                \"MacAddress\": \"02:42:ac:12:00:02\",\r\n                \"IPv4Address\": \"172.18.0.2/16\",\r\n                \"IPv6Address\": \"\"\r\n            }\r\n        },\r\n        \"Options\": {\r\n            \"com.docker.network.bridge.enable_icc\": \"false\",\r\n            \"com.docker.network.bridge.enable_ip_masquerade\": \"true\",\r\n            \"com.docker.network.bridge.name\": \"docker_gwbridge\"\r\n        },\r\n        \"Labels\": {}\r\n    }\r\n]\r\n[centos@docker_host ~]$ docker network rm docker_gwbridge\r\nError response from daemon: network docker_gwbridge id 804653507da34e773059ff28f5dfb1055cfbd7c16e01808b372c810af2e6a58c has active endpoints\r\n[centos@docker_host ~]$ docker stop ingress-sbox\r\nError response from daemon: No such container: ingress-sbox\r\n[centos@docker_host ~]$ docker stop gateway_ingress-sbox\r\nError response from daemon: No such container: gateway_ingress-sbox\r\n[centos@docker_host ~]$ docker network disconnect --force docker_gwbridge ingress-sbox\r\nError response from daemon: endpoint ingress-sbox not found\r\n[centos@docker_host ~]$ docker network disconnect --force docker_gwbridge gateway_ingress-sbox\r\n[centos@docker_host ~]$ docker network inspect docker_gwbridge\r\n[\r\n    {\r\n        \"Name\": \"docker_gwbridge\",\r\n        \"Id\": \"804653507da34e773059ff28f5dfb1055cfbd7c16e01808b372c810af2e6a58c\",\r\n        \"Created\": \"2018-05-01T15:28:49.63617387-07:00\",\r\n        \"Scope\": \"local\",\r\n        \"Driver\": \"bridge\",\r\n        \"EnableIPv6\": false,\r\n        \"IPAM\": {\r\n            \"Driver\": \"default\",\r\n            \"Options\": null,\r\n            \"Config\": [\r\n                {\r\n                    \"Subnet\": \"172.18.0.0/16\",\r\n                    \"Gateway\": \"172.18.0.1\"\r\n                }\r\n            ]\r\n        },\r\n        \"Internal\": false,\r\n        \"Attachable\": false,\r\n        \"Ingress\": false,\r\n        \"ConfigFrom\": {\r\n            \"Network\": \"\"\r\n        },\r\n        \"ConfigOnly\": false,\r\n        \"Containers\": {},\r\n        \"Options\": {\r\n            \"com.docker.network.bridge.enable_icc\": \"false\",\r\n            \"com.docker.network.bridge.enable_ip_masquerade\": \"true\",\r\n            \"com.docker.network.bridge.name\": \"docker_gwbridge\"\r\n        },\r\n        \"Labels\": {}\r\n    }\r\n]\r\n[centos@docker_host ~]$ docker network rm docker_gwbridge\r\ndocker_gwbridge\r\n[centos@docker_host ~]$ docker network ls\r\nNETWORK ID          NAME                DRIVER              SCOPE\r\nd9432128aa1c        bridge              bridge              local\r\nacc20ffb4d59        host                host                local\r\nxrad9row46w7        ingress             overlay             swarm\r\nbed9358defe1        none                null                local\r\n\r\n```"},{"labels":["documentation",null,null],"text":"**Description**\r\nThe Enqueue function of ringbuff used for RingLogger located in [ring.go](https://github.com/moby/moby/blob/master/daemon/logger/ring.go#L152-L174) dose not work as it documented that  oldest item will be dropped to make room for new item when buffer is full. Instead, the new item will be dropped. \r\n\r\ncode snippet as shown below\r\n```\r\n// Enqueue adds a message to the buffer queue\r\n// If the message is too big for the buffer it drops the oldest messages to make room\r\n// If there are no messages in the queue and the message is still too big, it adds the message anyway.\r\nfunc (r *messageRing) Enqueue(m *Message) error {\r\n\tmSize := int64(len(m.Line))\r\n\r\n\tr.mu.Lock()\r\n\tif r.closed {\r\n\t\tr.mu.Unlock()\r\n\t\treturn errClosed\r\n\t}\r\n\tif mSize+r.sizeBytes > r.maxBytes && len(r.queue) > 0 {\r\n\t\tr.wait.Signal()\r\n\t\tr.mu.Unlock()\r\n\t\treturn nil\r\n\t}\r\n\r\n\tr.queue = append(r.queue, m)\r\n\tr.sizeBytes += mSize\r\n\tr.wait.Signal()\r\n\tr.mu.Unlock()\r\n\treturn nil\r\n}\r\n```\r\n\r\nA similar misleading comment also appears in the [ring_test.go](https://github.com/moby/moby/blob/master/daemon/logger/ring_test.go#L51-L70) file. the comment said that the queue should have message for \"5\" to \"10\", however, it's \"0\" to \"4\" being tested.\r\n\r\n```\r\nfunc TestRingCap(t *testing.T) {\r\n\tr := newRing(5)\r\n\tfor i := 0; i < 10; i++ {\r\n\t\t// queue messages with \"0\" to \"10\"\r\n\t\t// the \"5\" to \"10\" messages should be dropped since we only allow 5 bytes in the buffer\r\n\t\tif err := r.Enqueue(&Message{Line: []byte(strconv.Itoa(i))}); err != nil {\r\n\t\t\tt.Fatal(err)\r\n\t\t}\r\n\t}\r\n\r\n\t// should have messages in the queue for \"5\" to \"10\"\r\n\tfor i := 0; i < 5; i++ {\r\n\t\tm, err := r.Dequeue()\r\n\t\tif err != nil {\r\n\t\t\tt.Fatal(err)\r\n\t\t}\r\n\t\tif string(m.Line) != strconv.Itoa(i) {\r\n\t\t\tt.Fatalf(\"got unexpected message for iter %d: %s\", i, string(m.Line))\r\n\t\t}\r\n\t}\r\n.......\r\n```\r\n\r\n**Describe the results you expected:**\r\n\r\nEither fix the comment and document to indicated that when buffer is full, new message will be skipped. or fix the code logic to reflect the document"},{"labels":["documentation",null,null],"text":"<!--\r\nIf you are reporting a new issue, make sure that we do not have any duplicates\r\nalready open. You can ensure this by searching the issue list for this\r\nrepository. If there is a duplicate, please close your issue and add a comment\r\nto the existing issue instead.\r\n\r\nIf you suspect your issue is a bug, please edit your issue description to\r\ninclude the BUG REPORT INFORMATION shown below. If you fail to provide this\r\ninformation within 7 days, we cannot debug your issue and will close it. We\r\nwill, however, reopen it if you later provide the information.\r\n\r\nFor more information about reporting issues, see\r\nhttps://github.com/moby/moby/blob/master/CONTRIBUTING.md#reporting-other-issues\r\n\r\n---------------------------------------------------\r\nGENERAL SUPPORT INFORMATION\r\n---------------------------------------------------\r\n\r\nThe GitHub issue tracker is for bug reports and feature requests.\r\nGeneral support for **docker** can be found at the following locations:\r\n\r\n- Docker Support Forums - https://forums.docker.com\r\n- Slack - community.docker.com #general channel\r\n- Post a question on StackOverflow, using the Docker tag\r\n\r\nGeneral support for **moby** can be found at the following locations:\r\n\r\n- Moby Project Forums - https://forums.mobyproject.org\r\n- Slack - community.docker.com #moby-project channel\r\n- Post a question on StackOverflow, using the Moby tag\r\n\r\n---------------------------------------------------\r\nBUG REPORT INFORMATION\r\n---------------------------------------------------\r\nUse the commands below to provide key information from your environment:\r\nYou do NOT have to include this information if this is a FEATURE REQUEST\r\n-->\r\n\r\n**Description**\r\n\r\n<!--\r\nBriefly describe the problem you are having in a few paragraphs.\r\n-->\r\nI'm trying to specify user and group ownership of a docker config during creating\r\na docker service in swarm mode. Per [docker config doc](https://docs.docker.com/engine/swarm/configs/), I can use uid/gid or user/group name\r\nas value of `uid=`/`gid=` option. But based on my test, it seems that only uid/gid\r\nis accepted, otherwise the service fails with `starting container failed: strconv.Atoi: parsing \"<user/group-name-here>\": invalid syntax` error.\r\n\r\n**Steps to reproduce the issue:**\r\n1. Take nginx service as an example. Create an empty file `foo.conf` as docker config.\r\n2. Create a service with following command:\r\n```sh\r\ndocker service create -d --config \\\r\n        source=foo.conf,target=/foo.conf,uid=nginx,gid=nginx \\\r\n        --replicas 1 --name nginx \\\r\n    nginx:alpine\r\n```\r\n\r\n**Describe the results you received:**\r\nService failed to start. `docker service ps nginx` shows the following:\r\n```sh\r\n$ docker service ps --no-trunc nginx\r\nID                          NAME                IMAGE                                                                                  NODE                     DESIRED STATE       CURRENT STATE                    ERROR                                                                        PORTS\r\nwz83ikaaul0awr9d4nop44n24   nginx.1             nginx:alpine@sha256:48947591194ac5a9dce1e110f9198a547debb21630f121081640b87d99ca8b11                            Ready               Pending less than a second ago                                                                                \r\n27wfuzre1iz3gwcw644h79k9h    \\_ nginx.1         nginx:alpine@sha256:48947591194ac5a9dce1e110f9198a547debb21630f121081640b87d99ca8b11   <...>                    Shutdown            Failed less than a second ago    \"starting container failed: strconv.Atoi: parsing \"nginx\": invalid syntax\"   \r\nf4zu8squgvk760pefn8ts62jb    \\_ nginx.1         nginx:alpine@sha256:48947591194ac5a9dce1e110f9198a547debb21630f121081640b87d99ca8b11   <...>                    Shutdown            Failed 5 seconds ago             \"starting container failed: strconv.Atoi: parsing \"nginx\": invalid syntax\"   \r\nj9yx5mtk7p0rs7ylnv9kekw6h    \\_ nginx.1         nginx:alpine@sha256:48947591194ac5a9dce1e110f9198a547debb21630f121081640b87d99ca8b11   <...>                    Shutdown            Failed 10 seconds ago            \"starting container failed: strconv.Atoi: parsing \"nginx\": invalid syntax\"\r\n```\r\n\r\n**Describe the results you expected:**\r\nService starts successfully.\r\n\r\n**Additional information you deem important (e.g. issue happens only occasionally):**\r\nWith uid/gid rather than name, service starts successfully.\r\n\r\n**Output of `docker version`:**\r\n\r\n```\r\nDocker version 18.02.0-ce, build fc4de447b5\r\n```\r\n\r\n**Output of `docker info`:**\r\n\r\n```\r\nContainers: 19\r\n Running: 1\r\n Paused: 0\r\n Stopped: 18\r\nImages: 24\r\nServer Version: 18.02.0-ce\r\nStorage Driver: overlay2\r\n Backing Filesystem: xfs\r\n Supports d_type: true\r\n Native Overlay Diff: false\r\nLogging Driver: json-file\r\nCgroup Driver: cgroupfs\r\nPlugins:\r\n Volume: local\r\n Network: bridge host macvlan null overlay\r\n Log: awslogs fluentd gcplogs gelf journald json-file logentries splunk syslog\r\nSwarm: active\r\n NodeID: 4m0cef9637sue7o62ujt2ghei\r\n Is Manager: true\r\n ClusterID: l2e2hwgoirkr6v85bxsax1cn8\r\n Managers: 1\r\n Nodes: 1\r\n Orchestration:\r\n  Task History Retention Limit: 5\r\n Raft:\r\n  Snapshot Interval: 10000\r\n  Number of Old Snapshots to Retain: 0\r\n  Heartbeat Tick: 1\r\n  Election Tick: 3\r\n Dispatcher:\r\n  Heartbeat Period: 5 seconds\r\n CA Configuration:\r\n  Expiry Duration: 3 months\r\n  Force Rotate: 0\r\n Autolock Managers: false\r\n Root Rotation In Progress: false\r\n Node Address: 192.168.99.1\r\n Manager Addresses:\r\n  192.168.99.1:2377\r\nRuntimes: runc\r\nDefault Runtime: runc\r\nInit Binary: docker-init\r\ncontainerd version: 9b55aab90508bd389d7654c4baf173a981477d55\r\nrunc version: 9f9c96235cc97674e935002fc3d78361b696a69e\r\ninit version: 949e6fa\r\nSecurity Options:\r\n seccomp\r\n  Profile: default\r\nKernel Version: 4.15.5-1-ARCH\r\nOperating System: Arch Linux\r\nOSType: linux\r\nArchitecture: x86_64\r\nCPUs: 8\r\nTotal Memory: 7.712GiB\r\nName: <...>\r\nID: 6L44:BPEL:FEEL:D57Z:UXC5:Z3J3:LGYQ:2E2I:NDRD:EQRE:EA75:ZYBL\r\nDocker Root Dir: /var/lib/docker\r\nDebug Mode (client): false\r\nDebug Mode (server): false\r\nRegistry: https://index.docker.io/v1/\r\nLabels:\r\nExperimental: false\r\nInsecure Registries:\r\n 127.0.0.0/8\r\nLive Restore Enabled: false\r\n```\r\n\r\n**Additional environment details (AWS, VirtualBox, physical, etc.):**\r\n- OS: Arch Linux       "},{"labels":["documentation"],"text":"\r\n<img width=\"1104\" alt=\"screen shot 2018-02-08 at 3 01 14 pm\" src=\"https://user-images.githubusercontent.com/15134885/35995402-32453670-0ce1-11e8-848b-14d1cc3b1e38.png\">\r\n**Description**\r\n\r\nGodoc is down for client reference\r\n\r\n**Steps to reproduce the issue:**\r\n1. https://godoc.org/github.com/docker/docker/client\r\n2. view the empty chasm that is a 404 error\r\n\r\nOther packages are listed fine on Godoc currently and I was able to view the docs just the other day perfectly fine, so I am guessing that something changed in the commits merged into `master` today...\r\n\r\n"},{"labels":["documentation",null,null],"text":"As a knowledgeable-but-not-expert user, I recently got this message:\r\n\r\n> ERROR: for containername  Cannot create container for service containername: privileged mode is incompatible with user namespaces.  You must run the container in the host namespace when running privileged mode\r\n\r\nMy first reaction was [\"what the **** does this mean?\"](https://media.giphy.com/media/kF0ClnIcSBiDe/giphy.gif).\r\n\r\nThis ticket documents how an average user (senior-ish software engineer, uses docker at work and at home) solved this problem using this error message and Google.\r\n\r\nI take full responsibility for my incompetence, but there are many more of my kind, and the humane thing to do is to guide them towards a solution. **We need a better error message.** I hope that ticket makes a strong case for a better error message and better documentation to support it.\r\n\r\n## Context\r\n\r\nI updated docker recently. Then things something stopped working, and this error message was the only hint I got. I don't understand any of the concept it mentions, or which steps to take in order to fix my problem.\r\n\r\n## Fixing the issue\r\n\r\nWhen you are knee-deep in complex issues all day, you can easily forget how the average user sees things, so I wrote down my thought process down while I fixed the issue so you could understand my perspective as an end user.\r\n\r\n1. What the f- does this mean? This worked yesterday! (at this point, I'm already 3 levels deep on a completely different issue)\r\n2. What's privileged mode? What are user name spaces?\r\n3. What does \"running the container in the host namespace\" mean? *What am I supposed to do?*\r\n4. Maybe if I try to run it without sudo... nope.\r\n5. *Googles the error message*\r\n6. \"Introduction to User Namespaces in Docker Engine\" ([link](https://success.docker.com/article/Introduction_to_User_Namespaces_in_Docker_Engine))\r\n7. \"A namespace wraps a global system resource in an abstraction that makes it appear to the processes within...\". Nope, can't understand any of that.\r\n8. I'm halfway through that page, and I'm still no closer to a useful explanation. What is this? What does any of this even mean? Why doesn't it work anymore?\r\n9. *Googles the error message again*\r\n10. Okay, so according to [this article](https://luppeng.wordpress.com/2016/07/04/docker-user-namespaces/), it seems to be a way to prevent a docker root user to do nasty stuff on the host machine. Why didn't they tell me that in step 6?\r\n11. \"--userns-remap=default\" can allegedly fix this. Nope, can't just add it to `docker-compose up`.\r\n12. `userns_mode: \"host\"` apparently disables that. All I need to do is bump the docker-compose version to 2.1\r\n13. \"2.1\" is not a valid version, for some reason that is completely unexplained by this generic error message. I'm using the latest version of docker and docker-compose, which is why I'm getting the errors above in the first place\r\n14. (at this point, I should state that I am slowly losing my cool)\r\n14. Oh, it seems like this feature was added in a version that's not available on the docker PPA. Time to update docker-compose to an unreleased version to fix a problem in a released version. [This page](https://github.com/docker/compose/releases) helped me.\r\n15. \"docker-compose version 1.19.0-rc3\". Sweet, it's working!\r\n16. Aaaaand it works. I don't know why it works, but it works, and that's enough for one day.\r\n\r\nAll of this, including creating the ticket and finding the Office Space gif took me about 1.5 hours. I believe a more appropriate error message and documentation page could have reduced that to a few minutes. I apologize for the odd format of this ticket, but I hope it's still helpful."},{"labels":[null,"documentation",null],"text":"**Description**\r\n\r\nWhen using `ENV` in the form `ENV <key> <value>` both single and double quotes are being\r\nstripped from `<value>`.\r\n\r\nAccording to [the documentation](https://docs.docker.com/engine/reference/builder/#env):\r\n\r\n> The `ENV` instruction has two forms. The first form, `ENV <key> <value>`, will set a single variable to a value. The entire string after the first space will be treated as the `<value>` - including characters such as spaces and quotes.\r\n\r\nI'm seeing double and single quotes being stripped from entries such as these:\r\n\r\n```\r\nENV DQUOTE One \"two two\" three four\r\nENV SQUOTE One 'two two' three four\r\n```\r\n\r\nBackslashes are also being interpreted:\r\n\r\n```\r\nENV SBACKSLASH One two\\ two three four\r\nENV DBACKSLASH One two\\\\ two three four\r\n```\r\n\r\n**Steps to reproduce the issue:**\r\n\r\n1. `git clone git@github.com:gentlemanautomaton/docker-env-quote-test.git`\r\n2. `cd docker-env-quote-test`\r\n3. `docker build -t gentlemanautomaton/docker-env-quote-test:latest .`\r\n4. `docker inspect gentlemanautomaton/docker-env-quote-test:latest`\r\n\r\n**Describe the results you received:**\r\n\r\n```\r\n\"Env\": [\r\n\t\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\",\r\n\t\"DQUOTE=One two two three four\",\r\n\t\"SQUOTE=One two two three four\",\r\n\t\"SBACKSLASH=One two two three four\",\r\n\t\"DBACKSLASH=One two\\\\ two three four\",\r\n\t\"BACKTICK=One `two two` three four\"\r\n],\r\n```\r\n\r\n**Describe the results you expected:**\r\n\r\n```\r\n\"Env\": [\r\n\t\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\",\r\n\t\"DQUOTE=One \\\"two two\\\" three four\",\r\n\t\"SQUOTE=One 'two two' three four\",\r\n\t\"SBACKSLASH=One two\\\\ two three four\",\r\n\t\"DBACKSLASH=One two\\\\\\\\ two three four\",\r\n\t\"BACKTICK=One `two two` three four\"\r\n],\r\n```\r\n\r\n**Additional information you deem important (e.g. issue happens only occasionally):**\r\n\r\nIn the hope that it's useful, I created a test `Dockerfile` for reproduction in this repo:\r\n\r\n* https://github.com/gentlemanautomaton/docker-env-quote-test\r\n\r\n**Output of `docker version`:**\r\n\r\n```\r\nClient:\r\n Version:       18.01.0-ce\r\n API version:   1.35\r\n Go version:    go1.9.2\r\n Git commit:    03596f5\r\n Built: Wed Jan 10 20:13:21 2018\r\n OS/Arch:       linux/amd64\r\n Experimental:  false\r\n Orchestrator:  swarm\r\n\r\nServer:\r\n Engine:\r\n  Version:      18.01.0-ce\r\n  API version:  1.35 (minimum version 1.12)\r\n  Go version:   go1.9.2\r\n  Git commit:   03596f5\r\n  Built:        Wed Jan 10 20:11:47 2018\r\n  OS/Arch:      linux/amd64\r\n  Experimental: false\r\n```\r\n\r\n**Output of `docker info`:**\r\n\r\n```\r\nContainers: 3\r\n Running: 0\r\n Paused: 0\r\n Stopped: 3\r\nImages: 361\r\nServer Version: 18.01.0-ce\r\nStorage Driver: overlay2\r\n Backing Filesystem: extfs\r\n Supports d_type: true\r\n Native Overlay Diff: true\r\nLogging Driver: json-file\r\nCgroup Driver: cgroupfs\r\nPlugins:\r\n Volume: local\r\n Network: bridge host macvlan null overlay\r\n Log: awslogs fluentd gcplogs gelf journald json-file logentries splunk syslog\r\nSwarm: inactive\r\nRuntimes: runc\r\nDefault Runtime: runc\r\nInit Binary: docker-init\r\ncontainerd version: 89623f28b87a6004d4b785663257362d1658a729\r\nrunc version: b2567b37d7b75eb4cf325b77297b140ea686ce8f\r\ninit version: 949e6fa\r\nSecurity Options:\r\n apparmor\r\n seccomp\r\n  Profile: default\r\nKernel Version: 4.13.0-25-generic\r\nOperating System: Ubuntu 17.10\r\nOSType: linux\r\nArchitecture: x86_64\r\nCPUs: 16\r\nTotal Memory: 31.47GiB\r\nName: REDACTED\r\nID: SVWR:PGRT:4NZT:KVIT:DVBE:EKDI:GG2T:46U2:5PEW:X4UL:LGQZ:SEL4\r\nDocker Root Dir: /var/lib/docker\r\nDebug Mode (client): false\r\nDebug Mode (server): false\r\nRegistry: https://index.docker.io/v1/\r\nLabels:\r\nExperimental: false\r\nInsecure Registries:\r\n 127.0.0.0/8\r\nLive Restore Enabled: false\r\n\r\nWARNING: No swap limit support\r\n```\r\n\r\n**Additional environment details (AWS, VirtualBox, physical, etc.):**\r\n\r\nThe test was performed with `docker-ce` running on physical hardware."},{"labels":["documentation",null],"text":"Just a heads up that the examples over here - https://docs.docker.com/engine/reference/commandline/inspect/#extended-description are incorrect if an overlay network is used.  The Go template extracts 2 IPs in this case (one from the ingress layer and the second the one used by the container) and concatenates them.  Here is an example:\r\n\r\n```\r\n$ docker inspect --format='{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' container1\r\n10.255.0.2110.0.1.9\r\n```\r\n\r\nThe above is on Docker 17.12\r\n\r\n```\r\n$ docker version\r\nClient:\r\n Version:       17.12.0-ce-rc2\r\n API version:   1.35\r\n Go version:    go1.9.2\r\n Git commit:    f9cde63\r\n Built: Tue Dec 12 06:38:26 2017\r\n OS/Arch:       linux/amd64\r\n\r\nServer:\r\n Engine:\r\n  Version:      17.12.0-ce-rc2\r\n  API version:  1.35 (minimum version 1.12)\r\n  Go version:   go1.9.2\r\n  Git commit:   f9cde63\r\n  Built:        Tue Dec 12 06:45:30 2017\r\n  OS/Arch:      linux/amd64\r\n  Experimental: false\r\n```"},{"labels":[null,"documentation"],"text":"**Description**\r\n\r\n<!--\r\nBriefly describe the problem you are having in a few paragraphs.\r\n-->\r\nThe link for `docker stack config` listed under \"Related commands\" at the end of page under URL -\r\n https://github.com/docker/cli/blob/master/docs/reference/commandline/deploy.md returns 404 page error.\r\n\r\n**Steps to reproduce the issue:**\r\n1. Go to https://github.com/docker/cli/blob/master/docs/reference/commandline/deploy.md\r\n2. Scroll to the end of the page section \"Related Commands\"\r\n3. Click on the first link - https://github.com/docker/cli/blob/master/docs/reference/commandline/stack_config.md\r\n4. It shows 404 page not found error\r\n\r\n**Describe the results you received:**\r\n\r\nThe page reports 404 error \r\n\r\n**Describe the results you expected:**\r\n\r\nThe page should display reference to `docker stack config` command.\r\n"},{"labels":[null,"documentation",null,null],"text":"**Description**\r\n\r\nDevicemapper fails on bonnie++ test when using >4Gb / >8Gb files (bonnie uses disk=2*RAM)\r\n\r\n**Steps to reproduce the issue:**\r\n1. Configure docker to use devicemapper (no care loop or thinpool)\r\n2. Run `docker run -ti ariarijp/bonnie -d /tmp -u root`\r\n\r\n**Describe the results you received:**\r\n```\r\nUsing uid:0, gid:0.\r\nWriting a byte at a time...done\r\nWriting intelligently...Can't write block.: No such file or directory\r\nCan't write block 1277407.\r\n```\r\n\r\n**Describe the results you expected:**\r\n_Test results._\r\n\r\n**Additional information you deem important (e.g. issue happens only occasionally):**\r\nOverlay, overlay2, aufs, btrfs, zfs, vfs, host direcory works. devicemapper - not.\r\n\r\n**Output of `docker version`:**\r\n\r\n```\r\nClient:\r\n Version:      17.09.0-ce\r\n API version:  1.32\r\n Go version:   go1.8.3\r\n Git commit:   afdb6d4\r\n Built:        Tue Sep 26 22:42:18 2017\r\n OS/Arch:      linux/amd64\r\n\r\nServer:\r\n Version:      17.09.0-ce\r\n API version:  1.32 (minimum version 1.12)\r\n Go version:   go1.8.3\r\n Git commit:   afdb6d4\r\n Built:        Tue Sep 26 22:40:56 2017\r\n OS/Arch:      linux/amd64\r\n Experimental: false\r\n```\r\n\r\n**Output of `docker info`:**\r\n\r\n```\r\nContainers: 16\r\n Running: 1\r\n Paused: 0\r\n Stopped: 15\r\nImages: 1\r\nServer Version: 17.09.0-ce\r\nStorage Driver: devicemapper\r\n Pool Name: docker-thinpool\r\n Pool Blocksize: 524.3kB\r\n Base Device Size: 10.74GB\r\n Backing Filesystem: xfs\r\n Data file:\r\n Metadata file:\r\n Data Space Used: 91.11GB\r\n Data Space Total: 130.6GB\r\n Data Space Available: 39.45GB\r\n Metadata Space Used: 6.033MB\r\n Metadata Space Total: 1.372GB\r\n Metadata Space Available: 1.366GB\r\n Thin Pool Minimum Free Space: 13.06GB\r\n Udev Sync Supported: true\r\n Deferred Removal Enabled: true\r\n Deferred Deletion Enabled: true\r\n Deferred Deleted Device Count: 0\r\n Library Version: 1.02.110 (2015-10-30)\r\nLogging Driver: json-file\r\nCgroup Driver: cgroupfs\r\nPlugins:\r\n Volume: local\r\n Network: bridge host macvlan null overlay\r\n Log: awslogs fluentd gcplogs gelf journald json-file logentries splunk syslog\r\nSwarm: inactive\r\nRuntimes: runc\r\nDefault Runtime: runc\r\nInit Binary: docker-init\r\ncontainerd version: 06b9cb35161009dcb7123345749fef02f7cea8e0\r\nrunc version: 3f2f8b84a77f73d38244dd690525642a72156c64\r\ninit version: 949e6fa\r\nSecurity Options:\r\n apparmor\r\n seccomp\r\n  Profile: default\r\nKernel Version: 4.4.0-97-generic\r\nOperating System: Ubuntu 16.04.3 LTS\r\nOSType: linux\r\nArchitecture: x86_64\r\nCPUs: 4\r\nTotal Memory: 15.67GiB\r\nName: loadtest\r\nID: N6HT:CHLJ:545Y:NGOT:HGXV:NK7W:ZEP3:DZWG:CH5N:D2TV:OKLR:F5LV\r\nDocker Root Dir: /var/lib/docker\r\nDebug Mode (client): false\r\nDebug Mode (server): false\r\nRegistry: https://index.docker.io/v1/\r\nExperimental: false\r\nInsecure Registries:\r\n 127.0.0.0/8\r\nLive Restore Enabled: false\r\n\r\nWARNING: No swap limit support\r\n```\r\n\r\n**Additional environment details (AWS, VirtualBox, physical, etc.):**\r\nVM in VMware ESXi, 5.5.0, 2068190\r\n\r\n_/etc/docker/daemon.json_\r\n```\r\n{\r\n  \"storage-driver\": \"devicemapper\",\r\n  \"storage-opts\": [\r\n    \"dm.directlvm_device=/dev/sdb\"\r\n  ]\r\n}\r\n```\r\n\r\n_Dockerfile_\r\n```\r\nFROM ubuntu:14.04\r\nMAINTAINER Takuya Arita <takuya.arita@gmail.com>\r\n\r\n# Install Dependencies\r\nRUN apt-get update && apt-get install -y bonnie++\r\n\r\n# Run bonnie++\r\nENTRYPOINT [\"bonnie++\"]\r\n```\r\n\r\n**Another attempts**\r\n`docker run -ti --memory=4G ariarijp/bonnie -r 4096 -d /tmp -u root` **works** 4Gb RAM 8Gb files\r\n`docker run -ti --memory=5G ariarijp/bonnie -r 5120 -d /tmp -u root` **not works** 5Gb RAM 10GB files\r\n`docker run -ti --memory=4G ariarijp/bonnie -r 4096 -s 9977 -d /tmp -u root` **works** 4Gb RAM 9977Mb files\r\n`docker run -ti --memory=4G ariarijp/bonnie -r 4096 -s 9978 -d /tmp -u root` **not works** 4Gb RAM 9978Mb files (it varies +- megabyte)"},{"labels":[null,"documentation"],"text":"In https://github.com/moby/moby/pull/6909 the change was made that, if one specifies an ENTRYPOINT and the base image contains a CMD, then the CMD will be emptied.\r\n\r\nThis behavior is nowhere documented. (Neither in the Dockerfile Reference nor Best Practices)\r\n\r\nFor me this behavior was quite unexpected, because the ENTRYPOINT seems to be the point where one can push in start up scripts. For example nginx images specify a CMD (without ENTRYPOINT) to start the nginx. In my inheriting image I use an ENTRYPOINT script to do some environment dependant configuration and then want to do `exec \"$@\"` to \"resume\" with the base image's CMD. That does not work and I need to respecify the CMD (= copy over and maintain) from the nginx base image.\r\n\r\nThis behavior needs to be documented. From my point of view it could even be changed back, but I certainly miss the creators intented purpose of ENTRYPOINT."},{"labels":["documentation",null,null],"text":"**Description**\r\nI configure the `/etc/docker/daemon.json` with the \"mtu\" parameter to 1450.\r\nDefault bridge is ok with mtu=1450.\r\nBut when a new bridge network is created (either `docker network create `or `docker-compose`), the mtu parameter is false. It's always 1500.\r\n\r\n\r\n**Steps to reproduce the issue:**\r\n1. Add `\"mtu\": 1450 `to `/etc/docker/daemon.json`\r\n2. Restart docker daemon\r\n3. Create a new bridge : `docker network create my-net`\r\n\r\n**Describe the results you received:**\r\nmy-net MTU = 1500 \r\n\r\n**Describe the results you expected:**\r\nmy-net MTU = 1450\r\n\r\n**Output of `docker version`:**\r\n\r\n```\r\nClient:\r\n Version:      17.06.2-ce\r\n API version:  1.30\r\n Go version:   go1.8.3\r\n Git commit:   cec0b72\r\n Built:        Tue Sep  5 20:00:17 2017\r\n OS/Arch:      linux/amd64\r\n\r\nServer:\r\n Version:      17.06.2-ce\r\n API version:  1.30 (minimum version 1.12)\r\n Go version:   go1.8.3\r\n Git commit:   cec0b72\r\n Built:        Tue Sep  5 19:59:11 2017\r\n OS/Arch:      linux/amd64\r\n Experimental: false\r\n```\r\n\r\n**Output of `docker info`:**\r\n\r\n```\r\nContainers: 4\r\n Running: 1\r\n Paused: 0\r\n Stopped: 3\r\nImages: 41\r\nServer Version: 17.06.2-ce\r\nStorage Driver: aufs\r\n Root Dir: /var/lib/docker/100000.100000/aufs\r\n Backing Filesystem: extfs\r\n Dirs: 163\r\n Dirperm1 Supported: true\r\nLogging Driver: json-file\r\nCgroup Driver: cgroupfs\r\nPlugins:\r\n Volume: local\r\n Network: bridge host macvlan null overlay\r\n Log: awslogs fluentd gcplogs gelf journald json-file logentries splunk syslog\r\nSwarm: inactive\r\nRuntimes: runc\r\nDefault Runtime: runc\r\nInit Binary: docker-init\r\ncontainerd version: 6e23458c129b551d5c9871e5174f6b1b7f6d1170\r\nrunc version: 810190ceaa507aa2727d7ae6f4790c76ec150bd2\r\ninit version: 949e6fa\r\nSecurity Options:\r\n apparmor\r\n seccomp\r\n  Profile: default\r\n userns\r\nKernel Version: 4.4.0-93-generic\r\nOperating System: Ubuntu 16.04.3 LTS\r\nOSType: linux\r\nArchitecture: x86_64\r\nCPUs: 2\r\nTotal Memory: 15.67GiB\r\nName: test-vm-04\r\nID: OZSP:AWLJ:HAPO:CZD6:NNLX:YDIT:LGWR:RMEI:P4SK:SBY4:2RAT:5YIK\r\nDocker Root Dir: /var/lib/docker/100000.100000\r\nDebug Mode (client): false\r\nDebug Mode (server): false\r\nRegistry: https://index.docker.io/v1/\r\nExperimental: false\r\nInsecure Registries:\r\n 127.0.0.0/8\r\nLive Restore Enabled: true\r\n```\r\n"},{"labels":["documentation",null,null],"text":"Hi!\r\n\r\nShould the --update-monitor be greater than --stop-grace-period to monitorize the update process?\r\n\r\nI mean, does --update-monitor time start counting while task is shutting down or it starts to count when the new task is starting?\r\n\r\nThanks!"},{"labels":["documentation",null,null],"text":"**Description**\r\n\r\nLooks like documentation for docker network is outdated.\r\nTrying to learn docker network using the examples provided [here](https://docs.docker.com/engine/userguide/networking/work-with-networks/#link-containers-without-using-user-defined-networks).\r\n\r\n**Steps to reproduce the issue:**\r\n1.create docker network \r\n    `$ docker network create -o \"com.docker.network.bridge.host_binding_ipv4\"=\"172.23.0.1\" my-network`\r\n    bf64e40499c8c1644c8ed3b743f25dc72866ae81294cec92d86e216fbb9a0ab5\r\n\r\n2. inspect the network.\r\n\r\n    `$ docker network inspect my-network`\r\n\r\n```\r\n[\r\n    {\r\n        \"Name\": \"my-network\",\r\n        \"Id\": \"bf64e40499c8c1644c8ed3b743f25dc72866ae81294cec92d86e216fbb9a0ab5\",\r\n        \"Created\": \"2017-09-16T23:48:31.063263608-04:00\",\r\n        \"Scope\": \"local\",\r\n        \"Driver\": \"bridge\",\r\n        \"EnableIPv6\": false,\r\n        \"IPAM\": {\r\n            \"Driver\": \"default\",\r\n            \"Options\": {},\r\n            \"Config\": [\r\n                {\r\n                    \"Subnet\": \"172.18.0.0/16\",\r\n                    \"Gateway\": \"172.18.0.1\"\r\n                }\r\n            ]\r\n        },\r\n        \"Internal\": false,\r\n        \"Attachable\": false,\r\n        \"Ingress\": false,\r\n        \"ConfigFrom\": {\r\n            \"Network\": \"\"\r\n        },\r\n        \"ConfigOnly\": false,\r\n        \"Containers\": {},\r\n        \"Options\": {\r\n            \"com.docker.network.bridge.host_binding_ipv4\": \"172.23.0.1\"\r\n        },\r\n        \"Labels\": {}\r\n    }\r\n]\r\n```\r\n\r\n3. run redis in this network\r\n\r\n    `$ docker run -d -P --name redis --network my-network redis`\r\n\r\n```\r\nUnable to find image 'redis:latest' locally\r\nlatest: Pulling from library/redis\r\n065132d9f705: Pull complete \r\nfc32c7d9b0f4: Pull complete \r\nad60cc6fa431: Pull complete \r\nb21c99d8cf03: Pull complete \r\n357908014789: Pull complete \r\ne27e1cb0ca43: Pull complete \r\nDigest: sha256:fe77356e6e8d5c5200b9800e50ae71147efdc446a3cc4f601c607fbfd218015e\r\nStatus: Downloaded newer image for redis:latest\r\nf103a6542e50ecd5bb257b9c68214537f1392069d94ddfbf19416af3e54cc640\r\ndocker: Error response from daemon: driver failed programming external connectivity on endpoint redis (1339918305c70f9e6416a5d499b5f6b8691450c9a3d310c8f7c3495c34a931ee): Error starting userland proxy: listen tcp 172.23.0.1:32777: bind: cannot assign requested address.\r\n```\r\n\r\n\r\n\r\n**Describe the results you received:**\r\n\r\ndocker should be able to run redis successfully in provided network.\r\n\r\n**Describe the results you expected:**\r\n\r\n```\r\ndocker: Error response from daemon: driver failed programming external connectivity on endpoint redis (1339918305c70f9e6416a5d499b5f6b8691450c9a3d310c8f7c3495c34a931ee): Error starting userland proxy: listen tcp 172.23.0.1:32777: bind: cannot assign requested address.\r\n```\r\n\r\n**Additional information you deem important (e.g. issue happens only occasionally):**\r\n\r\n**Output of `docker version`:**\r\n\r\n```\r\nClient:\r\n Version:      17.09.0-ce-rc1\r\n API version:  1.31\r\n Go version:   go1.8.3\r\n Git commit:   ae21824\r\n Built:        Wed Sep  6 22:31:42 2017\r\n OS/Arch:      linux/amd64\r\n\r\nServer:\r\n Version:      17.09.0-ce-rc1\r\n API version:  1.32 (minimum version 1.12)\r\n Go version:   go1.8.3\r\n Git commit:   ae21824\r\n Built:        Wed Sep  6 22:33:07 2017\r\n OS/Arch:      linux/amd64\r\n Experimental: false\r\n\r\n```\r\n\r\n**Output of `docker info`:**\r\n\r\n```\r\nContainers: 4\r\n Running: 0\r\n Paused: 0\r\n Stopped: 4\r\nImages: 21\r\nServer Version: 17.09.0-ce-rc1\r\nStorage Driver: overlay2\r\n Backing Filesystem: extfs\r\n Supports d_type: true\r\n Native Overlay Diff: true\r\nLogging Driver: json-file\r\nCgroup Driver: cgroupfs\r\nPlugins:\r\n Volume: local\r\n Network: bridge host macvlan null overlay\r\n Log: awslogs fluentd gcplogs gelf journald json-file logentries splunk syslog\r\nSwarm: inactive\r\nRuntimes: runc\r\nDefault Runtime: runc\r\nInit Binary: docker-init\r\ncontainerd version: 06b9cb35161009dcb7123345749fef02f7cea8e0\r\nrunc version: 3f2f8b84a77f73d38244dd690525642a72156c64\r\ninit version: 949e6fa\r\nSecurity Options:\r\n seccomp\r\n  Profile: default\r\nKernel Version: 4.12.9-300.fc26.x86_64\r\nOperating System: Fedora 26 (Twenty Six)\r\nOSType: linux\r\nArchitecture: x86_64\r\nCPUs: 2\r\nTotal Memory: 7.794GiB\r\nName: localhost.localdomain\r\nID: R3ET:HF5C:ILYK:S46A:5OYO:E67Z:GACB:AFJE:5V7G:EY3V:GBMX:IPTB\r\nDocker Root Dir: /var/lib/docker\r\nDebug Mode (client): false\r\nDebug Mode (server): false\r\nRegistry: https://index.docker.io/v1/\r\nExperimental: false\r\nInsecure Registries:\r\n 127.0.0.0/8\r\nLive Restore Enabled: false\r\n\r\n```\r\n\r\n**Additional environment details (AWS, VirtualBox, physical, etc.):**\r\n\r\nPhysical - Fedora 26"},{"labels":["documentation",null],"text":"**Description**\r\n\r\nThe docker compose documentation shows an example of Volume long syntax as below\r\n\r\n```yaml\r\nversion: \"3.2\"\r\nservices:\r\n  web:\r\n    image: nginx:alpine\r\n    ports:\r\n      - \"80:80\"\r\n\r\nnetworks:\r\n  webnet:\r\n\r\nvolumes:\r\n  - type: volume\r\n    source: mydata\r\n    target: /data\r\n    volume:\r\n      nocopy: true\r\n  - type: bind\r\n    source: ./static\r\n    target: /opt/app/static\r\n```\r\n> Note: The long syntax is new in v3.2\r\n\r\nI believe this format is only valid for volumes property of the service. Please correct me that is not the case \r\n\r\n**Steps to reproduce the issue:**\r\n$ docker-compose config\r\nERROR: In file './docker-compose.yml', volume must be a mapping, not an array.\r\n\r\n**Describe the results you received:**\r\nERROR: In file './docker-compose.yml', volume must be a mapping, not an array.\r\n\r\n\r\n**Describe the results you expected:**\r\nDocumentation examples should work\r\n\r\n**Additional information you deem important (e.g. issue happens only occasionally):**\r\n\r\n**Output of `docker version`:**\r\n\r\n```\r\nClient:\r\n Version:      17.06.0-ce\r\n API version:  1.30\r\n Go version:   go1.8.3\r\n Git commit:   02c1d87\r\n Built:        Fri Jun 23 21:23:31 2017\r\n OS/Arch:      linux/amd64\r\n\r\nServer:\r\n Version:      17.06.0-ce\r\n API version:  1.30 (minimum version 1.12)\r\n Go version:   go1.8.3\r\n Git commit:   02c1d87\r\n Built:        Fri Jun 23 21:19:04 2017\r\n OS/Arch:      linux/amd64\r\n Experimental: false\r\n```\r\n\r\n**Output of `docker info`:**\r\n\r\n```\r\nClient:\r\n Version:      17.06.0-ce\r\n API version:  1.30\r\n Go version:   go1.8.3\r\n Git commit:   02c1d87\r\n Built:        Fri Jun 23 21:23:31 2017\r\n OS/Arch:      linux/amd64\r\n\r\nServer:\r\n Version:      17.06.0-ce\r\n API version:  1.30 (minimum version 1.12)\r\n Go version:   go1.8.3\r\n Git commit:   02c1d87\r\n Built:        Fri Jun 23 21:19:04 2017\r\n OS/Arch:      linux/amd64\r\n Experimental: false\r\nvagrant@vagrant:~/so/volumes$ docker info\r\nContainers: 44\r\n Running: 5\r\n Paused: 0\r\n Stopped: 39\r\nImages: 92\r\nServer Version: 17.06.0-ce\r\nStorage Driver: aufs\r\n Root Dir: /var/lib/docker/aufs\r\n Backing Filesystem: extfs\r\n Dirs: 355\r\n Dirperm1 Supported: true\r\nLogging Driver: json-file\r\nCgroup Driver: cgroupfs\r\nPlugins:\r\n Volume: local\r\n Network: bridge host macvlan null overlay\r\n Log: awslogs fluentd gcplogs gelf journald json-file logentries splunk syslog\r\nSwarm: active\r\n NodeID: smh2288801wg3b15f0twxaew1\r\n Is Manager: true\r\n ClusterID: 3pqs1zxfxe76sb3r462engtfa\r\n Managers: 1\r\n Nodes: 1\r\n Orchestration:\r\n  Task History Retention Limit: 5\r\n Raft:\r\n  Snapshot Interval: 10000\r\n  Number of Old Snapshots to Retain: 0\r\n  Heartbeat Tick: 1\r\n  Election Tick: 3\r\n Dispatcher:\r\n  Heartbeat Period: 5 seconds\r\n CA Configuration:\r\n  Expiry Duration: 3 months\r\n  Force Rotate: 0\r\n Root Rotation In Progress: false\r\n Node Address: 192.168.33.100\r\n Manager Addresses:\r\n  192.168.33.100:2377\r\nRuntimes: runc\r\nDefault Runtime: runc\r\nInit Binary: docker-init\r\ncontainerd version: cfb82a876ecc11b5ca0977d1733adbe58599088a\r\nrunc version: 2d41c047c83e09a6d61d464906feb2a2f3c52aa4\r\ninit version: 949e6fa\r\nSecurity Options:\r\n apparmor\r\n seccomp\r\n  Profile: default\r\nKernel Version: 4.4.0-66-generic\r\nOperating System: Ubuntu 16.04.2 LTS\r\nOSType: linux\r\nArchitecture: x86_64\r\nCPUs: 1\r\nTotal Memory: 992.3MiB\r\nName: vagrant\r\nID: H5PY:YSAS:TWDZ:HRHQ:7WPR:GAOZ:5PNY:YZTD:UB2K:QDDD:DVY5:OJF3\r\nDocker Root Dir: /var/lib/docker\r\nDebug Mode (client): false\r\nDebug Mode (server): false\r\nUsername: tarunlalwani\r\nRegistry: https://index.docker.io/v1/\r\nExperimental: false\r\nInsecure Registries:\r\n 127.0.0.0/8\r\nLive Restore Enabled: false\r\n\r\nWARNING: No swap limit support\r\n```\r\n\r\n**Additional environment details (AWS, VirtualBox, physical, etc.):**\r\n\r\n```\r\n$ docker-compose --version\r\ndocker-compose version 1.15.0, build e12f3b9\r\n```"},{"labels":["documentation",null,null],"text":"<!--\r\nIf you are reporting a new issue, make sure that we do not have any duplicates\r\nalready open. You can ensure this by searching the issue list for this\r\nrepository. If there is a duplicate, please close your issue and add a comment\r\nto the existing issue instead.\r\n\r\nIf you suspect your issue is a bug, please edit your issue description to\r\ninclude the BUG REPORT INFORMATION shown below. If you fail to provide this\r\ninformation within 7 days, we cannot debug your issue and will close it. We\r\nwill, however, reopen it if you later provide the information.\r\n\r\nFor more information about reporting issues, see\r\nhttps://github.com/docker/docker/blob/master/CONTRIBUTING.md#reporting-other-issues\r\n\r\n---------------------------------------------------\r\nGENERAL SUPPORT INFORMATION\r\n---------------------------------------------------\r\n\r\nThe GitHub issue tracker is for bug reports and feature requests.\r\nGeneral support can be found at the following locations:\r\n\r\n- Docker Support Forums - https://forums.docker.com\r\n- IRC - irc.freenode.net #docker channel\r\n- Post a question on StackOverflow, using the Docker tag\r\n\r\n---------------------------------------------------\r\nBUG REPORT INFORMATION\r\n---------------------------------------------------\r\nUse the commands below to provide key information from your environment:\r\nYou do NOT have to include this information if this is a FEATURE REQUEST\r\n-->\r\n\r\n**Description**\r\nFollowing the documentation on using [binded volumes](https://docs.docker.com/engine/admin/volumes/bind-mounts/#start-a-container-with-a-bind-mount), using --mount instead of -v does not allow / in the source path and gives me the error: \r\n```\r\ndocker: Error response from daemon: create /home/martinmine/Documents/target: \"/home/martinmine/Documents/target\" includes invalid characters for a local volume name, only \"[a-zA-Z0-9][a-zA-Z0-9_.-]\" are allowed. If you intended to pass a host directory, use absolute path.\r\nSee 'docker run --help'.\r\n```\r\nRunning  `docker run -d -it --name devtest -v $(pwd)/target:/app nginx:latest` works fine and mounts the `target` directory just find. However, running `docker run -d -it --name devtest --mount source=$(pwd)/target,target=/app nginx:latest` gives me the error above.\r\n\r\n\r\n<!--\r\nBriefly describe the problem you are having in a few paragraphs.\r\n-->\r\n\r\n**Steps to reproduce the issue:**\r\n1. `mkdir target`\r\n2. `docker run -d -it --name devtest --mount source=$(pwd)/target,target=/app nginx:lates`\r\n\r\n**Describe the results you received:**\r\n\r\nSee error message above.\r\n\r\n**Describe the results you expected:**\r\n\r\nI expect the same behavior as with the -v option, [as the documentation states](https://docs.docker.com/engine/admin/volumes/bind-mounts/#start-a-container-with-a-bind-mount).\r\n\r\n**Additional information you deem important (e.g. issue happens only occasionally):**\r\n\r\n**Output of `docker version`:**\r\n\r\n```\r\nDocker version 17.05.0-ce, build 89658be\r\n```\r\n\r\n**Output of `docker info`:**\r\n\r\n```\r\nContainers: 3\r\n Running: 3\r\n Paused: 0\r\n Stopped: 0\r\nImages: 22\r\nServer Version: 17.05.0-ce\r\nStorage Driver: overlay\r\n Backing Filesystem: extfs\r\n Supports d_type: true\r\nLogging Driver: json-file\r\nCgroup Driver: cgroupfs\r\nPlugins: \r\n Volume: local\r\n Network: bridge host macvlan null overlay\r\nSwarm: inactive\r\nRuntimes: runc\r\nDefault Runtime: runc\r\nInit Binary: docker-init\r\ncontainerd version: 9048e5e50717ea4497b757314bad98ea3763c145\r\nrunc version: 9c2d8d184e5da67c95d601382adf14862e4f2228\r\ninit version: 949e6fa\r\nSecurity Options:\r\n seccomp\r\n  Profile: default\r\nKernel Version: 3.10.0-514.10.2.el7.x86_64\r\nOperating System: CentOS Linux 7 (Core)\r\nOSType: linux\r\nArchitecture: x86_64\r\nCPUs: 16\r\nTotal Memory: 28.6GiB\r\nName: xxxxxxxxxxx\r\nID: 6OYY:KN5X:OBD3:SOUB:7CXB:5RL4:XUOZ:7ZEJ:CIOB:U6ZZ:PLYF:6P2X\r\nDocker Root Dir: /mnt/docker\r\nDebug Mode (client): false\r\nDebug Mode (server): false\r\nRegistry: https://index.docker.io/v1/\r\nExperimental: false\r\nInsecure Registries:\r\n 127.0.0.0/8\r\nLive Restore Enabled: false\r\n```\r\n\r\n**Additional environment details (AWS, VirtualBox, physical, etc.):**\r\nHappens on both a virtual machine through Openstack (CentOS7), and on my laptop (Fedora)."},{"labels":[null,"documentation",null,null],"text":"Hi !\r\n\r\nI'm writing a tool (in Python) to get the logs from any containers through the Docker Engine's HTTP API.\r\n\r\nAfter reading [the doc](https://docs.docker.com/engine/api/v1.30/), and trying to implement something, I founded that the protocol used seems to be different from the one for Attach, it seems to be :\r\n\r\n```{\\xFF}\\r\\n{\\xFF}{datas}```\r\n\r\nWhere the first hex number is the size of the message, and the second one seems to be (empirical deduction) the number of bytes that are supposed to be ignored before the start of the actual payload (so the log).\r\nAnd it seems to work, for some containers at least ...\r\n\r\n**EDIT** : The second seems to be the number of bytes that are supposed to be ignored IF the container has ```tty: false```, otherwise, it seems to be the start of the log **END of the edit**\r\n\r\nWith one strange deduction : if ```\\x07``` is found, then it overrides the second {\\xFF} size, and the message starts after this value...\r\n\r\nAm I missing a part of the documentation, or am I not using the HTTP API in a wrong way ?\r\n\r\nThanks for your time,\r\n\r\n**NB** : The protocol above seems to be specific for the logs endpoint, it's not working for the events' endpoint.\r\n\r\n**Output of `docker version`:**\r\n\r\n```\r\nClient:\r\n Version:      17.05.0-ce\r\n API version:  1.29\r\n Go version:   go1.7.5\r\n Git commit:   89658be\r\n Built:        Thu May  4 22:10:54 2017\r\n OS/Arch:      linux/amd64\r\n\r\nServer:\r\n Version:      17.05.0-ce\r\n API version:  1.29 (minimum version 1.12)\r\n Go version:   go1.7.5\r\n Git commit:   89658be\r\n Built:        Thu May  4 22:10:54 2017\r\n OS/Arch:      linux/amd64\r\n Experimental: false\r\n```\r\n\r\n"},{"labels":["documentation",null,null],"text":"This PR https://github.com/moby/moby/pull/13165 allows duration strings as `--since/--until`, but I can't find any example of `docker events --until`. From the help infomation of `docker events`, I suppose that `docker events --until 10m` will stream events for 10 minutes then stop streaming. But actually, it returns immediately without any output.\r\n\r\nAfter diging into codes, I find that the duration will be subtracted from `time.Now()`, that is to say, docker waits for -10 minutes in this scenario, that's why it returns immediately without any output. Then I try `docker events --until -10m` and it works as what I expected.\r\n\r\nMaybe it's intended behavior because @ahmetb has already answered this question in his PR:\r\n![image](https://user-images.githubusercontent.com/20569488/29160624-902086b8-7de5-11e7-959b-4514b34075f0.png)\r\n\r\nBut I still think it's confusing, `until` means do something up to some time, right?\r\n"},{"labels":[null,"documentation",null],"text":"I was looking at [`dispatchers.go`](https://github.com/moby/moby/blob/f577caff19d486d8d01443507d891cb1b0891cdc/builder/dockerfile/dispatchers.go#L689-L693) today when I realized that you can actually specify `tcp` or `udp` when you use the `EXPOSE` instruction.\r\n\r\nThis isn't mentioned at all in the [Dockerfile reference for `EXPOSE`](https://docs.docker.com/engine/reference/builder/#expose). Is this intentional?"},{"labels":["documentation",null,null],"text":"**Description**\r\n\r\nThe `docker-run` man page I'm looking at describes the `--publish-all` option as follows:\r\n\r\n> Publish all exposed ports to random ports on the host interfaces.\r\n> [...]\r\n> When using -P, Docker will bind any exposed port to a random port on the host within an ephemeral port range defined by `/proc/sys/net/ipv4/ip_local_port_range`.\r\n\r\nHowever, the observed behaviour is, instead, that ports are allocated sequentially from the bottom of `ip_local_port_range`, with the sequence being reset whenever `dockerd` is restarted.\r\n\r\nMost definitions of \"random\" I can find mention \"unpredictability\", \"governed by or depending on chance\", or \"in no particular order\" as being defining characteristics; \"start from X and work your way up one by one\" doesn't meet any definition of \"random\" I can find.\r\n\r\n**Steps to reproduce the issue:**\r\n\r\n1. Restart `dockerd`, just to get a clean slate.\r\n2. Run `docker run --rm -it --expose 4242 -P alpine sh`\r\n3. Run `docker ps` in another shell, and note the host port number assigned to the container.  It will almost certainly be the first value in `/proc/sys/net/ipv4/ip_local_port_range`.\r\n4. Exit out of that container.\r\n5. Repeat steps 2-4 another dozen times or so.  Note each time that the host port number is almost certainly the next value above the previous one (with a small chance that another process on the machine might have temporarily snaffled a port in the middle).  Continue to repeat until the experiment has sufficient statistical power to convince you this isn't just the cruel hand of random chance toying with your sanity.\r\n6. Restart `dockerd` again.\r\n7. Run `docker run --rm -it --expose 4242 -P alpine sh`\r\n8. Run `docker ps` is another shell, note that the host port has probably gone back to the first value in `/proc/sys/net/ipv4/ip_local_port_range` (or is pretty close to it).\r\n\r\n**Describe the results you received:**\r\n\r\nIncluded above.\r\n\r\n**Describe the results you expected:**\r\n\r\nThe host ports allocated should not be allocated sequentially when multiple containers with `-P` are run.\r\n\r\n**Additional information you deem important (e.g. issue happens only occasionally):**\r\n\r\nThe chances of getting the first port in `ip_local_port_range` on my system are about 1 in 28,000.  The chances of getting the next sequential port each time over 10 runs, if my arithmetic is correct, is 1 in 15,992,496,204,377,989,289,565,234,114,532,246,053,888,000.  I don't think I'm that lucky.\r\n\r\nOn the up side, at least dockerd doesn't reuse recently released ports, like it does with container IP addresses, and it doesn't blindly re-use allocated ports after restart.  So the problem isn't as horrible as it *could* be.  But it's still not great.\r\n\r\nIdeally, the relevant code would be fixed to allocate ports randomly, in line with the documentation, but if not, the documentation should be updated to accurately describe the port allocation process.\r\n\r\n**Output of `docker version`:**\r\n\r\n```\r\nClient:\r\n Version:      17.06.0-ce\r\n API version:  1.30\r\n Go version:   go1.8.3\r\n Git commit:   02c1d87\r\n Built:        Fri Jun 23 21:17:22 2017\r\n OS/Arch:      linux/amd64\r\n\r\nServer:\r\n Version:      17.06.0-ce\r\n API version:  1.30 (minimum version 1.12)\r\n Go version:   go1.8.3\r\n Git commit:   02c1d87\r\n Built:        Fri Jun 23 21:16:12 2017\r\n OS/Arch:      linux/amd64\r\n Experimental: false\r\n```\r\n\r\n**Output of `docker info`:**\r\n\r\n```\r\nContainers: 2\r\n Running: 2\r\n Paused: 0\r\n Stopped: 0\r\nImages: 392\r\nServer Version: 17.06.0-ce\r\nStorage Driver: overlay\r\n Backing Filesystem: extfs\r\n Supports d_type: true\r\nLogging Driver: json-file\r\nCgroup Driver: cgroupfs\r\nPlugins: \r\n Volume: local\r\n Network: bridge host macvlan null overlay\r\n Log: awslogs fluentd gcplogs gelf journald json-file logentries splunk syslog\r\nSwarm: inactive\r\nRuntimes: runc\r\nDefault Runtime: runc\r\nInit Binary: docker-init\r\ncontainerd version: cfb82a876ecc11b5ca0977d1733adbe58599088a\r\nrunc version: 2d41c047c83e09a6d61d464906feb2a2f3c52aa4\r\ninit version: 949e6fa\r\nSecurity Options:\r\n seccomp\r\n  Profile: default\r\nKernel Version: 4.9.0-3-amd64\r\nOperating System: Debian GNU/Linux 9 (stretch)\r\nOSType: linux\r\nArchitecture: x86_64\r\nCPUs: 8\r\nTotal Memory: 62.36GiB\r\nName: lolzno\r\nID: XCA5:PLPV:KBPE:SY63:O254:RZ3S:4UQS:C73M:KYHC:ASCI:25HL:GOQP\r\nDocker Root Dir: /var/lib/docker\r\nDebug Mode (client): false\r\nDebug Mode (server): false\r\nUsername: lolzno\r\nRegistry: https://index.docker.io/v1/\r\nExperimental: false\r\nInsecure Registries:\r\n 127.0.0.0/8\r\nLive Restore Enabled: true\r\n\r\nWARNING: No swap limit support\r\n```\r\n"},{"labels":["documentation"],"text":"There is a giant link at the top of the README:\r\n\r\n> Docker users, see [Moby and Docker](https://mobyproject.org/#moby-and-docker) to clarify the relationship between the projects\r\n\r\nThe link has a target, `#moby-and-docker`, but that seems to be broken. The landing page doesn't *really* clarify what the differences are, perhaps Moby is some base library to Docker? (But then what is `libcontainerd`? More abstraction?)"},{"labels":[null,"documentation"],"text":"Docker API documentation needs to be updated.\r\n\r\nThe `/plugins` endpoint returns the following response: https://github.com/moby/moby/blob/0ac25dfc751fa4304ab45afd5cd8705c2235d101/api/types/plugin_responses.go#L1\r\n\r\nBased on https://github.com/moby/moby/blob/0ac25dfc751fa4304ab45afd5cd8705c2235d101/api/types/plugin.go#L8-L31\r\n\r\nThe plugin object is quite different from the one documented in the 200 response sample at https://docs.docker.com/engine/api/v1.30/#operation/PluginList\r\n"},{"labels":["documentation",null,null],"text":"**Description**\r\n\r\nThe link of the \"docker run\" clean up command is not correct. The link is \"https://docs.docker.com/engine/reference/run/#clean-up---rm\" and should be \"https://docs.docker.com/engine/reference/run/#clean-up--rm\".\r\n\r\n**Steps to reproduce the issue:**\r\n1. Go to https://docs.docker.com/engine/reference/run/\r\n2. Click the link\r\n3. It doesn't work\r\n4. Check https://docs.docker.com/engine/reference/run/#clean-up--rm\r\n\r\n**Describe the results you received:**\r\nThe link doesn't work\r\n\r\n**Describe the results you expected:**\r\nThe link should work\r\n\r\n**Additional information you deem important (e.g. issue happens only occasionally):**\r\nI notice that if I change the markdown code to have only one \"-\", the link of the markdown is broken.\r\n\r\n**Output of `docker version`:**\r\nIt is the online documentation of 17.06\r\n\r\n**Output of `docker info`:**\r\nIt is the online documentation of 17.06\r\n\r\n**Additional environment details (AWS, VirtualBox, physical, etc.):**\r\nNone"},{"labels":[null,"documentation",null,null],"text":"At the moment, the Dockerfile reference states the following:\r\n\r\n> A Dockerfile must start with a `FROM` instruction.\r\n\r\nHowever, this has since been changed because:\r\n\r\n> FROM instructions support variables that are declared by any ARG instructions that occur before the first FROM.\r\n\r\nThe `docs/reference/builder.md` file should be updated to reflect this change."},{"labels":[null,"documentation",null,null,null],"text":"I've got 2 use cases which stopped working with the latest version of docker. But unfortunately I can't say with which version it started.\r\n\r\nUse Case 1:\r\nI generate a config file for an asp.net page with a custom console application. Therefore I have the key/values for the config file in the parameter:\r\n```\r\nRUN C:\\\\deployment\\\\tool.exe -value \"ConnectionString=\\\"Server=localhost;Database=Test;User Id=sa;Password=password\\\";Title=\\\"Test\\\"\" -dir C:\\inetpub\\wwwroot\\Test\r\n```\r\n\r\nUse Case 2:\r\nI generate also a json file with the tool. Also here I pass the json content as parameter:\r\n```\r\nRUN C:\\\\deployment\\\\tool.exe -value \"{\\\"\"Title\\\"\":\\\"\"Unknown\\\"\",\\\"\"Packages\\\"\":[{\\\"\"Id\\\"\":\\\"\"Test\\\"\",\\\"\"Version\\\"\":\\\"\"*\\\"\",\\\"\"Configuration\\\"\":\\\"\"Release\\\"\"}]}\" -dir C:\\inetpub\\wwwroot\\Test\r\n```\r\n\r\nBoth cases generate now powershell errors. I can't find a way to get it working again."},{"labels":[null,"documentation",null],"text":"<!--\r\nIf you are reporting a new issue, make sure that we do not have any duplicates\r\nalready open. You can ensure this by searching the issue list for this\r\nrepository. If there is a duplicate, please close your issue and add a comment\r\nto the existing issue instead.\r\n\r\nIf you suspect your issue is a bug, please edit your issue description to\r\ninclude the BUG REPORT INFORMATION shown below. If you fail to provide this\r\ninformation within 7 days, we cannot debug your issue and will close it. We\r\nwill, however, reopen it if you later provide the information.\r\n\r\nFor more information about reporting issues, see\r\nhttps://github.com/docker/docker/blob/master/CONTRIBUTING.md#reporting-other-issues\r\n\r\n---------------------------------------------------\r\nGENERAL SUPPORT INFORMATION\r\n---------------------------------------------------\r\n\r\nThe GitHub issue tracker is for bug reports and feature requests.\r\nGeneral support can be found at the following locations:\r\n\r\n- Docker Support Forums - https://forums.docker.com\r\n- IRC - irc.freenode.net #docker channel\r\n- Post a question on StackOverflow, using the Docker tag\r\n\r\n---------------------------------------------------\r\nBUG REPORT INFORMATION\r\n---------------------------------------------------\r\nUse the commands below to provide key information from your environment:\r\nYou do NOT have to include this information if this is a FEATURE REQUEST\r\n-->\r\n\r\n**Description**\r\n\r\nOn querying images list each image list will be having `Containers` property with value -1 regardless of amount of containers using this image.\r\n\r\n**Steps to reproduce the issue:**\r\n1. Run container from the image(for example `docker run -ti ubuntu bash`)\r\n2. Get list of images from the API(`curl --unix-socket /var/run/docker.sock \"http:/v1.30/images/json\"`)\r\n\r\n**Describe the results you received:**\r\n\r\n\"ubuntu\" image has `Containers` property with value -1.\r\n\r\n**Describe the results you expected:**\r\n\r\n`Containers` property with value 1\r\n\r\n**Output of `docker version`:**\r\n\r\n```\r\nClient:\r\n Version:      17.06.0-ce\r\n API version:  1.30\r\n Go version:   go1.8.3\r\n Git commit:   02c1d87\r\n Built:        Fri Jun 23 21:31:53 2017\r\n OS/Arch:      darwin/amd64\r\n\r\nServer:\r\n Version:      17.06.0-ce\r\n API version:  1.30 (minimum version 1.12)\r\n Go version:   go1.8.3\r\n Git commit:   02c1d87\r\n Built:        Fri Jun 23 21:51:55 2017\r\n OS/Arch:      linux/amd64\r\n Experimental: true\r\n```\r\n\r\n**Output of `docker info`:**\r\n\r\n```\r\nContainers: 4\r\n Running: 2\r\n Paused: 0\r\n Stopped: 2\r\nImages: 40\r\nServer Version: 17.06.0-ce\r\nStorage Driver: overlay2\r\n Backing Filesystem: extfs\r\n Supports d_type: true\r\n Native Overlay Diff: true\r\nLogging Driver: json-file\r\nCgroup Driver: cgroupfs\r\nPlugins:\r\n Volume: local\r\n Network: bridge host ipvlan macvlan null overlay\r\n Log: awslogs fluentd gcplogs gelf journald json-file logentries splunk syslog\r\nSwarm: inactive\r\nRuntimes: runc\r\nDefault Runtime: runc\r\nInit Binary: docker-init\r\ncontainerd version: cfb82a876ecc11b5ca0977d1733adbe58599088a\r\nrunc version: 2d41c047c83e09a6d61d464906feb2a2f3c52aa4\r\ninit version: 949e6fa\r\nSecurity Options:\r\n seccomp\r\n  Profile: default\r\nKernel Version: 4.9.31-moby\r\nOperating System: Alpine Linux v3.5\r\nOSType: linux\r\nArchitecture: x86_64\r\nCPUs: 2\r\nTotal Memory: 1.952GiB\r\nName: moby\r\nID: QN2D:44BC:EQ5U:GCN2:Z2XT:DSNU:GGTI:FNKB:MHAJ:3I7E:ASHB:RJTT\r\nDocker Root Dir: /var/lib/docker\r\nDebug Mode (client): false\r\nDebug Mode (server): true\r\n File Descriptors: 34\r\n Goroutines: 48\r\n System Time: 2017-07-07T10:18:20.598658487Z\r\n EventsListeners: 1\r\nNo Proxy: *.local, 169.254/16\r\nRegistry: https://index.docker.io/v1/\r\nExperimental: true\r\nInsecure Registries:\r\n jenkin-registry.gsintlab.com\r\n 127.0.0.0/8\r\nLive Restore Enabled: false\r\n```\r\n"},{"labels":["documentation",null],"text":"<!--\r\nIf you are reporting a new issue, make sure that we do not have any duplicates\r\nalready open. You can ensure this by searching the issue list for this\r\nrepository. If there is a duplicate, please close your issue and add a comment\r\nto the existing issue instead.\r\n\r\nIf you suspect your issue is a bug, please edit your issue description to\r\ninclude the BUG REPORT INFORMATION shown below. If you fail to provide this\r\ninformation within 7 days, we cannot debug your issue and will close it. We\r\nwill, however, reopen it if you later provide the information.\r\n\r\nFor more information about reporting issues, see\r\nhttps://github.com/docker/docker/blob/master/CONTRIBUTING.md#reporting-other-issues\r\n\r\n---------------------------------------------------\r\nGENERAL SUPPORT INFORMATION\r\n---------------------------------------------------\r\n\r\nThe GitHub issue tracker is for bug reports and feature requests.\r\nGeneral support can be found at the following locations:\r\n\r\n- Docker Support Forums - https://forums.docker.com\r\n- IRC - irc.freenode.net #docker channel\r\n- Post a question on StackOverflow, using the Docker tag\r\n\r\n---------------------------------------------------\r\nBUG REPORT INFORMATION\r\n---------------------------------------------------\r\nUse the commands below to provide key information from your environment:\r\nYou do NOT have to include this information if this is a FEATURE REQUEST\r\n-->\r\n\r\n**Description**\r\n\r\n<!--\r\nBriefly describe the problem you are having in a few paragraphs.\r\n-->\r\n\r\nSince docker `17.06.0-ce` have been released. How to upgrade swarm mode cluster' docker engine? Upgrade starting from worker or manager? And how to ensure the cluster `raft` store state."},{"labels":[null,"documentation"],"text":"**Description**\r\n\r\nLooking at the [Docker Engine API docs](https://docs.docker.com/engine/api/v1.26/#operation/ContainerCreate) (scroll down and expand HostConfig, then scroll down to find the Binds documentation), I don't see anything related to the SELinux Context, which is mentioned in the docker documentation [here](https://docs.docker.com/engine/tutorials/dockervolumes/#volume-labels).\r\n\r\nHowever, it seems that the `:Z` or `:z` which are SELinux flags are accepted as I'm able to pass them (See reproduction of the issue).\r\n\r\n\r\n**Steps to reproduce the issue:**\r\n\r\nIf you have vagrant : \r\n1. create a `Vagrantfile` containing \r\n\r\n```\r\n# -*- mode: ruby -*-\r\n# vi: set ft=ruby :\r\n\r\nVagrant.configure(\"2\") do |config|\r\n  config.vm.box = \"fedora/25-cloud-base\"\r\n\r\n  config.vm.provision \"shell\", inline: <<-SHELL\r\n    set -eux\r\n\r\n    # prepare the system and install dependencies\r\n    dnf install -q -y docker\r\n    systemctl start docker\r\n    docker pull alpine:latest\r\n    \r\n    # Sanity check, to make sure unwanted argument do not pass\r\n    curl -s --unix-socket /var/run/docker.sock -H \"Content-Type: application/json\" \\\r\n    -d '{\"Image\": \"alpine\", \"Binds\": [\"/vagrant/Vagrantfile:/Vagrantfile:a\"]}' \\\r\n    -X POST http:/v1.24/containers/create\r\n\r\n    curl -s --unix-socket /var/run/docker.sock -H \"Content-Type: application/json\" \\\r\n    -d '{\"Image\": \"alpine\", \"Binds\": [\"/vagrant/Vagrantfile:/Vagrantfile:Z\"]}' \\\r\n    -X POST http:/v1.24/containers/create\r\n  SHELL\r\nend\r\n```\r\n2. run `vagrant up` in the same directory\r\n\r\nIf you don't use vagrant, make sure you have docker installed and run the two curl commands manually.\r\n\r\n**Describe the results you received:**\r\n\r\nThe first curl command failed which is normal, the api shouldn't accept invalid specifications, but the second succeeds, which is also normal as it is SELinux related. However, it is not specified in the documentation.\r\n\r\nI will work on a fix in the documentation as soon as possible. However, I have a question about it, should we add a link to the [documentation](https://docs.docker.com/engine/tutorials/dockervolumes/#volume-labels) for reference or should we just specify more examples ?\r\n\r\nThank you."},{"labels":["documentation",null],"text":"<!--\r\nIf you are reporting a new issue, make sure that we do not have any duplicates\r\nalready open. You can ensure this by searching the issue list for this\r\nrepository. If there is a duplicate, please close your issue and add a comment\r\nto the existing issue instead.\r\n\r\nIf you suspect your issue is a bug, please edit your issue description to\r\ninclude the BUG REPORT INFORMATION shown below. If you fail to provide this\r\ninformation within 7 days, we cannot debug your issue and will close it. We\r\nwill, however, reopen it if you later provide the information.\r\n\r\nFor more information about reporting issues, see\r\nhttps://github.com/docker/docker/blob/master/CONTRIBUTING.md#reporting-other-issues\r\n\r\n---------------------------------------------------\r\nGENERAL SUPPORT INFORMATION\r\n---------------------------------------------------\r\n\r\nThe GitHub issue tracker is for bug reports and feature requests.\r\nGeneral support can be found at the following locations:\r\n\r\n- Docker Support Forums - https://forums.docker.com\r\n- IRC - irc.freenode.net #docker channel\r\n- Post a question on StackOverflow, using the Docker tag\r\n\r\n---------------------------------------------------\r\nBUG REPORT INFORMATION\r\n---------------------------------------------------\r\nUse the commands below to provide key information from your environment:\r\nYou do NOT have to include this information if this is a FEATURE REQUEST\r\n-->\r\n\r\nThe `docker stack ps --filter` option should be \"desired-state\" and not \"desired-stat\" as in documentation.\r\nhttps://docs.docker.com/engine/reference/commandline/stack_ps/#extended-description\r\n\r\n<!--\r\nBriefly describe the problem you are having in a few paragraphs.\r\n-->\r\n\r\n**Steps to reproduce the issue:**\r\n1.Create a Swarm mode\r\n2.Create a Stack\r\n3.List stack containers with `docker stack ps --filter desired-stat=running`\r\n\r\n`desired-stat` is not a filter\r\n\r\n\r\nA list of running containers in the stack.\r\n\r\n\r\n**Additional information you deem important (e.g. issue happens only occasionally):**\r\nA documentation bug. \r\n\r\nDocker 17.03\r\n\r\n\r\n\r\n**Output of `docker info`:**\r\n\r\nNot relevant as the bug is in the documentation. \r\n\r\n**Additional environment details (AWS, VirtualBox, physical, etc.):**\r\nDocker for AWS Stable used to create Swarm.\r\n"},{"labels":["documentation"],"text":"From the release notes of v17.06.0-ce-rc2\r\n\r\n> Placement now also take platform in account moby/moby#33144\r\n\r\nWhile the PR that introduced the feature also updated the API docs, it didn't update the [user docs for service create](https://github.com/moby/moby/blob/master/docs/reference/commandline/service_create.md#specify-service-constraints---constraint), that also mention the placement constraints.\r\n\r\nI also noticed that the documentation here https://github.com/docker/swarmkit/#features talks about placement constrains, and mentions `node.ip` as another supported constraint. I'm not sure this made it to 17.06 yet, but if it did, we also need to update the user docs page with that.\r\n\r\n/ping @nishanttotla since he was the one who introduced #33144\r\nand @mstanleyjones for visibility\r\n\r\n---\r\n\r\nIf you're triaging this issue and are thinking if this issue should be filed against docker/docker.github.io instead, keep in mind that docker/docker.github.io will fetches https://github.com/moby/moby/blob/master/docs/reference/ to build the user-facing docs, so this issue needs to be addressed on this repo."},{"labels":[null,"documentation"],"text":"As seen there: https://github.com/moby/moby/blob/df4ca50805baa1d1488d811e82125f607c8daa09/integration-cli/docker_api_swarm_service_test.go#L63,\r\nthere is an `insertDefaults` query parameter not stated in the docs."},{"labels":["documentation"],"text":"The API docs reference ServiceSpec in the Secret definition:\r\n```\r\nSecret{\r\nID:\tstring\r\nVersion:\tObjectVersion{...}\r\nCreatedAt:\tstring ($dateTime)\r\nUpdatedAt:\tstring ($dateTime)\r\nSpec:\tServiceSpec{...}\r\n}\r\n```"},{"labels":["documentation"],"text":"**Description**\r\n\r\nDocker and Docker-Compose documentations do not make clear what are the valid values of ulimit options for Docker.\r\n\r\n**Steps to reproduce the issue:**\r\n1. Read Docker documentation\r\n2. Struggle to find correct option names. \r\n\r\n\r\n**Describe the results you received:**\r\n\r\nGoogle finds just a few places where possible options are listed - https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_Ulimit.html \r\nLooking on code - turns out it is incomplete and [any valid `setrlimit` option](https://linux.die.net/man/2/setrlimit) can be passed into `ulimits`\r\n\r\n**Describe the results you expected:**\r\n\r\nList of possible options or reference to example (setting list of file descriptiors, max memory, max cpu usage, etc)"},{"labels":["documentation",null],"text":"**Description**\r\n\r\nin `moby/container/state.go` we have a struct that handles containers state, it looks like this : \r\n``` go\r\ntype State struct {\r\n\tsync.Mutex\r\n\t// FIXME: Why do we have both paused and running if a\r\n\t// container cannot be paused and running at the same time?\r\n\tRunning           bool\r\n\tPaused            bool\r\n\tRestarting        bool\r\n\tOOMKilled         bool\r\n\tRemovalInProgress bool // Not need for this to be persistent on disk.\r\n\tDead              bool\r\n\tPid               int\r\n\tExitCodeValue     int    `json:\"ExitCode\"`\r\n\tErrorMsg          string `json:\"Error\"` // contains last known error when starting the container\r\n\tStartedAt         time.Time\r\n\tFinishedAt        time.Time\r\n\tHealth            *Health\r\n\r\n\twaitStop   chan struct{}\r\n\twaitRemove chan struct{}\r\n}\r\n```\r\nthis is a bit misleading as we need to always update the two bools in order to avoid any inconsistant behaviour.\r\nthe state is embed in : \r\n```go\r\ntype CommonContainer struct {\r\n\tStreamConfig *stream.Config\r\n\t// embed for Container to support states directly.\r\n\t*State          `json:\"State\"` // Needed for Engine API version <= 1.11\r\n          .....\r\n     }\r\n```\r\nas states the comments to ensure compatibility with versions <= 1.11, i think we can refactor without breaking much of it."},{"labels":[null,"documentation",null],"text":"<!--\r\nIf you are reporting a new issue, make sure that we do not have any duplicates\r\nalready open. You can ensure this by searching the issue list for this\r\nrepository. If there is a duplicate, please close your issue and add a comment\r\nto the existing issue instead.\r\n\r\nIf you suspect your issue is a bug, please edit your issue description to\r\ninclude the BUG REPORT INFORMATION shown below. If you fail to provide this\r\ninformation within 7 days, we cannot debug your issue and will close it. We\r\nwill, however, reopen it if you later provide the information.\r\n\r\nFor more information about reporting issues, see\r\nhttps://github.com/docker/docker/blob/master/CONTRIBUTING.md#reporting-other-issues\r\n\r\n---------------------------------------------------\r\nGENERAL SUPPORT INFORMATION\r\n---------------------------------------------------\r\n\r\nThe GitHub issue tracker is for bug reports and feature requests.\r\nGeneral support can be found at the following locations:\r\n\r\n- Docker Support Forums - https://forums.docker.com\r\n- IRC - irc.freenode.net #docker channel\r\n- Post a question on StackOverflow, using the Docker tag\r\n\r\n---------------------------------------------------\r\nBUG REPORT INFORMATION\r\n---------------------------------------------------\r\nUse the commands below to provide key information from your environment:\r\nYou do NOT have to include this information if this is a FEATURE REQUEST\r\n-->\r\n\r\n**Description**\r\nThe current `swagger.yaml` file on the master branch, when rendered, causes some fields to not render, and the page then hangs.\r\n\r\n<!--\r\nBriefly describe the problem you are having in a few paragraphs.\r\n-->\r\n\r\n**Steps to reproduce the issue:**\r\n1. `make swagger-docs`\r\n2. Go to `localhost:9000` in your browser\r\n3. Go to `/services/create`, click on `TaskTemplate`\r\n4. Try clicking anywhere else on the page\r\n\r\n**Describe the results you received:**\r\nThe page hangs\r\n\r\n**Describe the results you expected:**\r\nThe page shouldn't hang, and it should be possible to continue viewing fields."},{"labels":[null,"documentation"],"text":"feature added in https://github.com/moby/moby/pull/32496"},{"labels":[null,"documentation"],"text":"### Documentation Problem Description\r\n\r\nPer @gdevillele , the API reference topic [Delete unused volumes](https://docs.docker.com/engine/api/v1.28/#operation/VolumePrune) mentions a `filters` query parameter, but doesn’t mention any supported argument (because there isn’t any). This doesn’t make sense, we should not mention this “filters” parameter.\r\n\r\n### Where Found\r\n\r\n[Delete unused volumes](https://docs.docker.com/engine/api/v1.28/#operation/VolumePrune) in the API reference docs. \r\n\r\n### About the docs\r\n\r\nCurrently, the  API docs source lives here in the `moby/moby` codebase, not in the docs repository https://github.com/docker/docker.github.io. \r\n\r\n@thaJeztah need guidance on how we will deal with the relationship between `moby/moby` and the docs repository going forward. I don't have permissions to assign issues, but I suggest assigning to @mstanleyjones ?\r\n\r\n### Reviewers\r\n\r\n@gdevillele @johndmulhausen @thaJeztah \r\n\r\n"},{"labels":[null,"documentation",null,null],"text":"Hello,\r\n\r\ni have an error using this page (click into \"Labels\" menù):\r\n\r\nhttps://docs.docker.com/engine/api/v1.28/#operation/ServiceCreate\r\n\r\nJS Console stacktrace:\r\n\r\nError: Can't load component schema at /paths/~1services~1create/post/parameters/0/schema/properties/Labels\r\n    at d (redoc.1.11.0.min.js:43)\r\n    at e.init (redoc.1.11.0.min.js:17)\r\n    at e.t.preinit (redoc.1.11.0.min.js:9)\r\n    at e.preinit (redoc.1.11.0.min.js:9)\r\n    at e.ngOnInit (redoc.1.11.0.min.js:17)\r\n    at t.ngDoCheck (redoc.1.11.0.min.js:15)\r\n    at e.detectChangesInternal (redoc.1.11.0.min.js:15)\r\n    at e.t.detectChanges (redoc.1.11.0.min.js:7)\r\n    at t.detectChangesInNestedViews (redoc.1.11.0.min.js:7)\r\n    at e.detectChangesInternal (redoc.1.11.0.min.js:16)\r\n    at e.t.detectChanges (redoc.1.11.0.min.js:7)\r\n    at t.detectChangesInNestedViews (redoc.1.11.0.min.js:7)\r\n    at e.detectChangesInternal (redoc.1.11.0.min.js:16)\r\n    at e.t.detectChanges (redoc.1.11.0.min.js:7)\r\n    at t.detectChangesInNestedViews (redoc.1.11.0.min.js:7)"},{"labels":[null,"documentation",null],"text":"<!--\r\nIf you are reporting a new issue, make sure that we do not have any duplicates\r\nalready open. You can ensure this by searching the issue list for this\r\nrepository. If there is a duplicate, please close your issue and add a comment\r\nto the existing issue instead.\r\n\r\nIf you suspect your issue is a bug, please edit your issue description to\r\ninclude the BUG REPORT INFORMATION shown below. If you fail to provide this\r\ninformation within 7 days, we cannot debug your issue and will close it. We\r\nwill, however, reopen it if you later provide the information.\r\n\r\nFor more information about reporting issues, see\r\nhttps://github.com/docker/docker/blob/master/CONTRIBUTING.md#reporting-other-issues\r\n\r\n---------------------------------------------------\r\nGENERAL SUPPORT INFORMATION\r\n---------------------------------------------------\r\n\r\nThe GitHub issue tracker is for bug reports and feature requests.\r\nGeneral support can be found at the following locations:\r\n\r\n- Docker Support Forums - https://forums.docker.com\r\n- IRC - irc.freenode.net #docker channel\r\n- Post a question on StackOverflow, using the Docker tag\r\n\r\n---------------------------------------------------\r\nBUG REPORT INFORMATION\r\n---------------------------------------------------\r\nUse the commands below to provide key information from your environment:\r\nYou do NOT have to include this information if this is a FEATURE REQUEST\r\n-->\r\n\r\n**Description**\r\nThe http endpoint `GET /networks` always returns an empty containers list. If requesting a single network, with `GET /networks/<network>` the containers are shown. \r\n<!--\r\nBriefly describe the problem you are having in a few paragraphs.\r\n-->\r\n\r\n**Steps to reproduce the issue:**\r\n1. Run `curl --unix-socket /var/run/docker.sock http:/v1.28/networks`\r\n\r\n**Describe the results you received:**\r\nReturns the following output: https://gist.github.com/Grisu118/1a15ea9a2abb6b04f45eb911a2f1c7f7#file-networks-json\r\n\r\n**Describe the results you expected:**\r\nI expect the output contains a container list like the /networks/development request:\r\nhttps://gist.github.com/Grisu118/1a15ea9a2abb6b04f45eb911a2f1c7f7#file-networks_development-json\r\n\r\n**Additional information you deem important (e.g. issue happens only occasionally):**\r\nWorked in 13.x (don't know the exact version which was running before reboot)\r\n\r\n**Output of `docker version`:**\r\n\r\n```\r\nClient:\r\n Version:      17.04.0-ce\r\n API version:  1.28\r\n Go version:   go1.7.3\r\n Git commit:   4845c56\r\n Built:        Wed Apr 12 22:57:26 2017\r\n OS/Arch:      linux/amd64\r\n\r\nServer:\r\n Version:      17.04.0-ce\r\n API version:  1.28 (minimum version 1.12)\r\n Go version:   go1.7.3\r\n Git commit:   4845c56\r\n Built:        Wed Apr 12 22:57:26 2017\r\n OS/Arch:      linux/amd64\r\n Experimental: false\r\n```\r\n\r\n**Output of `docker info`:**\r\n\r\n```\r\nContainers: 28\r\n Running: 25\r\n Paused: 0\r\n Stopped: 3\r\nImages: 37\r\nServer Version: 17.04.0-ce\r\nStorage Driver: overlay\r\n Backing Filesystem: extfs\r\n Supports d_type: true\r\nLogging Driver: json-file\r\nCgroup Driver: cgroupfs\r\nPlugins:\r\n Volume: local\r\n Network: bridge host macvlan null overlay\r\nSwarm: inactive\r\nRuntimes: runc\r\nDefault Runtime: runc\r\nInit Binary:\r\ncontainerd version: 422e31ce907fd9c3833a38d7b8fdd023e5a76e73\r\nrunc version: 9c2d8d184e5da67c95d601382adf14862e4f2228\r\ninit version: N/A (expected: 949e6facb77383876aeff8a6944dde66b3089574)\r\nSecurity Options:\r\n seccomp\r\n  Profile: default\r\nKernel Version: 4.10.9-coreos\r\nOperating System: Container Linux by CoreOS 1381.0.0 (Ladybug)\r\nOSType: linux\r\nArchitecture: x86_64\r\nCPUs: 4\r\nTotal Memory: 15.68GiB\r\nName: test01\r\nID: NDXW:B2RO:4U2N:CQRG:P7QK:DT53:DNTE:GH3A:N7IZ:2MSK:HHXC:MRTU\r\nDocker Root Dir: /var/lib/docker\r\nDebug Mode (client): false\r\nDebug Mode (server): false\r\nRegistry: https://index.docker.io/v1/\r\nExperimental: false\r\nInsecure Registries:\r\n 127.0.0.0/8\r\nLive Restore Enabled: false\r\n\r\nWARNING: bridge-nf-call-iptables is disabled\r\nWARNING: bridge-nf-call-ip6tables is disabled\r\n```\r\n"},{"labels":["documentation",null,null],"text":"**Steps to reproduce the issue:**\r\n1. Create next Dockerfile in \"test\" directory:\r\n\r\n   FROM debian\r\n   CMD echo \"test\"\r\n\r\n2. Go to \"test\" directory and execute next command (build image): \"docker build -t test:latest .\"\r\n3. Create docker stack file with name \"docker-cloud.yml\":\r\n\r\n   version: \"3\"\r\n   services:\r\n    test:\r\n       image: test:latest\r\n\r\n4. Execute next command: \"docker stack deploy -c docker-cloud.yml services\"\r\n5. Wait several seconds and execute \"docker ps -a\".\r\n\r\n**Expected**:\r\nOne exited container \"test:latest\" because default restart option value is \"no\" according [documentation](https://docs.docker.com/docker-cloud/apps/stack-yaml-reference/#restart).\r\n\r\n**Actual**:\r\nSeveral exited containers with \"test:latest\" tag.\r\n\r\n**Docker version**:\r\nClient:\r\n Version:      17.03.0-ce\r\n API version:  1.26\r\n Go version:   go1.7.5\r\n Git commit:   60ccb22\r\n Built:        Thu Feb 23 10:54:03 2017\r\n OS/Arch:      linux/amd64\r\n\r\nServer:\r\n Version:      17.03.0-ce\r\n API version:  1.26 (minimum version 1.12)\r\n Go version:   go1.7.5\r\n Git commit:   60ccb22\r\n Built:        Thu Feb 23 10:54:03 2017\r\n OS/Arch:      linux/amd64\r\n Experimental: false`\r\n\r\n**Docker info**:\r\nContainers: 5\r\n Running: 5\r\n Paused: 0\r\n Stopped: 0\r\nImages: 16\r\nServer Version: 17.03.0-ce\r\nStorage Driver: overlay\r\n Backing Filesystem: extfs\r\n Supports d_type: true\r\nLogging Driver: json-file\r\nCgroup Driver: cgroupfs\r\nPlugins:\r\n Volume: local\r\n Network: bridge host macvlan null overlay\r\nSwarm: active\r\n NodeID: 06qm3mlo2dtnnrt0lebbfqkiz\r\n Is Manager: true\r\n ClusterID: yonkvlxzljjjztpxzcuc3fnrn\r\n Managers: 1\r\n Nodes: 1\r\n Orchestration:\r\n  Task History Retention Limit: 5\r\n Raft:\r\n  Snapshot Interval: 10000\r\n  Number of Old Snapshots to Retain: 0\r\n  Heartbeat Tick: 1\r\n  Election Tick: 3\r\n Dispatcher:\r\n  Heartbeat Period: 5 seconds\r\n CA Configuration:\r\n  Expiry Duration: 3 months\r\n Node Address: ...\r\n Manager Addresses:\r\nRuntimes: runc\r\nDefault Runtime: runc\r\nInit Binary: docker-init\r\ncontainerd version: 977c511eda0925a723debdc94d09459af49d082a\r\nrunc version: a01dafd48bc1c7cc12bdb01206f9fea7dd6feb70\r\ninit version: 949e6fa\r\nSecurity Options:\r\n seccomp\r\n  Profile: default\r\nKernel Version: 3.10.0-514.10.2.el7.x86_64\r\nOperating System: CentOS Linux 7 (Core)\r\nOSType: linux\r\nArchitecture: x86_64\r\nCPUs: 2\r\nTotal Memory: 3.695 GiB\r\nName: q4de3csye47\r\nID: 2FXY:XP3H:UWFL:3R7U:CF5H:THXJ:XC5K:SZTS:U4LV:AY7D:3JNV:FOJF\r\nDocker Root Dir: /docker\r\nDebug Mode (client): false\r\nDebug Mode (server): false\r\nHttp Proxy: ...\r\nHttps Proxy: ...\r\nNo Proxy: ...\r\nRegistry: https://index.docker.io/v1/\r\nExperimental: false\r\nInsecure Registries:\r\n ...\r\n 127.0.0.0/8\r\nLive Restore Enabled: false\r\n"},{"labels":["documentation",null],"text":"Hi!\r\n\r\nI wonder where I can find a PDF or other version of the current Docker documentation. I was unable to find it via Google and the official docs page. Probably I'm overlooking sth.?\r\n\r\nThanks for your help!"},{"labels":["documentation",null,null],"text":"Currently the plugin docs have a \"legacy\" doc which explains both the v1 discovery model as well as the RPC protocol for activation.\r\nThe v2 plugin doc doesn't really mention anything about how RPC is handled.\r\n\r\nBasically, getting started with plugins can be pretty confusing. Docs could use some love."},{"labels":["documentation",null,null],"text":"Consciously referring to Issue #29617, now Closed.\r\n\r\nThere *is* (in my humble opinion) an issue here.\r\n\r\nIt is a documentation issue.\r\n\r\nFollowing https://docs.docker.com/engine/getstarted/step_one/#step-3-verify-your-installation, at Step 3, sub-step 2, the command provided is\r\n\r\ndocker run hello-world\r\n\r\nNothing there indicates that there might be anything platform/architecture dependent.\r\n\r\nThis is in Verify your Installation. It is therefore likely to be followed verbatim by relatively uninformed potential users who might reasonably assume that a basic test should Just Work.\r\n\r\nIn fact the result is this:\r\npi@rpi2b ~ $ docker run hello-world\r\nstandard_init_linux.go:178: exec user process caused \"exec format error\"\r\n\r\nThe resulting error message is not handled in the linked 'Troubleshooting' section of the tutorial.\r\n\r\nThe workaround is\r\npi@rpi2b ~ $ docker run armhf/hello-world\r\n\r\nHello from Docker on armhf!\r\nThis message shows that your installation appears to be working correctly.\r\n\r\n\r\n\r\n"},{"labels":["documentation",null],"text":"<!--\r\nIf you are reporting a new issue, make sure that we do not have any duplicates\r\nalready open. You can ensure this by searching the issue list for this\r\nrepository. If there is a duplicate, please close your issue and add a comment\r\nto the existing issue instead.\r\n\r\nIf you suspect your issue is a bug, please edit your issue description to\r\ninclude the BUG REPORT INFORMATION shown below. If you fail to provide this\r\ninformation within 7 days, we cannot debug your issue and will close it. We\r\nwill, however, reopen it if you later provide the information.\r\n\r\nFor more information about reporting issues, see\r\nhttps://github.com/docker/docker/blob/master/CONTRIBUTING.md#reporting-other-issues\r\n\r\n---------------------------------------------------\r\nGENERAL SUPPORT INFORMATION\r\n---------------------------------------------------\r\n\r\nThe GitHub issue tracker is for bug reports and feature requests.\r\nGeneral support can be found at the following locations:\r\n\r\n- Docker Support Forums - https://forums.docker.com\r\n- IRC - irc.freenode.net #docker channel\r\n- Post a question on StackOverflow, using the Docker tag\r\n\r\n---------------------------------------------------\r\nBUG REPORT INFORMATION\r\n---------------------------------------------------\r\nUse the commands below to provide key information from your environment:\r\nYou do NOT have to include this information if this is a FEATURE REQUEST\r\n-->\r\n\r\n**Description**\r\n\r\nOne link in README.md file in the root directory of docker repository.\r\nIn [the getting the development builds section](https://github.com/docker/docker#getting-the-development-builds) , link \"docs.master.dockerproject.org.\" is dead.\r\n\r\n<!--\r\nBriefly describe the problem you are having in a few paragraphs.\r\n-->\r\n\r\n**Describe the results you received:**\r\nLink is dead\r\n\r\n**Describe the results you expected:**\r\nI think this link should be linked to docs.master.dockerproject main page.\r\n\r\n"},{"labels":["documentation",null,null],"text":"For example, hyperlink for [\"Docker build with --squash argument\"](https://github.com/docker/docker/blob/bd811aa4fde8632197c96ca3a7af039789768107/experimental/docker-build-with-squash.md) is broken: https://github.com/docker/docker/blob/bd811aa4fde8632197c96ca3a7af039789768107/experimental/README.md\r\n\r\n\r\nCan we detect such deadlinks on CI?\r\n"},{"labels":["documentation",null,null,null],"text":"There are several scripts in the [hack folder](https://github.com/docker/docker/tree/master/hack). It definitely deserves a good README 😄 "},{"labels":["documentation",null,null],"text":"When using `docker deploy` with a 3.2 compose version, it fails with \"unsupported Compose file version: 3.2\". I could not find any docs (especially on https://docs.docker.com/compose/compose-file/compose-versioning/#compatibility-matrix) on the required docker version to use the 3.2 compose.\r\n\r\n**Steps to reproduce the issue:**\r\n1. Create a compose file with version 3.2:\r\n```\r\n# compose-v32.yml\r\nversion: '3.2'\r\n  services:\r\n    myservice:\r\n    ...\r\n```\r\n2. Run `docker deploy -c compose-v32.yml mystack\r\n\r\n**Describe the results you received:**\r\nunsupported Compose file version: 3.2\r\n\r\n**Describe the results you expected:**\r\nCreated myservice\r\n\r\n**Output of `docker version`:**\r\n```\r\nClient:\r\nVersion:      17.03.1-ce\r\nAPI version:  1.27\r\nGo version:   go1.7.5\r\nGit commit:   c6d412e\r\nBuilt:        Fri Mar 24 00:00:50 2017\r\nOS/Arch:      linux/amd64\r\n\r\nServer:\r\nVersion:      17.03.1-ce\r\nAPI version:  1.27 (minimum version 1.12)\r\nGo version:   go1.7.5\r\nGit commit:   c6d412e\r\nBuilt:        Fri Mar 24 00:00:50 2017\r\nOS/Arch:      linux/amd64\r\nExperimental: true\r\n```\r\n**Output of `docker info`:**\r\n```\r\nContainers: 5\r\nRunning: 4\r\nPaused: 0\r\nStopped: 1\r\nImages: 6\r\nServer Version: 17.03.1-ce\r\nStorage Driver: overlay2\r\nBacking Filesystem: extfs\r\nSupports d_type: true\r\nNative Overlay Diff: true\r\nLogging Driver: syslog\r\nCgroup Driver: cgroupfs\r\nPlugins:\r\nVolume: local\r\nNetwork: bridge host ipvlan macvlan null overlay\r\nSwarm: active\r\nNodeID: mlc7uzdsvcnxkzi32437xybuv\r\nIs Manager: true\r\nClusterID: 6xjp4en70m49rkgt1u2jzo1fe\r\nManagers: 1\r\nNodes: 2\r\nOrchestration:\r\n Task History Retention Limit: 5\r\nRaft:\r\n Snapshot Interval: 10000\r\n Number of Old Snapshots to Retain: 0\r\n Heartbeat Tick: 1\r\n Election Tick: 3\r\nDispatcher:\r\n Heartbeat Period: 5 seconds\r\nCA Configuration:\r\n Expiry Duration: 3 months\r\nNode Address: 10.99.0.9\r\nManager Addresses:\r\n 10.99.0.9:2377\r\nRuntimes: runc\r\nDefault Runtime: runc\r\nInit Binary: docker-init\r\ncontainerd version: 4ab9917febca54791c5f071a9d1f404867857fcc\r\nrunc version: 54296cf40ad8143b62dbcaa1d90e520a2136ddfe\r\ninit version: N/A (expected: 949e6facb77383876aeff8a6944dde66b3089574)\r\nSecurity Options:\r\nseccomp\r\n Profile: default\r\nKernel Version: 4.9.13-moby\r\nOperating System: Alpine Linux v3.5\r\nOSType: linux\r\nArchitecture: x86_64\r\nCPUs: 1\r\nTotal Memory: 3.354 GiB\r\nName: swarm-manager000000\r\nID: YLGP:ANHJ:ODKD:DZXG:YOG3:XA2Y:VVLK:LZ2M:N2NS:7PCF:STL5:DKVL\r\nDocker Root Dir: /var/lib/docker\r\nDebug Mode (client): false\r\nDebug Mode (server): true\r\nFile Descriptors: 276\r\nGoroutines: 372\r\nSystem Time: 2017-04-04T14:33:05.635698193Z\r\nEventsListeners: 0\r\nRegistry: https://index.docker.io/v1/\r\nExperimental: true\r\nInsecure Registries:\r\n127.0.0.0/8\r\nLive Restore Enabled: false\r\n```\r\n**Additional environment details (AWS, VirtualBox, physical, etc.):**\r\nSwarm Mode running on Azure Container Services."},{"labels":[null,"documentation",null],"text":"<!--\r\nIf you are reporting a new issue, make sure that we do not have any duplicates\r\nalready open. You can ensure this by searching the issue list for this\r\nrepository. If there is a duplicate, please close your issue and add a comment\r\nto the existing issue instead.\r\n\r\nIf you suspect your issue is a bug, please edit your issue description to\r\ninclude the BUG REPORT INFORMATION shown below. If you fail to provide this\r\ninformation within 7 days, we cannot debug your issue and will close it. We\r\nwill, however, reopen it if you later provide the information.\r\n\r\nFor more information about reporting issues, see\r\nhttps://github.com/docker/docker/blob/master/CONTRIBUTING.md#reporting-other-issues\r\n\r\n---------------------------------------------------\r\nGENERAL SUPPORT INFORMATION\r\n---------------------------------------------------\r\n\r\nThe GitHub issue tracker is for bug reports and feature requests.\r\nGeneral support can be found at the following locations:\r\n\r\n- Docker Support Forums - https://forums.docker.com\r\n- IRC - irc.freenode.net #docker channel\r\n- Post a question on StackOverflow, using the Docker tag\r\n\r\n---------------------------------------------------\r\nBUG REPORT INFORMATION\r\n---------------------------------------------------\r\nUse the commands below to provide key information from your environment:\r\nYou do NOT have to include this information if this is a FEATURE REQUEST\r\n-->\r\n\r\n**Description**\r\n\r\nLinks property always is null, even whether the container has links.\r\n\r\n**Steps to reproduce the issue:**\r\n1. `docker run --net=dore-network -d --name node1 busybox tail -f /dev/null`\r\n2. `docker run --net=dore-network --link node1 -d --name node2 busybox tail -f /dev/null`\r\n3. `docker inspect node2`\r\n4. `curl --unix-socket /var/run/docker.sock http:/v1.26/containers/json | grep Links`\r\n\r\n**Describe the results you received:**\r\n\r\ninspect command:\r\n\r\n```\r\n...\r\n\"Networks\": {\r\n  \"dore-network\": {\r\n    ....\r\n    \"Links\": [\r\n      \"node1\"\r\n    ],\r\n    ...\r\n    }\r\n  }\r\n....\r\n```\r\n\r\nwith cURL command:\r\n\r\n```\r\n[{\"Id\":\"a43c96d41cacad628b5a51860650aa123c25416e16c563790a8eb76001d1b86f\",\"Names\":[\"/node2\"],\"Image\":\"busybox\",\"ImageID\":\"sha256:00f017a8c2a6e1fe2ffd05c281f27d069d2a99323a8cd514dd35f228ba26d2ff\",\"Command\":\"tail -f /dev/null\",\"Created\":1491275358,\"Ports\":[],\"Labels\":{},\"State\":\"running\",\"Status\":\"Up About a minute\",\"HostConfig\":{\"NetworkMode\":\"dore-network\"},\"NetworkSettings\":{\"Networks\":{\"dore-network\":{\"IPAMConfig\":null,\"Links\":null,\"Aliases\":null,\"NetworkID\":\"0c312941cff131e01bc038a9e7d196a0faf77c03ed38c365715755dc3c61b2ae\",\"EndpointID\":\"62df24f75be4a2b47eba58802c76417dc4cc6bb0a8b07c5908e2269e6bc0aa8a\",\"Gateway\":\"172.18.0.1\",\"IPAddress\":\"172.18.0.3\",\"IPPrefixLen\":16,\"IPv6Gateway\":\"\",\"GlobalIPv6Address\":\"\",\"GlobalIPv6PrefixLen\":0,\"MacAddress\":\"02:42:ac:12:00:03\"}}},\"Mounts\":[]},{\"Id\":\"3640df7f388ee551cb00b8c9040cca240e89891b2f11235943567e533b1f013e\",\"Names\":[\"/node1\"],\"Image\":\"busybox\",\"ImageID\":\"sha256:00f017a8c2a6e1fe2ffd05c281f27d069d2a99323a8cd514dd35f228ba26d2ff\",\"Command\":\"tail -f /dev/null\",\"Created\":1491275350,\"Ports\":[],\"Labels\":{},\"State\":\"running\",\"Status\":\"Up About a minute\",\"HostConfig\":{\"NetworkMode\":\"dore-network\"},\"NetworkSettings\":{\"Networks\":{\"dore-network\":{\"IPAMConfig\":null,\"Links\":null,\"Aliases\":null,\"NetworkID\":\"0c312941cff131e01bc038a9e7d196a0faf77c03ed38c365715755dc3c61b2ae\",\"EndpointID\":\"164c2b50d545660089b0eacb98a90e7334ebdbeca7cc16ce4448d283e644b076\",\"Gateway\":\"172.18.0.1\",\"IPAddress\":\"172.18.0.2\",\"IPPrefixLen\":16,\"IPv6Gateway\":\"\",\"GlobalIPv6Address\":\"\",\"GlobalIPv6PrefixLen\":0,\"MacAddress\":\"02:42:ac:12:00:02\"}}},\"Mounts\":[]}]\r\n```\r\n\r\n**Describe the results you expected:**\r\n\r\nInspect and Curl must be consistent. Curl response should have the Links information.\r\n\r\n**Output of `docker version`:**\r\n\r\n```\r\nClient:\r\n Version:      1.13.1\r\n API version:  1.26\r\n Go version:   go1.7.5\r\n Git commit:   092cba3\r\n Built:        Wed Feb  8 06:50:14 2017\r\n OS/Arch:      linux/amd64\r\n\r\nServer:\r\n Version:      1.13.1\r\n API version:  1.26 (minimum version 1.12)\r\n Go version:   go1.7.5\r\n Git commit:   092cba3\r\n Built:        Wed Feb  8 06:50:14 2017\r\n OS/Arch:      linux/amd64\r\n Experimental: false\r\n```\r\n\r\n**Output of `docker info`:**\r\n\r\n```\r\nContainers: 2\r\n Running: 2\r\n Paused: 0\r\n Stopped: 0\r\nImages: 33\r\nServer Version: 1.13.1\r\nStorage Driver: aufs\r\n Root Dir: /var/lib/docker/aufs\r\n Backing Filesystem: extfs\r\n Dirs: 171\r\n Dirperm1 Supported: true\r\nLogging Driver: json-file\r\nCgroup Driver: cgroupfs\r\nPlugins: \r\n Volume: local\r\n Network: bridge host macvlan null overlay\r\nSwarm: inactive\r\nRuntimes: runc\r\nDefault Runtime: runc\r\nInit Binary: docker-init\r\ncontainerd version: aa8187dbd3b7ad67d8e5e3a15115d3eef43a7ed1\r\nrunc version: 9df8b306d01f59d3a8029be411de015b7304dd8f\r\ninit version: 949e6fa\r\nSecurity Options:\r\n apparmor\r\n seccomp\r\n  Profile: default\r\nKernel Version: 4.4.0-71-generic\r\nOperating System: Ubuntu 16.04.2 LTS\r\nOSType: linux\r\nArchitecture: x86_64\r\nCPUs: 4\r\nTotal Memory: 7.75 GiB\r\nName: my name\r\nID: Y4B7:ICGF:AXJG:HHJT:6LUD:W3IA:FUAY:TZNX:LYXF:U3V3:VI2R:5UF6\r\nDocker Root Dir: /var/lib/docker\r\nDebug Mode (client): false\r\nDebug Mode (server): false\r\nRegistry: https://index.docker.io/v1/\r\nWARNING: No swap limit support\r\nExperimental: false\r\nInsecure Registries:\r\n 127.0.0.0/8\r\nLive Restore Enabled: false\r\n```\r\n"},{"labels":[null,"documentation",null,null],"text":"---------------------------------------------------\r\nBUG REPORT INFORMATION\r\n---------------------------------------------------\r\n**Description**\r\nUsing the `--since` and `--tail` flags with the command line tool, or the `since` or `tail` parameters via the API, does not yield expected results.\r\n\r\n**Steps to reproduce the issue:**\r\nThe following is true for either the cli or the API, but I'll describe it for the cli to keep things simple:\r\n\r\n1. Run `docker service logs --tail 1 [SERVICE]` or `docker service logs [1491249483 || 1m10s etc.] [SERVICE]`\r\n\r\n**Describe the results you received:**\r\nMany lines returned, and in the case of failing services which are retrying every n seconds, this is _thousands_ of lines.\r\n\r\n**Describe the results you expected:**\r\nWith `--tail 1`, only 1 line returned. With `--since [TIMESTAMP]` only lines returned since that timestamp.\r\n\r\n**Additional information you deem important (e.g. issue happens only occasionally):**\r\nIt seems that the extra lines are the result of grabbing logs from all service tasks, though I could be wrong.\r\n\r\nQuerying the individual containers created by the `docker service` command, the `--tail` and `--since` options work as expected.\r\n\r\n**Output of `docker version`:**\r\n\r\nOutput is from my Mac, but the same thing happens for the same version on Linux:\r\n```\r\nClient:\r\n Version:      17.03.1-ce\r\n API version:  1.27\r\n Go version:   go1.7.5\r\n Git commit:   c6d412e\r\n Built:        Tue Mar 28 00:40:02 2017\r\n OS/Arch:      darwin/amd64\r\n\r\nServer:\r\n Version:      17.03.1-ce\r\n API version:  1.27 (minimum version 1.12)\r\n Go version:   go1.7.5\r\n Git commit:   c6d412e\r\n Built:        Fri Mar 24 00:00:50 2017\r\n OS/Arch:      linux/amd64\r\n Experimental: true\r\n```\r\n\r\n**Output of `docker info`:**\r\n\r\nAgain this is from my Mac, but the tests were also performed on Linux with a proper swarm, with the same results:\r\n```\r\nContainers: 6                                                                                                                                                             [25/4682]\r\n Running: 1\r\n Paused: 0\r\n Stopped: 5\r\nImages: 350\r\nServer Version: 17.03.1-ce\r\nStorage Driver: overlay2\r\n Backing Filesystem: extfs\r\n Supports d_type: true\r\n Native Overlay Diff: true\r\nLogging Driver: json-file\r\nCgroup Driver: cgroupfs\r\nPlugins: \r\n Volume: local\r\n Network: bridge host ipvlan macvlan null overlay\r\nSwarm: active\r\n NodeID: mp9up3hu4ik275i4nl23hx1zv\r\n Is Manager: true\r\n ClusterID: flbky82mvb51ngvbmb3a0pvqn\r\n Managers: 1\r\n Nodes: 1\r\n Orchestration:\r\n  Task History Retention Limit: 5\r\n Raft:\r\n  Snapshot Interval: 10000\r\n  Number of Old Snapshots to Retain: 0\r\n  Heartbeat Tick: 1\r\n  Election Tick: 3\r\n Dispatcher:\r\n  Heartbeat Period: 5 seconds\r\n CA Configuration:\r\n  Expiry Duration: 3 months\r\n Node Address: 192.168.65.2\r\n Manager Addresses:\r\n  192.168.65.2:2377\r\nRuntimes: runc\r\nDefault Runtime: runc\r\nInit Binary: docker-init\r\ncontainerd version: 4ab9917febca54791c5f071a9d1f404867857fcc\r\nrunc version: 54296cf40ad8143b62dbcaa1d90e520a2136ddfe\r\ninit version: N/A (expected: 949e6facb77383876aeff8a6944dde66b3089574)\r\nSecurity Options:\r\n seccomp\r\n  Profile: default\r\nKernel Version: 4.9.13-moby\r\nOperating System: Alpine Linux v3.5\r\nOSType: linux\r\nArchitecture: x86_64\r\nCPUs: 2\r\nTotal Memory: 1.952 GiB\r\nName: moby\r\nID: IJXO:PQVJ:Z5IQ:AV2T:PNJX:B5IK:L3FW:EOFM:TLUX:WM56:GTBA:GH4W\r\nDocker Root Dir: /var/lib/docker\r\nDebug Mode (client): false\r\nDebug Mode (server): true\r\n File Descriptors: 39\r\n Goroutines: 143\r\n System Time: 2017-04-03T19:46:12.33482745Z\r\n EventsListeners: 2\r\nNo Proxy: *.local, 169.254/16\r\nUsername: afrazkhan\r\nRegistry: https://index.docker.io/v1/\r\nExperimental: true\r\nInsecure Registries:\r\n 127.0.0.0/8\r\nLive Restore Enabled: false\r\n```\r\n"},{"labels":["documentation",null],"text":"https://github.com/docker/docker/blob/17.03.x/docs/reference/commandline/service_create.md\r\n![image](https://cloud.githubusercontent.com/assets/1900106/24601239/6c42dcac-1858-11e7-8cfe-79ca04a46b90.png)\r\nOK with no issues\r\n\r\nhttps://docs.docker.com/engine/reference/commandline/service_create/#specify-service-constraints---constraint\r\n![image](https://cloud.githubusercontent.com/assets/1900106/24601250/79eaf074-1858-11e7-929f-b6a20e74b064.png)\r\nTable is messed up\r\nAnd `<tdnode.role</td>` is above the table\r\n\r\nThis is the table in HTML:\r\n```html\r\n<table>\r\n  <tr>\r\n    <th>node attribute</th>\r\n    <th>matches</th>\r\n    <th>example</th>\r\n  </tr>\r\n  <tr>\r\n    <td><tt>node.id</tt></td>\r\n    <td>Node ID</td>\r\n    <td><tt>node.id == 2ivku8v2gvtg4</tt></td>\r\n  </tr>\r\n  <tr>\r\n    <td><tt>node.hostname</tt></td>\r\n    <td>Node hostname</td>\r\n    <td><tt>node.hostname != node-2</tt></td>\r\n  </tr>\r\n  <tr>\r\n    &lt;td<tt>node.role</tt>&lt;/td&gt;\r\n    <td><tt>node role: manager</tt></td>\r\n    <td><tt>node.role == manager</tt></td>\r\n  </tr>\r\n  <tr>\r\n    <td><tt>node.labels</tt></td>\r\n    <td>user defined node labels</td>\r\n    <td><tt>node.labels.security == high</tt></td>\r\n  </tr>\r\n  <tr>\r\n    <td><tt>engine.labels</tt></td>\r\n    <td>Docker Engine's labels</td>\r\n    <td><tt>engine.labels.operatingsystem == ubuntu 14.04</tt></td>\r\n  </tr>\r\n</table>\r\n```"},{"labels":["documentation",null,null],"text":"Wrong containerd version in release notes for release v17.03.1-ce:\r\n```\r\nUpdate containerd to 595e75c212d19a81d2b808a518fe1afc1391dad5 #31662\r\n```\r\n(https://github.com/docker/docker/pull/31662/commits/74c52a7bab45f63defdbe4c33ec5c77416f2ecf7)\r\n\r\nBut here version changed to 4ab9917febca54791c5f071a9d1f404867857fcc:\r\nhttps://github.com/docker/docker/commit/00132cc4426d7914822b98f952d32a45b015485e"},{"labels":["documentation",null,null],"text":"platform: docker toobox for windows 17.0.03\r\n\r\nWhen running a container with a mount from a host drive, the docker host folder contents overwrites the container's folder contents entirely. There is no overlay of data as detailed in the docs.\r\n\r\nmy ubuntu container command: \r\n\r\n> docker run -d -P --name MYCONTAINER -v /c/Users/drupal8_www:/var/www/html MY:IMAGE\r\n\r\nby stopping and starting this i can clearly see and repeat the effect describe above.\r\n\r\nthanks"},{"labels":[null,"documentation",null,null],"text":"**Description**\r\n\r\nPushing a docker image pushes significantly more data than pulling\r\n\r\n**Steps to reproduce the issue:**\r\n1. build an easily compressible image (e.g. https://github.com/frankh/docker-compress-test)\r\n2. docker push it\r\n  * Note how much it uploads. In my case, it's ~40MB\r\n3. delete the image and docker pull\r\n  * Note how much it downloads. In my case, ~40KB\r\n\r\n**Describe the results you received:**\r\n\r\nPushing pushes significantly more data than pulling\r\n\r\n**Describe the results you expected:**\r\n\r\nPushing and pulling move roughly the same amount of data\r\n\r\n**Output of `docker version`:**\r\n\r\nDocker version 17.03.0-ce, build 60ccb22\r\n\r\n**Output of `docker info`:**\r\n\r\n```\r\nContainers: 34\r\n Running: 2\r\n Paused: 0\r\n Stopped: 32\r\nImages: 1355\r\nServer Version: 17.03.0-ce\r\nStorage Driver: overlay2\r\n Backing Filesystem: extfs\r\n Supports d_type: true\r\n Native Overlay Diff: true\r\nLogging Driver: json-file\r\nCgroup Driver: cgroupfs\r\nPlugins:\r\n Volume: local\r\n Network: bridge host ipvlan macvlan null overlay\r\nSwarm: inactive\r\nRuntimes: runc\r\nDefault Runtime: runc\r\nInit Binary: docker-init\r\ncontainerd version: 977c511eda0925a723debdc94d09459af49d082a\r\nrunc version: a01dafd48bc1c7cc12bdb01206f9fea7dd6feb70\r\ninit version: 949e6fa\r\nSecurity Options:\r\n seccomp\r\n  Profile: default\r\nKernel Version: 4.9.12-moby\r\nOperating System: Alpine Linux v3.5\r\nOSType: linux\r\nArchitecture: x86_64\r\nCPUs: 2\r\nTotal Memory: 1.952 GiB\r\nName: moby\r\nID: CXWS:GVKV:ICYK:NJ7L:26LZ:DOYO:OBL4:NDAW:4TLZ:J2TJ:XML7:VDR2\r\nDocker Root Dir: /var/lib/docker\r\nDebug Mode (client): false\r\nDebug Mode (server): true\r\n File Descriptors: 33\r\n Goroutines: 40\r\n System Time: 2017-03-22T10:22:34.60882776Z\r\n EventsListeners: 1\r\nNo Proxy: *.local, 169.254/16\r\nUsername: frankh\r\nRegistry: https://index.docker.io/v1/\r\nExperimental: true\r\nInsecure Registries:\r\n 127.0.0.0/8\r\nLive Restore Enabled: false\r\n```\r\n\r\n**Additional environment details (AWS, VirtualBox, physical, etc.):**\r\n\r\nDocker for mac (also reproducible on other platforms)"},{"labels":[null,"documentation",null,null],"text":"**Description**\r\n\r\nThe `DiskUsage` call (which backs `docker system df`) can take an extremely long time to finish, since it walks through every container and volume's filesystem. In cases where you have lots of containers or volumes with lots of files, we've seen `DiskUsage` take minutes or even hours to complete, chewing up CPU and disk I/O the whole time. This isn't necessarily incorrect behavior, per se, but it is at least very surprising, especially since `ContainerStats` isn't expensive at all.\r\n\r\nI'm not sure how feasible it would be to improve the performance of `DiskUsage`, but if that's not possible, there should be more messaging around the costs of this API call.\r\n\r\nAlso, is there any way to get the size of an individual volume, or can you only get the size of every volume at once with `DiskUsage`?"},{"labels":["documentation",null,null,null,null],"text":"<!--\r\nIf you are reporting a new issue, make sure that we do not have any duplicates\r\nalready open. You can ensure this by searching the issue list for this\r\nrepository. If there is a duplicate, please close your issue and add a comment\r\nto the existing issue instead.\r\n\r\nIf you suspect your issue is a bug, please edit your issue description to\r\ninclude the BUG REPORT INFORMATION shown below. If you fail to provide this\r\ninformation within 7 days, we cannot debug your issue and will close it. We\r\nwill, however, reopen it if you later provide the information.\r\n\r\nFor more information about reporting issues, see\r\nhttps://github.com/docker/docker/blob/master/CONTRIBUTING.md#reporting-other-issues\r\n\r\n---------------------------------------------------\r\nGENERAL SUPPORT INFORMATION\r\n---------------------------------------------------\r\n\r\nThe GitHub issue tracker is for bug reports and feature requests.\r\nGeneral support can be found at the following locations:\r\n\r\n- Docker Support Forums - https://forums.docker.com\r\n- IRC - irc.freenode.net #docker channel\r\n- Post a question on StackOverflow, using the Docker tag\r\n\r\n---------------------------------------------------\r\nBUG REPORT INFORMATION\r\n---------------------------------------------------\r\nUse the commands below to provide key information from your environment:\r\nYou do NOT have to include this information if this is a FEATURE REQUEST\r\n-->\r\n\r\n**Description**\r\nWhen a container uses `--restart=always -p` the port changes with every automatic restart. This was not the case with `v1.13` - is this intentional?\r\n\r\n**Steps to reproduce the issue:**\r\n1. `docker run --restart=always -p 8000 debian:jessie sleep 2`\r\n2. Run `docker ps` a couple times to check the assigned port\r\n\r\n**Describe the results you received:**\r\nThe port changes with every restart\r\n\r\n**Describe the results you expected:**\r\nThe port should probably stay the same\r\n\r\n**Output of `docker version`:**\r\n\r\n```\r\nClient:\r\n Version:      17.03.0-ce\r\n API version:  1.26\r\n Go version:   go1.7.5\r\n Git commit:   60ccb22\r\n Built:        Thu Feb 23 10:54:03 2017\r\n OS/Arch:      linux/amd64\r\n\r\nServer:\r\n Version:      17.03.0-ce\r\n API version:  1.26 (minimum version 1.12)\r\n Go version:   go1.7.5\r\n Git commit:   60ccb22\r\n Built:        Thu Feb 23 10:54:03 2017\r\n OS/Arch:      linux/amd64\r\n Experimental: false\r\n```\r\n\r\n**Output of `docker info`:**\r\n\r\n```\r\nContainers: 43\r\n Running: 38\r\n Paused: 0\r\n Stopped: 5\r\nImages: 27\r\nServer Version: 17.03.0-ce\r\nStorage Driver: devicemapper\r\n Pool Name: data-docker_thin\r\n Pool Blocksize: 65.54 kB\r\n Base Device Size: 10.74 GB\r\n Backing Filesystem: xfs\r\n Data file:\r\n Metadata file:\r\n Data Space Used: 14.39 GB\r\n Data Space Total: 96.64 GB\r\n Data Space Available: 82.25 GB\r\n Metadata Space Used: 21.34 MB\r\n Metadata Space Total: 536.9 MB\r\n Metadata Space Available: 515.5 MB\r\n Thin Pool Minimum Free Space: 9.664 GB\r\n Udev Sync Supported: true\r\n Deferred Removal Enabled: true\r\n Deferred Deletion Enabled: true\r\n Deferred Deleted Device Count: 0\r\n Library Version: 1.02.135-RHEL7 (2016-11-16)\r\nLogging Driver: journald\r\nCgroup Driver: cgroupfs\r\nPlugins:\r\n Volume: local\r\n Network: bridge host macvlan null overlay\r\nSwarm: inactive\r\nRuntimes: runc\r\nDefault Runtime: runc\r\nInit Binary: docker-init\r\ncontainerd version: 977c511eda0925a723debdc94d09459af49d082a\r\nrunc version: a01dafd48bc1c7cc12bdb01206f9fea7dd6feb70\r\ninit version: 949e6fa\r\nSecurity Options:\r\n seccomp\r\n  Profile: default\r\nKernel Version: 3.10.0-514.6.2.el7.x86_64\r\nOperating System: CentOS Linux 7 (Core)\r\nOSType: linux\r\nArchitecture: x86_64\r\nCPUs: 2\r\nTotal Memory: 7.305 GiB\r\nName: us-1\r\nID: 6UKZ:VSEG:Z6FX:3A7K:YS6F:HUMA:HWFR:7D3L:IZIG:OVT4:33FA:GNDN\r\nDocker Root Dir: /var/lib/docker\r\nDebug Mode (client): false\r\nDebug Mode (server): false\r\nRegistry: https://index.docker.io/v1/\r\nWARNING: IPv4 forwarding is disabled\r\nWARNING: bridge-nf-call-iptables is disabled\r\nWARNING: bridge-nf-call-ip6tables is disabled\r\nExperimental: false\r\nInsecure Registries:\r\n 127.0.0.0/8\r\nLive Restore Enabled: true\r\n```\r\n\r\n"},{"labels":["documentation",null],"text":"<!--\r\nIf you are reporting a new issue, make sure that we do not have any duplicates\r\nalready open. You can ensure this by searching the issue list for this\r\nrepository. If there is a duplicate, please close your issue and add a comment\r\nto the existing issue instead.\r\n\r\nIf you suspect your issue is a bug, please edit your issue description to\r\ninclude the BUG REPORT INFORMATION shown below. If you fail to provide this\r\ninformation within 7 days, we cannot debug your issue and will close it. We\r\nwill, however, reopen it if you later provide the information.\r\n\r\nFor more information about reporting issues, see\r\nhttps://github.com/docker/docker/blob/master/CONTRIBUTING.md#reporting-other-issues\r\n\r\n---------------------------------------------------\r\nGENERAL SUPPORT INFORMATION\r\n---------------------------------------------------\r\n\r\nThe GitHub issue tracker is for bug reports and feature requests.\r\nGeneral support can be found at the following locations:\r\n\r\n- Docker Support Forums - https://forums.docker.com\r\n- IRC - irc.freenode.net #docker channel\r\n- Post a question on StackOverflow, using the Docker tag\r\n\r\n---------------------------------------------------\r\nBUG REPORT INFORMATION\r\n---------------------------------------------------\r\nUse the commands below to provide key information from your environment:\r\nYou do NOT have to include this information if this is a FEATURE REQUEST\r\n-->\r\n\r\n**Description**\r\n\r\nThe [docs here](https://github.com/docker/docker/blob/master/docs/reference/commandline/inspect.md#get-an-instances-image-name) on how to \"Get an instance's image name\" are wrong.\r\n\r\n**Steps to reproduce the issue:**\r\n1. run `docker inspect --format='{{.Container.Spec.Image}}' <container ID>`\r\n\r\n**Describe the results you received:**\r\n\r\n```\r\nTemplate parsing error: template: :1:12: executing \"\" at <.Container.Spec.Imag...>: map has no entry for key \"Container\"\r\n```\r\n\r\n**Describe the results you expected:**\r\n\r\nI expect to the command to return an image name.\r\n\r\n**Additional information you deem important (e.g. issue happens only occasionally):**\r\n\r\n**Output of `docker version`:**\r\n\r\n```\r\ndocker version\r\n\r\nClient:\r\n Version:      1.12.3\r\n API version:  1.24\r\n Go version:   go1.6.3\r\n Git commit:   6b644ec\r\n Built:        Wed Oct 26 21:44:32 2016\r\n OS/Arch:      linux/amd64\r\n\r\nServer:\r\n Version:      1.12.3\r\n API version:  1.24\r\n Go version:   go1.6.3\r\n Git commit:   6b644ec\r\n Built:        Wed Oct 26 21:44:32 2016\r\n OS/Arch:      linux/amd64\r\n```\r\n\r\n**Output of `docker info`:**\r\n\r\n```\r\ndocker info\r\n\r\nContainers: 4\r\n Running: 4\r\n Paused: 0\r\n Stopped: 0\r\nImages: 4\r\nServer Version: 1.12.3\r\nStorage Driver: aufs\r\n Root Dir: /var/lib/docker/aufs\r\n Backing Filesystem: extfs\r\n Dirs: 75\r\n Dirperm1 Supported: true\r\nLogging Driver: json-file\r\nCgroup Driver: cgroupfs\r\nPlugins:\r\n Volume: local\r\n Network: host overlay bridge null\r\nSwarm: inactive\r\nRuntimes: runc\r\nDefault Runtime: runc\r\nSecurity Options: apparmor\r\nKernel Version: 3.16.0-77-generic\r\nOperating System: Ubuntu 14.04 LTS\r\nOSType: linux\r\nArchitecture: x86_64\r\nCPUs: 24\r\nTotal Memory: 31.12 GiB\r\nName: sto3-accesspoint-a62.sto3.spotify.net\r\nID: AYPE:FMXB:2PCP:DHI4:LUOS:HA5P:SWRJ:DMDE:JLR4:C3KE:VVRU:JLMS\r\nDocker Root Dir: /var/lib/docker\r\nDebug Mode (client): false\r\nDebug Mode (server): false\r\nRegistry: https://index.docker.io/v1/\r\nWARNING: No swap limit support\r\nInsecure Registries:\r\n 127.0.0.0/8```\r\n\r\n**Additional environment details (AWS, VirtualBox, physical, etc.):**\r\n\r\nUsing docker-machine VM on vmware on Mac Sierra.\r\n"},{"labels":[null,"documentation",null,null,null],"text":"The markdown API docs are missing any description for the `NetworkingConfig` object that is included in the config to create a container. This object is included in the example JSON that gets POSTed to `/containers/create` in the 1.22, 1.23, and 1.24 docs, but is not mentioned in the following \"JSON Parameters\" section. In particular, its child object `EndpointsConfig` is not fully defined.\r\n\r\nThis issue only affects the older markdown API docs. The objects mentioned above are defined in more detail in `api/swagger.yaml`. For the most part, the various places in the swagger description of the API that accept or produce information about networks refer to `#/definitions/EndpointSettings`.\r\n\r\n"},{"labels":["documentation"],"text":"\r\n**Description**\r\n\r\nThe placement constraints grammar is not documented.\r\n\r\n**Steps to reproduce the issue:**\r\n1. `docker help create`\r\n2.  search for \"placement constraints\" on docker.com\r\n3. \r\n\r\n**Describe the results you received:**\r\n\r\nNo documentation.\r\n\r\n**Describe the results you expected:**\r\n\r\nDocumentation of the grammar, such as how not equal is written, whether and and or can be used, and what the grammar is etc.\r\n"},{"labels":["documentation",null],"text":"PR https://github.com/docker/docker/pull/31710 adds the `--verbose` option for `network inspect` to display service level details across the cluster for swarm mode overlay networks.  `swagger.yml` has to be updated to include the types of the objects in `docker network inspect --verbose` output."},{"labels":["documentation",null,null,null],"text":"I'm opening this issue as a bug because from what I've read docker is supposed to not enforce memory or disk space limitations during container's build or run actions. \r\n\r\nI have a docker file that does a lot when building and I can't really share to help with reproducing. This docker file behaves differently on different hosts. In one of them runs out of memory which contradicts the above. To help me troubleshoot the issue I've added a cmd that reports the free memory before it runs out of memory\r\n```powershell\r\n(Get-Counter -Counter \"\\Memory\\Available MBytes\").CounterSamples[0].CookedValue\r\n```\r\n\r\n1. On my Windows 10 host (my workstation laptop) the container fails to build. The workstation has 16GB of memory. The reported free memory before the out of memory crash is 200MB.\r\n1. On a Windows 2016 on a Hyper-V instanced hosted on my workstation the container builds successfully. The Hyper-V instance is assgined 4GB of memory. The reported free memory before the out of memory crash is 538MB.\r\n1. On a Windows 2016 host on azure the container builds successfully. The Azure VM is running with 7GB. The reported free memory before the out of memory crash is 3000MB.\r\n\r\nEach of the hosts reports the following version\r\n**1. Windows 10 Host**\r\n```text\r\nClient:\r\n Version:      17.03.0-ce\r\n API version:  1.26\r\n Go version:   go1.7.5\r\n Git commit:   60ccb22\r\n Built:        Thu Feb 23 10:40:59 2017\r\n OS/Arch:      windows/amd64\r\n\r\nServer:\r\n Version:      17.03.0-ce\r\n API version:  1.26 (minimum version 1.24)\r\n Go version:   go1.7.5\r\n Git commit:   60ccb22\r\n Built:        Thu Feb 23 10:40:59 2017\r\n OS/Arch:      windows/amd64\r\n Experimental: true\r\n```\r\n\r\n**2. Windows 2016 Host on Hyper-V**\r\n```text\r\nClient:\r\n Version:      17.03.0-ee-1\r\n API version:  1.26\r\n Go version:   go1.7.5\r\n Git commit:   9094a76\r\n Built:        Wed Mar  1 00:49:51 2017\r\n OS/Arch:      windows/amd64\r\n\r\nServer:\r\n Version:      17.03.0-ee-1\r\n API version:  1.26 (minimum version 1.24)\r\n Go version:   go1.7.5\r\n Git commit:   9094a76\r\n Built:        Wed Mar  1 00:49:51 2017\r\n OS/Arch:      windows/amd64\r\n Experimental: false\r\n```\r\n\r\n**2. Windows 2016 Host on Azure**\r\n```text\r\nClient:\r\nVersion:      1.12.2-cs2-ws-beta\r\nAPI version:  1.25\r\nGo version:   go1.7.1\r\nGit commit:   050b611\r\nBuilt:        Tue Oct 11 02:35:40 2016\r\nOS/Arch:      windows/amd64\r\n\r\nServer:\r\nVersion:      1.12.2-cs2-ws-beta\r\nAPI version:  1.25\r\nGo version:   go1.7.1\r\nGit commit:   050b611\r\nBuilt:        Tue Oct 11 02:35:40 2016\r\nOS/Arch:      windows/amd64\r\n\r\n```\r\n\r\nI understand I've not provided all necessary information to help you reproduce but the artifacts being referenced in the container are not freely available. What I can additionally say, is that the same  succeeds on Windows 10 host (case 1) when building on `microsoft/windowsservercore:latest` but fails when building on `asarafian/mssql-server-windows-express:2014SP2`. The difference between the two is the extra disk space required for SQL Server 2014SP2 and the memory that the sql server process take. Keep in mind that the sql server has one very small database attached, so it's strange that it makes that big of a difference.\r\n\r\nI'm more than willing to help troubleshoot this issue but I need some help on how. My feeling is that there is a difference between how docker and containers behave between Windows 10 and Windows Server hosts. The windows 10 machine has the most memory available from all the other one and reports 8-9GB free when the our of memory is thrown. On the other hand, Windows Server 2016 manages better with less memory available to the host. As there is a difference on setting up docker for Windows 10 and Windows Server, is it possible that there some limitations for Windows 10? If so, then I would consider this bug's resolution and documentation fix because I can't find any relevant information, besides limiting the memory available to the container.\r\n"},{"labels":["documentation",null,null,null],"text":"The [Load Balancing](https://docs.docker.com/engine/swarm/key-concepts/#load-balancing) section in the swarm docs don't make it clear if the internal loadbalancer also does health checks, and if it removes nodes that aren't running the service anymore (because it got killed or the node got rebooted).\r\n\r\nIn the following case I've got a service with replicas 3, 1 instance running on each of the 3 nodes.\r\n\r\nManager:\r\n```\r\n[root@centosvm ~]# docker ps\r\nCONTAINER ID        IMAGE                                    COMMAND                  CREATED             STATUS              PORTS               NAMES\r\na593d485050a        ddewaele/springboot.crud.sample:latest   \"sh -c 'java $JAVA_OP\"   7 minutes ago       Up 7 minutes                            springbootcrudsample.1.5syc6j4c8i3bnerdqq4e1yelm\r\n```\r\nNode1:\r\n```\r\n[root@node1 ~]# docker ps\r\nCONTAINER ID        IMAGE                                    COMMAND                  CREATED             STATUS              PORTS               NAMES\r\nd3b3fbc0f2c5        ddewaele/springboot.crud.sample:latest   \"sh -c 'java $JAVA_OP\"   4 minutes ago       Up 4 minutes                            springbootcrudsample.3.7y1oyjyrifgkmxlr20oai5ppl\r\n```\r\nNode 2:\r\n```\r\n[root@node2 ~]# docker ps\r\nCONTAINER ID        IMAGE                                    COMMAND                  CREATED             STATUS              PORTS               NAMES\r\nebca8f24ec3a        ddewaele/springboot.crud.sample:latest   \"sh -c 'java $JAVA_OP\"   7 minutes ago       Up 7 minutes                            springbootcrudsample.2.4tqjad7od8ep047s55485na1t\r\n```\r\nNow, on node1, we kill the docker container. This node will be without a service (swarm will re-create it here after a couple of seconds to keep the replication=3 on the service)\r\n```\r\n[root@node1 ~]# docker kill d3b3fbc0f2c5\r\nd3b3fbc0f2c5\r\n```\r\nContainer gone\r\n```\r\n[root@node1 ~]# docker ps\r\nCONTAINER ID        IMAGE                                    COMMAND                  CREATED             STATUS              PORTS               NAMES\r\n```\r\nNew container up\r\n```\r\n[root@node1 ~]# docker ps\r\nCONTAINER ID        IMAGE                                    COMMAND                  CREATED             STATUS              PORTS               NAMES\r\nb8c9a7a5cf97        ddewaele/springboot.crud.sample:latest   \"sh -c 'java $JAVA_OP\"   11 seconds ago      Up 9 seconds                            springbootcrudsample.3.9v4cnhi8dvq7n8afb2kvp28sk\r\n```\r\n\r\nIn the output below however, when container `d3b3fbc0f2c5` was killed, the ingress  loadbalancer didn't detect this, and it was still sending traffic to the node (resulting in connection refused) ? \r\n\r\nHow should we handle such a scenario ? Do we still need an external loadbalancer for this scenario and how should we configure it ?\r\n\r\n```\r\n[root@centosvm ~]# while :; do curl http://localhost:8080/env/hostname ; echo \"\" ; sleep 1; done\r\n{\"hostname\":\"d3b3fbc0f2c5\"}\r\n{\"hostname\":\"a593d485050a\"}\r\n{\"hostname\":\"ebca8f24ec3a\"}\r\n{\"hostname\":\"d3b3fbc0f2c5\"}\r\n{\"hostname\":\"a593d485050a\"}\r\n{\"hostname\":\"ebca8f24ec3a\"}\r\n{\"hostname\":\"d3b3fbc0f2c5\"}\r\n{\"hostname\":\"a593d485050a\"}\r\n{\"hostname\":\"ebca8f24ec3a\"}\r\n{\"hostname\":\"a593d485050a\"}\r\n{\"hostname\":\"ebca8f24ec3a\"}\r\n{\"hostname\":\"a593d485050a\"}\r\ncurl: (7) Failed connect to localhost:8080; Connection refused\r\n\r\n{\"hostname\":\"ebca8f24ec3a\"}\r\n{\"hostname\":\"a593d485050a\"}\r\ncurl: (7) Failed connect to localhost:8080; Connection refused\r\n\r\n{\"hostname\":\"ebca8f24ec3a\"}\r\n{\"hostname\":\"a593d485050a\"}\r\ncurl: (7) Failed connect to localhost:8080; Connection refused\r\n\r\n{\"hostname\":\"ebca8f24ec3a\"}\r\n{\"hostname\":\"a593d485050a\"}\r\ncurl: (7) Failed connect to localhost:8080; Connection refused\r\n\r\n{\"hostname\":\"ebca8f24ec3a\"}\r\n{\"hostname\":\"a593d485050a\"}\r\ncurl: (7) Failed connect to localhost:8080; Connection refused\r\n\r\n{\"hostname\":\"ebca8f24ec3a\"}\r\n{\"hostname\":\"a593d485050a\"}\r\ncurl: (7) Failed connect to localhost:8080; Connection refused\r\n\r\n{\"hostname\":\"ebca8f24ec3a\"}\r\n{\"hostname\":\"a593d485050a\"}\r\n{\"hostname\":\"b8c9a7a5cf97\"}\r\n{\"hostname\":\"ebca8f24ec3a\"}\r\n{\"hostname\":\"a593d485050a\"}\r\n{\"hostname\":\"b8c9a7a5cf97\"}\r\n```"},{"labels":["documentation"],"text":"Hi,\r\nI was reading the docs (to get up-to-date between 1.11 and 1.13) and [here](https://docs.docker.com/engine/userguide/eng-image/dockerfile_best-practices/#/each-container-should-have-only-one-concern) I found this sentence:\r\n\r\n> In addition to the fact that containers can now be spawned with an init process, some programs might spawn additional processes of their own accord. \r\n\r\nSo I wonder, can we **really** specify an init process or does this page simply talk about the `CMD`?\r\n\r\nThe link brings nowhere hlpeful. So if it's just about the `CMD`, could we change the docs (should I click \"Edit this page\" or \"Request dos change\"?) because it is misleading :)\r\nI was really hoping that we could _finally_ have an init process :)\r\n\r\nThanks in advance :P"},{"labels":["documentation",null,null],"text":"**Description**\r\nI was refering to document related to nproc ulimit.\r\nhttps://docs.docker.com/engine/reference/commandline/run/\r\n\r\nWhen created 4th  container with ulimit nproc=3 for specific user , it gets created. \r\ndocker run -d -u daemon --ulimit nproc=3 busybox top \r\n\r\n\r\n**Steps to reproduce the issue:**\r\n1. Create 4 containers with below command\r\n    docker run -d -u daemon --ulimit nproc=3 busybox top    \r\n\r\n**Describe the results you received:**\r\nsh-4.2# docker run -d -u daemon --ulimit nproc=3 busybox top\r\nc272f84204c6a706e89dc2969c37cc1b15b0a34f08b0647786b2dc6912744734\r\nsh-4.2# docker run -d -u daemon --ulimit nproc=3 busybox top\r\n994c174d5eeedc49621c4ed29b66bd7d12dc9e2c3f68cd050ececfd0bddafe2e\r\nsh-4.2# docker run -d -u daemon --ulimit nproc=3 busybox top\r\n^[[Ac2829ec24116fa55769c4d86b5469147ff04cda4096b032932c733409dce7a2f\r\nsh-4.2# docker run -d -u daemon --ulimit nproc=3 busybox top\r\ncdeb9a71f407702966e7ecc9ec6d023c01a131fcf00776332f36550361c21255\r\nsh-4.2#\r\n\r\n\r\n**Describe the results you expected:**\r\n**Describe the results you received:**\r\nsh-4.2# docker run -d -u daemon --ulimit nproc=3 busybox top\r\nc272f84204c6a706e89dc2969c37cc1b15b0a34f08b0647786b2dc6912744734\r\nsh-4.2# docker run -d -u daemon --ulimit nproc=3 busybox top\r\n994c174d5eeedc49621c4ed29b66bd7d12dc9e2c3f68cd050ececfd0bddafe2e\r\nsh-4.2# docker run -d -u daemon --ulimit nproc=3 busybox top\r\n^[[Ac2829ec24116fa55769c4d86b5469147ff04cda4096b032932c733409dce7a2f\r\nsh-4.2# docker run -d -u daemon --ulimit nproc=3 busybox top\r\n[8] System error: resource temporarily unavailable\r\n\r\n4th container should get failed with \"[8] System error: resource temporarily unavailable\"\r\n\r\n**Output of `docker version`:**\r\nsh-4.2# docker version\r\nClient:\r\n Version:      1.13.0\r\n API version:  1.25\r\n Go version:   go1.7.3\r\n Git commit:   49bf474\r\n Built:        Tue Jan 17 09:55:28 2017\r\n OS/Arch:      linux/amd64\r\n\r\nServer:\r\n Version:      1.13.0\r\n API version:  1.25 (minimum version 1.12)\r\n Go version:   go1.7.3\r\n Git commit:   49bf474\r\n Built:        Tue Jan 17 09:55:28 2017\r\n OS/Arch:      linux/amd64\r\n Experimental: false\r\n\r\n**Output of `docker info`:**\r\nsh-4.2# docker info\r\nContainers: 4\r\n Running: 4\r\n Paused: 0\r\n Stopped: 0\r\nImages: 6\r\nServer Version: 1.13.0\r\nStorage Driver: devicemapper\r\n Pool Name: docker-253:1-1492245-pool\r\n Pool Blocksize: 65.54 kB\r\n Base Device Size: 10.74 GB\r\n Backing Filesystem: xfs\r\n Data file: /dev/loop0\r\n Metadata file: /dev/loop1\r\n Data Space Used: 56.88 GB\r\n Data Space Total: 107.4 GB\r\n Data Space Available: 28.74 GB\r\n Metadata Space Used: 135.8 MB\r\n Metadata Space Total: 2.147 GB\r\n Metadata Space Available: 2.012 GB\r\n Thin Pool Minimum Free Space: 10.74 GB\r\n Udev Sync Supported: true\r\n Deferred Removal Enabled: false\r\n Deferred Deletion Enabled: false\r\n Deferred Deleted Device Count: 0\r\n Data loop file: /var/lib/docker/devicemapper/devicemapper/data\r\n WARNING: Usage of loopback devices is strongly discouraged for production use. Use `--storage-opt dm.thinpooldev` to specify a custom block storage device.\r\n Metadata loop file: /var/lib/docker/devicemapper/devicemapper/metadata\r\n Library Version: 1.02.107-RHEL7 (2016-06-09)\r\nLogging Driver: syslog\r\nCgroup Driver: cgroupfs\r\nPlugins:\r\n Volume: local\r\n Network: bridge host macvlan null overlay\r\nSwarm: inactive\r\nRuntimes: runc\r\nDefault Runtime: runc\r\nInit Binary: docker-init\r\ncontainerd version: 03e5862ec0d8d3b3f750e19fca3ee367e13c090e\r\nrunc version: 2f7393a47307a16f8cee44a37b262e8b81021e3e\r\ninit version: 949e6fa\r\nSecurity Options:\r\n seccomp\r\n  Profile: default\r\nKernel Version: 3.10.0-327.22.2.el7.x86_64\r\nOperating System: CentOS Linux 7 (Core)\r\nOSType: linux\r\nArchitecture: x86_64\r\nCPUs: 4\r\nTotal Memory: 7.797 GiB\r\nName: gsljumphost.cisco.com\r\nID: LIZX:TKX5:IBZC:B3SF:BVLE:JGQ5:2GAG:OHSF:PM5H:ASYI:DISB:ZOM2\r\nDocker Root Dir: /var/lib/docker\r\nDebug Mode (client): false\r\nDebug Mode (server): false\r\nRegistry: https://index.docker.io/v1/\r\nWARNING: bridge-nf-call-iptables is disabled\r\nWARNING: bridge-nf-call-ip6tables is disabled\r\nExperimental: false\r\nInsecure Registries:\r\n 127.0.0.0/8\r\nLive Restore Enabled: false\r\n"},{"labels":["documentation",null,null],"text":"`docker stack ps` docs are sparse in examples.\r\nhttps://github.com/docker/docker/blob/master/docs/reference/commandline/stack_ps.md#examples\r\n\r\nIt would be good to have concrete examples similar to `docker service ps` and use them in the filtering logic. https://github.com/docker/docker/blob/master/docs/reference/commandline/service_ps.md#examples"},{"labels":["documentation"],"text":"The `CopyToContainer` method's documentation simply states the following:\r\n> CopyToContainer copies content into the container filesystem.\r\n\r\nHowever, the [API endpoint's documentation](https://docs.docker.com/engine/api/v1.24/index.html#extract-an-archive-of-files-or-folders-to-a-directory-in-a-container) states the endpoint only accepts tarballs. The code in the `cli` package using `CopyToContainer` clearly shows files being archived to a tarball as well.\r\n\r\nI think `CopyToContainer`'s documentation should reflect that it expects the `content` argument to be a tarball.\r\n"},{"labels":["documentation"],"text":"**Description**\r\n\r\nWhile compile the latest YAML files for docs, the following CLI reference files were found to be missing:\r\n\r\n* [ ] docs/reference/commandline/checkpoint/create.md\r\n* [ ] docs/reference/commandline/checkpoint/ls.md\r\n* [ ] docs/reference/commandline/checkpoint/rm.md\r\n* [ ] docs/reference/commandline/checkpoint.md\r\n* [ ] docs/reference/commandline/container/attach.md\r\n* [ ] docs/reference/commandline/container/commit.md\r\n* [ ] docs/reference/commandline/container/cp.md\r\n* [ ] docs/reference/commandline/container/create.md\r\n* [ ] docs/reference/commandline/container/diff.md\r\n* [ ] docs/reference/commandline/container/exec.md\r\n* [ ] docs/reference/commandline/container/export.md\r\n* [ ] docs/reference/commandline/container/inspect.md\r\n* [ ] docs/reference/commandline/container/kill.md\r\n* [ ] docs/reference/commandline/container/logs.md\r\n* [ ] docs/reference/commandline/container/ls.md\r\n* [ ] docs/reference/commandline/container/pause.md\r\n* [ ] docs/reference/commandline/container/port.md\r\n* [ ] docs/reference/commandline/container/prune.md\r\n* [ ] docs/reference/commandline/container/rename.md\r\n* [ ] docs/reference/commandline/container/restart.md\r\n* [ ] docs/reference/commandline/container/rm.md\r\n* [ ] docs/reference/commandline/container/run.md\r\n* [ ] docs/reference/commandline/container/start.md\r\n* [ ] docs/reference/commandline/container/stats.md\r\n* [ ] docs/reference/commandline/container/stop.md\r\n* [ ] docs/reference/commandline/container/top.md\r\n* [ ] docs/reference/commandline/container/unpause.md\r\n* [ ] docs/reference/commandline/container/update.md\r\n* [ ] docs/reference/commandline/container/wait.md\r\n* [ ] docs/reference/commandline/container.md\r\n* [ ] docs/reference/commandline/image/build.md\r\n* [ ] docs/reference/commandline/image/history.md\r\n* [ ] docs/reference/commandline/image/import.md\r\n* [ ] docs/reference/commandline/image/inspect.md\r\n* [ ] docs/reference/commandline/image/load.md\r\n* [ ] docs/reference/commandline/image/ls.md\r\n* [ ] docs/reference/commandline/image/prune.md\r\n* [ ] docs/reference/commandline/image/pull.md\r\n* [ ] docs/reference/commandline/image/push.md\r\n* [ ] docs/reference/commandline/image/rm.md\r\n* [ ] docs/reference/commandline/image/save.md\r\n* [ ] docs/reference/commandline/image/tag.md\r\n* [ ] docs/reference/commandline/image.md\r\n* [ ] docs/reference/commandline/network/connect.md\r\n* [ ] docs/reference/commandline/network/create.md\r\n* [ ] docs/reference/commandline/network/disconnect.md\r\n* [ ] docs/reference/commandline/network/inspect.md\r\n* [ ] docs/reference/commandline/network/ls.md\r\n* [ ] docs/reference/commandline/network/prune.md\r\n* [ ] docs/reference/commandline/network/rm.md\r\n* [ ] docs/reference/commandline/network.md\r\n* [ ] docs/reference/commandline/node/demote.md\r\n* [ ] docs/reference/commandline/node/inspect.md\r\n* [ ] docs/reference/commandline/node/ls.md\r\n* [ ] docs/reference/commandline/node/promote.md\r\n* [ ] docs/reference/commandline/node/ps.md\r\n* [ ] docs/reference/commandline/node/rm.md\r\n* [ ] docs/reference/commandline/node/update.md\r\n* [ ] docs/reference/commandline/node.md\r\n* [ ] docs/reference/commandline/plugin/create.md\r\n* [ ] docs/reference/commandline/plugin/disable.md\r\n* [ ] docs/reference/commandline/plugin/enable.md\r\n* [ ] docs/reference/commandline/plugin/inspect.md\r\n* [ ] docs/reference/commandline/plugin/install.md\r\n* [ ] docs/reference/commandline/plugin/ls.md\r\n* [ ] docs/reference/commandline/plugin/push.md\r\n* [ ] docs/reference/commandline/plugin/rm.md\r\n* [ ] docs/reference/commandline/plugin/set.md\r\n* [ ] docs/reference/commandline/plugin/upgrade.md\r\n* [ ] docs/reference/commandline/plugin.md\r\n* [ ] docs/reference/commandline/secret/create.md\r\n* [ ] docs/reference/commandline/secret/inspect.md\r\n* [ ] docs/reference/commandline/secret/ls.md\r\n* [ ] docs/reference/commandline/secret/rm.md\r\n* [ ] docs/reference/commandline/secret.md\r\n* [ ] docs/reference/commandline/service/create.md\r\n* [ ] docs/reference/commandline/service/inspect.md\r\n* [ ] docs/reference/commandline/service/logs.md\r\n* [ ] docs/reference/commandline/service/ls.md\r\n* [ ] docs/reference/commandline/service/ps.md\r\n* [ ] docs/reference/commandline/service/rm.md\r\n* [ ] docs/reference/commandline/service/scale.md\r\n* [ ] docs/reference/commandline/service/update.md\r\n* [ ] docs/reference/commandline/service.md\r\n* [ ] docs/reference/commandline/stack/deploy.md\r\n* [ ] docs/reference/commandline/stack/ls.md\r\n* [ ] docs/reference/commandline/stack/ps.md\r\n* [ ] docs/reference/commandline/stack/rm.md\r\n* [ ] docs/reference/commandline/stack/services.md\r\n* [ ] docs/reference/commandline/stack.md\r\n* [ ] docs/reference/commandline/swarm/init.md\r\n* [ ] docs/reference/commandline/swarm/join.md\r\n* [ ] docs/reference/commandline/swarm/join-token.md\r\n* [ ] docs/reference/commandline/swarm/leave.md\r\n* [ ] docs/reference/commandline/swarm/unlock.md\r\n* [ ] docs/reference/commandline/swarm/unlock-key.md\r\n* [ ] docs/reference/commandline/swarm/update.md\r\n* [ ] docs/reference/commandline/swarm.md\r\n* [ ] docs/reference/commandline/system/df.md\r\n* [ ] docs/reference/commandline/system/events.md\r\n* [ ] docs/reference/commandline/system/info.md\r\n* [ ] docs/reference/commandline/system/prune.md\r\n* [ ] docs/reference/commandline/system.md\r\n* [ ] docs/reference/commandline/volume/create.md\r\n* [ ] docs/reference/commandline/volume/inspect.md\r\n* [ ] docs/reference/commandline/volume/ls.md\r\n* [ ] docs/reference/commandline/volume/prune.md\r\n* [ ] docs/reference/commandline/volume/rm.md\r\n* [ ] docs/reference/commandline/volume.md\r\n\r\n**Steps to reproduce the issue:**\r\n1. In a terminal get the help for `docker volume --help`\r\n2. Notice you get some help\r\n3. try to find the matching CLI ref in the docs reference folder and you'll see that https://github.com/docker/docker/blob/master/docs/reference/commandline/volume.md is missing\r\n\r\n**Describe the results you received:**\r\n404 page not found\r\n\r\n**Describe the results you expected:**\r\nto find the matching Markdown file for the above command\r\n"},{"labels":["documentation",null,null],"text":"I am running docker version v1.13.0 with swarm (stand alone), the old swarm.\r\n\r\nWe have an overlay network and it seems that we can't create more than 255 containers. We get the following error:\r\n\r\n**Cannot start service logsparser: Error response from daemon: no available IPv4 addresses on this network's address pools**\r\n\r\n\r\nIs it a bug? Is there a way to increase this limitation?\r\n\r\nI attached 2 files with the output of:\r\n\r\ndocker info\r\n\r\nand\r\n\r\ndocker network inspect\r\n\r\n[d_info.txt](https://github.com/docker/docker/files/775585/d_info.txt)\r\n[d_network_inspect.txt](https://github.com/docker/docker/files/775586/d_network_inspect.txt)\r\n\r\n\r\n\r\n"},{"labels":["documentation"],"text":"<!--\r\nIf you are reporting a new issue, make sure that we do not have any duplicates\r\nalready open. You can ensure this by searching the issue list for this\r\nrepository. If there is a duplicate, please close your issue and add a comment\r\nto the existing issue instead.\r\n\r\nIf you suspect your issue is a bug, please edit your issue description to\r\ninclude the BUG REPORT INFORMATION shown below. If you fail to provide this\r\ninformation within 7 days, we cannot debug your issue and will close it. We\r\nwill, however, reopen it if you later provide the information.\r\n\r\nFor more information about reporting issues, see\r\nhttps://github.com/docker/docker/blob/master/CONTRIBUTING.md#reporting-other-issues\r\n\r\n---------------------------------------------------\r\nGENERAL SUPPORT INFORMATION\r\n---------------------------------------------------\r\n\r\nThe GitHub issue tracker is for bug reports and feature requests.\r\nGeneral support can be found at the following locations:\r\n\r\n- Docker Support Forums - https://forums.docker.com\r\n- IRC - irc.freenode.net #docker channel\r\n- Post a question on StackOverflow, using the Docker tag\r\n\r\n---------------------------------------------------\r\nBUG REPORT INFORMATION\r\n---------------------------------------------------\r\nUse the commands below to provide key information from your environment:\r\nYou do NOT have to include this information if this is a FEATURE REQUEST\r\n-->\r\n\r\n**Description**\r\n\r\nThe dockerd docs don't mention the new experimental flag and what features that enables (https://docs.docker.com/engine/reference/commandline/dockerd/), and the README in the repo (https://github.com/docker/docker/tree/master/experimental) is missing a lot of the new experimental features added in 1.13, e.g. see https://sreeninet.wordpress.com/2017/01/27/docker-1-13-experimental-features/.\r\n\r\nAlso, the experimental README  says \"Experimental features are not ready for production. They are provided for test and evaluation in your sandbox environments.\". That doesn't seem to match what I've heard from maintainers that experimental features are (now) considered behaviorally stable; just the API/CLI might change. E.g. see https://github.com/docker/docker/issues/26451#issuecomment-249294540"},{"labels":["documentation",null,null],"text":"Hey there,\r\n\r\nWhile this isn't a bug per se, it's _really_ unexpected behaviour of a Docker run command and I believe it deserves some attention, and at the _very_ least some clarification in the manual and steps to try and resolve the problem.\r\n\r\n======\r\n\r\nTl;dr, `:z` and `:Z` can cause the system to disallow logins by changing labels (until a reboot at least) without so much as a warning or a single line of output.\r\n\r\n======\r\n\r\nI run a CentOS 7.3 VM in Azure for testing out Docker boxes and making new ones (plus a few other bits and pieces)\r\n\r\nToday I ran a `docker run` (something similar to `docker run -v $PWD:/var/www:z -it <sha256 here> php -v`) in my home directory root (not usually where I run it) by doing a `^R` and searching for a command.\r\nBecause `$PWD` resolved to the my home dir the `:z` relabelled my _entire_ home directory with Docker's shared label. I wondered why the command took _so_ long to run, but didn't think much of it at the time.\r\nI walked away from my machine and (luckily) left my ssh session on. Later on I tried to log into the server from my phone and couldn't.\r\n\r\nAfter running back upstairs and some frantic defensive actions over the system (looking at `authorized_keys` files for tampering, audit logs, checking fail2ban, etc.) I decided the system had not been hacked into and my keys weren't compromised.\r\n\r\nEventually after searching around I noticed that `sshd` was being denied `read` to the `authorized_keys` file by SELinux because of the label change!\r\n\r\nAfter a `chcon -RFvv /home/username` I could log in again.\r\n\r\n======\r\n\r\nWhile it's obvious that those options were changing the labels on the _host_, I didn't realise until this point. The manual on [Volume Labels](https://docs.docker.com/engine/tutorials/dockervolumes/#/volume-labels) mentions about changing host's labels, but doesn't mention how dangerous this is and that if you can't log into the system a reboot or a relabel will be needed... (What if this was a system I couldn't / couldn't easily reboot?)\r\n\r\nIt's possible the manual also should explicitly list the two labels that are assigned for public and private mounts, so that people who don't want to use `:z` or `:Z` can manually label the files beforehand, which'd be safer and also can be put into the permanent policy of the machine.\r\n\r\nThanks."},{"labels":[null,"documentation",null],"text":"from my personal experience using the tooling. it would be great if these were resolved. please, do not take these as criticism.\r\n\r\n#### output:\r\n\r\ni  wonder how everyone deals with the docker ouput, in particular the core team. i suspect, i could be wrong, that people are handcrafting scripts for common operations.\r\n\r\ndealing with the ouput in a *unix env could be easier:\r\n\r\n* requires extra work when using common tools, e.g., `docker history <id>` -> `SIZE` contains spaces so `sort -h` doesn't handle it that well. one needs to do deal with Go templates.\r\n* some commands don't take formatting options so they're harder to deal with, e.g., `docker history`.\r\n* is there a standard delimiter that is always used for all the commands? quick test: remove just the `COMMENT` column, note the space(s) in the fields themselves.\r\n\r\n```sh\r\n$ docker history golang_1.4-alpine:latest\r\nIMAGE               CREATED             CREATED BY                                      SIZE                COMMENT\r\nf687c7a9c8fd        22 hours ago        /bin/sh -c echo 'hello world from' 'golang...   0 B                 \r\n0deea0c51a1c        11 months ago       /bin/sh -c #(nop) WORKDIR /go                   0 B                 \r\n<missing>           11 months ago       /bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH...   0 B                 \r\n<missing>           11 months ago       /bin/sh -c #(nop) ENV PATH=/go/bin:/usr/lo...   0 B                 \r\n<missing>           11 months ago       /bin/sh -c #(nop) ENV GOPATH=/go                0 B                 \r\n<missing>           11 months ago       /bin/sh -c set -ex  && apk add --no-cache ...   138 MB              \r\n<missing>           11 months ago       /bin/sh -c #(nop) ENV GOLANG_SRC_SHA1=486d...   0 B                 \r\n<missing>           11 months ago       /bin/sh -c #(nop) ENV GOLANG_SRC_URL=https...   0 B                 \r\n<missing>           11 months ago       /bin/sh -c #(nop) ENV GOLANG_VERSION=1.4.3      0 B                 \r\n<missing>           11 months ago       /bin/sh -c #(nop) ADD file:0f9cfb2e848f093...   4.79 MB             \r\n```\r\n\r\nwhat i'm trying to get at is, it would nice if the output played nicely with the tools folks are familiar with, and some consistent behaviour in the flags commands take (some take `--format` other don't).\r\n\r\n#### documentation\r\n\r\n#### aliasing\r\n\r\nthe alias, specifically, at the bottom is confusing, e.g., https://docs.docker.com/engine/reference/commandline/images/ says `docker images` -> ` docker image ls`:\r\n\r\n* why not then just redirect to the page?\r\n* the alias should be at the top of the page, it is less confusing that way.\r\n\r\n#### links to docs\r\n\r\nit would _really_ nice to have links to the docs directly (not the alias) available on the command line. something like below, or whatever fits your bill.\r\n\r\n```sh\r\n$ docker images --help\r\n\r\nhttps://docs.docker.com/engine/reference/commandline/image_ls/\r\n\r\nUsage:\tdocker images [OPTIONS] [REPOSITORY[:TAG]]\r\n\r\n...\r\n```\r\n\r\n---\r\n\r\n```sh\r\n$ docker version\r\n```\r\n\r\n```sh\r\nClient:\r\n Version:      1.13.0\r\n API version:  1.25\r\n Go version:   go1.7.3\r\n Git commit:   49bf474\r\n Built:        Wed Jan 18 16:20:26 2017\r\n OS/Arch:      darwin/amd64\r\n\r\nServer:\r\n Version:      1.13.0\r\n API version:  1.25 (minimum version 1.12)\r\n Go version:   go1.7.3\r\n Git commit:   49bf474\r\n Built:        Wed Jan 18 16:20:26 2017\r\n OS/Arch:      linux/amd64\r\n Experimental: true\r\n```\r\n\r\n```sh\r\n$ docker info\r\n```\r\n\r\n```sh\r\nContainers: 153\r\n Running: 0\r\n Paused: 0\r\n Stopped: 153\r\nImages: 1589\r\nServer Version: 1.13.0\r\nStorage Driver: aufs\r\n Root Dir: /var/lib/docker/aufs\r\n Backing Filesystem: extfs\r\n Dirs: 1290\r\n Dirperm1 Supported: true\r\nLogging Driver: json-file\r\nCgroup Driver: cgroupfs\r\nPlugins: \r\n Volume: local\r\n Network: bridge host ipvlan macvlan null overlay\r\nSwarm: inactive\r\nRuntimes: runc\r\nDefault Runtime: runc\r\nInit Binary: docker-init\r\ncontainerd version: 03e5862ec0d8d3b3f750e19fca3ee367e13c090e\r\nrunc version: 2f7393a47307a16f8cee44a37b262e8b81021e3e\r\ninit version: 949e6fa\r\nSecurity Options:\r\n seccomp\r\n  Profile: default\r\nKernel Version: 4.9.4-moby\r\nOperating System: Alpine Linux v3.5\r\nOSType: linux\r\nArchitecture: x86_64\r\nCPUs: 2\r\nTotal Memory: 1.952 GiB\r\nName: moby\r\nID: NRXU:ZFNJ:3AC2:WVYL:UODL:44GO:E7AA:AFWL:22FC:FJYR:URTX:SV2N\r\nDocker Root Dir: /var/lib/docker\r\nDebug Mode (client): false\r\nDebug Mode (server): true\r\n File Descriptors: 16\r\n Goroutines: 26\r\n System Time: 2017-02-09T19:26:55.917920388Z\r\n EventsListeners: 1\r\nNo Proxy: *.local, 169.254/16\r\nUsername: mohamedbana\r\nRegistry: https://index.docker.io/v1/\r\nExperimental: true\r\nInsecure Registries:\r\n 127.0.0.0/8\r\nLive Restore Enabled: false\r\n```"},{"labels":["documentation",null],"text":"The TOC on the right side of https://docs.docker.com/engine/deprecated/ has some entries at the wrong indentation. All the entries should have the same indentation.\r\n\r\n<img width=\"233\" alt=\"image\" src=\"https://cloud.githubusercontent.com/assets/11357370/22755255/64201d9a-ee10-11e6-9bfd-4780cff3a403.png\">\r\n"},{"labels":[null,"documentation",null],"text":"I'm trying to add in a Dockerfile a file with square brackets. Consider, for example, the following minimalistic Dockerfile:\r\n\r\n```\r\nFROM alpine\r\n\r\nADD \"arr[0].txt\" /\r\n\r\nCMD [\"bash\", \"-c\", \"ls -la *.txt\"]\r\n```\r\n\r\nAnd a file called `arr[0].txt` in the working directory. Trying to build this Dockerfile, I get:\r\n\r\n```\r\nStep 2/3 : ADD \"arr[0].txt\" /\r\nNo source files were specified\r\n```\r\n\r\nI already tried several variations of this command based on [Go filepath](https://golang.org/pkg/path/filepath/#Match), with no luck:\r\n\r\n* `ADD \"arr\\\\[0\\\\].txt\" /` (No source files were specified)\r\n* `ADD [\"arr\\\\[0\\\\].txt\", \"/\"]` (No source files were specified)\r\n* `ADD arr\\\\[0\\\\].txt /` (lstat arr\\\\[0\\\\].txt: no such file or directory)\r\n* `ADD \"arr\\[0\\].txt\" /` (lstat arr\\\\[0\\\\].txt: no such file or directory)\r\n* `ADD [\"arr\\[0\\].txt\", \"/\"]` (No source files were specified)\r\n* `ADD arr\\[0\\].txt /` (No source files were specified)\r\n\r\nAm I just missing the right pattern, or is this a bug?\r\n"},{"labels":["documentation",null,null],"text":"**Unable to set args for v2 plugins**\r\nThe plugin I'm using supports 3 arguments as seen in this output:\r\n```\r\n# docker plugin inspect nimble\r\n[\r\n    {\r\n        \"Config\": {\r\n            \"Args\": {\r\n                \"Description\": \"Group connection information\",\r\n                \"Name\": \"group\",\r\n                \"Settable\": [\r\n                    \"ip\",\r\n                    \"user\",\r\n                    \"pass\"\r\n                ],\r\n                \"Value\": [\r\n                    \"\",\r\n                    \"\",\r\n                    \"\"\r\n                ]\r\n            },\r\n```\r\n\r\nHowever, I am not able to set the values.\r\n```\r\n# docker plugin set nimble group.ip=10.1.2.3\r\nError response from daemon: \"group.ip\" is not settable\r\n```\r\n\r\n\r\n**Steps to reproduce the issue:**\r\n1. Create a plugin with 'Args' defined\r\n2. Inspect the plugin\r\n3. Attempt to set the arguments defined in the 'Args' configuration\r\n\r\n**Describe the results you received:**\r\nUnable to set args\r\n```\r\nDEBU[6382] Calling POST /v1.25/plugins/nimble/set       \r\nERRO[6382] Handler for POST /v1.25/plugins/nimble/set returned error: \"group.ip\" is not settable \r\n```\r\n\r\n**Describe the results you expected:**\r\nArgs should be set.\r\n\r\n**Additional information you deem important (e.g. issue happens only occasionally):**\r\nNone.\r\n\r\n**Output of `docker version`:**\r\n\r\n```\r\n# docker version\r\nClient:\r\n Version:      1.13.0\r\n API version:  1.25\r\n Go version:   go1.7.3\r\n Git commit:   49bf474\r\n Built:        Tue Jan 17 09:58:26 2017\r\n OS/Arch:      linux/amd64\r\n\r\nServer:\r\n Version:      1.13.0\r\n API version:  1.25 (minimum version 1.12)\r\n Go version:   go1.7.3\r\n Git commit:   49bf474\r\n Built:        Tue Jan 17 09:58:26 2017\r\n OS/Arch:      linux/amd64\r\n Experimental: false\r\n```\r\n\r\n**Output of `docker info`:**\r\n\r\n```\r\n# docker info\r\nContainers: 1\r\n Running: 0\r\n Paused: 0\r\n Stopped: 1\r\nImages: 6\r\nServer Version: 1.13.0\r\nStorage Driver: aufs\r\n Root Dir: /var/lib/docker/aufs\r\n Backing Filesystem: extfs\r\n Dirs: 7\r\n Dirperm1 Supported: true\r\nLogging Driver: json-file\r\nCgroup Driver: cgroupfs\r\nPlugins: \r\n Volume: local\r\n Network: bridge host macvlan null overlay\r\nSwarm: inactive\r\nRuntimes: runc\r\nDefault Runtime: runc\r\nInit Binary: docker-init\r\ncontainerd version: 03e5862ec0d8d3b3f750e19fca3ee367e13c090e\r\nrunc version: 2f7393a47307a16f8cee44a37b262e8b81021e3e\r\ninit version: 949e6fa\r\nSecurity Options:\r\n apparmor\r\n seccomp\r\n  Profile: default\r\nKernel Version: 4.4.0-62-generic\r\nOperating System: Ubuntu 16.04.1 LTS\r\nOSType: linux\r\nArchitecture: x86_64\r\nCPUs: 2\r\nTotal Memory: 3.859 GiB\r\nName: eforgette-u16p2\r\nID: UQWP:CEW2:4P3T:AFR2:3R7U:SUL3:QH2Y:5JGY:AYIY:64YM:WRT5:AZRJ\r\nDocker Root Dir: /var/lib/docker\r\nDebug Mode (client): false\r\nDebug Mode (server): true\r\n File Descriptors: 14\r\n Goroutines: 22\r\n System Time: 2017-02-07T09:53:59.166981721-08:00\r\n EventsListeners: 0\r\nRegistry: https://index.docker.io/v1/\r\nWARNING: No swap limit support\r\nExperimental: false\r\nInsecure Registries:\r\n 127.0.0.0/8\r\nLive Restore Enabled: false\r\n```\r\n\r\n**Additional environment details (AWS, VirtualBox, physical, etc.):**\r\nNone."},{"labels":["documentation",null],"text":"On doc page: https://github.com/docker/docker/blob/1.13.x/docs/reference/commandline/service_create.md\r\n\r\nPlease add [this example](https://github.com/docker/docker/issues/24879#issuecomment-278044244) about how to use `--container-label`.\r\n\r\nCheers!"},{"labels":["documentation",null],"text":"The 1.13.0 docs do not describe the effect of using `--memory-swap=0`. The default is `-1` which means unlimited. Does `0` mean no swap will be allowed, or do I have to set `--memory` and `--memory-swap` to the same value to accomplish that?\r\n\r\nhttps://docs.docker.com/engine/admin/resource_constraints/#/memory-swap-details"},{"labels":["documentation",null,null],"text":"Hi, All,\r\n\r\nI found in swagger.yml and api doc, there are some missing status codes about network:\r\n\r\n```\r\nGET /networks/(id or name) misses status code of 500;\r\nDELETE /networks/(id or name) missed status code of 403;\r\n```\r\n\r\nHere is my environment, we can see that there are two network has a prefix network id of `a`:\r\n```\r\nroot@ubuntu:~# docker network ls\r\nNETWORK ID          NAME                DRIVER              SCOPE\r\nb80b14598d1f        allen               bridge              local\r\nabe5fa290b6d        allen2              bridge              local\r\ndb8dfef4e6de        allen3              bridge              local\r\na89bfaea7f72        allen4              bridge              local\r\nfd6a89aad8ff        bridge              bridge              local\r\n85ded5476b05        docker_gwbridge     bridge              local\r\nd909a9f88b4c        host                host                local\r\nz1sybtvc99hu        ingress             overlay             swarm\r\n615a39ff6c47        none                null                local\r\n```\r\nThen we send an http request like the following pic, we found the status code is 500 which is not versioned in the swagger.yml nor api docs:\r\n<img width=\"782\" alt=\"2017-02-03 1 25 57\" src=\"https://cloud.githubusercontent.com/assets/9465626/22580645/06843094-ea15-11e6-845d-92a959624c63.png\">\r\n\r\n\r\nSecond, we send a DELETE request for network `host`, then daemon will response a status code of 403 which is also not versioned in swagger.yml or api docs. Here is test pic:\r\n![wechatimg4](https://cloud.githubusercontent.com/assets/9465626/22580703/a0a774d8-ea15-11e6-8ee1-32d82da5fbd7.jpeg)\r\n\r\n**Steps to reproduce the issue:**\r\n1.\r\n2.\r\n3.\r\n\r\n**Describe the results you received:**\r\nThere is no status code 500 for api endpoint `GET /networks/(id or name), nor 404 for `DELETE /networks/(id or name)`\r\n\r\n**Describe the results you expected:**\r\nrelated status codes are versioned in doc\r\n\r\n\r\n**Additional information you deem important (e.g. issue happens only occasionally):**\r\n\r\n**Output of `docker version`:**\r\n\r\n```\r\nroot@ubuntu:~# docker version\r\nClient:\r\n Version:      1.13.0\r\n API version:  1.25\r\n Go version:   go1.7.3\r\n Git commit:   49bf474\r\n Built:        Tue Jan 17 09:50:17 2017\r\n OS/Arch:      linux/amd64\r\n\r\nServer:\r\n Version:      1.13.0\r\n API version:  1.25 (minimum version 1.12)\r\n Go version:   go1.7.3\r\n Git commit:   49bf474\r\n Built:        Tue Jan 17 09:50:17 2017\r\n OS/Arch:      linux/amd64\r\n Experimental: false\r\n```\r\n\r\n**Output of `docker info`:**\r\n\r\n```\r\nroot@ubuntu:~# docker info\r\nContainers: 8\r\n Running: 0\r\n Paused: 0\r\n Stopped: 8\r\nImages: 37\r\nServer Version: 1.13.0\r\nStorage Driver: aufs\r\n Root Dir: /var/lib/docker/aufs\r\n Backing Filesystem: extfs\r\n Dirs: 202\r\n Dirperm1 Supported: true\r\nLogging Driver: json-file\r\nCgroup Driver: cgroupfs\r\nPlugins:\r\n Volume: local\r\n Network: bridge host macvlan null overlay\r\nSwarm: active\r\n NodeID: gkdoxio9hz1b325t544ftpry4\r\n Is Manager: true\r\n ClusterID: 3bidcebapq2115pts6cik50ah\r\n Managers: 1\r\n Nodes: 1\r\n Orchestration:\r\n  Task History Retention Limit: 5\r\n Raft:\r\n  Snapshot Interval: 10000\r\n  Number of Old Snapshots to Retain: 0\r\n  Heartbeat Tick: 1\r\n  Election Tick: 3\r\n Dispatcher:\r\n  Heartbeat Period: 5 seconds\r\n CA Configuration:\r\n  Expiry Duration: 3 months\r\n Node Address: 192.168.59.103\r\n Manager Addresses:\r\n  192.168.59.103:2377\r\nRuntimes: runc\r\nDefault Runtime: runc\r\nInit Binary: docker-init\r\ncontainerd version: 03e5862ec0d8d3b3f750e19fca3ee367e13c090e\r\nrunc version: 2f7393a47307a16f8cee44a37b262e8b81021e3e\r\ninit version: 949e6fa\r\nSecurity Options:\r\n apparmor\r\nKernel Version: 3.19.0-25-generic\r\nOperating System: Ubuntu 14.04.3 LTS\r\nOSType: linux\r\nArchitecture: x86_64\r\nCPUs: 1\r\nTotal Memory: 1.954 GiB\r\nName: ubuntu\r\nID: Q2ZC:GWDN:27OH:GRMH:G6QU:W7QP:4TIX:Q5F6:YEVK:45XP:EXHC:HOB5\r\nDocker Root Dir: /var/lib/docker\r\nDebug Mode (client): false\r\nDebug Mode (server): true\r\n File Descriptors: 32\r\n Goroutines: 132\r\n System Time: 2017-01-29T14:51:41.049720516+08:00\r\n EventsListeners: 0\r\nRegistry: https://index.docker.io/v1/\r\nWARNING: No swap limit support\r\nExperimental: false\r\nInsecure Registries:\r\n 127.0.0.0/8\r\nRegistry Mirrors:\r\n https://a.b.c/\r\nLive Restore Enabled: false\r\n```\r\n\r\n**Additional environment details (AWS, VirtualBox, physical, etc.):**\r\n"},{"labels":[null,"documentation"],"text":"The [ARG section](https://docs.docker.com/engine/reference/builder/#/arg) says the following:\r\n\r\n>**Warning:** It is not recommended to use build-time variables for passing secrets like github keys, user credentials etc. Build-time variable values are visible to any user of the image with the docker history command.\r\n\r\nThis, however, is not very helpful. The warning should mention what to use instead when you need secrets during build time."},{"labels":[null,"documentation",null],"text":"I read the v1.25 document, but I can't find any related information.  I was wondering if \"docker stack deploy\" api was the on roadmap.  "},{"labels":["documentation"],"text":"The [configuration file documentation](https://docs.docker.com/engine/reference/commandline/cli/#/configuration-files) states\r\n\r\n> The property psFormat specifies the default format for docker ps output. When the --format flag is not provided with the docker ps command, Docker’s client uses this property. If this property is not set, the client falls back to the default table format. For a list of supported formatting directives, see the [Formatting section in the docker ps documentation](https://docs.docker.com/engine/reference/commandline/ps/)\r\n\r\nThere's no such section in the docker ps documentation."},{"labels":["documentation"],"text":"A while ago, I started contributing to docker and was able to fix few doc and cli related issues.\r\nBut was unable to pick issues related to other areas like runtime, networking, etc. It is bit difficult to know how runc, containerd, etc are used by docker in its code.\r\n\r\nFor any beginner level contributor, it becomes difficult to understand the entire code flow or even a single docker component codebase.\r\nThere are documentation available for few of the tools but it don't mention anything about the tools used internally within docker.\r\nThere should be documentation explaining all tools and technologies that docker uses internally in the code like : `runc, libnetwork, containerd, docker-containerd-shim, ctr, cobra, rootfs, etc`\r\nShould also document : how docker creates namespaces, which all system calls do docker calls internally, how docker uses runc and so on.\r\nThere should be pointers to files and repository where the code resides for each of these tools like code for rootfs related stuff, image related stuff, etc.\r\nSuch documentation will really help beginner level contributor a lot."},{"labels":[null,"documentation",null],"text":"The docs at https://docs.docker.com/engine/reference/commandline/version/ say to get the template fields for `docker version` output, use `docker version --format '{{json .}}'` which gives me:\r\n\r\n```\r\n{\"Client\":{\"Version\":\"1.13.0\",\"ApiVersion\":\"1.25\",\"GitCommit\":\"49bf474\",\"GoVersion\":\"go1.7.3\",\"Os\":\"darwin\",\"Arch\":\"amd64\",\"BuildTime\":\"Wed Jan 18 16:20:26 2017\"},\"Server\":{\"Version\":\"1.13.0\",\"ApiVersion\":\"1.25\",\"MinAPIVersion\":\"1.12\",\"GitCommit\":\"49bf474\",\"GoVersion\":\"go1.7.3\",\"Os\":\"linux\",\"Arch\":\"amd64\",\"KernelVersion\":\"4.9.5-moby\",\"Experimental\":true,\"BuildTime\":\"Wed Jan 18 16:20:26 2017\"}}\r\n```\r\n\r\nSo I try\r\n```\r\ndocker version --format '{{.Server.ApiVersion}}'\r\n\r\ntemplate: :1:9: executing \"\" at <.Server.ApiVersion>: can't evaluate field ApiVersion in type *types.Version\r\n```\r\n\r\nEventually I guess and try\r\n```\r\ndocker version --format '{{.Server.APIVersion}}'\r\n1.25\r\n```\r\n\r\nSo the output on the JSON list has a different casing, making it hard to work out what the Go names are. I blame Go's weird JSON handling, but I wonder if it can be fixed? Or maybe the docs just could add a note?\r\n\r\nActually the JSON has the same name\r\n```\r\ndocker version --format '{{json .Server.ApiVersion}}'\r\n\r\ntemplate: :1:14: executing \"\" at <.Server.ApiVersion>: can't evaluate field ApiVersion in type *types.Version\r\ndocker version --format '{{json .Server.APIVersion}}'\r\n\"1.25\"\r\n```\r\n\r\n```\r\nClient:\r\n Version:      1.13.0\r\n API version:  1.25\r\n Go version:   go1.7.3\r\n Git commit:   49bf474\r\n Built:        Wed Jan 18 16:20:26 2017\r\n OS/Arch:      darwin/amd64\r\n\r\nServer:\r\n Version:      1.13.0\r\n API version:  1.25 (minimum version 1.12)\r\n Go version:   go1.7.3\r\n Git commit:   49bf474\r\n Built:        Wed Jan 18 16:20:26 2017\r\n OS/Arch:      linux/amd64\r\n Experimental: true\r\n```\r\n\r\ncc @thaJeztah "},{"labels":["documentation"],"text":"The page https://docs.docker.com/engine/admin/logging/log_tags/ provides link `logging context` to https://github.com/docker/docker/blob/master/daemon/logger/context.go that is not available any more."},{"labels":["documentation"],"text":"'docker/' is no longer automatically added as a prefix (after https://github.com/docker/docker/pull/22384), but https://docs.docker.com/engine/admin/logging/log_tags/ still prepends 'docker/'. That log-opt tag would no longer result in the example log line. It would be missing the 'docker/' prefix."},{"labels":["documentation"],"text":"Seems like the Dockerfile reference web-page does not exist anymore or if the url has been changed google does not find it for some reason.\r\n\r\nThe page is still on github https://github.com/docker/docker/blob/master/docs/reference/builder.md"},{"labels":["documentation",null,null],"text":"I am trying to understand the resource control related to the CPUs from Swarm Mode.\r\n\r\nFrom the docs I just see:\r\nhttps://docs.docker.com/engine/reference/commandline/service_create/\r\n--limit-cpu value                Limit CPUs (default 0.000)\r\n\r\nhttps://docs.docker.com/engine/reference/api/docker_remote_api_v1.24/#create-a-service\r\nNanoCPUs – CPU limit in units of 10-9 CPU shares.\r\n\r\nThe concept is completely different from the ones related to containers and I think there is a lack of documentation regarding the use of these parameters (limit-cpu and reserved-cpu)"},{"labels":["documentation",null],"text":"I'm trying to run the example in this documentation: https://godoc.org/github.com/docker/docker/client#hdr-Usage\r\n\r\n```go\r\npackage main\r\n\r\nimport (\r\n\t\"context\"\r\n\t\"fmt\"\r\n\r\n\t\"github.com/docker/docker/api/types\"\r\n\t\"github.com/docker/docker/client\"\r\n)\r\n\r\nfunc main() {\r\n\tcli, err := client.NewEnvClient()\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\r\n\tcontainers, err := cli.ContainerList(context.Background(), types.ContainerListOptions{})\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\r\n\tfor _, container := range containers {\r\n\t\tfmt.Printf(\"%s %s\\n\", container.ID[:10], container.Image)\r\n\t}\r\n}\r\n```\r\n\r\nBut for obvious reasons, when running the example against the latest release of Docker, 1.12.5, that doesn't work.\r\nThe error I get is: \r\n```\r\npanic: Error response from daemon: client is newer than server (client API version: 1.26, server API version: 1.24)\r\n```\r\nI understand that semantic versioning has no significance for this project, because the API breaks in point releases, but it would be cool if at least examples would work."},{"labels":["documentation",null],"text":"https://docs.docker.com/engine/reference/commandline/tag/\r\n\r\n````\r\nA tag name may contain lowercase and uppercase characters, digits, underscores, periods and dashes. A tag name may not start with a period or a dash and may contain a maximum of 128 characters.\r\n````\r\n\r\nWhat is a character? You mean ASCII Latin letters? The use of the word \"character\" is WRONG because a character refers to ANY code point! There is also more than one character referred to as dash and underscore in unicode. That needs to be specified properly too. I know you're probably referring to ASCII and not unicode, but you never actually write that."},{"labels":["documentation",null,null],"text":"**Description**\r\nI found that `docker service update` command document is not so detailed in https://github.com/docker/docker/blob/master/docs/reference/commandline/service_update.md\r\n\r\nI think there are lots of missing options in explanation, such as `--rollback`, and so on.\r\n\r\nIn addition, in the doc it says:\r\n```\r\nThe parameters are the same as [`docker service create`](service_create.md).\r\n``` \r\n\r\nI think that is not true.\r\n\r\nHere is the evidence:\r\n```\r\nroot@ubuntu:~# docker service create --help | grep \"\\-\\-\" | wc -l\r\n45\r\nroot@ubuntu:~# docker service update --help | grep \"\\-\\-\" | wc -l\r\n57\r\n```\r\n So, there is at least 12 parameters that are not the same.\r\n\r\nI think we need a detailed `docker service update` doc for the users. "},{"labels":["documentation",null,null,null],"text":"**Description**\r\n\r\nThere is very little information from API documentation that can explain how to use REST request to promote or demote swarm node from remote side. It seems I should post \"/nodes/id/update\" with parameters attached. However, some parameters like 'version' are vague. Can you provide an example to show promote/demote?\r\n\r\nSomething like:\r\n`curl --unix-socket /var/run/docker.sock -X POST -H 'Content-Type: application/json' -d '{\"version\": .., ..}' http:/nodes/id/update`\r\n\r\nThanks"},{"labels":["documentation",null],"text":"As far as I can tell all tutorials are for sandbox style swarm where multiple VMs run on a single physical host. I can't find a good resource that gives a simple tutorial on getting a swarm running across more than one physical machine. Maybe this would need to be done per OS, as my understanding is Windows and MacOS don't support this natively, but do when using docker-machine.\r\n\r\nIn an ideal tutorial, I think a user should be able to follow the commands on their OS, and get a swarm running across two physical hosts. \r\n\r\nFrom my Windows OS perspective, questions I'd like answered in such a tutorial (as these are areas where I'm stuck after looking at the current tutorials and also production swarm docs):\r\n* On Windows must I (or is it best practice to) use `docker-machine create --swarm etc`\r\n* What is the relationship between `docker-machine create --swarm etc`, `docker swarm etc`, `docker run swarm etc`. After trial and error I think I understand how the layers build upon each other, but an explicit description would be nice\r\n\r\nAs a final bit of context to this request, I'm trying to set up a two node swarm across two Windows hosts. I think I must use `docker-machine create --swarm etc` - and everything appears to work OK except the worker node is stuck in pending. I _think_ this is because TLS is enabled by default (and it can't be disabled, or disabling is too dangerous to provide any explanation of how to do it :P ) so that's my next thing to try... but it would be nice if there was a quick one pager that pointed out all the relevant steps."},{"labels":[null,"documentation"],"text":"The API documentation (and swagger.yaml) says `POST /images/create` can only return a 200 or a 500. Snippet from swagger.yaml:\r\n```yaml\r\n  /images/create:\r\n    post:\r\n      ...\r\n      responses:\r\n        200:\r\n          description: \"no error\"\r\n        500:\r\n          description: \"server error\"\r\n          schema:\r\n            $ref: \"#/definitions/ErrorResponse\"\r\n```\r\n\r\nHowever, it can also return a 404 if you try to pull an image and it isn't found in a registry. Here's an example:\r\n\r\n```\r\n$ curl -v --unix-socket /var/run/docker.sock -X POST 'http://localhost/images/create?fromImage=bogus'\r\n...\r\n< HTTP/1.1 404 Not Found\r\n< Api-Version: 1.25\r\n< Content-Length: 75\r\n< Content-Type: application/json\r\n< Date: Wed, 30 Nov 2016 16:54:26 GMT\r\n< Docker-Experimental: true\r\n< Server: Docker/1.13.0-rc2 (linux)\r\n<\r\n{\"message\":\"repository bogus not found: does not exist or no read access\"}\r\n...\r\n```\r\n\r\nThat 404 response should be documented."},{"labels":["documentation",null],"text":"Could we create a doc that has a table of plugins that are supported for 1.13?  Ideally in the future this should be in the hub / store but a doc to start would be great."},{"labels":["documentation",null,null],"text":"I noticed that when I created a new service using `docker swarm create`, the engine will try pulling the latest images even if the expected image is already contained in local `docker images`.\r\n\r\nSo my question is that once the service is running already with a certain scale number (such as scale=3), and then I push new latest image to registry, whether the engine automatically pull the latest image and restart the running services  serveral hours later?\r\n\r\nActually, I don't want it to automatically do updating when service is running."},{"labels":["documentation",null,null],"text":""},{"labels":[null,"documentation",null],"text":"Just adding this for discussion so that we can find how to resolve this; this occurred to me while reviewing https://github.com/docker/docker/pull/28734\r\n\r\nJekyll requires some non-standard markdown markup markers for certain parts of the documentation (`{% raw %}` / `{% end raw %}`). Before the switch to Jekyll, these markers were not needed, so it was possible to copy / re-use the same markdown for both the CLI reference, and the man-pages.\r\n\r\nIf we want to generate both the CLI docs and man-pages using the same source, we may have to make some changes so that the man-page generation understands those markers\r\n\r\n/cc @johndmulhausen @FrenchBen @dnephin @cpuguy83 "},{"labels":[null,"documentation",null,null],"text":"**Description**\r\n\r\nWhen pulling an image, over a slow connection, with two larger layers (>40M) followed by a small layer (<10M) it can fail due to i/o timout errors.\r\n\r\n**Steps to reproduce the issue:**\r\n1. Install docker on machine where connection can be throttled\r\n2. Throttle network to 2-3mbps\r\n3. `docker pull` image with a few larger layers\r\n\r\n**Describe the results you received:**\r\nDocker downloads three layers at a time. So initially the first three start to download. Then once one of them completes the fourth layer attempts to download, however all available bandwidth is being used by the two layers still downloading. When bandwidth is this low the request for the fourth layer fails. After a couple of retries the pull aborts with a `dial tcp ... i/o timeout` error, regardless of whether the other two layers are still successfully downloading.\r\n\r\n**Describe the results you expected:**\r\nIt would be nice to have a command line flag for `docker pull` along the lines of `--num-downloads=1` which downloads each layer one at a time. This way bandwidth would be available for each layer because the previous would've completed.\r\n\r\n**Output of `docker version`:**\r\n\r\n```\r\nClient:\r\n Version:      1.12.3\r\n API version:  1.24\r\n Go version:   go1.6.3\r\n Git commit:   6b644ec\r\n Built:\r\n OS/Arch:      linux/amd64\r\n\r\nServer:\r\n Version:      1.12.3\r\n API version:  1.24\r\n Go version:   go1.6.3\r\n Git commit:   6b644ec\r\n Built:\r\n OS/Arch:      linux/amd64\r\n```\r\n\r\n**Output of `docker info`:**\r\n\r\n```\r\nContainers: 3\r\n Running: 3\r\n Paused: 0\r\n Stopped: 0\r\nImages: 15\r\nServer Version: 1.12.3\r\nStorage Driver: devicemapper\r\n Pool Name: docker-253:1-33598067-pool\r\n Pool Blocksize: 65.54 kB\r\n Base Device Size: 10.74 GB\r\n Backing Filesystem: xfs\r\n Data file: /dev/loop0\r\n Metadata file: /dev/loop1\r\n Data Space Used: 465.2 MB\r\n Data Space Total: 107.4 GB\r\n Data Space Available: 27.72 GB\r\n Metadata Space Used: 1.294 MB\r\n Metadata Space Total: 2.147 GB\r\n Metadata Space Available: 2.146 GB\r\n Thin Pool Minimum Free Space: 10.74 GB\r\n Udev Sync Supported: true\r\n Deferred Removal Enabled: false\r\n Deferred Deletion Enabled: false\r\n Deferred Deleted Device Count: 0\r\n Data loop file: /var/lib/docker/devicemapper/devicemapper/data\r\n WARNING: Usage of loopback devices is strongly discouraged for production use. Use `--storage-opt dm.thinpooldev` to specify a custom block storage device.\r\n Metadata loop file: /var/lib/docker/devicemapper/devicemapper/metadata\r\n Library Version: 1.02.107-RHEL7 (2016-06-09)\r\nLogging Driver: json-file\r\nCgroup Driver: cgroupfs\r\nPlugins:\r\n Volume: local\r\n Network: host bridge null overlay\r\nSwarm: inactive\r\nRuntimes: runc\r\nDefault Runtime: runc\r\nSecurity Options: seccomp\r\nKernel Version: 3.10.0-327.36.3.el7.x86_64\r\nOperating System: CentOS Linux 7 (Core)\r\nOSType: linux\r\nArchitecture: x86_64\r\nCPUs: 1\r\nTotal Memory: 993.3 MiB\r\nName: localhost\r\nID: QKQN:YZZU:PCRX:WO66:FGG4:LUR4:PVR5:QBLM:NKE4:B52W:ZCAU:5TRQ\r\nDocker Root Dir: /var/lib/docker\r\nDebug Mode (client): false\r\nDebug Mode (server): false\r\nRegistry: https://index.docker.io/v1/\r\nWARNING: bridge-nf-call-iptables is disabled\r\nWARNING: bridge-nf-call-ip6tables is disabled\r\nInsecure Registries:\r\n 127.0.0.0/8\r\n```\r\n\r\n**Additional environment details (AWS, VirtualBox, physical, etc.):**\r\nVMware VM running Centos 7 on a home broadband connection\r\n"},{"labels":["documentation",null,null,null],"text":"**Description**\r\n\r\nDocker volume command documentation files do not fully describe expected behavior for contributors writing volume drivers. In particular, volume management in swarm mode can be troublesome for clustered storage systems when determining which node to create volumes and where to report volume list. This can lead to cartesian bugs when creating volumes (every node creates a volume based on the volume create request). Some plugin authors have been confused as to where to report a volume as available depending on how their storage system manages volumes.\r\n\r\n@anusha-ragunathan is aware of this and will be following up with more info.\r\n\r\nCC'ing @thaJeztah @stevvooe @vieux per Anusha's request."},{"labels":["documentation"],"text":"While it's clear how to use the `--tmpfs` flag on `docker run`, it isn't clear how to accomplish the same thing via the Remote API because the `HostConfig.Tmpfs` option is undocumented [here](https://docs.docker.com/engine/reference/api/docker_remote_api_v1.24/#/create-a-container).\r\n\r\nIt took a fair amount of trial-and-error to figure out that it's meant to look something like this:\r\n\r\n```js\r\n'HostConfig': {\r\n  // ...\r\n  'Tmpfs': {\r\n    '/tmp': 'rw,exec' // mount options (your choice)\r\n  }\r\n}\r\n```\r\n\r\nHopefully documenting this here, and eventually in the actual API docs, will save someone else from diving through [this](https://github.com/docker/docker/blob/master/api/types/container/host_config.go)."},{"labels":["documentation",null],"text":"https://github.com/docker/docker/pull/27998 seems to have been merged with without any documentation.\r\n\r\nThere should be.\r\n\r\nShort version how to use these features to get the ball rolling:\r\n\r\n1. Make a new `docker-compose.yml` or port an existing one, with `version: '3'` explicitly specified.  Seems the \"schema\" (layout of `services`, `networks`, etc. keys) did not change much in this new version but some parameters for services are unsupported.  I'm guessing `build:` is likely not supported as well?\r\n2. Run `docker deploy --compose-file docker-compose.yml stackname`.\r\n3. `docker stack` can be used to view the generated services for the \"stack\" defined by the Docker Compose file.  e.g., `docker stack ls` to view created stacks, `docker stack services stackname` to view the services associated with that stack, etc.\r\n\r\nFYI @londoncalling @johndmulhausen "},{"labels":[null,"documentation"],"text":"## Reasoning\r\n\r\nAs part of [my work to improve the API documentation](https://github.com/docker/docker.github.io/pull/210) I realised that \"Docker Remote API\" is a bit of a confusing name. The Docker Registry serves the [Docker Registry API](https://docs.docker.com/registry/spec/api/), Docker Cloud serves the [Docker Cloud API](https://docs.docker.com/registry/spec/api/), Docker Hub has (had?) the [Docker Hub API](https://docs.docker.com/v1.7/reference/api/docker-io_api/), Docker Trusted Registry has the [Docker Trusted Registry API](https://docs.docker.com/apidocs/overview/), but Engine is the odd one out.\r\n\r\nAs far as I can see, it's a historical artefact from when \"Docker\" was just the Engine. We've since added other APIs, and the original was never given a distinctive name.\r\n\r\nBesides consistency, here are some reasons for the change:\r\n\r\n1) \"Remote\" is redundant – all HTTP APIs are remote. \"Docker API\" would collide with other Docker APIs, hence \"Docker Engine API\".\r\n2) When you want to find the API for the Engine, it's not immediately clear that you should be looking for the \"Remote API\". (And vice versa, \"Remote API\" does not make it immediately obvious that it's the thing the Engine exposes.)\r\n3) The information architecture in the documentation is a bit weird, because \"Remote API\" doesn't comfortably sit under \"Engine\".\r\n\r\n## Implementation\r\n\r\nThe only place we reference it seems to be in the documentation and CLI docs, so looks like we can just do a big ol' search and replace.\r\n\r\nThe only breakage I can think of is if people search for \"Docker Remote API\" on Google and the documentation doesn't turn up. To counteract this, we can leave it as the \"Remote API\" in old versions of the API documentation, and add \"Remote API\" to the keywords of the latest API docs. Or, just a bit of copy like: \"In version X of Docker and below, the Engine API was called the Docker Remote API.\"\r\n\r\n/cc @dnephin @johndmulhausen @icecrime @shykes "},{"labels":["documentation",null,null,null],"text":"**Description**\r\n\r\nWhen I read documentation about live-restore option I supposed that it is supported by Docker for Windows. There is no one mention that it is not supported: https://docs.docker.com/engine/admin/live-restore/\r\n\r\nFurthermore, this documentation https://docs.docker.com/engine/reference/commandline/dockerd/ lists this option in \"Windows configuration file\" section. But I was not able to configure it in both ways (as an argument of dockerd and variable of daemon.json)\r\n\r\n**Steps to reproduce the issue:**\r\n1. When I try to run dockerd with --live-restore option I got a error\r\n```\r\nPS C:\\Users\\Administrator> dockerd --live-restore --register-service\r\nStatus: unknown flag: --live-restore\r\nSee 'dockerd --help'., Code: 125\r\n```\r\n2. When I added ``` \"live-restore\": true ``` to the daemon.json and started dockerd I got another error\r\n```\r\nPS C:\\Users\\Administrator> dockerd\r\nunable to configure the Docker daemon with file C:\\ProgramData\\docker\\config\\daemon.json: the following directives don't match any configuration option: live-restore\r\n```\r\n\r\n**Expected behaviour:**\r\nI expect that dockerd should run successfully with this option. Or at least have mention in the documentation that it is not supported\r\n\r\n**Output of `docker version`:**\r\n\r\n```\r\nClient:\r\n Version:      1.12.2-cs2-ws-beta\r\n API version:  1.25\r\n Go version:   go1.7.1\r\n Git commit:   050b611\r\n Built:        Tue Oct 11 02:35:40 2016\r\n OS/Arch:      windows/amd64\r\n\r\nServer:\r\n Version:      1.12.2-cs2-ws-beta\r\n API version:  1.25\r\n Go version:   go1.7.1\r\n Git commit:   050b611\r\n Built:        Tue Oct 11 02:35:40 2016\r\n OS/Arch:      windows/amd64\r\n```\r\n\r\n**Output of `docker info`:**\r\n\r\n```\r\nContainers: 1\r\n Running: 0\r\n Paused: 0\r\n Stopped: 1\r\nImages: 1\r\nServer Version: 1.12.2-cs2-ws-beta\r\nStorage Driver: windowsfilter\r\n Windows:\r\nLogging Driver: json-file\r\nPlugins:\r\n Volume: local\r\n Network: nat null overlay\r\nSwarm: inactive\r\nDefault Isolation: process\r\nKernel Version: 10.0 14393 (14393.321.amd64fre.rs1_release_inmarket.161004-2338)\r\nOperating System: Windows Server 2016 Datacenter\r\nOSType: windows\r\nArchitecture: x86_64\r\nCPUs: 2\r\nTotal Memory: 4 GiB\r\nName: EC2AMAZ-P7L1INT\r\nID: 6JSQ:WIFX:QJ25:TM5T:JBOG:CR7M:NSOW:X2AJ:QJXR:PRID:CLE2:6Q67\r\nDocker Root Dir: C:\\ProgramData\\docker\r\nDebug Mode (client): false\r\nDebug Mode (server): false\r\nRegistry: https://index.docker.io/v1/\r\nInsecure Registries:\r\n 127.0.0.0/8\r\nLive Restore Enabled: false\r\n```\r\n\r\n**Additional environment details (AWS, VirtualBox, physical, etc.):**\r\nIt is a EC2 instance which was launched from \"Windows Server 2016 with containers image\""},{"labels":["documentation",null],"text":"Currently our CI does not build the man pages, so we do not know if there are issues with PRs or problems with the build process.\r\n\r\nI tried to get this to work in #25884 and it mysteriously failed, it would never download the alpine packages from CI, and no one has an explanation (it is fine locally) so it needs looking at.\r\n\r\nOnce that is fixed I can reopen the PR to put them in the `tgz`.\r\n\r\ncc @dnephin \r\n"},{"labels":["documentation",null,null,null,null],"text":"[dns_docker_issue.zip](https://github.com/docker/docker/files/579919/dns_docker_issue.zip)\r\n\r\n**Description**\r\nAfter repeatedly hitting inconsistent behavior when starting up an application infrastructure with a number of swarm mode networks and services, I narrowed it down to a reproducible use-case.  It is still occasionally inconsistent, especially on AWS for docker beta (where I hit it initially), but I am able to reliably produce the issue on a local vbox docker-machine, which I detail below.\r\n\r\n**Steps to reproduce the issue:**\r\nAlso see the attached a script that I've used to run through the issue.\r\n\r\n1. Set-up a local docker-machine, into swarm mode.  I used ...\r\ndocker-machine create --driver virtualbox --virtualbox-memory 3072 --virtualbox-disk-size 20000 net-test-machine\r\ndocker swarm init --advertise-addr <machineip>\r\n\r\n2. Set up some swarm mode networks.  The order is important.  If the internal network is last, it works.\r\ndocker network create --driver overlay test_nw_1\r\ndocker network create --driver overlay --internal test_internal_nw\r\ndocker network create --driver overlay test_nw_2\r\n\r\n3. Run a service, on which you can check DNS\r\ndocker service create --name dns-test-service --restart-max-attempts=1 --replicas=1 --network test_nw_2 alpine nslookup www.google.com\r\n\r\n4. Check the results\r\ndocker service ps dns-test-service\r\n`ID                         NAME                    IMAGE   NODE              DESIRED STATE  CURRENT STATE          ERROR\r\n8kuzzunxubqdj4nzyn3v8kuc8  dns-test-service.1      alpine  net-test-machine  Shutdown       Failed 2 seconds ago   \"task: non-zero exit (1)\"\r\n7zihw5somacz9g945j8pac79h   \\_ dns-test-service.1  alpine  net-test-machine  Shutdown       Failed 12 seconds ago  \"task: non-zero exit (1)\"`\r\n\r\nThe above service was chosen as it was concise, but I could run the same test with an 'alpine sleep', exec in, and clearly see that Internet access was ok, but hosts would not resolve.\r\n\r\n\r\n**Describe the results you received:**\r\nWithin the container, the DNS doesn't work.  You can't ping www.google.com, but you can ping, for instance, 8.8.8.8\r\n\r\n**Describe the results you expected:**\r\nThe containers should have working DNS.\r\n\r\n**Additional information you deem important (e.g. issue happens only occasionally):**\r\nI've hit this on AWS for Docker Beta, and a local docker-machine VirtualBox environment.  In the case of Virtualbox, I experimented with altering the virtualbox to 1.12.1/.2 as well as 3, but the issue remained and I can reliably recreate this from scratch.\r\n\r\n\r\n**Output of `docker version`:**\r\n\r\n```\r\nClient:\r\n Version:      1.12.3\r\n API version:  1.24\r\n Go version:   go1.6.3\r\n Git commit:   6b644ec\r\n Built:        Wed Oct 26 21:44:32 2016\r\n OS/Arch:      linux/amd64\r\n\r\nServer:\r\n Version:      1.12.3\r\n API version:  1.24\r\n Go version:   go1.6.3\r\n Git commit:   6b644ec\r\n Built:        Wed Oct 26 23:26:11 2016\r\n OS/Arch:      linux/amd64\r\n```\r\n\r\n**Output of `docker info`:**\r\n\r\n```\r\nContainers: 53\r\n Running: 0\r\n Paused: 0\r\n Stopped: 53\r\nImages: 1\r\nServer Version: 1.12.3\r\nStorage Driver: aufs\r\n Root Dir: /mnt/sda1/var/lib/docker/aufs\r\n Backing Filesystem: extfs\r\n Dirs: 107\r\n Dirperm1 Supported: true\r\nLogging Driver: json-file\r\nCgroup Driver: cgroupfs\r\nPlugins:\r\n Volume: local\r\n Network: null overlay bridge host\r\nSwarm: active\r\n NodeID: caecow8uwead466cylqpa58m1\r\n Is Manager: true\r\n ClusterID: 2i7xeimsxlbbe3cndrwhzr5pv\r\n Managers: 1\r\n Nodes: 1\r\n Orchestration:\r\n  Task History Retention Limit: 5\r\n Raft:\r\n  Snapshot Interval: 10000\r\n  Heartbeat Tick: 1\r\n  Election Tick: 3\r\n Dispatcher:\r\n  Heartbeat Period: 5 seconds\r\n CA Configuration:\r\n  Expiry Duration: 3 months\r\n Node Address: 192.168.99.100\r\nRuntimes: runc\r\nDefault Runtime: runc\r\nSecurity Options: seccomp\r\nKernel Version: 4.4.27-boot2docker\r\nOperating System: Boot2Docker 1.12.3 (TCL 7.2); HEAD : 7fc7575 - Thu Oct 27 17:23:17 UTC 2016\r\nOSType: linux\r\nArchitecture: x86_64\r\nCPUs: 1\r\nTotal Memory: 2.937 GiB\r\nName: net-test-machine\r\nID: 2I6J:XEPY:H3MW:5EDI:ZODN:T4LD:MHY3:LCRW:A2WK:BXHN:P4JG:KIOJ\r\nDocker Root Dir: /mnt/sda1/var/lib/docker\r\nDebug Mode (client): false\r\nDebug Mode (server): true\r\n File Descriptors: 239\r\n Goroutines: 429\r\n System Time: 2016-11-09T03:02:31.153116336Z\r\n EventsListeners: 0\r\nUsername: codadoc\r\nRegistry: https://index.docker.io/v1/\r\nLabels:\r\n provider=virtualbox\r\nInsecure Registries:\r\n 127.0.0.0/8\r\n```\r\n\r\n**Additional environment details (AWS, VirtualBox, physical, etc.):**\r\n\r\nI have docker-machine version 0.8.2, build e18a919\r\n\r\nI hit the issue also in AWS for Docker Beta 1.12.3, where it was prevalent, but more inconsistent.\r\n\r\n\r\n"},{"labels":["documentation",null],"text":"<!--\r\nIf you are reporting a new issue, make sure that we do not have any duplicates\r\nalready open. You can ensure this by searching the issue list for this\r\nrepository. If there is a duplicate, please close your issue and add a comment\r\nto the existing issue instead.\r\n\r\nIf you suspect your issue is a bug, please edit your issue description to\r\ninclude the BUG REPORT INFORMATION shown below. If you fail to provide this\r\ninformation within 7 days, we cannot debug your issue and will close it. We\r\nwill, however, reopen it if you later provide the information.\r\n\r\nFor more information about reporting issues, see\r\nhttps://github.com/docker/docker/blob/master/CONTRIBUTING.md#reporting-other-issues\r\n\r\n---------------------------------------------------\r\nGENERAL SUPPORT INFORMATION\r\n---------------------------------------------------\r\n\r\nThe GitHub issue tracker is for bug reports and feature requests.\r\nGeneral support can be found at the following locations:\r\n\r\n- Docker Support Forums - https://forums.docker.com\r\n- IRC - irc.freenode.net #docker channel\r\n- Post a question on StackOverflow, using the Docker tag\r\n\r\n---------------------------------------------------\r\nBUG REPORT INFORMATION\r\n---------------------------------------------------\r\nUse the commands below to provide key information from your environment:\r\nYou do NOT have to include this information if this is a FEATURE REQUEST\r\n-->\r\n\r\n**Description**\r\n\r\n<!--\r\nBriefly describe the problem you are having in a few paragraphs.\r\n-->\r\n\r\n**Steps to reproduce the issue:**\r\n1. http://10.7.0.94:2375/services?filters={\"id\":[\"<node-id>\"]}\r\n2. http://10.7.0.94:2375/services?filters={\"id\":[\"<service-id>\"]}\r\n3.\r\n\r\n**Describe the results you received:**\r\n1. [ ]\r\n2. Service filtered by id.\r\n\r\n**Describe the results you expected:**\r\n1. Array of services filtered by node id.\r\n2. [ ]\r\n\r\n**Additional information you deem important (e.g. issue happens only occasionally):**\r\n\r\nAPI Docs state  <node id> as a filter parameter whereas service method filters by <service id> instead.\r\nHow can I get the list of services running on a particular node or with instances running on a specific node?\r\n\r\n**Output of `docker version`:**\r\n\r\n\r\n```\r\nDocker v 1.12.3\r\n```\r\n\r\n**Output of `docker info`:**\r\n\r\n```\r\n{\r\n  \"ID\": \"TZFE:3XXK:PYKN:NIYU:BEQF:YNPU:4LKC:WFFG:LJ52:4UGQ:WJXH:SWDS\",\r\n  \"Containers\": 4,\r\n  \"ContainersRunning\": 4,\r\n  \"ContainersPaused\": 0,\r\n  \"ContainersStopped\": 0,\r\n  \"Images\": 23,\r\n  \"Driver\": \"devicemapper\",\r\n  \"DriverStatus\": [\r\n    [\r\n      \"Pool Name\",\r\n      \"docker-253:0-752710-pool\"\r\n    ],\r\n    [\r\n      \"Pool Blocksize\",\r\n      \"65.54 kB\"\r\n    ],\r\n    [\r\n      \"Base Device Size\",\r\n      \"10.74 GB\"\r\n    ],\r\n    [\r\n      \"Backing Filesystem\",\r\n      \"xfs\"\r\n    ],\r\n    [\r\n      \"Data file\",\r\n      \"/dev/loop0\"\r\n    ],\r\n    [\r\n      \"Metadata file\",\r\n      \"/dev/loop1\"\r\n    ],\r\n    [\r\n      \"Data Space Used\",\r\n      \"7.089 GB\"\r\n    ],\r\n    [\r\n      \"Data Space Total\",\r\n      \"107.4 GB\"\r\n    ],\r\n    [\r\n      \"Data Space Available\",\r\n      \"100.3 GB\"\r\n    ],\r\n    [\r\n      \"Metadata Space Used\",\r\n      \"9.732 MB\"\r\n    ],\r\n    [\r\n      \"Metadata Space Total\",\r\n      \"2.147 GB\"\r\n    ],\r\n    [\r\n      \"Metadata Space Available\",\r\n      \"2.138 GB\"\r\n    ],\r\n    [\r\n      \"Thin Pool Minimum Free Space\",\r\n      \"10.74 GB\"\r\n    ],\r\n    [\r\n      \"Udev Sync Supported\",\r\n      \"true\"\r\n    ],\r\n    [\r\n      \"Deferred Removal Enabled\",\r\n      \"false\"\r\n    ],\r\n    [\r\n      \"Deferred Deletion Enabled\",\r\n      \"false\"\r\n    ],\r\n    [\r\n      \"Deferred Deleted Device Count\",\r\n      \"0\"\r\n    ],\r\n    [\r\n      \"Data loop file\",\r\n      \"/var/lib/docker/devicemapper/devicemapper/data\"\r\n    ],\r\n    [\r\n      \"Metadata loop file\",\r\n      \"/var/lib/docker/devicemapper/devicemapper/metadata\"\r\n    ],\r\n    [\r\n      \"Library Version\",\r\n      \"1.02.107-RHEL7 (2016-06-09)\"\r\n    ]\r\n  ],\r\n  \"SystemStatus\": null,\r\n  \"Plugins\": {\r\n    \"Volume\": [\r\n      \"local\"\r\n    ],\r\n    \"Network\": [\r\n      \"overlay\",\r\n      \"bridge\",\r\n      \"null\",\r\n      \"host\"\r\n    ],\r\n    \"Authorization\": null\r\n  },\r\n  \"MemoryLimit\": true,\r\n  \"SwapLimit\": true,\r\n  \"KernelMemory\": true,\r\n  \"CpuCfsPeriod\": true,\r\n  \"CpuCfsQuota\": true,\r\n  \"CPUShares\": true,\r\n  \"CPUSet\": true,\r\n  \"IPv4Forwarding\": true,\r\n  \"BridgeNfIptables\": true,\r\n  \"BridgeNfIp6tables\": false,\r\n  \"Debug\": false,\r\n  \"NFd\": 55,\r\n  \"OomKillDisable\": true,\r\n  \"NGoroutines\": 194,\r\n  \"SystemTime\": \"2016-11-08T16:46:49.153754781+01:00\",\r\n  \"ExecutionDriver\": \"\",\r\n  \"LoggingDriver\": \"json-file\",\r\n  \"CgroupDriver\": \"cgroupfs\",\r\n  \"NEventsListener\": 3,\r\n  \"KernelVersion\": \"3.10.0-327.36.3.el7.x86_64\",\r\n  \"OperatingSystem\": \"CentOS Linux 7 (Core)\",\r\n  \"OSType\": \"linux\",\r\n  \"Architecture\": \"x86_64\",\r\n  \"IndexServerAddress\": \"https://index.docker.io/v1/\",\r\n  \"RegistryConfig\": {\r\n    \"InsecureRegistryCIDRs\": [\r\n      \"127.0.0.0/8\"\r\n    ],\r\n    \"IndexConfigs\": {\r\n      \"docker.io\": {\r\n        \"Name\": \"docker.io\",\r\n        \"Mirrors\": null,\r\n        \"Secure\": true,\r\n        \"Official\": true\r\n      }\r\n    },\r\n    \"Mirrors\": null\r\n  },\r\n  \"NCPU\": 4,\r\n  \"MemTotal\": 8118247424,\r\n  \"DockerRootDir\": \"/var/lib/docker\",\r\n  \"HttpProxy\": \"\",\r\n  \"HttpsProxy\": \"\",\r\n  \"NoProxy\": \"\",\r\n  \"Name\": \"master\",\r\n  \"Labels\": null,\r\n  \"ExperimentalBuild\": false,\r\n  \"ServerVersion\": \"1.12.3\",\r\n  \"ClusterStore\": \"\",\r\n  \"ClusterAdvertise\": \"\",\r\n  \"SecurityOptions\": [\r\n    \"seccomp\"\r\n  ],\r\n  \"Runtimes\": {\r\n    \"runc\": {\r\n      \"path\": \"docker-runc\"\r\n    }\r\n  },\r\n  \"DefaultRuntime\": \"runc\",\r\n  \"Swarm\": {\r\n    \"NodeID\": \"6hftixtprlhop5addjmo7qnxe\",\r\n    \"NodeAddr\": \"10.7.0.94\",\r\n    \"LocalNodeState\": \"active\",\r\n    \"ControlAvailable\": true,\r\n    \"Error\": \"\",\r\n    \"RemoteManagers\": [\r\n      {\r\n        \"NodeID\": \"6hftixtprlhop5addjmo7qnxe\",\r\n        \"Addr\": \"10.7.0.94:2377\"\r\n      }\r\n    ],\r\n    \"Nodes\": 2,\r\n    \"Managers\": 1,\r\n    \"Cluster\": {\r\n      \"ID\": \"5lp9rqb6l7my0ek9jg21cwkf9\",\r\n      \"Version\": {\r\n        \"Index\": 819\r\n      },\r\n      \"CreatedAt\": \"2016-11-03T12:50:34.101987364Z\",\r\n      \"UpdatedAt\": \"2016-11-08T12:50:34.44261306Z\",\r\n      \"Spec\": {\r\n        \"Name\": \"default\",\r\n        \"Orchestration\": {\r\n          \"TaskHistoryRetentionLimit\": 5\r\n        },\r\n        \"Raft\": {\r\n          \"SnapshotInterval\": 10000,\r\n          \"LogEntriesForSlowFollowers\": 500,\r\n          \"HeartbeatTick\": 1,\r\n          \"ElectionTick\": 3\r\n        },\r\n        \"Dispatcher\": {\r\n          \"HeartbeatPeriod\": 5000000000\r\n        },\r\n        \"CAConfig\": {\r\n          \"NodeCertExpiry\": 7776000000000000\r\n        },\r\n        \"TaskDefaults\": {}\r\n      }\r\n    }\r\n  },\r\n  \"LiveRestoreEnabled\": false\r\n}\r\n```\r\n\r\n**Additional environment details (AWS, VirtualBox, physical, etc.):**\r\nPhysical"},{"labels":["documentation",null,null,null],"text":"---------------------------------------------------\r\nBUG REPORT INFORMATION\r\n---------------------------------------------------\r\n**Description**\r\nWhen a new user defined docker bridge network is created and the docker daemon has `iptables=false` and `ip-masq=true` the nat masquerade rules are not created for the user defined bridge network. This causes machines attached to this network to have no external access outside of the docker host.\r\n\r\n***Use-Case**\r\nWe are running several containers on a single docker host and don't want Docker to automatically create iptables allow rules for all of the exposed ports for security reasons. We then manage our own iptables rules via Puppet.  Not sure if this is a bug but at the very least the documentation [https://docs.docker.com/engine/reference/commandline/dockerd/#/miscellaneous-options](url) is lacking any details when setting the `iptables` and `ip-masq` settings other then there explicit purpose. When setting `iptables` to false and `ip-masq` to true should Docker still create the masquerade rules related to the containers? I even went ahead and set `com.docker.network.bridge.enable_ip_masquerade=true` and the rules are not created. \r\n\r\n**Steps to reproduce the issue:**\r\n1. Setup a Ubuntu 16.04 Server 64 bit with docker 1.12.3. For this example this server has an IP address on eth0 of 192.168.100.40 and the default gateway is 192.168.100.1. The default gateway accepts pings.\r\n2. Set your Docker daemon with the following flags: `--ip-forward=true --iptables=false --ip-masq=true`\r\n3. Create a new Docker bridge network: `docker network create --driver bridge --gateway=192.168.10.1 --subnet=192.168.10.0/24 --opt \"com.docker.network.bridge.name\"=\"example\" example `\r\n4. Attach and run any container image so you can issue ping commands to the network created above: `docker run -itd --network=example busybox`\r\n5. Exec into the container and attempt to ping 192.168.100.1. \r\n\r\n**Describe the results you received:**\r\nA tcpdump on the server shows packets leaving the host to the correct destination and source but the masquerade iptables nat rules are never created for the new bridge network thus ipables doesnt know were to send the original packets. When I delete the network, turn on `iptables=true`, and recreate the network the correct masquerade rules are created along with all of the rules for the exposed ports which we dont want. \r\n\r\n**Describe the results you expected:**\r\nSince `ip-masq=true` I was expecting the nat masquerading rules to still be created and the exposed ports to not be created in the DOCKER chain. I didnt see anything in the documentation that mentioned the nat rules not being created with the `--iptables=false --ip-masq=true` settings in place. It would be good if the official documentation had more details in how docker is interacting with iptables on the host. At the very least if you disable iptables nat masquerade rules will not be created event though the settings are in place at the daemon and network level.\r\n\r\nI have a workaround of adding the nat masquerade rules via puppet but is this the expected behavior? \r\n\r\n\r\n**Output of `docker version`:**\r\n\r\n```\r\nClient:\r\n Version:      1.12.3\r\n API version:  1.24\r\n Go version:   go1.6.3\r\n Git commit:   6b644ec\r\n Built:        Wed Oct 26 22:01:48 2016\r\n OS/Arch:      linux/amd64\r\n\r\nServer:\r\n Version:      1.12.3\r\n API version:  1.24\r\n Go version:   go1.6.3\r\n Git commit:   6b644ec\r\n Built:        Wed Oct 26 22:01:48 2016\r\n OS/Arch:      linux/amd64\r\n```\r\n\r\n**Output of `docker info`:**\r\n\r\n```\r\nContainers: 15\r\n Running: 15\r\n Paused: 0\r\n Stopped: 0\r\nImages: 41\r\nServer Version: 1.12.3\r\nStorage Driver: aufs\r\n Root Dir: /opt/data/aufs\r\n Backing Filesystem: extfs\r\n Dirs: 189\r\n Dirperm1 Supported: true\r\nLogging Driver: json-file\r\nCgroup Driver: cgroupfs\r\nPlugins:\r\n Volume: local\r\n Network: host null bridge overlay\r\nSwarm: inactive\r\nRuntimes: runc\r\nDefault Runtime: runc\r\nSecurity Options: apparmor seccomp\r\nKernel Version: 4.4.0-45-generic\r\nOperating System: Ubuntu 16.04.1 LTS\r\nOSType: linux\r\nArchitecture: x86_64\r\nCPUs: 8\r\nTotal Memory: 7.796 GiB\r\nName: server..com\r\nID: XURH:HQYH:VWQ6:25GJ:DB2C:4RVF:B2KL:LJI3:GJ2W:ZYV7:C4T6:Z5LY\r\nDocker Root Dir: /opt/data\r\nDebug Mode (client): false\r\nDebug Mode (server): false\r\nRegistry: https://index.docker.io/v1/\r\nWARNING: bridge-nf-call-iptables is disabled\r\nWARNING: bridge-nf-call-ip6tables is disabled\r\nInsecure Registries:\r\n 127.0.0.0/8\r\n\r\n```\r\n\r\n**Additional environment details (AWS, VirtualBox, physical, etc.):**\r\n"},{"labels":["documentation",null],"text":"https://github.com/docker/docker/pull/27995 added templating features for swarm mode, but they were not documented yet.\r\n\r\nThe docs should be updated to document the templating, and include examples on how / when to use them"},{"labels":["documentation",null,null,null],"text":"---------------------------------------------------\r\nBUG REPORT INFORMATION\r\n---------------------------------------------------\r\n**Description**\r\nI followed Docker Seccomp usage guide [here](https://docs.docker.com/engine/security/seccomp/) and used [default profile](https://raw.githubusercontent.com/docker/docker/master/profiles/seccomp/default.json), and got error:\r\n`docker: Error response from daemon: invalid header field value \"oci runtime error: container_linux.go:247: starting container process caused \\\"empty string is not a valid syscall\\\"\\n\".\r\n`\r\n\r\n**Steps to reproduce the issue:**\r\n(Essentially just follow the guide in above link)\r\n1. Download default seccomp profile json from [here](https://raw.githubusercontent.com/docker/docker/master/profiles/seccomp/default.json)\r\n2. docker run --rm -it --security-opt seccomp=/path/to/seccomp/profile.json hello-world\r\n\r\n**Output of `docker version`:**\r\n\r\n```\r\nClient:\r\n Version:      1.12.3\r\n API version:  1.24\r\n Go version:   go1.6.3\r\n Git commit:   6b644ec\r\n Built:        Wed Oct 26 22:01:48 2016\r\n OS/Arch:      linux/amd64\r\n\r\nServer:\r\n Version:      1.12.3\r\n API version:  1.24\r\n Go version:   go1.6.3\r\n Git commit:   6b644ec\r\n Built:        Wed Oct 26 22:01:48 2016\r\n OS/Arch:      linux/amd64\r\n```\r\n\r\n**Output of `docker info`:**\r\n```\r\nContainers: 0\r\n Running: 0\r\n Paused: 0\r\n Stopped: 0\r\nImages: 2\r\nServer Version: 1.12.3\r\nStorage Driver: aufs\r\n Root Dir: /var/lib/docker/aufs\r\n Backing Filesystem: extfs\r\n Dirs: 2\r\n Dirperm1 Supported: true\r\nLogging Driver: json-file\r\nCgroup Driver: cgroupfs\r\nPlugins:\r\n Volume: local\r\n Network: null host bridge overlay\r\nSwarm: inactive\r\nRuntimes: runc\r\nDefault Runtime: runc\r\nSecurity Options: apparmor seccomp\r\nKernel Version: 4.4.0-31-generic\r\nOperating System: Ubuntu 16.04.1 LTS\r\nOSType: linux\r\nArchitecture: x86_64\r\nCPUs: 1\r\nTotal Memory: 7.797 GiB\r\nName: myserver\r\nID: RZN7:A4OM:DVGC:3OUT:GEBY:ANAX:3DGF:BE7G:FZ4L:H6O2:4XG7:DGDF\r\nDocker Root Dir: /var/lib/docker\r\nDebug Mode (client): false\r\nDebug Mode (server): false\r\nRegistry: https://index.docker.io/v1/\r\nWARNING: No swap limit support\r\nInsecure Registries:\r\n 127.0.0.0/8\r\n```\r\n\r\nIs this json format outdated? Where can I find a proper guide to write correct one? Thanks in advance!"},{"labels":["documentation"],"text":"per https://github.com/docker/docker/pull/25820#issuecomment-256800737, we need to add documentation for the new metrics API, and probably some examples in other parts of the documentation to show how it's used.\n\nopening this issue for tracking, so that we unblock the PR that implements the feature\n\n/cc @mstanleyjones @crosbymichael  - assigning you both so that we don't forget :smile:\n"},{"labels":["documentation",null,null,null],"text":"---\n## BUG REPORT INFORMATION\n\nServices on overlay network can not communicate with services on other nodes in the same overlay network unless \"All traffic\" is open in an AWS security group. Opening only the documented required ports; `2377`, `4789`, and `7946` on UDP and TCP are insufficient. Even opening all TCP and UDP ports does not work, only selecting \"All traffic\" does.\n\n**Steps to reproduce the issue:**\nOn AWS, inside a VPC:\n1. Create a swarm with `swarm init`, and add other nodes via the supplied `join` command\n2. Create an overlay network, e.g. `docker network create --driver overlay --subnet 10.0.9.0/24 --opt encrypted newnet`\n3. Add a service (service1) to to one node (node1) in the cluster, then add another service (service2) to a different node (node2) in the cluster\n4. Open ports `2377`, `4789`, and `7946` on UDP and TCP in the relevant AWS security group\n4. From inside the service2 container, try to access a port in service1 from service2. For example, if service1 is MySQL, try `telnet service1 3306` from service2\n\n**Describe the results you received:**\nNo access to service1 ports from service2. Only selecting to open \"All traffic\" in the security group works (not even \"All TCP\" and \"All UDP\").\n\n**Describe the results you expected:**\nBe able to reach service1 by only opening the ports required by Docker Swarm (above).\n\n**Additional information you deem important (e.g. issue happens only occasionally):**\nThe strange part is that even selecting \"All TCP\" and \"All UDP\" does not work, only \"All traffic\". So what needs to be open that's not TCP or UDP?\n\n**Output of `docker version`:**\n\n```\nClient:\n Version:      1.12.2\n API version:  1.24\n Go version:   go1.6.3\n Git commit:   bb80604\n Built:        Tue Oct 11 18:29:41 2016\n OS/Arch:      linux/amd64\n\nServer:\n Version:      1.12.2\n API version:  1.24\n Go version:   go1.6.3\n Git commit:   bb80604\n Built:        Tue Oct 11 18:29:41 2016\n OS/Arch:      linux/amd64\n```\n\n**Output of `docker info`:**\n\n```\nContainers: 0\n Running: 0\n Paused: 0\n Stopped: 0\nImages: 0\nServer Version: 1.12.2\nStorage Driver: aufs\n Root Dir: /var/lib/docker/aufs\n Backing Filesystem: extfs\n Dirs: 0\n Dirperm1 Supported: true\nLogging Driver: json-file\nCgroup Driver: cgroupfs\nPlugins:\n Volume: local\n Network: host null bridge overlay\nSwarm: active\n NodeID: f43qckhb6hifw95hki6ihzbdt\n Is Manager: true\n ClusterID: 3ae1kkzosksoqvqgz6kclguhm\n Managers: 1\n Nodes: 3\n Orchestration:\n  Task History Retention Limit: 5\n Raft:\n  Snapshot Interval: 10000\n  Heartbeat Tick: 1\n  Election Tick: 3\n Dispatcher:\n  Heartbeat Period: 5 seconds\n CA Configuration:\n  Expiry Duration: 3 months\n Node Address: 10.0.11.215\nRuntimes: runc\nDefault Runtime: runc\nSecurity Options: apparmor seccomp\nKernel Version: 4.4.0-43-generic\nOperating System: Ubuntu 16.04.1 LTS\nOSType: linux\nArchitecture: x86_64\nCPUs: 1\nTotal Memory: 1.952 GiB\nName: ip-10-0-11-215\nID: 6LVV:2FUY:E2TD:DKIR:LFAX:3HF6:6ZZI:65CM:F7YY:CQ2X:IVJO:F23E\nDocker Root Dir: /var/lib/docker\nDebug Mode (client): false\nDebug Mode (server): false\nRegistry: https://index.docker.io/v1/\nWARNING: No swap limit support\nLabels:\n type=master\nInsecure Registries:\n 127.0.0.0/8\n```\n\n**Additional environment details (AWS, VirtualBox, physical, etc.):**\nRunning in AWS inside a VPC on in it's private subnet.\n"},{"labels":["documentation",null,null,null],"text":"<!--\nIf you are reporting a new issue, make sure that we do not have any duplicates\nalready open. You can ensure this by searching the issue list for this\nrepository. If there is a duplicate, please close your issue and add a comment\nto the existing issue instead.\n\nIf you suspect your issue is a bug, please edit your issue description to\ninclude the BUG REPORT INFORMATION shown below. If you fail to provide this\ninformation within 7 days, we cannot debug your issue and will close it. We\nwill, however, reopen it if you later provide the information.\n\nFor more information about reporting issues, see\nhttps://github.com/docker/docker/blob/master/CONTRIBUTING.md#reporting-other-issues\n\n---------------------------------------------------\nBUG REPORT INFORMATION\n---------------------------------------------------\nUse the commands below to provide key information from your environment:\nYou do NOT have to include this information if this is a FEATURE REQUEST\n-->\n\n**Description**\n\nI have docker engine running in swarm mode with 4 nodes in the swarm cluster\n\n**Steps to reproduce the issue:**\n1. I run the command to start a docker service using an image stored in the dockerhub private repo.\nsudo docker service create --name serviceName  --network myNetwork --publish 8761:8761 orgName/imageName:version\n\n**Describe the results you received:**\n1. It seems that if the image does not exist in the local node where the service is scheduled to run, docker does not automatically pull the image from the private repo and the service fails to start\n2. However if I manually pull the image in all of the nodes in the cluster and then start the service, it seems to work. \n\n**Describe the results you expected:**\n1. I expected docker to automatically pull the image from the private repo hosted in the hub. To make sure that there are no connectivity issues I logged into the private repo using docker login in each of the 4 nodes in the cluster to make sure that the credentials to be used to connect to the repo are stored locally in the json file. Is this how its supposed to work? Should it not automatically pull from hub if the image is not available locally? Im I missing something?\n\nAdditional information you deem important (e.g. issue happens only occasionally):**\n\n**Output of `docker version`:**\n\n```\nClient:\n Version:      1.12.1\n API version:  1.24\n Go version:   go1.6.3\n Git commit:   23cf638\n Built:\n OS/Arch:      linux/amd64\n\nServer:\n Version:      1.12.1\n API version:  1.24\n Go version:   go1.6.3\n Git commit:   23cf638\n Built:\n OS/Arch:      linux/amd64\n\n\n```\n\n**Output of `docker info`:**\n\n```\nContainers: 1\n Running: 0\n Paused: 0\n Stopped: 1\nImages: 201\nServer Version: 1.12.1\nStorage Driver: devicemapper\n Pool Name: docker-253:0-204218855-pool\n Pool Blocksize: 65.54 kB\n Base Device Size: 10.74 GB\n Backing Filesystem: xfs\n Data file: /dev/loop0\n Metadata file: /dev/loop1\n Data Space Used: 4.401 GB\n Data Space Total: 107.4 GB\n Data Space Available: 30.95 GB\n Metadata Space Used: 7.598 MB\n Metadata Space Total: 2.147 GB\n Metadata Space Available: 2.14 GB\n Thin Pool Minimum Free Space: 10.74 GB\n Udev Sync Supported: true\n Deferred Removal Enabled: false\n Deferred Deletion Enabled: false\n Deferred Deleted Device Count: 0\n Data loop file: /var/lib/docker/devicemapper/devicemapper/data\n WARNING: Usage of loopback devices is strongly discouraged for production use. Use `--storage-opt dm.thinpooldev` to specify a custom block storage device.\n Metadata loop file: /var/lib/docker/devicemapper/devicemapper/metadata\n Library Version: 1.02.107-RHEL7 (2016-06-09)\nLogging Driver: json-file\nCgroup Driver: cgroupfs\nPlugins:\n Volume: local\n Network: bridge host null overlay\nSwarm: active\n NodeID: b11gagg35v2tojxnqemze6ey6\n Is Manager: true\n ClusterID: 7f9kda0i54yj0jl8js0vt84u5\n Managers: 3\n Nodes: 4\n Orchestration:\n  Task History Retention Limit: 5\n Raft:\n  Snapshot Interval: 10000\n  Heartbeat Tick: 1\n  Election Tick: 3\n Dispatcher:\n  Heartbeat Period: 5 seconds\n CA Configuration:\n  Expiry Duration: 3 months\n Node Address: 10.1.2.56\nRuntimes: runc\nDefault Runtime: runc\nSecurity Options: seccomp\nKernel Version: 3.10.0-327.28.2.el7.x86_64\nOperating System: Red Hat Enterprise Linux Server 7.2 (Maipo)\nOSType: linux\nArchitecture: x86_64\nCPUs: 4\nTotal Memory: 47.01 GiB\nName: cmcmdmz101\nID: N6XG:EQOG:FPUM:GYCY:HXHQ:DOVU:AHFM:TFBB:4GM6:WKC3:QCN2:6RLP\nDocker Root Dir: /var/lib/docker\nDebug Mode (client): false\nDebug Mode (server): false\nUsername: cmcdocker\nRegistry: https://index.docker.io/v1/\nWARNING: bridge-nf-call-ip6tables is disabled\nInsecure Registries:\n 127.0.0.0/8\n\n```\n\n**Additional environment details (AWS, VirtualBox, physical, etc.):**\n"},{"labels":["documentation",null],"text":"Docker daemon can be started with MountFlags set to private, slave or shared. systemd makes shared as the default. Although this works for most users, there are some users that run into issues with mounts depending on their use case and MountFlags setting.\n\nCreate a document explaining the side effects of daemon MountFlags especially on: \n1. volumes exposed by plugins\n2. volumes exposed by local drivers and mounting a host directory. \n\ncc @cpuguy83 \n"},{"labels":[null,"documentation",null,null,null],"text":"<!--\nIf you are reporting a new issue, make sure that we do not have any duplicates\nalready open. You can ensure this by searching the issue list for this\nrepository. If there is a duplicate, please close your issue and add a comment\nto the existing issue instead.\n\nIf you suspect your issue is a bug, please edit your issue description to\ninclude the BUG REPORT INFORMATION shown below. If you fail to provide this\ninformation within 7 days, we cannot debug your issue and will close it. We\nwill, however, reopen it if you later provide the information.\n\nFor more information about reporting issues, see\nhttps://github.com/docker/docker/blob/master/CONTRIBUTING.md#reporting-other-issues\n\n---------------------------------------------------\nBUG REPORT INFORMATION\n---------------------------------------------------\nUse the commands below to provide key information from your environment:\nYou do NOT have to include this information if this is a FEATURE REQUEST\n-->\n\n**Description**\nWhen I ran the \"info\" path in the Remote API v1.24 I got a lot more fields then the documentation said, these are:\n\nPlugins > Authorization\nCPUShares\nCPUSet\nBridgeNfIptables\nBridgeNfIp6tables\nExecutionDriver\nLoggingDriver\nRegistryConfig > Mirrors??? (the IndexConfigs have array of Mirrors but the RegistryConfig itself has also Mirrors, maybe a bug?)\nClusterAdvertise\nRuntimes\nDefaultRuntime\nSwarm (has lots of things in it)\nLiveRestoreEnabled\n\nI attach the raw response json I got:\n[info.txt](https://github.com/docker/docker/files/512218/info.txt)\n\n**Steps to reproduce the issue:**\n1. run \"/info\" on the remote api v1.24\n2. check the response JSON and compare to docs\n3.\n\n**Describe the results you received:**\nLots of more fields then documentation has\n\n**Describe the results you expected:**\nDocumentation of all fields\n\n**Additional information you deem important (e.g. issue happens only occasionally):**\n\n**Output of `docker version`:**\n\n```\nClient:\n Version:      1.12.1\n API version:  1.24\n Go version:   go1.7\n Git commit:   23cf638\n Built:        Fri Aug 19 02:03:02 2016\n OS/Arch:      linux/amd64\n\nServer:\n Version:      1.12.1\n API version:  1.24\n Go version:   go1.7\n Git commit:   23cf638\n Built:        Fri Aug 19 02:03:02 2016\n OS/Arch:      linux/amd64\n\n```\n\n**Output of `docker info`:**\n\n```\nContainers: 1\n Running: 0\n Paused: 0\n Stopped: 1\nImages: 6\nServer Version: 1.12.1\nStorage Driver: devicemapper\n Pool Name: docker-253:1-10223820-pool\n Pool Blocksize: 65.54 kB\n Base Device Size: 10.74 GB\n Backing Filesystem: xfs\n Data file: /dev/loop0\n Metadata file: /dev/loop1\n Data Space Used: 664.9 MB\n Data Space Total: 107.4 GB\n Data Space Available: 106.7 GB\n Metadata Space Used: 1.389 MB\n Metadata Space Total: 2.147 GB\n Metadata Space Available: 2.146 GB\n Thin Pool Minimum Free Space: 10.74 GB\n Udev Sync Supported: true\n Deferred Removal Enabled: false\n Deferred Deletion Enabled: false\n Deferred Deleted Device Count: 0\n Data loop file: /var/lib/docker/devicemapper/devicemapper/data\n WARNING: Usage of loopback devices is strongly discouraged for production use. Use `--storage-opt dm.thinpooldev` to specify a custom block storage device.\n Metadata loop file: /var/lib/docker/devicemapper/devicemapper/metadata\n Library Version: 1.02.135 (2016-09-26)\nLogging Driver: json-file\nCgroup Driver: cgroupfs\nPlugins:\n Volume: local\n Network: overlay null host bridge\nSwarm: inactive\nRuntimes: runc\nDefault Runtime: runc\nSecurity Options: seccomp\nKernel Version: 4.7.5-1-ARCH\nOperating System: Arch Linux\nOSType: linux\nArchitecture: x86_64\nCPUs: 8\nTotal Memory: 23.49 GiB\nName: karl_rog\nID: IOCD:Y7FK:RDB6:43I7:QLCF:OBP5:LKJR:QLYD:NC6U:V7GA:ROQA:TCVE\nDocker Root Dir: /var/lib/docker\nDebug Mode (client): false\nDebug Mode (server): false\nRegistry: https://index.docker.io/v1/\nInsecure Registries:\n codeslasher.se:5000\n 127.0.0.0/8\n```\n\n**Additional environment details (AWS, VirtualBox, physical, etc.):**\n"},{"labels":["documentation",null,null,null],"text":"Although docker-run(1) (1.12.1) states that :\n\n`To disable automatic copying of data from the container path to the volume, use the nocopy flag. The nocopy flag can be set on bind mounts and named volumes.`\n\nwhen I do :\n\n`docker run -v /home/mandas/foo:/tmp:nocopy busybox`\n\nI get :\n\n`docker: Error response from daemon: Invalid bind mount spec \"/home/mandas/foo:/tmp:nocopy\": invalid mode: nocopy.`\n\nIs the man page wrong or is it an issue?\n"},{"labels":["documentation",null],"text":"nocopy volume bind option is not mentioned in the respective 1.23 remote API page, although it is implemented and mentioned in changelog as well.\n\nhttps://docs.docker.com/engine/reference/api/docker_remote_api/#v1-23-api-changes\nhttps://docs.docker.com/engine/reference/api/docker_remote_api_v1.23\n"},{"labels":["documentation",null,null],"text":"https://docs.docker.com/engine/userguide/storagedriver/device-mapper-driver/#/for-a-direct-lvm-mode-configuration\n\nThis doc informs users to push all images to a remote registry and then informs to rm -f /var/lib/docker, thus removing everything including certs that may be stored under this directory tree.  For good reasons, we instruct users to change from the default devicemapper loopback configuration that we recommended in early releases, of which they maybe running UCP on those nodes.   Deleting the certs in /var/lib/docker/discovery_certs creates a far more complex recovery scenario than just copying the certs back after the lvm changes have been completed.  This is the error received when you try to start up the docker daemon after following the doc instructions on a UCP node.\n\nInitializing discovery with TLS\nError starting daemon: discovery initialization failed (Could not read CA certificate \\ \"/var/lib/docker/discovery_certs/ca.pem\\\" open /var/lib/docker/discovery_certs/ca.pem: no such file or directory\n\nCan additional steps be written into the referenced doc perhaps such as copy the /var/lib/docker directory to /tmp to enable the recovery of items such as certs, etc in order to  keep from  placing users into extensive recovery scenarios.  thnx\n"},{"labels":["documentation",null],"text":"On the `docker service ps` documentation page (https://docs.docker.com/engine/reference/commandline/service_ps/) only three filters are shown as supported: id, name and desired-state. However, I discovered that there is also the \"node\" filter which matches tasks by either the hostname of the node they are deployed on, or the NodeID of that node (confirmed on 1.12.1).\n\nThe API reference for the tasks API correctly mentions that the NodeID can be used as a parameter to the node filter (https://docs.docker.com/engine/reference/api/docker_remote_api_v1.24/#/list-tasks), but omits the fact that the hostname of the node can be also used as the value to that filter\n"},{"labels":["documentation",null],"text":"I failed to find in the documentation or in the issues any information regarding how many swarm managers I should declare. Sure, more than one if you want high availability, but how many? and why not make all nodes managers? what is the tradeoff of being a manager vs a worker?\n"},{"labels":["documentation",null,null],"text":"The restart-policies for `docker run` had intuitive names like `no, on-failure, always` and we [have docs that explain what they mean](https://docs.docker.com/engine/reference/run/#restart-policies-restart).\n\nWith `docker service`, the restart policies are a bit different. You have options like `none, on-failure, or any`. It's not obvious what the `restart-policy=any` means, so we need to have some documentation for it.\n"},{"labels":["documentation",null],"text":"In reading https://docs.docker.com/engine/reference/builder/#/entrypoint, I find it a bit confusing to follow and understand with confidence.\n\nHere are a few questions which result:\n- Is there any way to pass the list form of `--entrypoint`, so when using `docker run` on the cli, your command will receive `SIGTERM` or other signals?\n- If you want to ensure your commands receive those signals, you _must_ use the list form for `--entrypoint` or `ENTRYPOINT`, correct?\n- When no `--entrypoint` is specified, what is the behavior of docker's signal passing?\n- Does the `--command` parameter (in either the list form or not) affect the behavior of signal passing?\n"},{"labels":["documentation"],"text":"The content of https://docs.docker.com/registry/insecure/#using-self-signed-certificates says \"be sure to use the name 'myregistrydomain.com' as a CN\". I think the intent of the overall page is for the developer to fill in their own domain. Perhaps it could be a bit clearer.\n"},{"labels":["documentation",null,null],"text":"<!--\nIf you are reporting a new issue, make sure that we do not have any duplicates\nalready open. You can ensure this by searching the issue list for this\nrepository. If there is a duplicate, please close your issue and add a comment\nto the existing issue instead.\n\nIf you suspect your issue is a bug, please edit your issue description to\ninclude the BUG REPORT INFORMATION shown below. If you fail to provide this\ninformation within 7 days, we cannot debug your issue and will close it. We\nwill, however, reopen it if you later provide the information.\n\nFor more information about reporting issues, see\nhttps://github.com/docker/docker/blob/master/CONTRIBUTING.md#reporting-other-issues\n\n---------------------------------------------------\nBUG REPORT INFORMATION\n---------------------------------------------------\nUse the commands below to provide key information from your environment:\nYou do NOT have to include this information if this is a FEATURE REQUEST\n-->\n\n**Description**\nIn the documentation for the Remote API in the request Json for creating a network the IPAM part of the json is missing \"Driver\".\nIn the cli this is sent by --ipam-driver string\n\nhttps://docs.docker.com/engine/reference/api/docker_remote_api_v1.24/#/create-a-network\n(maybe earlier docs also)\n\n<!--\nBriefly describe the problem you are having in a few paragraphs.\n-->\n\n**Steps to reproduce the issue:**\n1. Create a new network\n2. Check the Json that is sent\n\n**Describe the results you received:**\nNo Documentation to set Driver for IPAM\n\n**Describe the results you expected:**\nDocumentation to set Driver for IPAM\n\n**Additional information you deem important (e.g. issue happens only occasionally):**\n\n**Output of `docker version`:**\n\n```\nClient:\n Version:      1.12.1\n API version:  1.24\n Go version:   go1.7\n Git commit:   23cf638\n Built:        Fri Aug 19 02:03:02 2016\n OS/Arch:      linux/amd64\n\nServer:\n Version:      1.12.1\n API version:  1.24\n Go version:   go1.7\n Git commit:   23cf638\n Built:        Fri Aug 19 02:03:02 2016\n OS/Arch:      linux/amd64\n```\n\n**Output of `docker info`:**\n\n```\nContainers: 3\n Running: 0\n Paused: 0\n Stopped: 3\nImages: 4\nServer Version: 1.12.1\nStorage Driver: devicemapper\n Pool Name: docker-253:1-10223820-pool\n Pool Blocksize: 65.54 kB\n Base Device Size: 10.74 GB\n Backing Filesystem: xfs\n Data file: /dev/loop0\n Metadata file: /dev/loop1\n Data Space Used: 885.9 MB\n Data Space Total: 107.4 GB\n Data Space Available: 106.5 GB\n Metadata Space Used: 1.847 MB\n Metadata Space Total: 2.147 GB\n Metadata Space Available: 2.146 GB\n Thin Pool Minimum Free Space: 10.74 GB\n Udev Sync Supported: true\n Deferred Removal Enabled: false\n Deferred Deletion Enabled: false\n Deferred Deleted Device Count: 0\n Data loop file: /var/lib/docker/devicemapper/devicemapper/data\n WARNING: Usage of loopback devices is strongly discouraged for production use. Use `--storage-opt dm.thinpooldev` to specify a custom block storage device.\n Metadata loop file: /var/lib/docker/devicemapper/devicemapper/metadata\n Library Version: 1.02.134 (2016-09-07)\nLogging Driver: json-file\nCgroup Driver: cgroupfs\nPlugins:\n Volume: local\n Network: bridge host null overlay\nSwarm: inactive\nRuntimes: runc\nDefault Runtime: runc\nSecurity Options: seccomp\nKernel Version: 4.7.4-1-ARCH\nOperating System: Arch Linux\nOSType: linux\nArchitecture: x86_64\nCPUs: 8\nTotal Memory: 23.49 GiB\nName: karl_rog\nID: IOCD:Y7FK:RDB6:43I7:QLCF:OBP5:LKJR:QLYD:NC6U:V7GA:ROQA:TCVE\nDocker Root Dir: /var/lib/docker\nDebug Mode (client): false\nDebug Mode (server): false\nRegistry: https://index.docker.io/v1/\nInsecure Registries:\n 127.0.0.0/8\n```\n\n**Additional environment details (AWS, VirtualBox, physical, etc.):**\n"},{"labels":["documentation",null],"text":"It is probably the case that the recommended way of working with images and a swarm of nodes is to use a private image registry or docker cloud solution. However, I feel that the current design (and documentation) is a bit incomplete. The problem is that if you are a newcomer and start creating your swarm, when you build your image on one of the swarm leaders, and then starts a service using that image, if the service is scheduled to run on other nodes wheere the image is not available then it will just silently fail. The error claiming that an image is missing is often not complete displayed either when using `docker service ps` since the message is too long, which requires the user to login into the machine where the docker daemon is running and checking the logs there... not very friendly.\nI have not found in the documentation that an image that is custom built must be pushed to a image registry in order to make the swarm work, which for me at least, took some precious time to discover the hard way. \nSo finally, I think the best solution would be if every swarm node could act as a private image registry out of the box, but only for the nodes part of that swarm. By doing that images will just be created once and everything will work magically as so many other things in docker. The other alternative I can think of is that when building an image you could pass a --swarm flag to tell docker that you want to build that same image on all the nodes part of the swarm. The problem with this solution is of course that if the swarm grows, the new nodes will not have that image and fail again silently...\n"},{"labels":["documentation",null],"text":"Just putting this down here so we don't forget;\n\nWe don't have clear documentation on how \"daemon shutdown\" works; i.e. timeout of containers, stop, kill. Also what happens if a container fails to be killed.\n\nAnother point brought up by @mlaventure is that `systemd` also uses a timeout, so the daemon itself may be killed before it finishes shutdown.\n"},{"labels":["documentation"],"text":"In docker volumes tutorial there is still wrote \n\n```\nBecause of limitations in the mount function, moving subdirectories within the host’s source directory can give access from the container to the host’s file system. This requires a malicious user with access to host and its mounted directory.\n```\n\nThis was fixed last year: http://www.spinics.net/lists/linux-containers/msg31063.html\n"},{"labels":["documentation",null,null],"text":"The actual documentation for the creation of a service using the Docker API is incorrect for the port publishing section (at https://docs.docker.com/engine/reference/api/docker_remote_api_v1.24/#/create-a-service)\n\nThe **Example request** specifies the following:\n\n``` json\nPOST /services/create HTTP/1.1\nContent-Type: application/json\n\n{\n  ...\n  \"EndpointSpec\": {\n    \"Ports\": [\n      {\n        \"Protocol\": \"tcp\",\n        \"PublishedPort\": 8080,\n        \"TargetPort\": 80\n      }\n    ]\n  },\n ...\n}\n```\n\nThis is totally correct, but the **JSON parameters** shows the following:\n\n```\n* Endpoint – Properties that can be configured to access and load balance a service.\n  * Spec –\n    * Mode – The mode of resolution to use for internal load balancing between tasks (vip or dnsrr).\n    * Ports – Exposed ports that this service is accessible on from the outside, in the form of: \"Ports\": { \"<port>/<tcp|udp>: {}\" }\n```\n\nThis is totally incorrect and can lead to confusion.\n"},{"labels":["documentation",null,null],"text":"https://github.com/docker/docker/pull/24987 was merged without documentation changes. This issue is for tracking that\n\n/cc @ripcurld00d \n"},{"labels":["documentation",null,null],"text":"<!--\nIf you are reporting a new issue, make sure that we do not have any duplicates\nalready open. You can ensure this by searching the issue list for this\nrepository. If there is a duplicate, please close your issue and add a comment\nto the existing issue instead.\n\nIf you suspect your issue is a bug, please edit your issue description to\ninclude the BUG REPORT INFORMATION shown below. If you fail to provide this\ninformation within 7 days, we cannot debug your issue and will close it. We\nwill, however, reopen it if you later provide the information.\n\nFor more information about reporting issues, see\nhttps://github.com/docker/docker/blob/master/CONTRIBUTING.md#reporting-other-issues\n\n---------------------------------------------------\nBUG REPORT INFORMATION\n---------------------------------------------------\nUse the commands below to provide key information from your environment:\nYou do NOT have to include this information if this is a FEATURE REQUEST\n-->\n\n**Description**\n\nDocker Remote API Documentation problem concerning MaximumIOps and MaximumIOBps.\nIn documentation they are written as:\nMaximumIOps\nMaximumIOBps\n\nBut both Dockers code and recording the call (using Wiremock as a proxy between docker cli and docker daemon) says that they really are:\nIOMaximumIOps\nIOMaximumBandwidth\n\n**Steps to reproduce the issue:**\n1. docker -H <REMOTE_HOST> create --io-maxbandwidth=5m ubuntu:14.04\n2. compare json to documentation\n\n**Describe the results you received:**\nMaximumIOps\nMaximumIOBps\n\n**Describe the results you expected:**\nIOMaximumIOps\nIOMaximumBandwidth\n\n**Additional information you deem important (e.g. issue happens only occasionally):**\nConcerns:\ndocs/reference/api/docker_remote_api.md\ndocs/reference/api/docker_remote_api_v1.24.md\ndocs/reference/api/docker_remote_api_v1.25.md\n\n**Output of `docker version`:**\n\n```\nClient:\n Version:      1.12.1\n API version:  1.24\n Go version:   go1.6.3\n Git commit:   23cf638\n Built:        Thu Aug 18 05:33:38 2016\n OS/Arch:      linux/amd64\n\nServer:\n Version:      1.12.1\n API version:  1.24\n Go version:   go1.6.3\n Git commit:   23cf638\n Built:        Thu Aug 18 05:33:38 2016\n OS/Arch:      linux/amd64\n```\n\n**Output of `docker info`:**\n\n```\nContainers: 9\n Running: 2\n Paused: 0\n Stopped: 7\nImages: 183\nServer Version: 1.12.1\nStorage Driver: aufs\n Root Dir: /var/lib/docker/aufs\n Backing Filesystem: extfs\n Dirs: 314\n Dirperm1 Supported: true\nLogging Driver: json-file\nCgroup Driver: cgroupfs\nPlugins:\n Volume: local\n Network: overlay bridge host null\nSwarm: inactive\nRuntimes: runc\nDefault Runtime: runc\nSecurity Options: apparmor seccomp\nKernel Version: 4.4.0-36-generic\nOperating System: Ubuntu 16.04.1 LTS\nOSType: linux\nArchitecture: x86_64\nCPUs: 8\nTotal Memory: 30.85 GiB\nName: karl-P50\nID: ND5C:QQCW:NNJ4:QSFT:G6QP:MFJK:LDT4:VX6Q:HCSE:HVQ6:ABM6:2KVJ\nDocker Root Dir: /var/lib/docker\nDebug Mode (client): false\nDebug Mode (server): false\nRegistry: https://index.docker.io/v1/\nWARNING: No swap limit support\nInsecure Registries:\n docker-remote.art.local\n docker-virtual.art.local\n 127.0.0.0/8\n```\n\n**Additional environment details (AWS, VirtualBox, physical, etc.):**\n"},{"labels":["documentation"],"text":"Rename / move existing docs where needed, and update completion scripts for #26025 and #26716\n"},{"labels":["documentation",null],"text":"Hi\nCan i have more than one --constraint per service create ?\n\n```\ndocker service create \\\n--constraint 'node.hostname == foo' \\\n--constraint 'node.hostname == boo'\n```\n"},{"labels":["documentation",null],"text":"**Description**\nLinux kernel version 3.19 introduced lazy removal of mounts on unlinked files and directories.\nThis greatly reduces EBUSY errors when removing bind mounted directories used in containers. For more information, refer to \n1. http://git.kernel.org/cgit/linux/kernel/git/stable/linux-stable.git/commit/?h=linux-3.19.y&id=8ed936b5671bfb33d89bc60bdcc7cf0470ba52fe\n2. https://github.com/docker/docker/issues/21704\n\nUpdate necessary documentation and pre-req check code.\n"},{"labels":["documentation"],"text":"Since the Docker API client and types have been moved form [docker/engine-api](https://github.com/docker/engine-api) to the main docker repo [docker/client](https://github.com/docker/docker/tree/master/client), no README.md with a simple usage example is available anymore.\nIt would be helpful to add a simple README.md file with at least the same usage example from the old [README.md](https://github.com/docker/engine-api/tree/6c72c24563a7a266e91c8445811f74f138973457).\nI'll be glad to send a PR for this.\n"},{"labels":["documentation",null],"text":"[VENDORING.md](https://github.com/docker/docker/blob/master/VENDORING.md) starts out with the following:\n\n> This document outlines recommended Vendoring policies for Docker repositories. (Example, libnetwork is a Docker repo and logrus is not.)\n\nThen, it goes on about some semantic versioning requirements for no apparent reason and requirements about a release process, including a changelog (even for dependencies that have version control). Most of this is a waste of time for package-level projects (go-events, go-connections, etc.) when we have commit-level changelog.\n\nThis document SHOULD cover the following:\n1. Structure of our vendoring system.\n2. How to update an existing dependency.\n3. How to add a new dependency.\n4. Any helpful incantations to make vendoring work more smoothly.\n\nThis will be much more helpful to contributors than a bunch of nonsense about semantic versioning.\n"},{"labels":["documentation",null],"text":"In `docker node` you can see that there is a `docker node update --label-add` option to add labels.\n\nI was confused about the difference between this and Engine labels (i.e., added with `--label` to `dockerd`) and asked the Swarm team to explain.  The answer was insightful and should be documented.\n\nEssentially:\n1. A compromised worker node could change its own Engine labels, but not node labels.  Only managers can change node labels.\n2. Therefore, node labels could be useful to e.g. schedule only on machines where certain special workloads should be run, for instance machines where [PCI-SS compliance](https://www.pcisecuritystandards.org/) is met.  A compromised worker could not compromise these special workloads because it cannot change node labels.\n3. Engine labels, however, are still useful because some features which do not affect secure orchestration of containers might be better off set in a decentralized manner.  For instance, an engine could have a label to indicate that it has a certain type of disk device, which may not be relevant to security directly.  These labels are more easily \"trusted\" by the orchestrator.\n\nhttps://docs.docker.com/engine/swarm/manage-nodes/#/add-or-remove-label-metadata explains that you _can_ do this, but not why you might want to.\n\nFYI @londoncalling and thanks @diogomonica @stevvooe @cpuguy83 for explanation\n"},{"labels":["documentation",null,null],"text":"In the (IMHO really good) [overlay 2 documentation](https://docs.docker.com/engine/userguide/storagedriver/overlayfs-driver) chapter \"Image layering and sharing with OverlayFS (overlay2)\"  is written:\n\n> While the overlay driver only works with a single lower OverlayFS layer and hence requires hard links for implementation of multi-layered images, the overlay2 driver natively supports multiple lower OverlayFS layers (**up to 128**).\n\nWe did the experiment and \"docker build\" failed after **122 layers**.\n\n```\nRemoving intermediate container 1019d67fb4c7\nStep 123 : COPY Dockerfile /tmp/Dockerfile\nmax depth exceeded\n```\n\nI assume that  restriction comes from the 4 KB mount option size. It is mentioned that the shortened IDs have been implemented because of that.\n\nAn overlay2 mount looks like the following:\n\n```\noverlay on /var/lib/docker/overlay2/164d646991e089b06b55a5f1f03ab557a45753204a63b5dcc22991611563017f/merged type overlay \n(rw,relatime,\nlowerdir=l/WUS2HSYXXBUH7KQ5DXYVKY47V7:l/7FR5NGKHKOTQYM5I3W2BBT7RFJ,\nupperdir=164d646991e089b06b55a5f1f03ab557a45753204a63b5dcc22991611563017f/diff,\nworkdir=164d646991e089b06b55a5f1f03ab557a45753204a63b5dcc22991611563017f/work)\n```\n\nFor each layer we need strings like \":l/7FR5NGKHKOTQYM5I3W2BBT7RFJ\" which are 30 characters. In addition to that we have the strings:\n- `rw,relatime,lowerdir=`   -> 22 characters\n- `upperdir=164d646991e089b06b55a5f1f03ab557a45753204a63b5dcc22991611563017f/diff,` -> 80 characters\n- `workdir=164d646991e089b06b55a5f1f03ab557a45753204a63b5dcc22991611563017f/work` -> 78 characters\n\nI did some calculations and could not reproduce exactly the 122 layers. Nevertheless the 128 documented layers seem to be wrong.\n\n**BTW: Two other minor things we noticed:**\n\n> The **lowerest** layer contains the “link” file which contains\n\nShouldn't this be \"lowest\" :-)\n\n> These shortened identifiers are used for avoid hitting the **page size** limitation on mount arguments.\n\nIMHO page size is a bit unclear. E.g. the Linux kernel has huge pages with different size, for example on s390x we have 1 MiB, 2 GiB. I assume you just mean 4 KB here?\n"},{"labels":["documentation"],"text":"My [repository](https://github.com/jeff1evesque/machine-learning) implements docker containers within the [`.travis.yml`](https://github.com/jeff1evesque/machine-learning/blob/78384feb5477464dba4a48b96dbfc01e1d39b0f6/.travis.yml#L101-L112), to perform automated unit testing.  Each time someone commits code, the [travis ci](https://travis-ci.org/jeff1evesque/machine-learning/builds) runs `pytest-flask`.  Could my repository be added to the [Projects using docker](https://github.com/docker/docker/wiki/Projects-using-docker) wiki page?  In the future, I plan on adjusting the development environment to be a series of nested docker containers in the current vagrant environment.\n"},{"labels":["documentation",null,null],"text":"Docker allows mounting a data volume into container, which is awesome.\n\n`docker-compose` supports that, which is awesome\n\nDocker also copies files from image into volume on container creation, which surely it sometimes handy.\n\nThe problem is sometimes there's a bit too much data:\n\n```\nvolumes:\n    log:\nservices:\n    nginx:\n        volumes:\n            - log:/var/log\n```\n\nThe idea is to have persistent logs. `nginx.conf` points logs to `/var/log/nginx` making this pretty nice, each service will have it's own top-level folder in the volume.\n\nBut, alas! `nginx` container has some other rubbish in `/var/log`, e.g. `/var/log/dmesg` which gets copied to top level in the volume. :(\n\nIf I could mount `- log/nginx:/var/log/nginx` I'd work around this problem really nicely...\n\nNot that it's a good reason for inclusion per se though.\n\nA discussion is needed.\n"},{"labels":["documentation",null,null],"text":"Someone probably needs to start a roadmap issue for getting a solution to current problems with \"docker deploy\" (ie. where the feature is planned to go) because so far, I cannot find anything, let alone an issue, describing current progress.\n\nIncluding:\n- `docker deploy`\n- `docker stacks`\n- The planned relation between Swarm Mode / Docker Compose / `docker deploy`\n- The planned file formats\n"},{"labels":["documentation",null,null,null],"text":"I was on 1.10.3 and I had the remote api enabled by changing the $DOCKER_OPS from `/etc/init/docker.conf` to `'-H tcp://0.0.0.0:4243 -H unix:///var/run/docker.sock'`, but now that doesn't work anymore!\n\nI upgraded to Ubuntu Xenial (from Trusty) and docker engine from 1.10.3 to 1.12.1...\n\nAny help is greatly appreciated!\n\nEDIT: I [reverted back to Upstart](https://wiki.ubuntu.com/SystemdForUpstartUsers#Permanent_switch_back_to_upstart) on this Ubuntu... still same issue.\n"},{"labels":["documentation",null,null],"text":"in stack_tasks.md, there is command:\n\n```\nUsage:  docker stack tasks [OPTIONS] STACK\n\nList the tasks in the stack\n```\n\nin stack/ps.go, there is command:\n\n```\ncmd := &cobra.Command{\n    Use:   \"ps [OPTIONS] STACK\",\n    Short: \"List the tasks in the stack\",\n```\n"},{"labels":["documentation",null],"text":"The CLI reference docs say this about `swarm leave --force`.\n\n```\n      --force   Force leave ignoring warnings.\n```\n\nThey should also mention that `swarm leave --force` allows you to remove a manager, but does not gracefully remove the manager from the swarm. Doing this may cause the swarm to lose its quorum. Unless you don't care about the impact on the existing cluster, you should always demote managers to workers before removing them.\n\ncc @sfsmithcha\n"},{"labels":["documentation",null,null,null],"text":"<!--\nIf you are reporting a new issue, make sure that we do not have any duplicates\nalready open. You can ensure this by searching the issue list for this\nrepository. If there is a duplicate, please close your issue and add a comment\nto the existing issue instead.\n\nIf you suspect your issue is a bug, please edit your issue description to\ninclude the BUG REPORT INFORMATION shown below. If you fail to provide this\ninformation within 7 days, we cannot debug your issue and will close it. We\nwill, however, reopen it if you later provide the information.\n\nFor more information about reporting issues, see\nhttps://github.com/docker/docker/blob/master/CONTRIBUTING.md#reporting-other-issues\n\n---------------------------------------------------\nBUG REPORT INFORMATION\n---------------------------------------------------\nUse the commands below to provide key information from your environment:\nYou do NOT have to include this information if this is a FEATURE REQUEST\n-->\n\n**Output of `docker version`:**\n\n```\nClient:\n Version:      1.12.1\n API version:  1.24\n Go version:   go1.6.3\n Git commit:   f1e1b83\n Built:        \n OS/Arch:      linux/amd64\n\nServer:\n Version:      1.12.1\n API version:  1.24\n Go version:   go1.6.3\n Git commit:   f1e1b83\n Built:        \n OS/Arch:      linux/amd64\n```\n\n**Output of `docker info`:**\n\n```\nContainers: 2\n Running: 1\n Paused: 0\n Stopped: 1\nImages: 2\nServer Version: 1.12.1\nStorage Driver: overlay\n Backing Filesystem: extfs\nLogging Driver: json-file\nCgroup Driver: cgroupfs\nPlugins:\n Volume: local\n Network: bridge overlay null host\nSwarm: inactive\nRuntimes: runc\nDefault Runtime: runc\nSecurity Options: selinux\nKernel Version: 4.7.1-coreos\nOperating System: CoreOS 1151.0.0 (MoreOS)\nOSType: linux\nArchitecture: x86_64\nCPUs: 1\nTotal Memory: 7.801 GiB\nName: core-01\nID: 3D66:DYWJ:CZIL:ESFB:CW3S:UTSG:VFZY:YBLT:E234:H7L2:OIOT:Y7ZL\nDocker Root Dir: /var/lib/docker\nDebug Mode (client): false\nDebug Mode (server): false\nUsername: easywebdeploy\nRegistry: https://index.docker.io/v1/\nInsecure Registries:\n 127.0.0.0/8\n\n```\n\n**Additional environment details (AWS, VirtualBox, physical, etc.):**\nRunning CoreOS Alpha 1151.0.0 On Vagrant 1.8.5 Ubuntu 16.04\n\n**Steps to reproduce the issue:**\n1. Run a simple container and make sure its running\n2. Run \"curl -v --unix-socket /var/run/docker.sock http:/containers/json\" to get a list of Containers\n\n**Describe the results you received:**\n\n``` sh\n*   Trying /var/run/docker.sock...\n* Connected to containers (/var/run/docker.sock) port 80 (#0)\n> GET /json HTTP/1.1\n> Host: containers\n> User-Agent: curl/7.50.1\n> Accept: */*\n> \n< HTTP/1.1 404 Not Found\n< Content-Type: application/json\n< Date: Mon, 29 Aug 2016 08:48:02 GMT\n< Content-Length: 29\n< \n{\"message\":\"page not found\"}\n* Connection #0 to host containers left intact\n```\n\n**Describe the results you expected:**\nExpected is the JSON list of all running containers\n\n**Additional information you deem important (e.g. issue happens only occasionally):**\nWas working correctly on CoreOS with Docker version till 1.11.2\n"},{"labels":["documentation",null],"text":"Feedback on finding Node state and availability in the docs:\n\nDoc is here: https://docs.docker.com/engine/swarm/manage-nodes/#manage-nodes-in-a-swarm\n\n I searched for \"status\", \"node status\", \"node state\", \"availability\", \"node availability\", \"swarm availability\". I assumed there was no such page so I didn't search for \"Reachable\", which would have been my next keyword, but it looks like that one correctly points to that page. Also, I went to the swarm-mode overview page looking for some sort of \"concepts\" or \"keywords\" page, followed the url to the \"key-concepts\" page which did not mention any details node status and noticed that the only follow-up URL at the bottom redirected me back to swarm-mode overview. I didn't suspect to go to the \"manage nodes\" headline as I imagined that would cover the various leave/rm/demote/promote flows, rather than document the possible node states\n"},{"labels":["documentation",null],"text":"<!--\nIf you are reporting a new issue, make sure that we do not have any duplicates\nalready open. You can ensure this by searching the issue list for this\nrepository. If there is a duplicate, please close your issue and add a comment\nto the existing issue instead.\n\nIf you suspect your issue is a bug, please edit your issue description to\ninclude the BUG REPORT INFORMATION shown below. If you fail to provide this\ninformation within 7 days, we cannot debug your issue and will close it. We\nwill, however, reopen it if you later provide the information.\n\nFor more information about reporting issues, see\nhttps://github.com/docker/docker/blob/master/CONTRIBUTING.md#reporting-other-issues\n\n---------------------------------------------------\nBUG REPORT INFORMATION\n---------------------------------------------------\nUse the commands below to provide key information from your environment:\nYou do NOT have to include this information if this is a FEATURE REQUEST\n-->\n\n**Output of `docker version`:**\n\n```\nClient:\n Version:      1.12.0\n API version:  1.24\n Go version:   go1.6.3\n Git commit:   8eab29e\n Built:        Thu Jul 28 23:54:00 2016\n OS/Arch:      linux/amd64\n\nServer:\n Version:      1.12.0\n API version:  1.24\n Go version:   go1.6.3\n Git commit:   8eab29e\n Built:        Thu Jul 28 23:54:00 2016\n OS/Arch:      linux/amd64\n```\n\n**Output of `docker info`:**\n\n```\nContainers: 0\n Running: 0\n Paused: 0\n Stopped: 0\nImages: 0\nServer Version: 1.12.0\nStorage Driver: aufs\n Root Dir: /var/lib/docker/aufs\n Backing Filesystem: extfs\n Dirs: 0\n Dirperm1 Supported: false\nLogging Driver: json-file\nCgroup Driver: cgroupfs\nPlugins:\n Volume: local\n Network: bridge overlay null host\nSwarm: inactive\nRuntimes: runc\nDefault Runtime: runc\nSecurity Options: apparmor seccomp\nKernel Version: 3.13.0-74-generic\nOperating System: Alpine Linux v3.4 (containerized)\nOSType: linux\nArchitecture: x86_64\nCPUs: 4\nTotal Memory: 7.704 GiB\nName: 2984dce9dd17\nID: DK5H:F7GU:NOI7:EQKM:4JQG:IXVD:Z2ZJ:5LRM:2CV7:DI5J:B7Y4:YY2V\nDocker Root Dir: /var/lib/docker\nDebug Mode (client): false\nDebug Mode (server): false\nRegistry: https://index.docker.io/v1/\nWARNING: No swap limit support\nWARNING: bridge-nf-call-iptables is disabled\nWARNING: bridge-nf-call-ip6tables is disabled\nInsecure Registries:\n 127.0.0.0/8\n```\n\n**Additional environment details (AWS, VirtualBox, physical, etc.):**\n\n**Steps to reproduce the issue:**\n1.  View [docker run reference - Security configuration](https://docs.docker.com/engine/reference/run/#/security-configuration)\n\n**Describe the results you received:**\nWhile reading `docker run`'s SELinux _Security configuration_  section, noticed reference to `--permissive` flag as a method to disable SELinux enforcement for a particular container by Docker Engine.  Relevant passage:\n\n \"_To disable the security labeling for this container versus running with the --permissive flag, use the following command:_\"\n\nHowever, `docker run` doesn't support `--permissive` flag, as it generates message: `unknown flag: --permissive`.  Therefore, given the context, documentation should have instead cited `--privileged` option.\n\n**Describe the results you expected:**\n\"_To disable the security labeling for this container versus running with the **--privileged** flag, use the following command:_\"\n\n**Additional information you deem important (e.g. issue happens only occasionally):**\n"},{"labels":["documentation"],"text":"This is an issue with the documentation for setting up TLS in a swarm which can be found [here](https://docs.docker.com/swarm/configure-tls/). In [Step 3](https://docs.docker.com/swarm/configure-tls/#/step-3-create-and-sign-keys) it says that a file called `node-priv.key` will be created which will contain the private key. However, no reference to a `.key` file is found anywhere else in the document. I'm not really sure what changes need to be made, as far as I can tell it crates the private key in a file called `node-priv-key.pem`, but I'm not sure if anything else needed to be done.\n\n**Additional environment details (AWS, VirtualBox, physical, etc.):**\nI'm not able to find the actual markdown file in the `/docs` folder in the repo which contains the guide.\n\n**Steps to reproduce the issue:**\n1. Go through the [swarm/configure-tls](https://docs.docker.com/swarm/configure-tls) guide\n2. Expect a `.key` file to be made at some point\n3. It isn't\n\n**Describe the results you received:**\nThe resulting keys two `.pem` files are created, with one of them suggesting it's the private key.\n\n**Describe the results you expected:**\nDocs to either refer to the private key consistently or have steps for creating the `.key` file\n"},{"labels":["documentation",null],"text":"**Steps to reproduce the issue:**\n1. Go to https://docs.docker.com/engine/reference/api/docker_remote_api_v1.24/#/display-system-wide-information and search for /swarm to look for how to get swarm join token \n2.\n3.\n\n**Describe the results you received:**\n\nNo results on how to retrieve swarm join token. \n\n**Describe the results you expected:**\n\nThe API to retrieve the swarm join token should be available on the API docs\n\n**Additional information you deem important (e.g. issue happens only occasionally):**\n"},{"labels":["documentation",null,null,null],"text":"I would like to put together a quick guide for Docker on ARM - especially Raspberry Pi. There is a `curl | sh` method newly available which makes the process quicker and easier. From my perspective this should feel as close as possible to the experience of Docker on x86_64. \n\nI'd like to put a short/simple guide together:\n- Recommended (default) OS to be Raspbian (Jessie Lite)\n- `curl | sh` recommended installation method\n- A mention to the problem with multi-arch - i.e. `docker run busybox` won't work\n- A recommended base image: `resin/rpi-raspbian`\n- Give short example of Dockerfile for Node.js, Python\n- Short mention of GPIO (accessing the input output headers on the device) and privilege mode.\n- A disclaimer / buyer beware.. few words on limitations.\n\nPotential follow-up guide:\n- Building Docker on ARM\n- Adding a swap file\n- Expected build duration\n- Limitations\n\nRef: \nhttps://github.com/docker/docker/issues/24561\n\nInput especially welcome from @DieterReuter , @estesp , @crosbymichael @StefanScherer as follow-up. @thaJeztah what are your thoughts?\n"},{"labels":["documentation",null],"text":"At the CLI we expose this with `--with-registry-auth` but the API docs don't explain how API clients can send the registry auth information on service creation or update.\n"},{"labels":["documentation",null],"text":"<!--\nIf you are reporting a new issue, make sure that we do not have any duplicates\nalready open. You can ensure this by searching the issue list for this\nrepository. If there is a duplicate, please close your issue and add a comment\nto the existing issue instead.\n\nIf you suspect your issue is a bug, please edit your issue description to\ninclude the BUG REPORT INFORMATION shown below. If you fail to provide this\ninformation within 7 days, we cannot debug your issue and will close it. We\nwill, however, reopen it if you later provide the information.\n\nFor more information about reporting issues, see\nhttps://github.com/docker/docker/blob/master/CONTRIBUTING.md#reporting-other-issues\n\n---------------------------------------------------\nBUG REPORT INFORMATION\n---------------------------------------------------\nUse the commands below to provide key information from your environment:\nYou do NOT have to include this information if this is a FEATURE REQUEST\n-->\n\nIt looks like the 1.12.0 changelog doesn't have the docker proxy changes made in https://github.com/docker/docker/pull/23312. I don't think the docs have been updated either.\n"},{"labels":["documentation",null,null],"text":"The `/swarm/leave` api supports a `?force=true` parameter and it should be documented in the [api docs](https://docs.docker.com/engine/reference/api/docker_remote_api_v1.24/#/leave-a-swarm). I'll be glad to send a PR for this.\n"},{"labels":["documentation",null,null,null],"text":"Currently, the Swarm Init api (/swarm/init) returns the node id when the swarm is successfully initialized:\n\n```\ncurl -XPOST --unix-socket /var/run/docker.sock http:/swarm/init -d '{\"ListenAddr\": \"127.0.0.1\"}'\n\"ejdf53mtjiqp8feyf1907si12\"\n```\n\nThis behavior is not documented in the [api docs](https://docs.docker.com/engine/reference/api/docker_remote_api_v1.24/#/initialize-a-new-swarm).\n\nI believe this should be documented and I can send a PR for that.\n"},{"labels":["documentation",null,null],"text":"I am trying to run a program inside a docker container with user namespace support that requires some capabilities. Inside the container I am able to see that the capabilities were added but when I make calls that require these capabilities they fail.\n\nThe same calls work fine when I bypass user namespace with `--userns host` and add the required capabilities with `--cap-add`.\n\nSo far I have tested changing the scheduling policy and thread priority with a C program and `chrt`. This requires the `SYS_NICE` capability.\nI have also tested creating a message queue with larger sizes than allowed in `/proc/sys/fs/mqueue`. For the call to succeed the program would require the `SYS_RESOURCE` capability.\n\nWhen reading the documentation for user namespace support in dockerd it doesn't seem like this would not be a supported feature. In my opinion this would be a very useful feature that would increase security by enabling users to run semi-privileged programs in their own user namespace.\n\nIn any case, in the Docker engine reference for dockerd under \"User namespace known restrictions\", the following paragraphs should be modified to reflect these new restrictions:\n\n> Using --privileged mode flag on docker run (unless also specifying --userns=host)\n\nUsing `--privileged` mode or `--cap-add` for certain capabilities on docker run (unless also specifying --userns=host)\n\n> Finally, while the root user inside a user namespaced container process has many of the expected admin privileges that go along with being the superuser, the Linux kernel has restrictions based on internal knowledge that this is a user namespaced process. The most notable restriction that we are aware of at this time is the inability to use mknod. Permission will be denied for device creation even as container root inside a user namespace.\n\nThis paragraph could be extended to list all the functions that fail or capabilities that have no effect.\n\n---\n## BUG REPORT INFORMATION\n\n**Output of `docker version`:**\n\n```\nClient:\n Version:      1.12.0\n API version:  1.24\n Go version:   go1.6.3\n Git commit:   8eab29e\n Built:        Thu Jul 28 22:11:10 2016\n OS/Arch:      linux/amd64\n\nServer:\n Version:      1.12.0\n API version:  1.24\n Go version:   go1.6.3\n Git commit:   8eab29e\n Built:        Thu Jul 28 22:11:10 2016\n OS/Arch:      linux/amd64\n```\n\n**Output of `docker info`:**\n\n```\nContainers: 6\n Running: 1\n Paused: 0\n Stopped: 5\nImages: 20\nServer Version: 1.12.0\nStorage Driver: aufs\n Root Dir: /var/lib/docker/296608.296608/aufs\n Backing Filesystem: extfs\n Dirs: 25\n Dirperm1 Supported: true\nLogging Driver: json-file\nCgroup Driver: cgroupfs\nPlugins:\n Volume: local\n Network: bridge null overlay host\nSwarm: inactive\nRuntimes: runc\nDefault Runtime: runc\nSecurity Options: apparmor seccomp\nKernel Version: 4.4.0-34-generic\nOperating System: Ubuntu 16.04.1 LTS\nOSType: linux\nArchitecture: x86_64\nCPUs: 2\nTotal Memory: 2.768 GiB\nDocker Root Dir: /var/lib/docker/296608.296608\n\n```\n\ndockerd run command:\n`/usr/bin/dockerd --userns-remap=default -H fd://`\n\nI am running an Ubuntu VM on VMware Player on Windows 7\n\n**_For scheduling:**_\n**Steps to reproduce the issue:**\n1. `docker run -it --rm --cap-add SYS_NICE ubuntu bash`\n2. `chrt -f -p 99 1`\n\n**Describe the results you received:**\n`chrt: failed to set pid 1's policy: Operation not permitted`\n\n**Describe the results you expected:**\nI get the expected results using `--userns host`\n1. `docker run -it --rm --userns host --cap-add SYS_NICE ubuntu bash`\n2. `chrt -f -p 99 1`\n3. `chrt -p 1`\n`pid 1's current scheduling policy: SCHED_FIFO`\n`pid 1's current scheduling priority: 99`\n\n**_For the message queue:**_\nHere is a simple C program to test the message queue: https://gist.github.com/DeathTickle/aa8f980577d498850af4e819319636f9\n\nModify (or don't) the `QUEUE_SIZE` and `QUEUE_MSG_SIZE` defines to be greater than `/proc/sys/fs/mqueue/msg_max` and/or `/proc/sys/fs/mqueue/msgsize_max`\n\ncompile it with `gcc mq_open_test.c -o mq_open_test -lrt`\n\n**Steps to reproduce the issue:**\n1. `docker run -it --rm --cap-add SYS_RESOURCE -v $PWD/mq_open_test:/mq_open_test ubuntu bash`\n2. `./mq_open_test`\n\n**Describe the results you received:**\n`mq_open: Invalid argument`\n\n**Describe the results you expected:**\nI get the expected results using `--userns host`\n1. `docker run -it --rm --userns host --cap-add SYS_RESOURCE -v $PWD/mq_open_test:/mq_open_test ubuntu bash`\n2. `./mq_open_test`\n"},{"labels":["documentation"],"text":"Current man pages are not all consistent in term of content, placement and sections. There is also a lot of _duplication_ between man pages and cli reference documentation as they are maintained separately. This issues is there to discuss on those subjects and follow evolutions of our generation process.\n\nThe main goals are the following and take most of the inspiration from `git` man pages and reference documentation :\n- Have consistent man page across commands.\n- Have cli reference documentation be in sync (or the same) as man page (just a web page for it).\n- Have (or not) man pages generated from source (part of it or all of them).\n### Man page style guide\n\nWe currently don't have any style guide for man pages, i.e. what information to put where and in what order. As code style guide, we might want to define a _man page style guide_ document that would define what makes a good man page for `docker` commands. This is related to #16219.\n\nThat could look something like :\n\n```\n## NAME\n\ncommand - short description of the command\n\n## SYNOPSIS\n\ncommand --with --some --flags --and [OPTIONS] …\n\n##  DESCRIPTION\n\nA description is more detailed than what's in the NAME section, explaining more in depth what the command does (but that's all)\n\n## OPTIONS\n\n-a --all\n\nFlags descriptions …\n\n## ADDITIONAL SECTION 1\n\nAdditional section are possible. An example would be `FILTERING` and `FORMATTING` for the `docker-ps` command, or something about the reference format for command that allow us to set them (like `docker-commit`, `docker-tag`, …).\n\n## ADDITIONAL SECTION 2\n\nNo limit in the number of section though 👼\n\n## EXAMPLES\n\nHere, we just gives example on how to do this on that ; this is not where we explain how to filter container (it's done in its own section), just a working example of it.\n\n## ENVIRONMENT AND CONFIGURATION VARIABLES\n\nIf there is any environment variable or configuration (in the client/daemon config file) related to the command, we'll talk about it here ; like `ImagesFormat` for `docker-images` formatting.\n\n## SEE ALSO\n\n```\n### Man page and cli ref doc maintainability\n\nMaintaining separately man pages and cli reference documentation is error prone, it's easy to forget some flags or description somewhere. It's related to #19088. The basic idea would be to generate man pages and cli reference documentation from the same source.\n\nGiven that we are trying to generate man page from the code (at least partially), we should also study a way to generate cli reference documentation at the same time — shouldn't be difficult to convert markdown/man page to hmtl 👼.\n#23825 introduced a way to generate man page directly from code — from a small subset of command right now, but goal is to do that for all commands.\n\nCurrent limitations / questions are the following (making the assumption that cli reference documentation is generated from the same source) :\n- Cobra does not seems to allow add any custom section (it only supports `EXAMPLE`).  It's possible to add `## Some Section` in the description part, but this would make the `OPTIONS` section be really far down in the man pages (which can be fine :angel:).\n- It makes \"documentation\" PR's becomes more difficult; to make changes to this part of the documentation now requires contributors to touch the actual code.\n- Should we keep around some part of the man pages/documentation in markdown files (that would be merge with generated content from cobra) ?\n\n/cc @thaJeztah @dnephin @icecrime \n"},{"labels":[null,"documentation",null,null,null],"text":"<!--\nIf you are reporting a new issue, make sure that we do not have any duplicates\nalready open. You can ensure this by searching the issue list for this\nrepository. If there is a duplicate, please close your issue and add a comment\nto the existing issue instead.\n\nIf you suspect your issue is a bug, please edit your issue description to\ninclude the BUG REPORT INFORMATION shown below. If you fail to provide this\ninformation within 7 days, we cannot debug your issue and will close it. We\nwill, however, reopen it if you later provide the information.\n\nFor more information about reporting issues, see\nhttps://github.com/docker/docker/blob/master/CONTRIBUTING.md#reporting-other-issues\n\n---------------------------------------------------\nBUG REPORT INFORMATION\n---------------------------------------------------\nUse the commands below to provide key information from your environment:\nYou do NOT have to include this information if this is a FEATURE REQUEST\n-->\n\n**Output of `docker version`:**\n\n```\nClient:\n Version:      1.12.0\n API version:  1.24\n Go version:   go1.6.3\n Git commit:   8eab29e\n Built:        Thu Jul 28 21:04:48 2016\n OS/Arch:      darwin/amd64\n Experimental: true\n\nServer:\n Version:      1.12.0\n API version:  1.24\n Go version:   go1.6.3\n Git commit:   8eab29e\n Built:        Thu Jul 28 21:04:48 2016\n OS/Arch:      linux/amd64\n Experimental: true\n```\n\nand\n\n```\nClient:\n Version:      1.11.0\n API version:  1.23\n Go version:   go1.5.4\n Git commit:   4dc5990\n Built:        Wed Apr 13 18:34:23 2016\n OS/Arch:      linux/amd64\n\nServer:\n Version:      1.11.0\n API version:  1.23\n Go version:   go1.5.4\n Git commit:   4dc5990\n Built:        Wed Apr 13 18:34:23 2016\n OS/Arch:      linux/amd64\n```\n\n**Output of `docker info`:**\n\n```\nContainers: 99\n Running: 2\n Paused: 0\n Stopped: 97\nImages: 52\nServer Version: 1.12.0\nStorage Driver: aufs\n Root Dir: /var/lib/docker/aufs\n Backing Filesystem: extfs\n Dirs: 250\n Dirperm1 Supported: true\nLogging Driver: json-file\nCgroup Driver: cgroupfs\nPlugins:\n Volume: local\n Network: bridge host overlay null\nSwarm: inactive\nRuntimes: runc\nDefault Runtime: runc\nSecurity Options: seccomp\nKernel Version: 4.4.15-moby\nOperating System: Alpine Linux v3.4\nOSType: linux\nArchitecture: x86_64\nCPUs: 2\nTotal Memory: 1.954 GiB\nName: moby\nID: A7F5:MEE2:XJ2N:ZQ6Q:HRKO:SRQJ:CTJF:RR3B:6K7F:SQPP:NBJ7:I7MM\nDocker Root Dir: /var/lib/docker\nDebug Mode (client): false\nDebug Mode (server): true\n File Descriptors: 26\n Goroutines: 41\n System Time: 2016-08-10T18:29:32.322513876Z\n EventsListeners: 1\nNo Proxy: *.local, 169.254/16\nUsername: flavin\nRegistry: https://index.docker.io/v1/\nExperimental: true\nInsecure Registries:\n 127.0.0.0/8\n```\n\nand\n\n```\nContainers: 7\n Running: 0\n Paused: 0\n Stopped: 7\nImages: 1\nServer Version: 1.11.0\nStorage Driver: aufs\n Root Dir: /var/lib/docker/aufs\n Backing Filesystem: extfs\n Dirs: 15\n Dirperm1 Supported: true\nLogging Driver: json-file\nCgroup Driver: cgroupfs\nPlugins:\n Volume: local\n Network: bridge null host\nKernel Version: 4.2.0-27-generic\nOperating System: Ubuntu 14.04.4 LTS\nOSType: linux\nArchitecture: x86_64\nCPUs: 1\nTotal Memory: 1.954 GiB\nName: xnat\nID: 3XVY:66LA:O7YA:ZRXD:5O3L:HR56:FBKD:5CG3:HAV3:JDG7:K3MX:44G7\nDocker Root Dir: /var/lib/docker\nDebug mode (client): false\nDebug mode (server): false\nRegistry: https://index.docker.io/v1/\n```\n\n**Additional environment details (AWS, VirtualBox, physical, etc.):**\nthe first machine is my local Docker for Mac installation; the second is an Ubuntu 14.04 VM in VirtualBox.\n\n**Steps to reproduce the issue:**\n1. Use the remote API to GET events, using the `since` query param.. For example, here is a simple example that asks for all events since time 0. (I have verified this behavior with other, more realistic time values.)\n\n```\ncurl --unix-socket /var/run/docker.sock http://localhost/events?since=0\n```\n\n**Describe the results you received:**\nThe events in the specified time range (in the example, from time 0 until now) are sent to me from docker, and the HTTP stream remains open.\n\n**Describe the results you expected:**\nThe events in the specified time range (in the example, from time 0 until now) are sent to me from docker, and the stream is closed. This is the documented behavior when using the `since` or `until` query params.\n"},{"labels":["documentation",null],"text":"Release notes list macvlan as released with 1.12:\n\nhttps://github.com/docker/docker/releases/tag/v1.12.0\nhttps://github.com/docker/docker/pull/23524\n\nOnly docs are in experimental\n\nhttps://github.com/docker/docker/blob/master/experimental/vlan-networks.md#user-content-getting-started\n\nPer @programmerq :\nprogrammerq [9:58 AM]  \nIt could do with a one or two paragraph description of what the macvlan driver is, what technologies it uses, the fact that it is a local scope network driver, and why you might use it instead of another local scope driver (bridge)\n\ncc: @aboch \n"},{"labels":["documentation"],"text":"Is it intentional to have 1.12 `/swarm/leave` to have a query param of `?force=true`? If so, can we have the documentation updated (happy to do it if you point me in the right direction)? If not, should it be in the body instead and possibly JSON like the rest of the `/swarm/*` endpoints?\n\nThanks.\n"},{"labels":[null,"documentation",null],"text":"**Output of `docker version`:**\n\n```\nClient:\n Version:      1.12.0\n API version:  1.24\n Go version:   go1.6.3\n Git commit:   8eab29e\n Built:        Thu Jul 28 22:00:36 2016\n OS/Arch:      linux/amd64\n\nServer:\n Version:      1.12.0\n API version:  1.24\n Go version:   go1.6.3\n Git commit:   8eab29e\n Built:        Thu Jul 28 22:00:36 2016\n OS/Arch:      linux/amd64\n```\n\n**Output of `docker info`:**\n\n```\nContainers: 53\n Running: 1\n Paused: 0\n Stopped: 52\nImages: 138\nServer Version: 1.12.0\nStorage Driver: aufs\n Root Dir: /var/lib/docker/aufs\n Backing Filesystem: extfs\n Dirs: 186\n Dirperm1 Supported: true\nLogging Driver: json-file\nCgroup Driver: cgroupfs\nPlugins:\n Volume: local\n Network: bridge overlay null host\nSwarm: inactive\nRuntimes: runc\nDefault Runtime: runc\nSecurity Options: apparmor\nKernel Version: 3.19.0-33-generic\nOperating System: Ubuntu 14.04.5 LTS\nOSType: linux\nArchitecture: x86_64\nCPUs: 4\nTotal Memory: 15.67 GiB\nName: mafiosso-HSC\nID: 4IXB:YZFW:X4AW:LUMH:4K3Z:VB5V:DNAZ:DFPP:GCRY:EJJF:PB6F:HBVX\nDocker Root Dir: /var/lib/docker\nDebug Mode (client): false\nDebug Mode (server): false\nRegistry: https://index.docker.io/v1/\nWARNING: No swap limit support\nInsecure Registries:\n 127.0.0.0/8\n```\n\n**Additional environment details (AWS, VirtualBox, physical, etc.):**\n\n**Steps to reproduce the issue:**\n1. Post a large image via curl on /load\n\n**Describe the results you received:**\n Remote API returns code 500 with message {\"message\":\"http: POST too large\"}.\n\n**Describe the results you expected:**\nExpected behavior shloud be code 200\n\n**Additional information you deem important (e.g. issue happens only occasionally):**\n"},{"labels":["documentation",null],"text":"In the section \"Adding a host without a driver\" of the document, \"Use Docker Machine to provision hosts on cloud providers\", https://docs.docker.com/machine/get-started-cloud/#adding-a-host-without-a-driver\n\nThere is an example:\n\n``` bash\n$ docker-machine create --url=tcp://50.134.234.20:2376 custombox\n$ docker-machine ls\nNAME        ACTIVE   DRIVER    STATE     URL\ncustombox   *        none      Running   tcp://50.134.234.20:2376\n```\n\nHowever, the command will fail under `docker-machine 0.8.0`, as there should be `-d none`, so the example should be:\n\n``` bash\n$ docker-machine create --driver none --url=tcp://50.134.234.20:2376 custombox\n$ docker-machine ls\nNAME        ACTIVE   DRIVER    STATE     URL\ncustombox   *        none      Running   tcp://50.134.234.20:2376\n```\n"},{"labels":["documentation",null],"text":"https://github.com/docker/docker/blob/master/docs/reference/api/docker_remote_api_v1.25.md needs to be updated. @thaJeztah kindly agreed to take care of this.\n"},{"labels":["documentation",null],"text":"This is in reference to PIDs cgroup limit https://github.com/docker/docker/pull/18697 \n\nI am confused. Whats the default value for PIDs cgroup limit? below link says setting the value to -1 allows unlimited processes to be forked\nRef:  https://docs.docker.com/engine/reference/commandline/run/\n\nBut i was checking on my machine and the default value for it is \"0\" in which situation its allowing me to do unlimited forks. First two containers dont have any PIDs limit set and by default it was '0'.\n\nRef: docker ps --quiet | xargs docker inspect --format '{{ .Id }}: PidsLimit={{ .HostConfig.PidsLimit }}'\n\\60b19cf162aaa262765608f1533d0532c324f03a2f5e1701d5d98392da624802: PidsLimit=0\n6f8a8454a6f23d29163a22ee9533756d706382bbe3ba467f11f80f3e6489fd4b: PidsLimit=0\n8f2ecc51968d29010d6b6dc58bbfcf7fb4dc4ef52b465f04ff1a37e7ed7e734a: PidsLimit=512\n"},{"labels":["documentation",null],"text":"Tried to follow the Docker Remote API 1.24 docs, and found a broken example:\n\nhttps://docs.docker.com/engine/reference/api/docker_remote_api_v1.24/#/create-a-container\n\nThe example says:\n\n``` json\nPOST /containers/create HTTP/1.1\nContent-Type: application/json\n\n{\n       \"Hostname\": \"\",\n       \"Domainname\": \"\",\n       \"User\": \"\",\n       \"AttachStdin\": false,\n       \"AttachStdout\": true,\n       \"AttachStderr\": true,\n       \"Tty\": false,\n       \"OpenStdin\": false,\n       \"StdinOnce\": false,\n       \"Env\": [\n               \"FOO=bar\",\n               \"BAZ=quux\"\n       ],\n       \"Cmd\": [\n               \"date\"\n       ],\n       \"Entrypoint\": \"\",\n       \"Image\": \"ubuntu\",\n       \"Labels\": {\n               \"com.example.vendor\": \"Acme\",\n               \"com.example.license\": \"GPL\",\n               \"com.example.version\": \"1.0\"\n       },\n       \"Volumes\": {\n         \"/volumes/data\": {}\n       },\n       \"WorkingDir\": \"\",\n       \"NetworkDisabled\": false,\n       \"MacAddress\": \"12:34:56:78:9a:bc\",\n       \"ExposedPorts\": {\n               \"22/tcp\": {}\n       },\n       \"StopSignal\": \"SIGTERM\",\n       \"HostConfig\": {\n         \"Binds\": [\"/tmp:/tmp\"],\n         \"Links\": [\"redis3:redis\"],\n         \"Memory\": 0,\n         \"MemorySwap\": 0,\n         \"MemoryReservation\": 0,\n         \"KernelMemory\": 0,\n         \"CpuPercent\": 80,\n         \"CpuShares\": 512,\n         \"CpuPeriod\": 100000,\n         \"CpuQuota\": 50000,\n         \"CpusetCpus\": \"0,1\",\n         \"CpusetMems\": \"0,1\",\n         \"MaximumIOps\": 0,\n         \"MaximumIOBps\": 0,\n         \"BlkioWeight\": 300,\n         \"BlkioWeightDevice\": [{}],\n         \"BlkioDeviceReadBps\": [{}],\n         \"BlkioDeviceReadIOps\": [{}],\n         \"BlkioDeviceWriteBps\": [{}],\n         \"BlkioDeviceWriteIOps\": [{}],\n         \"MemorySwappiness\": 60,\n         \"OomKillDisable\": false,\n         \"OomScoreAdj\": 500,\n         \"PidMode\": \"\",\n         \"PidsLimit\": -1,\n         \"PortBindings\": { \"22/tcp\": [{ \"HostPort\": \"11022\" }] },\n         \"PublishAllPorts\": false,\n         \"Privileged\": false,\n         \"ReadonlyRootfs\": false,\n         \"Dns\": [\"8.8.8.8\"],\n         \"DnsOptions\": [\"\"],\n         \"DnsSearch\": [\"\"],\n         \"ExtraHosts\": null,\n         \"VolumesFrom\": [\"parent\", \"other:ro\"],\n         \"CapAdd\": [\"NET_ADMIN\"],\n         \"CapDrop\": [\"MKNOD\"],\n         \"GroupAdd\": [\"newgroup\"],\n         \"RestartPolicy\": { \"Name\": \"\", \"MaximumRetryCount\": 0 },\n         \"NetworkMode\": \"bridge\",\n         \"Devices\": [],\n         \"Ulimits\": [{}],\n         \"LogConfig\": { \"Type\": \"json-file\", \"Config\": {} },\n         \"SecurityOpt\": [],\n         \"StorageOpt\": {},\n         \"CgroupParent\": \"\",\n         \"VolumeDriver\": \"\",\n         \"ShmSize\": 67108864\n      },\n      \"NetworkingConfig\": {\n      \"EndpointsConfig\": {\n          \"isolated_nw\" : {\n              \"IPAMConfig\": {\n                  \"IPv4Address\":\"172.20.30.33\",\n                  \"IPv6Address\":\"2001:db8:abcd::3033\",\n                  \"LinkLocalIPs:[\"169.254.34.68\", \"fe80::3468\"]\n              },\n              \"Links\":[\"container_1\", \"container_2\"],\n              \"Aliases\":[\"server_x\", \"server_y\"]\n          }\n      }\n  }\n```\n\nThe most obvious typo is that `LinkLocalIPs` is missing closing quote, and as `NetworkingConfig` and `EndpointsConfig` are misaligned at the same indent, so the closing curly bracket are missing as well.\n"},{"labels":["documentation",null],"text":"Instead of adding users to the **_docker_** group as the [Installation manuals](https://docs.docker.com/engine/installation/#installation) suggest, which is a security hole by definition and antonomasia, I think it's better to add a password to the **_docker_** group and use the **sg** and **newgrp** commands as follows:\n\nAdd a password to **_docker_** group:\n`gpaswd docker`\n\nCreate a session with the **_docker_** group added to the supplementary group ID's:\n`sg docker newgrp $(id -gn)`\n\nAt this point the user may run **docker** commands...\n\nLogout:\n`exit`\n\nNote: The **sg** command is needed to avoid running the sequence: `newgrp docker` and then `exec newgrp $USER`\n\nOn the plus side, there's no need to use **sudo** anymore with its side-effects of resetting environment variables, etc.\n"},{"labels":[null,"documentation"],"text":"<!--\nIf you are reporting a new issue, make sure that we do not have any duplicates\nalready open. You can ensure this by searching the issue list for this\nrepository. If there is a duplicate, please close your issue and add a comment\nto the existing issue instead.\n\nIf you suspect your issue is a bug, please edit your issue description to\ninclude the BUG REPORT INFORMATION shown below. If you fail to provide this\ninformation within 7 days, we cannot debug your issue and will close it. We\nwill, however, reopen it if you later provide the information.\n\nFor more information about reporting issues, see\nhttps://github.com/docker/docker/blob/master/CONTRIBUTING.md#reporting-other-issues\n\n---------------------------------------------------\nBUG REPORT INFORMATION\n---------------------------------------------------\nUse the commands below to provide key information from your environment:\nYou do NOT have to include this information if this is a FEATURE REQUEST\n-->\n\n**Describe the results you received:**\n\nin [this twitter post](https://twitter.com/solomonstre/status/759342485483184128) @shykes mentions that docker image format now includes [HEALTHCHECK](https://docs.docker.com/engine/reference/builder/#healthcheck) information, so i expected the docker image spec to contain a reference to it, but when i looked it did not.\n\n**Describe the results you expected:**\n\ni expected to see supported docker image attributes to be specified and documented.\n"},{"labels":["documentation",null],"text":"documentation — fail, can't find reason, for PR #25203, are there anyone meeting this:\n\nBuild Errors:\nFix the path under windows for dockerimages.md: https://github.com/docker/docker/pull/25203\n# Filtered (engine) Summary:\n\n```\nFound: 852 files\nFound: 0 errors\n```\n"},{"labels":["documentation",null],"text":"The API docs do not cover DELETE or POST on `/nodes/<id>`. Only GET is documented.\n"},{"labels":["documentation"],"text":"see usage case here:\n\nhttps://github.com/docker/docker/issues/25004\n"},{"labels":["documentation"],"text":"Reference to `docker daemon` v/s `dockerd` is ambiguous in \"Configuring and running Docker on various distributions\" (docs/admin/index.md).  See @mlaventure 's comment on https://github.com/docker/docker/pull/24970/files/88ebfc701238dcfacfaf1d3f0a363848460df452#r71992335\n\nThis article looks like it needs to be reworked for clarity in general. \n"},{"labels":["documentation",null],"text":"The command line reference documentation for `docker service create` and `docker service updates` lists the supported flag, but does not explain each one in detail. When possible, we should add detailed descriptions of the flags.\n\ncc @sfsmithcha\n"},{"labels":["documentation"],"text":"Current docs/tutorial refer to listen address only. When https://github.com/docker/docker/pull/24237 goes in, need to clarify the distinction between listen address and advertise address and the address auto-detection behavior.\n"},{"labels":["documentation"],"text":"need to review docs for consistent usage of \"swarm\" and \"swarm mode\"\n\n\"swarm\" is not a proper noun. It should not be capitalized except when it comes at the beginning of the sentence.\n\nThe same is true of many of the concepts for \"swarm mode:\"\nworker node, manager node, etc.\n"},{"labels":["documentation",null],"text":"Verify whether or not the rolling update implements this before waiting the update dealy\n- Wait for the health checks on individual tasks to return a state of either `Running` or `Failed`. \n"},{"labels":["documentation"],"text":"per https://github.com/docker/docker/issues/23710#issuecomment-233751568, we don't have a CLI command (yet) to view logs for a service, so for 1.12 we should document this. Related issue for 1.13; https://github.com/docker/docker/issues/24812\n\n/cc @sfsmithcha should I assign this for you? Or keep it unassigned?\n"},{"labels":["documentation",null],"text":"The event documentation needs to be updated for the `health_status:` actions that are now being sent [here](https://github.com/docker/docker/blob/576c9fa2007cfb5f379f67b11cd852800f9175c6/daemon/health.go#L142). \n"},{"labels":["documentation",null,null],"text":""},{"labels":["documentation",null],"text":"cfr: https://github.com/docker/docker/issues/23931#issuecomment-233035772\n\nThis is supported now but the usage is not clear to users.  Hopefully my comment will help to explain or maybe I could submit a patch if I somehow miraculously find some time.\n"},{"labels":["documentation",null,null],"text":"The API uses an \"open schema\", which means that new properties _may_ be added to older API versions if a newer daemon is used. However, it should still be compatible with older clients.\n\nThis is described in the documentation; https://github.com/docker/docker/blob/v1.11.2/docs/reference/api/docker_remote_api.md\n\n> Docker's Remote API uses an open schema model. In this model, unknown properties in incoming messages are ignored. Client applications need to take this behavior into account to ensure they do not break when talking to newer Docker daemons.\n\nThis wording needs some improvement, because it doesn't clearly describe that older API versions can introduce \"unknown\" properties\n"},{"labels":["documentation",null,null],"text":"Does docker swarm mode supprt high availability?  could be multi-manager in one cluster?\n"},{"labels":["documentation",null,null],"text":"Swarm integration tests have a lot of helper functions and utilities that are really useful, but really poorly organized and documented. Most of the tests themselves are in `integration-cli/docker_api_swarm_test.go`, but the helpers are spread out across files like `integration-cli/docker_utils.go`. These helper functions need doc comments describing their usage, and there needs to be a short guide written on how to use the swarm integration helpers.\n\nFor example,\n\n```\nfunc waitAndAssert(c *check.C, timeout time.Duration, f checkF, checker check.Checker, args ...interface{})\n```\n\nhas no documentation explaining usage. \n\nFurther, there are things like:\n\n```\ntype checkF func(*check.C) (interface{}, check.CommentInterface)\ntype reducer func(...interface{}) interface{}\n```\n\nIt's totally unclear what a `checkF` or a `reducer` does or how to implement one.\n\nAdding this documentation would make writing new swarm integration tests way easier. Further than just adding documentation, a good refactoring of the testing suite might be in order, to improve clarity. Breaking the swarm suite into multiple smaller suites might also be good. Pretty much the whole integration suite is a mess and it needs work, but documentation and light-touch refactoring is a really great place to start on improving it.\n"},{"labels":["documentation",null],"text":"`docker run --pid=...` was implemented in https://github.com/docker/docker/pull/10080, but only the CLI docs were updated, but not the related API changes. Support for `--pid=container:...` was added in https://github.com/docker/docker/pull/22481, which also was not documented in the API\n"},{"labels":["documentation"],"text":"We temporarily changed those links, because for this release, the docs were published before GA was released; change the links back to their actual URL before GA; see https://github.com/docker/docker/pull/24471\n"},{"labels":["documentation",null],"text":"Sorry if this is a duplicate.  I feel like I'm asking a dumb question but I couldn't figure this out even with all the documentation and tutorials.  I think it would be great if the answer went into another page of [this tutorial](https://docs.docker.com/engine/swarm/swarm-tutorial/).\n\nIn docker 1.12.0-rc3 I set up 3 nodes in swarm mode and an overlay network.  \n\nI notice the task names are predictably networktest.1, .2, .3:\n\n```\n$ docker service tasks networktest\nID                         NAME           SERVICE      IMAGE   LAST STATE         DESIRED STATE  NODE\nd6naj58s8izkb822fpd4b6tl0  networktest.1  networktest  alpine  Running 4 seconds  Running        ip-172-31-47-32.us-west-2.compute.internal\n7sglm20hhbmn1ws5fiqvqfgx5  networktest.2  networktest  alpine  Running 4 seconds  Running        ip-172-31-43-158.us-west-2.compute.internal\nau4unlfyavw5y6vhodaw2dwe4  networktest.3  networktest  alpine  Running 4 seconds  Running        ip-172-31-43-158.us-west-2.compute.internal\n```\n\nbut the container names have a random suffix:\n\n```\n[ec2-user@ip-172-31-47-32 ~]$ docker ps\nCONTAINER ID        IMAGE                           COMMAND                  CREATED             STATUS              PORTS                                  NAMES\ne67110a596b0        alpine:latest                   \"sleep 36000\"            5 minutes ago       Up 5 minutes                                               networktest.1.d6naj58s8izkb822fpd4b6tl0\n```\n\nand\n\n```\n[ec2-user@ip-172-31-43-158 ~]$ docker ps\nCONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES\n412ed90a1cd7        alpine:latest       \"sleep 36000\"       4 minutes ago       Up 3 minutes                            networktest.2.7sglm20hhbmn1ws5fiqvqfgx5\n44ea273ba889        alpine:latest       \"sleep 36000\"       4 minutes ago       Up 3 minutes                            networktest.3.au4unlfyavw5y6vhodaw2dwe4\n```\n\nHow are we then supposed to have container-to-container communication?\n\nSo giving that full randomly-generated name allows one container to ping another:\n\n```\n[ec2-user@ip-172-31-47-32 ~]$ docker exec -it e67110a596b0 ping networktest.2.7sglm20hhbmn1ws5fiqvqfgx5\nPING networktest.2.7sglm20hhbmn1ws5fiqvqfgx5 (10.0.0.4): 56 data bytes\n64 bytes from 10.0.0.4: seq=0 ttl=64 time=0.319 ms\n64 bytes from 10.0.0.4: seq=1 ttl=64 time=0.236 ms\n64 bytes from 10.0.0.4: seq=2 ttl=64 time=0.217 ms\n```\n\n_But_ I really wish this worked too:\n\n```\n[ec2-user@ip-172-31-47-32 ~]$ docker exec -it e67110a596b0 ping networktest.2\nping: bad address 'networktest.2'\n```\n\nI didn't see any parameters to `docker service create` for `links`, so how do I configure one container to communicate with another? \n\nIn [this blog](https://blog.docker.com/2016/06/docker-1-12-built-in-orchestration/) it implied the `frontend` and `redis` database would be connected with just the following commands. Was that misleading?\n\n```\ndocker network create -d overlay mynet\ndocker service create --name frontend --replicas 5 -p 80:80/tcp --network mynet mywebapp\ndocker service create --name redis --network mynet redis:latest\n```\n"},{"labels":["documentation",null],"text":"this is a raft cluster, so there needs to be a quorum of nodes available for the cluster to function\nif nodes have their address change at random, it will potentially disturb that quorum and be hard to recover from\nin production you would ​_never_​ deploy this in a way where managers aren't reachable at a fixed address (or DNS name). but maybe we can come up with a hack for laptop use that makes it more usable.\n"},{"labels":["documentation",null],"text":"The https://docs.docker.com/engine/swarm/key-concepts/ mentions  **\"By default manager nodes are also worker nodes, but you can configure managers to be manager-only nodes.\"**, I was not able to find how to configure the swarm managers to be manager-only nodes, maybe I missed something, but could someone shed some light on this? Thanks.\n"},{"labels":["documentation",null],"text":"The \"--privileged\" flag does a lot \"under the hood\"; apart from enabling all capabilities, it also disables apparmor profiles, seccomp profiles, etc.\n\nWe should document exactly what the flag does, so that people can make better decisions if they need it (or not)\n"},{"labels":["documentation",null],"text":"I have been unable to find any documentation or examples for the mount configuration option on the [docker service create](https://docs.docker.com/engine/reference/commandline/service_create/) command.  How do you express the source, target, driver and driver plugin specific options?\n"},{"labels":["documentation",null,null],"text":"<!--\nIf you are reporting a new issue, make sure that we do not have any duplicates\nalready open. You can ensure this by searching the issue list for this\nrepository. If there is a duplicate, please close your issue and add a comment\nto the existing issue instead.\n\nIf you suspect your issue is a bug, please edit your issue description to\ninclude the BUG REPORT INFORMATION shown below. If you fail to provide this\ninformation within 7 days, we cannot debug your issue and will close it. We\nwill, however, reopen it if you later provide the information.\n\nFor more information about reporting issues, see\nhttps://github.com/docker/docker/blob/master/CONTRIBUTING.md#reporting-other-issues\n\n---------------------------------------------------\nBUG REPORT INFORMATION\n---------------------------------------------------\nUse the commands below to provide key information from your environment:\nYou do NOT have to include this information if this is a FEATURE REQUEST\n-->\n\n(NOTE: attempted with both 'testing' and 'experimental' ubuntu repositories\n\n```\nosboxes@worker3:~$ docker version\nClient:\n Version:      1.12.0-rc2\n API version:  1.24\n Go version:   go1.6.2\n Git commit:   906eacd-unsupported\n Built:        Fri Jun 17 21:12:28 2016\n OS/Arch:      linux/amd64\n Experimental: true\n\nServer:\n Version:      1.12.0-rc2\n API version:  1.24\n Go version:   go1.6.2\n Git commit:   906eacd-unsupported\n Built:        Fri Jun 17 21:12:28 2016\n OS/Arch:      linux/amd64\n Experimental: true\n```\n\n**Output of `docker info`:**\n\n```\nosboxes@worker3:~$ docker info\nContainers: 12\n Running: 2\n Paused: 0\n Stopped: 10\nImages: 11\nServer Version: 1.12.0-rc2\nStorage Driver: aufs\n Root Dir: /var/lib/docker/aufs\n Backing Filesystem: extfs\n Dirs: 66\n Dirperm1 Supported: true\nLogging Driver: json-file\nCgroup Driver: cgroupfs\nPlugins:\n Volume: local\n Network: overlay host null bridge\nSwarm: active\n NodeID: aat8ei7yd02du6f7qh47aykk5\n IsManager: No\nRuntimes: default\nDefault Runtime: default\nSecurity Options: apparmor seccomp\nKernel Version: 4.4.0-28-generic\nOperating System: Ubuntu 16.04 LTS\nOSType: linux\nArchitecture: x86_64\nCPUs: 2\nTotal Memory: 2.751 GiB\nName: worker3\nID: 3PJ2:Q4UW:FPJI:URH4:7J2N:ZBTJ:3G54:YOF6:UP35:AIGW:QS7F:HZOJ\nDocker Root Dir: /var/lib/docker\nDebug Mode (client): false\nDebug Mode (server): false\nRegistry: https://index.docker.io/v1/\nWARNING: No swap limit support\nExperimental: true\nInsecure Registries:\n 127.0.0.0/8\nosboxes@worker3:~$ docker version\n```\n\n**Additional environment details (AWS, VirtualBox, physical, etc.):**\nVMware fusion VM's. tested with 2 and 3 separate VM's in a swarm\n\n**Steps to reproduce the issue:**\n1. docker swarm init; #other host;  docker swarm join ip:2377\n2. Create overlay network:\n`docker network create -d overlay my-test-network`\n3. Deploy docker containers to test. I did a quick and dirty deploy of base ubuntu images, and installed tools within them. \n`docker service create --network my-test-network --replicas 3 --name networktest ubuntu:latest sleep 36000`\n4. docker inspect ContainerID to get IP addresses of containers on network\n5. Run tcpdump on docker node (i.e. ubuntu VM) or hypervisor (i.e. mac desktop) to watch traffic on port 4789\n`sudo tcpdump -s 1500 -A -i ens37 port 4789`\n6. Observe that traffic is in cleartext (i.e. install nginx on one container in the service, then install curl on another, and grab the default page. \n\n**Describe the results you received:**\nTraffic when inspected via tcpdump is in cleartext (i.e. http traffic is clearly visible)\n\n**Describe the results you expected:**\nExpected to see encapsulated traffic. Not sure if this is expected and I'm not testing this correctly, or what. I.e. do I need two physically separate hosts, mirror a switch port, and watch traffic there, and/or is bridge mode networking within the mac/vmware fusion confusing things?\n\n**Additional information you deem important (e.g. issue happens only occasionally):**\n"},{"labels":["documentation"],"text":"On the [Getting started with swarm mode](https://docs.docker.com/engine/swarm/swarm-tutorial/#/the-ip-address-of-the-manager-machine) page, we just need to remove `Tip: Docker recommends that every node in the cluster be on the same layer 3 (IP) subnet with all traffic permitted between nodes.` towards the bottom of the page since there is no broadcast domain constraint. Ping @thaJeztah \n\nThanks!\n"},{"labels":["documentation"],"text":"cfr.: https://github.com/docker/docker/issues/24076#issuecomment-229734136\n\n@sfsmithcha @tiborvass \n"},{"labels":["documentation",null,null],"text":"**Output of `docker version`:**\n\n```\nClient:\n Version:      1.12.0-rc2\n API version:  1.24\n Go version:   go1.6.2\n Git commit:   906eacd\n Built:        Fri Jun 17 20:35:33 2016\n OS/Arch:      linux/amd64\n Experimental: true\n\nServer:\n Version:      1.12.0-rc2\n API version:  1.24\n Go version:   go1.6.2\n Git commit:   906eacd\n Built:        Fri Jun 17 20:35:33 2016\n OS/Arch:      linux/amd64\n Experimental: true\n```\n\n**Output of `docker info`:**\n\n```\nContainers: 8\n Running: 8\n Paused: 0\n Stopped: 0\nImages: 228\nServer Version: 1.12.0-rc2\nStorage Driver: aufs\n Root Dir: /var/lib/docker/aufs\n Backing Filesystem: extfs\n Dirs: 761\n Dirperm1 Supported: true\nLogging Driver: json-file\nCgroup Driver: cgroupfs\nPlugins:\n Volume: local\n Network: bridge null overlay host\nSwarm: active\n NodeID: bzk4vv65idjvtxi09gdqtfwbd\n IsManager: Yes\n Managers: 1\n Nodes: 1\n CACertHash: sha256:c0fdf51a4eaa403e7119c77001349cf6bc025542e166179a7ae3ba50f5b422f9\nRuntimes: default\nDefault Runtime: default\nSecurity Options: apparmor seccomp\nKernel Version: 3.16.0-73-generic\nOperating System: Ubuntu 14.04.4 LTS\nOSType: linux\nArchitecture: x86_64\nCPUs: 8\nTotal Memory: 31.06 GiB\nName: j-think\nID: OCMX:LCWD:ZLEO:SGYW:ZWUQ:YLI3:TPPY:4ZLH:GBXC:PKJ2:FNNF:TOOL\nDocker Root Dir: /var/lib/docker\nDebug Mode (client): false\nDebug Mode (server): false\nUsername: johnharris85\nRegistry: https://index.docker.io/v1/\nWARNING: No swap limit support\nExperimental: true\nInsecure Registries:\n 127.0.0.0/8\n```\n\n**Steps to reproduce the issue:**\n1. `docker swarm init`\n2. `docker swarm inspect`\n\n**Describe the results you received:**\nI see only the worker marked to auto-accept into the swarm.\n\n**Describe the results you expected:**\nI expect to see both manager and work set to auto-accept into the swarm as per the documentation here: https://docs.docker.com/engine/reference/commandline/swarm_init/.\n\nWhat's the desired behaviour here? I'm happy to submit a PR for either the docs or the swarm defaults. Personally think the current behavior should stay and docs should be updated (seems like a sensible default).\n"},{"labels":["documentation"],"text":"It would be nice if the documentation contains best practices for operating swarm managers.\n\nFor example:\n- Are swarm managers like mesos masters which needs to be operated in odd numbers to maintain quorum?\n- What is the maximum number of managers you should have in a swarm? Are they like Zookeeper ensembles where as the number of members in the ensemble increases, the write performance decreases?\n- Is it advisable to make every node a manager, so that we can administrate the swarm from any node?\n- Can swarm be run in high availability mode? If so, is there an example?\n"},{"labels":[null,"documentation",null,null,null,null],"text":"Taken from the CLI reference page of `docker node tasks`:\n\n> The `name` filter matches on all or part of a task's name.\n\nThis is wrong. The filtering is applied on the **exact service name**, see example below.\n\nI think this is actually more useful than filtering on task names and therefore propose to **change the filter name from `name` to `service`**.\n\nFurthermore, filtering should be extended to also cover substring matches, not only exact matches.\n\n``` bash\n$ docker service create --name top busybox top\n7ieif28g1smw7ppav7wiausmz\n\n# a task with name top.1 was created on this node\n$ docker node tasks self\nID                         NAME   SERVICE  IMAGE    LAST STATE          DESIRED STATE  NODE\nbrscnd76m5eh8l3cvmpt5lkj4  top.1  top      busybox  Running 51 seconds  Running        bd4242800842\n\n# filtering by part of the task's name does not find the task\n$ docker node tasks --filter name=to self\nID  NAME  SERVICE  IMAGE  LAST STATE  DESIRED STATE  NODE\n\n# filtering by the task's exact name does not find the task\n$ docker node tasks --filter name=top.1 self\nID  NAME  SERVICE  IMAGE  LAST STATE  DESIRED STATE  NODE\n\n# ==> only filtering by the SERVICE's name finds the task <==\n$ docker node tasks --filter name=top self\nID                         NAME   SERVICE  IMAGE    LAST STATE              DESIRED STATE  NODE\nbrscnd76m5eh8l3cvmpt5lkj4  top.1  top      busybox  Running About a minute  Running        bd4242800842\n\n$ docker version\nClient:\n Version:      1.12.0-dev\n API version:  1.25\n Go version:   go1.6.2\n Git commit:   83e6197-unsupported\n Built:        Tue Jun 28 20:00:19 2016\n OS/Arch:      linux/amd64\n\nServer:\n Version:      1.12.0-dev\n API version:  1.25\n Go version:   go1.6.2\n Git commit:   83e6197-unsupported\n Built:        Tue Jun 28 20:00:19 2016\n OS/Arch:      linux/amd64\n```\n"},{"labels":["documentation",null,null],"text":"**Output of `docker version`:**\nroot@xxxxx:~# docker version\nClient:\n Version:      1.12.0-rc2\n API version:  1.24\n Go version:   go1.6.2\n Git commit:   906eacd\n Built:        Fri Jun 17 21:09:07 2016\n OS/Arch:      linux/amd64\n\nServer:\n Version:      1.12.0-rc2\n API version:  1.24\n Go version:   go1.6.2\n Git commit:   906eacd\n Built:        Fri Jun 17 21:09:07 2016\n OS/Arch:      linux/amd64\n\nroot@xxxxx:~# docker-compose version\ndocker-compose version 1.8.0-rc1, build 9bf6bc6\ndocker-py version: 1.8.1\nCPython version: 2.7.9\nOpenSSL version: OpenSSL 1.0.1e 11 Feb 2013\n\n**Output of `docker info`:**\nContainers: 49\n Running: 0\n Paused: 0\n Stopped: 49\nImages: 109\nServer Version: 1.12.0-rc2\nStorage Driver: aufs\n Root Dir: /var/lib/docker/aufs\n Backing Filesystem: extfs\n Dirs: 246\n Dirperm1 Supported: true\nLogging Driver: json-file\nCgroup Driver: cgroupfs\nPlugins:\n Volume: local\n Network: bridge overlay null host\nSwarm: active\n NodeID: 34lgngb2j2iufvk046th0p6qq\n IsManager: Yes\n Managers: 1\n Nodes: 3\n CACertHash: sha256:4dd1a761493f5ef3fcaa783113b85b935a7686cc954f5507af9b3743b87cd5b9\nRuntimes: default\nDefault Runtime: default\nSecurity Options: apparmor seccomp\nKernel Version: 3.16.0-30-generic\nOperating System: Ubuntu 14.04.2 LTS\nOSType: linux\nArchitecture: x86_64\nCPUs: 2\nTotal Memory: 1.955 GiB\nName: pek2-gosv-16-dhcp226\nID: 2B4M:L4M2:6Q3A:HLAU:3CNJ:JA7I:34T3:NRBA:BGY6:RY5A:4AS3:AC6L\nDocker Root Dir: /var/lib/docker\nDebug Mode (client): false\nDebug Mode (server): false\nHttp Proxy: xxxx.some.com:1234\nHttps Proxy: xxxx.some.com:1234\nRegistry: https://index.docker.io/v1/\nWARNING: No swap limit support\nInsecure Registries:\n 127.0.0.0/8\n\n**Additional environment details (AWS, VirtualBox, physical, etc.):**\n\n**Steps to reproduce the issue:**\n0. Prepare three ubuntu14.04 machines, here I used VMware VMs\n1. Upgrade docker engine to v1.12rc2\n2. (Optional)Upgrade docker compose 1.8.0-rc1 (I could also reproduce this issue on earlier version such as  v1.6.1GA)\n3. create a swarm cluster with 1 manger node and 2 slave nodes,  as documented in v1.12 swarm-mode doc. Here in my network setup, \"ingress\" is swarm created overlay network\npengzhencao@pek2-gosv-16-dhcp226:~/docker/docker$ docker node list\nID                           NAME                  MEMBERSHIP  STATUS  AVAILABILITY  MANAGER STATUS\n34lgngb2j2iufvk046th0p6qq \\*  pek2-gosv-16-dhcp226  Accepted    Ready   Active        Leader\n37fmlm52xw0iy7k6zoo5j09px    pek2-gosv-16-dhcp160  Accepted    Ready   Active\n61lw7iskl9ivnxaveby8dfaf1    pek2-gosv-16-dhcp45   Accepted    Ready   Active\npengzhencao@pek2-gosv-16-dhcp226:~/docker/docker$ docker network list\nNETWORK ID          NAME                DRIVER              SCOPE\n8b94d08c0f67        bridge              bridge              local\n74b71c054864        deploy_default      bridge              local\nabd08b2c6c5d        docker_gwbridge     bridge              local\n651d9df026eb        host                host                local\n7oywymoz6bbp        ingress             overlay             swarm\n18e3039be16b        none                null                local\n1. On the swarm manager node, edit docker-compose.yml file with the following settings:\n   version: '2'\n   services:\n   log:\n     build: ./log/\n     volumes:\n       - /var/log/harbor/:/var/log/docker/\n     ports:\n       - 1514:514\n   ....(some other services)\n   networks:\n   default:\n     external:\n       name: ingress\n2. run with \"docker-compose up\"\n\n**Describe the results you received:**\npengzhencao@pek2-gosv-16-dhcp226:~/harbor/Deploy$ docker-compose up\nRecreating deploy_log_1\nERROR: for log  swarm-scoped network (ingress) is not compatible with `docker create` or `docker run`. This network can be only used docker service\nERROR: Encountered errors while bringing up the project.\n**Describe the results you expected:**\nDocker compose should deploy the services up with overlay network \"ingress\"\n\n**Additional information you deem important (e.g. issue happens only occasionally):**\nI've followed swarm and docker-compose integration guide here:\nhttps://docs.docker.com/compose/networking/\n\nThe above error seems to be thrown in L356:\nin  docker/daemon/container_operations.go\n330 func errClusterNetworkOnRun(n string) error {\n331         return fmt.Errorf(\"swarm-scoped network (%s) is not compatible with `docker create` or `docker run`. This network can be only used     docker service\", n)\n332 }\n333\n334 // updateContainerNetworkSettings update the network settings\n335 func (daemon _Daemon) updateContainerNetworkSettings(container *container.Container, endpointsConfig map[string]_networktypes.EndpointSetti    ngs) error {\n336         var (\n337                 n   libnetwork.Network\n338                 err error\n339         )\n340\n341         mode := container.HostConfig.NetworkMode\n342         if container.Config.NetworkDisabled || mode.IsContainer() {\n343                 return nil\n344         }\n345\n346         networkName := mode.NetworkName()\n347         if mode.IsDefault() {\n348                 networkName = daemon.netController.Config().Daemon.DefaultNetwork\n349         }\n350         if mode.IsUserDefined() {\n351                 n, err = daemon.FindNetwork(networkName)\n352                 if err != nil {\n353                         return err\n354                 }\n355                 if !container.Managed && n.Info().Dynamic() {\n356                         return errClusterNetworkOnRun(networkName)\n357                 }\n358                 networkName = n.Name()\n359         }\n360 \n"},{"labels":["documentation"],"text":"The use of constraints should be documented in the reference. While https://github.com/docker/docker/blob/master/docs/reference/commandline/service_create.md says that the `--constraint` flag exists when creating a service, it is unclear how this is to be used and whether the same usage as docker/swarm applies.\n\nIt would also be nice to have a few examples showing how this is to be used.\n"},{"labels":[null,"documentation",null,null],"text":"`docker service scale`... Why is the _the only_ parameter which can be updated through both a first-class command _and_ through `docker service update`?  Isn't that a bit inconsistent?\n\nI know that it was this way in Docker Compose, but is including Docker Compose vestiges in the new `docker swarm` _really_ a good idea?  Will this inclusion of a Docker Compose vestige set a user expectation for `docker swarm` to imitate Compose closely in other ways as well?\n\nHere's our last chance to pull it, before it becomes canon and removing it breaks hundreds of shell scripts.  Feel free to close if I'm way off mark here.\n\n@aluzzardi @vieux @dnephin @abronan \n"},{"labels":["documentation",null],"text":"According to the engine-api Docs, resource settings are \"NanoCPUs\" and \"MemoryBytes\" - https://godoc.org/github.com/docker/engine-api/types/swarm#Resources\n\nThe corresponding docs for the remote API show simply \"CPU\" and \"Memory\" https://github.com/docker/docker/blob/master/docs/reference/api/docker_remote_api_v1.24.md#create-a-service\n"},{"labels":[null,"documentation"],"text":"On `Docker version 1.11.2, build b9f10c9`, both `POST /v1.23/containers/<container ID>/exec` and `POST /v1.23/exec/<exec ID>/start` have the following body:\n\n``` json\n{\n  \"AttachStderr\": true,\n  \"AttachStdin\": true,\n  \"AttachStdout\": true,\n  \"Cmd\": [\n    \"true\"\n  ],\n  \"Container\": \"<container ID>\",\n  \"Detach\": false,\n  \"DetachKeys\": \"\",\n  \"Privileged\": false,\n  \"Tty\": true,\n  \"User\": \"\"\n}\n```\n\nOn `Docker version 1.12.0-rc2, build 906eacd, experimental`, both `POST /v1.24/containers/<container ID>/exec` and `POST /v1.24/exec/<exec ID>/start` have the following body:\n\n``` json\n{\n  \"AttachStderr\": true,\n  \"AttachStdin\": true,\n  \"AttachStdout\": true,\n  \"Cmd\": [\n    \"true\"\n  ],\n  \"Detach\": false,\n  \"DetachKeys\": \"\",\n  \"Privileged\": false,\n  \"Tty\": true,\n  \"User\": \"\"\n}\n```\n\nNote that the bodies are different -- the v1.23 body includes the container ID. This change doesn't appear in the Remote API documentation.\n"},{"labels":["documentation"],"text":"#23790 added support for this as an environment variable `DOCKER_SERVICE_PREFER_OFFLINE_IMAGE` to support our integration tests.\n\nWe should figure out if we want to:\n- document this\n- make it configurable in some other way\n- use digest or image IDs to avoid pulling if local image is present.\n\nI'd prefer not to rush this for 1.12 timeframe.\n\n@vdemeester \n"},{"labels":["documentation",null],"text":"When rendering a left nav where selections in that area render pages in the main content area, it's important to have a clear indication in the left nav where the user is.  That is, where the content for the main content area came from.\n\nI imagine I could find many examples of this, but I'm currently looking at [Docker networks feature overview](https://docs.docker.com/engine/userguide/networking/).  I would provide a screenshot, but imagebin isn't working for me right now.\n\nWhat I see on the screen indicates that I might be somewhere in the \"User Guide\" section, and I imagine that I know this page is talking about networking, so I might be somewhere around the \"Network configuration\" section, but the rendering of the left nav isn't helping me here.\n"},{"labels":["documentation",null],"text":"On the documentation page [_Automatically start containers_](https://docs.docker.com/engine/admin/host_integration/) the example for a [systemd](https://freedesktop.org/wiki/Software/systemd/) [service unit](https://docs.docker.com/engine/admin/host_integration/#systemd) with `docker run` is given as below.\n\n```\n[Service]\n…\nExecStart=/usr/bin/docker run --env foo=bar --name redis_server redis\nExecStop=/usr/bin/docker stop -t 2 redis_server ; /usr/bin/docker rm -f redis_server\n…\n```\n\nThis should be changed to the example below, using `ExecStopPost`.\n\n```\n[Service]\n…\nExecStart=/usr/bin/docker run --env foo=bar --name redis_server redis\nExecStop=/usr/bin/docker stop -t 2 redis_server\nExecStopPost=/usr/bin/docker rm -f redis_server\n…\n```\n\nFrom the [manual](https://www.freedesktop.org/software/systemd/man/systemd.service.html):\n\n> `ExecStop=`\n> \n> It is recommended to use this setting for commands that communicate with the service requesting clean termination. When the commands specified with this option are executed it should be assumed that the service is still fully up and is able to react correctly to all commands. For post-mortem clean-up steps use ExecStopPost= instead.\n> \n> `ExecStopPost=`\n> \n> Additional commands that are executed after the service is stopped. This includes cases where the commands configured in ExecStop= were used, where the service does not have any ExecStop= defined, or where the service exited unexpectedly. This argument takes multiple command lines, following the same scheme as described for ExecStart=. Use of these settings is optional. Specifier and environment variable substitution is supported. Note that – unlike ExecStop= – commands specified with this setting are invoked when a service failed to start up correctly and is shut down again.\n> \n> It is recommended to use this setting for clean-up operations that shall be executed even when the service failed to start up correctly. Commands configured with this setting need to be able to operate even if the service failed starting up half-way and left incompletely initialized data around. As the service's processes have been terminated already when the commands specified with this setting are executed they should not attempt to communicate with them.\n\nSo to ensure, that the Docker container is really deleted, and the service will start up again, after an unclean shutdown, that means the Docker container is stopped, but is still around, the Docker container deletion command should be in the directive `ExecStopPost=`.\n"},{"labels":["documentation",null],"text":"Feedback on Debian install from John Clements clements@brinckerhoff.org\n\nOn the Debian install page,\n\nhttps://docs.docker.com/engine/installation/linux/debian/\n\nStep 3 of the “update your apt” section reads:\n\n $ apt-get purge lxc-docker*\n $ apt-get purge docker.io*\n\nUnfortunately, on some shells, the globber will get ahold of the asterisk and try to find files in the local directory starting with lxc-docker, which isn’t what you want at all. Instead, this should probably read:\n\n $ apt-get purge \"lxc-docker_\"\n $ apt-get purge “docker.io_”\n\nThen, later, you suggest obtaining the signing key for the project with\n\n $ apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118 E89F3A912897C070ADBF76221572C52609D\n\nThis timed out for me repeatedly, but I tried\n\n $ apt-key adv --keyserver hkp://pool.sks-keyservers.net:80 --recv-keys 58118 E89F3A912897C070ADBF76221572C52609D\n\n… and that worked fine. Dunno if this is a transient failure, but I’m guessing the more general address is probably more robust.\n\nFinally, and this is minor, you might want to replace the calls to `service` with calls to `systemctl`.\n\nThanks!\n\nJohn Clements\n"},{"labels":["documentation"],"text":"On your blog, you said the file extension .dab. but in the github repo, your file extension .dsb\n\nwhat's different with two file extension?\n\nhttps://blog.docker.com/2016/06/docker-app-bundle/\n\n![selection_034](https://cloud.githubusercontent.com/assets/278153/16214910/a5a46042-378f-11e6-99f8-4d1ed45ba41d.png)\n\nhttps://github.com/docker/docker/blob/master/experimental/docker-stacks-and-bundles.md\n![selection_035](https://cloud.githubusercontent.com/assets/278153/16214913/bb3ce226-378f-11e6-9fe5-72dfebe093ed.png)\n"},{"labels":[null,"documentation",null,null,null],"text":"**Output of `docker version`:**\n\nClient (laptop, OSX)\n\n```\n$> docker version\nClient:\n Version:      1.12.0-rc2\n API version:  1.24\n Go version:   go1.6.2\n Git commit:   906eacd\n Built:        Fri Jun 17 20:35:33 2016\n OS/Arch:      darwin/amd64\n Experimental: true\n\nServer:\n Version:      1.12.0-rc2\n API version:  1.24\n Go version:   go1.6.2\n Git commit:   a7119de\n Built:        Fri Jun 17 22:09:20 2016\n OS/Arch:      linux/amd64\n Experimental: true\n```\n\nServer:\n\n```\nClient:\n Version:      1.12.0-rc2\n API version:  1.24\n Go version:   go1.6.2\n Git commit:   906eacd-unsupported\n Built:        Fri Jun 17 21:21:56 2016\n OS/Arch:      linux/amd64\n\nServer:\n Version:      1.12.0-rc2\n API version:  1.24\n Go version:   go1.6.2\n Git commit:   906eacd-unsupported\n Built:        Fri Jun 17 21:21:56 2016\n OS/Arch:      linux/amd64\n```\n\n**Output of `docker info`:**\n\nClient:\n\n```\nContainers: 78\n Running: 0\n Paused: 0\n Stopped: 78\nImages: 51\nServer Version: 1.12.0-rc2\nStorage Driver: aufs\n Root Dir: /var/lib/docker/aufs\n Backing Filesystem: extfs\n Dirs: 344\n Dirperm1 Supported: true\nLogging Driver: json-file\nCgroup Driver: cgroupfs\nPlugins:\n Volume: local\n Network: overlay bridge null host\nSwarm: inactive\nRuntimes: default\nDefault Runtime: default\nSecurity Options: seccomp\nKernel Version: 4.4.13-moby\nOperating System: Alpine Linux v3.4\nOSType: linux\nArchitecture: x86_64\nCPUs: 4\nTotal Memory: 1.954 GiB\nName: moby\nID: AX3N:B5KC:6TY6:V5UW:5MAH:JSD3:PXBN:HC3H:GF3L:GC7L:Z35R:KAIW\nDocker Root Dir: /var/lib/docker\nDebug Mode (client): false\nDebug Mode (server): true\n File Descriptors: 33\n Goroutines: 95\n System Time: 2016-06-20T22:09:37.819574454Z\n EventsListeners: 1\nNo Proxy: *.local, 169.254/16\nRegistry: https://index.docker.io/v1/\nExperimental: true\nInsecure Registries:\n 127.0.0.0/8\n```\n\nServer (swarm cluster):\n\n```\nContainers: 0\n Running: 0\n Paused: 0\n Stopped: 0\nImages: 0\nServer Version: 1.12.0-rc2\nStorage Driver: aufs\n Root Dir: /var/lib/docker/aufs\n Backing Filesystem: extfs\n Dirs: 0\n Dirperm1 Supported: true\nLogging Driver: json-file\nCgroup Driver: cgroupfs\nPlugins:\n Volume: local\n Network: overlay host null bridge\nSwarm: inactive\nRuntimes: default\nDefault Runtime: default\nSecurity Options: apparmor seccomp\nKernel Version: 4.4.0-24-generic\nOperating System: Ubuntu 16.04 LTS\nOSType: linux\nArchitecture: x86_64\nCPUs: 1\nTotal Memory: 991.1 MiB\nName: docker1\nID: LOR7:TUJW:PXCF:SGKX:L5LU:GQCT:UTRN:G72M:JU32:I24J:JN3R:BN34\nDocker Root Dir: /var/lib/docker\nDebug Mode (client): false\nDebug Mode (server): false\nRegistry: https://index.docker.io/v1/\nInsecure Registries:\n 127.0.0.0/8\n```\n\n**Additional environment details (AWS, VirtualBox, physical, etc.):**\n\n**Steps to reproduce the issue:**\n1. Set up a remote swarm cluster - mine is 4 remote nodes, 2 leaders\n2. On your laptop, run:\n\n```\n$> docker swarm join swarmIP:2377\nThis node joined a Swarm as a worker.\n```\n1. On the leader:\n\n```\ndocker node ls\nID                         NAME     MEMBERSHIP  STATUS  AVAILABILITY  MANAGER STATUS\n09y7cdu03xmuwhta0ykvd72gb  docker4  Accepted    Ready   Active        Reachable\n1jkzrkblwbdig3l5u29997n00  docker1  Accepted    Ready   Active        Leader\n41znz1ntskwvvvea8up52wu0m  docker2  Accepted    Ready   Active        \n5bt1bcak4tuzm9a39a7ou9upz  docker3  Accepted    Ready   Active        \n7ljlfo1zqcid0mc8cmir64i6g  moby     Accepted    Ready   Active \n```\n\n**Describe the results you received:**\n\nMy 'rogue' laptop was able to join the swarm cluster as a worker and shows up in the manager list as ready and active.\n\n**Describe the results you expected:**\n\nI expected the join command to require approval from a manager node as it does in manager mode\n\n**Additional information you deem important (e.g. issue happens only occasionally):**\n"},{"labels":["documentation"],"text":"Per @thaJeztah , verify correct version of api docs post-1.12 release. Ref https://github.com/docker/docker/pull/23777 .\n"},{"labels":["documentation"],"text":"Review consistency of CLI reference with the code on the new commands:\n- `docker node`\n- `docker service`\n- `docker swarm`\n"},{"labels":["documentation"],"text":"Review consistency of API reference with the code on the new endpoints:\n- Node endpoints\n- Service endpoints\n- Swarm endpoints\n"},{"labels":[null,"documentation",null],"text":"**Output of `docker version`:**\n\n```\nClient:\n Version:      1.11.2\n API version:  1.23\n Go version:   go1.5.4\n Git commit:   b9f10c9\n Built:        Wed Jun  1 22:00:43 2016\n OS/Arch:      linux/amd64\n\nServer:\n Version:      1.11.2\n API version:  1.23\n Go version:   go1.5.4\n Git commit:   b9f10c9\n Built:        Wed Jun  1 22:00:43 2016\n OS/Arch:      linux/amd64\n\n```\n\n**Output of `docker info`:**\n\n```\nContainers: 4\n Running: 0\n Paused: 0\n Stopped: 4\nImages: 4\nServer Version: 1.11.2\nStorage Driver: aufs\n Root Dir: /var/lib/docker/aufs\n Backing Filesystem: extfs\n Dirs: 15\n Dirperm1 Supported: true\nLogging Driver: json-file\nCgroup Driver: cgroupfs\nPlugins: \n Volume: local\n Network: bridge null host\nKernel Version: 4.4.0-22-generic\nOperating System: Ubuntu 16.04 LTS\nOSType: linux\nArchitecture: x86_64\nCPUs: 4\nTotal Memory: 7.676 GiB\nName: maxnoe-mac\nID: AJ2Z:G6U4:LKAZ:PXNC:PBBJ:7B73:BM6B:NYTX:JZAS:XW6H:VAV2:7XDM\nDocker Root Dir: /var/lib/docker\nDebug mode (client): false\nDebug mode (server): false\nRegistry: https://index.docker.io/v1/\nWARNING: No swap limit suppor\n```\n\n**Steps to reproduce the issue:**\n1. Try logging in to a registry with self signed certificates\n\n```\ndocker login myregstry.example.com:5000\n```\n\nThis worked with docker `1.9` on my machine because I have `--insecure-registry myregistry.example.com:5000` added to the `DOCKER_OPTS` in `/etc/defaults/docker`.\nAlso I registered the certificate system wide. `curl` works without providing the certificate explicitly\n\n**Describe the results you received:**\n`Error response from daemon: Get https://registry.e5.physik.tu-dortmund.de:5000/v1/users/: x509: certificate signed by unknown authority`\n\nOr, when also added to `/etc/docker/certs.d/<url>/ca.crt`:\n`Error response from daemon: Get https://registry.e5.physik.tu-dortmund.de:5000/v1/users/: x509: certificate signed by unknown authority (possibly because of \"x509: invalid signature: parent certificate cannot sign this kind of certificate\" while trying to verify candidate authority certificate \"registry.e5.physik.tu-dortmund.de\")`\n\n**Describe the results you expected:**\nSuccesfull login\n\n**Additional information you deem important (e.g. issue happens only occasionally):**\nThe registry is running as a rancher service behind a loadbalancer.\n"},{"labels":["documentation",null,null],"text":"> Mount volume (-v, --read-only)\n> \n> `$ docker  run  -v `pwd`:`pwd` -w `pwd` -i -t  ubuntu pwd`\n> \n> The -v flag mounts the current working directory into the container. The -w lets the command being executed inside the current working directory, by changing into the directory to the value returned by pwd. So this combination executes the command using the container, but inside the current working directory.\n\nSource: https://github.com/docker/docker/blob/master/docs/reference/commandline/run.md#mount-volume--v---read-only\n\nAreas for improvement: :smiley: \n- It assumes the user understands `pwd` command is evaluated to get the current working directory: Perhaps it's simpler to use `/current/directory` in the example instead? (Similar to the the `/doesnt/exist` used in the example just below this block.)\n- Explanation for `-w` switch is confusing. My understanding is that the `-w` refers to a working directory **insider** the container. So the example should explain that the command is executed in a directory inside the container that happens to have the same name as the current working directory. In additional, because of the bind volume, the directory inside the container is mapped to the current working directory on the host.\n"},{"labels":["documentation",null,null],"text":"The installation instructions currently use `$releasever` to configure the right YUM repository to use, however the instructions don't take into account the `Server` releases output the version in a different format (e.g. `7Server` instead of just `7`).\n\n```\n$ sudo tee /etc/yum.repos.d/docker.repo <<-'EOF'\n[dockerrepo]\nname=Docker Repository\nbaseurl=https://yum.dockerproject.org/repo/main/centos/$releasever/\nenabled=1\ngpgcheck=1\ngpgkey=https://yum.dockerproject.org/gpg\nEOF\n```\n\nThe installation script correctly strips the `Server` before generating the URL, so we should update the documentation to do the same, or show how to;\nhttps://github.com/docker/docker/blob/v1.11.2/hack/install.sh#L283-L285\n\nAs reported by Aleksandr Vinokurov on Twitter https://twitter.com/aleksandrvin/status/740548856316858368 (thanks!)\n\nAlso;\nhttps://access.redhat.com/discussions/2134691\n"},{"labels":["documentation",null],"text":"<!--\nIf you are reporting a new issue, make sure that we do not have any duplicates\nalready open. You can ensure this by searching the issue list for this\nrepository. If there is a duplicate, please close your issue and add a comment\nto the existing issue instead.\n\nIf you suspect your issue is a bug, please edit your issue description to\ninclude the BUG REPORT INFORMATION shown below. If you fail to provide this\ninformation within 7 days, we cannot debug your issue and will close it. We\nwill, however, reopen it if you later provide the information.\n\nFor more information about reporting issues, see\nhttps://github.com/docker/docker/blob/master/CONTRIBUTING.md#reporting-other-issues\n\n---------------------------------------------------\nBUG REPORT INFORMATION\n---------------------------------------------------\nUse the commands below to provide key information from your environment:\nYou do NOT have to include this information if this is a FEATURE REQUEST\n-->\n\n**Output of `docker version`:**\n\n```\nClient:\n Version:      1.11.2\n API version:  1.23\n Go version:   go1.5.4\n Git commit:   b9f10c9\n Built:        Wed Jun  1 22:00:43 2016\n OS/Arch:      linux/amd64\n\nServer:\n Version:      1.11.2\n API version:  1.23\n Go version:   go1.5.4\n Git commit:   b9f10c9\n Built:        Wed Jun  1 22:00:43 2016\n OS/Arch:      linux/amd64\n```\n\n**Output of `docker info`:**\n\n```\nContainers: 16\n Running: 13\n Paused: 0\n Stopped: 3\nImages: 270\nServer Version: 1.11.2\nStorage Driver: overlay\n Backing Filesystem: extfs\nLogging Driver: json-file\nCgroup Driver: cgroupfs\nPlugins: \n Volume: local\n Network: bridge null host\nKernel Version: 4.4.0-22-generic\nOperating System: Ubuntu 16.04 LTS\nOSType: linux\nArchitecture: x86_64\nCPUs: 8\nTotal Memory: 15.54 GiB\nName: bacigalubupc\nID: 4SXZ:24LJ:CLDS:NRQJ:BLRE:WMA3:BVVO:MOGC:DXNW:7COX:L5DX:F4Y6\nDocker Root Dir: /home/UX/lbacigalux/docker\nDebug mode (client): false\nDebug mode (server): true\n File Descriptors: 87\n Goroutines: 145\n System Time: 2016-06-02T16:25:00.463460097+02:00\n EventsListeners: 0\nUsername: lbacigal\nRegistry: https://index.docker.io/v1/\n\n```\n\n**Additional environment details (AWS, VirtualBox, physical, etc.):**\n\n**Steps to reproduce the issue:**\n1. `docker volume ls -f name=rose` or `docker volume ls -f driver=local`\n\n**Describe the results you received:**\nError response from daemon: Invalid filter 'name'\n\n**Describe the results you expected:**\nBased on this https://docs.docker.com/engine/reference/commandline/volume_ls/\n\n| DRIVER | VOLUME NAME |\n| --- | --- |\n| local | rosemary |\n\n**Additional information you deem important (e.g. issue happens only occasionally):**\nfilter dangling is working\n"},{"labels":["documentation"],"text":"Given there are apparently duplicate properties at the options level and HostConfig level the lack of documentation for the containers/create endpoint in the [Remote API](https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/#create-a-container) is a blocker.\n\nIn particular, without deep knowledge of the system, how are adopters supposed to differentiate between...\n\n`options.Volumes` vs. `options.HostConfig.Binds`\n\n...or...\n\n`options.ExposedPorts` vs. `options.HostConfig.PortBindings`\n\n...as they appear to be doing the same thing. Probably they are not, but really as [noted before](https://github.com/docker/docker/issues/2949) in an issue not properly closed according to those in the thread, these things are NOT self-describing. If the conventions correspond to equivalent operations documented elsewhere, then this link should be explicit.\n\nHostConfig is not even labelled - what does it do? Isn't the whole JSON-ish structure a host configuration? This is particularly galling since the /run endpoint describes that it 'takes a HostConfig' for backwards compatibility, and links to the documentation for containers/create to clarify, where there is no information describing what the HostConfig object is for, (versus the whole options object, which contains a bunch of host-specific config).\n\nBACKGROUND\n\nI am trying to execute through the Remote API a self-removing (--rm) container configuration already verified interactively through a command line `docker run` invocation. I can't be the only person who works in this way, starting with docker run, and then trying to use an API to automate invocation. \n\nMy attempt to code this through dockerode (backed by the Remote API) very challenging simply because the documentation is so poor (dockerode points to the Remote API documentation as documentation for its own API). \n"},{"labels":["documentation",null,null],"text":"Kube's is somehow generating docs, I didn't look into the details but it's prettty cool, even if its slow as eff to run (maybe we can make it better, I didn't really dig deep). Then maybe we don't have to think about so many things :)\n\nhttps://github.com/kubernetes/kubernetes/blob/master/hack/update-generated-docs.sh\n"},{"labels":[null,"documentation"],"text":"<!--\nIf you are reporting a new issue, make sure that we do not have any duplicates\nalready open. You can ensure this by searching the issue list for this\nrepository. If there is a duplicate, please close your issue and add a comment\nto the existing issue instead.\n\nIf you suspect your issue is a bug, please edit your issue description to\ninclude the BUG REPORT INFORMATION shown below. If you fail to provide this\ninformation within 7 days, we cannot debug your issue and will close it. We\nwill, however, reopen it if you later provide the information.\n\nFor more information about reporting issues, see\nhttps://github.com/docker/docker/blob/master/CONTRIBUTING.md#reporting-other-issues\n\n---------------------------------------------------\nBUG REPORT INFORMATION\n---------------------------------------------------\nUse the commands below to provide key information from your environment:\nYou do NOT have to include this information if this is a FEATURE REQUEST\n-->\n\nhttps://docs.docker.com/engine/reference/api/docker_remote_api_v1.23\n\nCreate a container -- status codes:\n[mistake] 404: no such container --> image\n[miss] 409: the name \"xxx\" is already in use\n[confuse] 406: impossible to attach.\nHow to trigger a 406 error in a create action?\n\nStart a container -- status codes:\n[mistake] 404: no such container --> can also be \"executable file not found in $PATH\"\n"},{"labels":["documentation",null,null],"text":"I've tried to wrap my head around the [Docker IPv6 cluster documentation](https://docs.docker.com/engine/userguide/networking/default_network/ipv6/), but something does not work out.\n\nIt seems that both graphics for [Switched network environment](https://docs.docker.com/engine/userguide/networking/default_network/images/ipv6_switched_network_example.svg)\n![image](https://cloud.githubusercontent.com/assets/636669/15391455/90ccb634-1dc1-11e6-917f-a1da758b3777.png)\nand [Routed network environment](https://docs.docker.com/engine/userguide/networking/default_network/images/ipv6_routed_network_example.svg)\n![image](https://cloud.githubusercontent.com/assets/636669/15391479/aa4a9cfc-1dc1-11e6-8a56-db728d0be83e.png)\n are identical (beside some typos) and are not helping with my issue.\n\nMy use case:\n\nI have a /48 network (`2001:XXXX:45::/48`) and routed two /64 subnetworks (`2001:XXXX:45:2::/64` and `2001:XXXX:45:3::/64`) to my host and assigned one of it to the host and the other to the containers. So Host1 has\n\n```\n$ # ip -6 addr\n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536\n    inet6 ::1/128 scope host\n       valid_lft forever preferred_lft forever\n2: eth0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qlen 1000\n    inet6 2001:XXXX:45:2::2/64 scope global\n       valid_lft forever preferred_lft forever\n    inet6 fe80::ec4:7aff:fe06:5830/64 scope link\n       valid_lft forever preferred_lft forever\n181: docker0: <NO-CARRIER,BROADCAST,MULTICAST,UP> mtu 1500\n    inet6 2001:XXXX:45:3::1/64 scope global tentative\n       valid_lft forever preferred_lft forever\n    inet6 fe80::1/64 scope link tentative\n       valid_lft forever preferred_lft forever\n\n\n$ ip -6 route\n2001:XXXX:45:2::/64 dev eth0  proto kernel  metric 256\n2001:XXXX:45:3::/64 dev docker0  proto kernel  metric 256\n2001:XXXX:45:3::/64 dev docker0  metric 1024\nfe80::223:9cff:fefc:6ff0 dev eth0  metric 1024\nfe80::/64 dev eth0  proto kernel  metric 256\nfe80::/64 dev docker0  proto kernel  metric 256\ndefault via fe80::223:9cff:fefc:6ff0 dev eth0  metric 1024\n```\n\nwhile Container1-1, Container1-2, Container1-X get started with\n\n```\nDOCKER_OPTS=\"--dns 8.8.8.8 --dns 8.8.4.4 --fixed-cidr-v6=2001:XXXX:45:3::/64 --ipv6\"\n```\n\nand result in this\n\n```\n$ docker run -it ubuntu:14.04 bash -c 'ip -6 addr; echo '====' ; ip -6 route'\n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536\n    inet6 ::1/128 scope host\n       valid_lft forever preferred_lft forever\n190: eth0: <NO-CARRIER,BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500\n    inet6 2001:XXXX:45:3:0:242:ac11:2/64 scope global nodad\n       valid_lft forever preferred_lft forever\n    inet6 fe80::42:acff:fe11:2/64 scope link tentative\n       valid_lft forever preferred_lft forever\n====\n2001:XXXX:45:3::/64 dev eth0  proto kernel  metric 256\nfe80::/64 dev eth0  proto kernel  metric 256\ndefault via 2001:XXXX:45:3::1 dev eth0  metric 1024\n```\n\nMy issue is: I can't make this work without a NDP proxy on the host. The containers are not able to reach outside world, unless i manually add a NDP proxy on my host, e.g.:\n\n```\n$ sysctl net.ipv6.conf.eth0.proxy_ndp=1\n$ ip -6 neigh add proxy 2001:XXXX:45:3:0:242:ac11:2 dev eth0\n```\n\nWhat am i missing? The documentation gives the impression that NDP proxying is only necessary if using a single /64 - and switches/routed environments should work without NDP proxy.\n"},{"labels":["documentation",null],"text":"Referring to #22166\n\nThe [last commit of the device-mapper documentation](https://github.com/docker/docker/commit/a7b2f87b0637a3711e90c0f1d0a99dd5d32bd60f#diff-52525eec69924c13d098f5d19b2d79adL254) by @chenchun clarified the overall use.\nBut as I go through the steps, I'm missing the part where the thinpool configuration on /data and /metadata is done.\n\nThe [diff shows that the previous version ](https://github.com/docker/docker/pull/22662/commits/3cf8c53515ff8144a63c6d4418738b5d4f4416a7)had this covered in lines 254 and following\n"},{"labels":[null,"documentation",null,null],"text":"Currently it seems very hard to find any documentation on what kind of security is promised by Dockerfile execution, especially if building Dockerfiles from untrusted sources.\n\nAs far as I can gather, the security is as follows:\n- context directory contents are available, but there is no access to files outside it\n- full access to network is available as if running an untrusted docker image\n- escalating access to host is prevented with the same strength as normal untrusted docker images\n- resource constraints are given in docker build command line\n\nThis means that if these limitations are acceptable, it is possible to allow building Dockerfiles from untrusted sources without creating a separate VM or similar to contain the build.\n\nI assume something like this is already done by Docker Hub when builds are submitted to it, as it probably does not use a separate VM for each build, so the priviledge separation probably has been tested quite rigorously.\n\nIs my assessment correct? Should this be explicitly documented somewhere?\n"},{"labels":["documentation",null],"text":"This document discusses two image tags that do not exist on the hub (https://hub.docker.com/r/docker/trusttest/tags/).\n\nhttps://github.com/docker/docker/blob/861815a3252b88a118a91a164246401fa24fa549/docs/security/trust/content_trust.md\n\n```\ndocker pull --disable-content-trust docker/trusttest:untrusted\nPulling repository docker.io/docker/trusttest\nTag untrusted not found in repository docker.io/docker/trusttest\n```\n\n```\ndocker pull docker/seaside\nUsing default tag: latest\nPulling repository docker.io/docker/seaside\nError: image docker/seaside not found\n```\n\nI'm guessing docker/trusttest:untrusted has become docker/trusttest:latest.  docker/seaside seems to have been removed.\n"},{"labels":["documentation",null],"text":"The current text:\n\n> when that variable’s current value is passed through (i.e. `$MYVAR1` from the host is set to `$MYVAR1` in the container).\n\ncould be usefully be changed to:\n\n> when that variable’s current value, set via `export`, is passed through (i.e. `$MYVAR1` from the host is set to `$MYVAR1` in the container, where `export MYVAR1=\"foo\"` was used).\n"},{"labels":["documentation",null,null],"text":"The list of allowed configuration options in [this document](https://docs.docker.com/engine/reference/commandline/daemon/#daemon-configuration-file) is not applicable to Windows. Several of the options do not work on Windows. I think this requires minor clarification, perhaps a sample that is applicable to Windows:\n\nWhen used as is, the following is returned:\n\n``` none\nPS C:\\> dockerd\ntime=\"2016-05-12T15:40:59-07:00\" level=fatal msg=\"unable to configure the Docker daemon with file C:\\\\ProgramData\\\\docker\\\\config\\\\daemon.json: the following directives don't match any configuration option: iptables, bip, icc, api-cors-headers, exec-root, default-gateway-v6, ipv6, cgroup-parent, ip-mask, ip, userland-proxy, default-gateway, ip-forward, selinux-enabled, userns-remap, fixed-cidr-v6\\n\"\n```\n\nHere is a working sample:\n\n``` json\n{\n    \"authorization-plugins\": [],\n    \"dns\": [],\n    \"dns-opts\": [],\n    \"dns-search\": [],\n    \"exec-opts\": [],\n    \"storage-driver\": \"\",\n    \"storage-opts\": [],\n    \"labels\": [],\n    \"log-driver\": \"\", \n    \"mtu\": 0,\n    \"pidfile\": \"\",\n    \"graph\": \"\",\n    \"cluster-store\": \"\",\n    \"cluster-advertise\": \"\",\n    \"debug\": true,\n    \"hosts\": [\"tcp://0.0.0.0:2376\", \"npipe://\"],\n    \"log-level\": \"\",\n    \"tlsverify\": true,\n    \"tlscacert\": \"C:\\\\ProgramData\\\\docker\\\\certs.d\\\\ca.pem\",\n    \"tlscert\": \"C:\\\\ProgramData\\\\docker\\\\certs.d\\\\server-cert.pem\",\n    \"tlskey\": \"C:\\\\ProgramData\\\\docker\\\\certs.d\\\\server-key.pem\",\n    \"group\": \"\",\n    \"default-ulimits\": {},\n    \"bridge\": \"\",\n    \"fixed-cidr\": \"\",\n    \"raw-logs\": false,\n    \"registry-mirrors\": [],\n    \"insecure-registries\": [],\n    \"disable-legacy-registry\": false\n}\n\n```\n\nIf this makes sense, and is in line with the docs scope / purpose, I am happy write up and propose the changes.\n\nneilp\n"},{"labels":["documentation",null,null],"text":"Hi fellow volume plugin developers!\n\nI'm currenty writing my first volume plugin and I have some questions that are not really answered in the API documentation. I will send a pull request that clarifies these points because I think it will also help others:\n\nOn .Create I create a special device, let's call it /dev/specialdev_name and put a file system on top of it.\nOn .Mount I mount it and reference count for the name. The first .Mount really mounts the file system, further .Mounts increase the refcount.\nOn .Umount I decrease the refcount and if 0, I umount the /dev/specialdev_name\nOn .Remove I remove the /dev/specialdev_name if the refcount is 0/is not mounted, otherwise I set Err.\n\nSo far so easy, the problem are .Path (and .Get and .List). To me it is not clear how to react if a volume is known to the driver (i.e., it was created with .Create), but is currently _not_ mounted. Should I report the \"Mountpoint\" where it will be available after a .Mount, or set \"Err\"? The same question applies for .Get. For .List it seams that I should include volumes known but not mounted, otherwise they don't show up in \"docker volume ls\". But yeah, it all boils down to this \"known to the plugin and created, but currently not mounted\" situation. Set Mountpoint to where it will be available after .Mount? Or set Mountpoint to \"\"? Or even set Err?\n"},{"labels":["documentation"],"text":"**Output of `docker version`:**\n\n```\nDocker version 1.11.1, build 5604cbe\n```\n\n**Output of `docker info`:**\n\n```\nContainers: 0\n Running: 0\n Paused: 0\n Stopped: 0\nImages: 1\nServer Version: 1.11.1\nStorage Driver: devicemapper\n Pool Name: docker-253:0-394509-pool\n Pool Blocksize: 65.54 kB\n Base Device Size: 10.74 GB\n Backing Filesystem: xfs\n Data file: /dev/loop0\n Metadata file: /dev/loop1\n Data Space Used: 19.07 MB\n Data Space Total: 107.4 GB\n Data Space Available: 38.76 GB\n Metadata Space Used: 589.8 kB\n Metadata Space Total: 2.147 GB\n Metadata Space Available: 2.147 GB\n Udev Sync Supported: true\n Deferred Removal Enabled: false\n Deferred Deletion Enabled: false\n Deferred Deleted Device Count: 0\n Data loop file: /var/lib/docker/devicemapper/devicemapper/data\n WARNING: Usage of loopback devices is strongly discouraged for production use. Either use `--storage-opt dm.thinpooldev` or use `--storage-opt dm.no_warn_on_loop_devices=true` to suppress this warning.\n Metadata loop file: /var/lib/docker/devicemapper/devicemapper/metadata\n Library Version: 1.02.107-RHEL7 (2015-12-01)\nLogging Driver: json-file\nCgroup Driver: cgroupfs\nPlugins: \n Volume: local\n Network: bridge null host\nKernel Version: 3.10.0-327.13.1.el7.x86_64\nOperating System: CentOS Linux 7 (Core)\nOSType: linux\nArchitecture: x86_64\nCPUs: 2\nTotal Memory: 1.797 GiB\nName: localhost.localdomain\nID: E3X2:DQ6O:DVIO:2NPO:XFY7:6P65:SQG2:TXLM:EERQ:GFSO:NUWT:JF3S\nDocker Root Dir: /var/lib/docker\nDebug mode (client): false\nDebug mode (server): false\nRegistry: https://index.docker.io/v1/\nWARNING: bridge-nf-call-iptables is disabled\nWARNING: bridge-nf-call-ip6tables is disabled\n\n```\n\n**Additional environment details (AWS, VirtualBox, physical, etc.):** Vagrant centos/7 box\n\n**Steps to reproduce the issue:**\n1. Start docker as a bootstrap service in one console:\n\n```\ndocker daemon \\\n        -H unix:///var/run/docker-bootstrap.sock \\\n        -p /var/run/docker-bootstrap.pid \\\n        --iptables=false \\\n        --ip-masq=false \\\n        --bridge=none \\\n        --graph=/var/lib/docker-bootstrap --debug\n```\n1. Start container in second console:\n\n```\ndocker -H unix:///var/run/docker-bootstrap.sock run -it --rm busybox sh\n```\n\n**Describe the results you received:**\n\n```\nStatus: Downloaded newer image for busybox:latest\ndocker: Error response from daemon: rpc error: code = 2 desc = \"oci runtime error: rootfs (\\\"/var/lib/docker-bootstrap/devicemapper/mnt/8c8cc49901da0ddbdd24298a7b294dc7a516a9c72d05055fd882964101f46897/rootfs\\\") does not exist\".\n```\n\n**Excerpts from docker daemon logs with debugs enabled**\n\n```\nDEBU[0044] Calling POST /v1.23/containers/create        \nDEBU[0044] form data: {\"AttachStderr\":true,\"AttachStdin\":true,\"AttachStdout\":true,\"Cmd\":[\"sh\"],\"Domainname\":\"\",\"Entrypoint\":null,\"Env\":[],\"HostConfig\":{\"AutoRemove\":false,\"Binds\":null,\"BlkioBps\":0,\"BlkioDeviceReadBps\":null,\"BlkioDeviceReadIOps\":null,\"BlkioDeviceWriteBps\":null,\"BlkioDeviceWriteIOps\":null,\"BlkioIOps\":0,\"BlkioWeight\":0,\"BlkioWeightDevice\":null,\"CapAdd\":null,\"CapDrop\":null,\"Cgroup\":\"\",\"CgroupParent\":\"\",\"ConsoleSize\":[0,0],\"ContainerIDFile\":\"\",\"CpuCount\":0,\"CpuPercent\":0,\"CpuPeriod\":0,\"CpuQuota\":0,\"CpuShares\":0,\"CpusetCpus\":\"\",\"CpusetMems\":\"\",\"Devices\":[],\"DiskQuota\":0,\"Dns\":[],\"DnsOptions\":[],\"DnsSearch\":[],\"ExtraHosts\":null,\"GroupAdd\":null,\"IpcMode\":\"\",\"Isolation\":\"\",\"KernelMemory\":0,\"Links\":null,\"LogConfig\":{\"Config\":{},\"Type\":\"\"},\"Memory\":0,\"MemoryReservation\":0,\"MemorySwap\":0,\"MemorySwappiness\":-1,\"NetworkMode\":\"default\",\"OomKillDisable\":false,\"OomScoreAdj\":0,\"PidMode\":\"\",\"PidsLimit\":0,\"PortBindings\":{},\"Privileged\":false,\"PublishAllPorts\":false,\"ReadonlyRootfs\":false,\"RestartPolicy\":{\"MaximumRetryCount\":0,\"Name\":\"no\"},\"SandboxSize\":0,\"SecurityOpt\":null,\"ShmSize\":0,\"StorageOpt\":null,\"UTSMode\":\"\",\"Ulimits\":null,\"UsernsMode\":\"\",\"VolumeDriver\":\"\",\"VolumesFrom\":null},\"Hostname\":\"\",\"Image\":\"busybox\",\"Labels\":{},\"NetworkingConfig\":{\"EndpointsConfig\":{}},\"OnBuild\":null,\"OpenStdin\":true,\"StdinOnce\":true,\"Tty\":true,\"User\":\"\",\"Volumes\":{},\"WorkingDir\":\"\"} \nDEBU[0044] devmapper: AddDevice(hash=35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032-init basehash=a88c80f3742d46b2f22e9c41acb7d4ca83c59054bbe8efdd7f196b7d5f8a7ca3) \nDEBU[0044] devmapper: registerDevice(17, 35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032-init) \nDEBU[0044] devmapper: AddDevice(hash=35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032-init basehash=a88c80f3742d46b2f22e9c41acb7d4ca83c59054bbe8efdd7f196b7d5f8a7ca3) END \nDEBU[0044] devmapper: activateDeviceIfNeeded(35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032-init) \nDEBU[0044] devmapper: UnmountDevice(hash=35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032-init) \nDEBU[0044] devmapper: Unmount(/var/lib/docker-bootstrap/devicemapper/mnt/35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032-init) \nDEBU[0045] devmapper: Unmount done                      \nDEBU[0045] devmapper: deactivateDevice(35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032-init) \nDEBU[0045] devmapper: removeDevice START(docker-253:0-394747-35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032-init) \nDEBU[0045] devmapper: removeDevice END(docker-253:0-394747-35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032-init) \nDEBU[0045] devmapper: deactivateDevice END(35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032-init) \nDEBU[0045] devmapper: UnmountDevice(hash=35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032-init) END \nDEBU[0045] devmapper: AddDevice(hash=35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032 basehash=35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032-init) \nDEBU[0045] devmapper: registerDevice(18, 35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032) \nDEBU[0045] devmapper: AddDevice(hash=35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032 basehash=35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032-init) END \nDEBU[0045] devmapper: activateDeviceIfNeeded(35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032) \nDEBU[0045] container mounted via layerStore: /var/lib/docker-bootstrap/devicemapper/mnt/35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032/rootfs \nDEBU[0045] devmapper: UnmountDevice(hash=35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032) \nDEBU[0045] devmapper: Unmount(/var/lib/docker-bootstrap/devicemapper/mnt/35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032) \nDEBU[0045] devmapper: Unmount done                      \nDEBU[0045] devmapper: deactivateDevice(35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032) \nDEBU[0045] devmapper: removeDevice START(docker-253:0-394747-35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032) \nDEBU[0045] devmapper: removeDevice END(docker-253:0-394747-35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032) \nDEBU[0045] devmapper: deactivateDevice END(35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032) \nDEBU[0045] devmapper: UnmountDevice(hash=35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032) END \nDEBU[0045] Calling POST /v1.23/containers/f5ff62db4ba13a71321d8d5ea77e7c5990617de72214c417b441a63d1651c16b/attach?stderr=1&stdin=1&stdout=1&stream=1 \nDEBU[0045] attach: stdin: begin                         \nDEBU[0045] attach: stdout: begin                        \nDEBU[0045] attach: stderr: begin                        \nDEBU[0045] Calling POST /v1.23/containers/f5ff62db4ba13a71321d8d5ea77e7c5990617de72214c417b441a63d1651c16b/start \nDEBU[0045] devmapper: activateDeviceIfNeeded(35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032) \nDEBU[0045] container mounted via layerStore: /var/lib/docker-bootstrap/devicemapper/mnt/35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032/rootfs \nDEBU[0045] devmapper: UnmountDevice(hash=35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032) \nDEBU[0045] devmapper: Unmount(/var/lib/docker-bootstrap/devicemapper/mnt/35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032) \nDEBU[0045] attach: stdout: end                          \nDEBU[0045] attach: stdin: end                           \nDEBU[0045] attach: stderr: end                          \nDEBU[0045] devmapper: Unmount done                      \nDEBU[0045] devmapper: deactivateDevice(35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032) \nDEBU[0045] devmapper: removeDevice START(docker-253:0-394747-35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032) \nDEBU[0045] devmapper: removeDevice END(docker-253:0-394747-35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032) \nDEBU[0045] devmapper: deactivateDevice END(35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032) \nDEBU[0045] devmapper: UnmountDevice(hash=35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032) END \nERRO[0045] Handler for POST /v1.23/containers/f5ff62db4ba13a71321d8d5ea77e7c5990617de72214c417b441a63d1651c16b/start returned error: rpc error: code = 2 desc = \"oci runtime error: rootfs (\\\"/var/lib/docker-bootstrap/devicemapper/mnt/35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032/rootfs\\\") does not exist\" \nDEBU[0045] Calling DELETE /v1.23/containers/f5ff62db4ba13a71321d8d5ea77e7c5990617de72214c417b441a63d1651c16b?v=1 \nDEBU[0045] devmapper: DeleteDevice(hash=35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032 syncDelete=false) START \nDEBU[0045] devmapper: issueDiscard(device: 35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032). START \nDEBU[0045] devmapper: activateDeviceIfNeeded(35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032) \nDEBU[0045] devmapper: issueDiscard(device: 35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032). END \nDEBU[0045] devmapper: deactivateDevice(35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032) \nDEBU[0045] devmapper: removeDevice START(docker-253:0-394747-35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032) \nDEBU[0045] devmapper: removeDevice END(docker-253:0-394747-35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032) \nDEBU[0045] devmapper: deactivateDevice END(35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032) \nDEBU[0045] devmapper: unregisterDevice(18, 35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032) \nDEBU[0045] devmapper: DeleteDevice(hash=35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032 syncDelete=false) END \nDEBU[0045] devmapper: DeleteDevice(hash=35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032-init syncDelete=false) START \nDEBU[0045] devmapper: issueDiscard(device: 35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032-init). START \nDEBU[0045] devmapper: activateDeviceIfNeeded(35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032-init) \nDEBU[0045] devmapper: issueDiscard(device: 35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032-init). END \nDEBU[0045] devmapper: deactivateDevice(35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032-init) \nDEBU[0045] devmapper: removeDevice START(docker-253:0-394747-35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032-init) \nDEBU[0045] devmapper: removeDevice END(docker-253:0-394747-35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032-init) \nDEBU[0045] devmapper: deactivateDevice END(35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032-init) \nDEBU[0045] devmapper: unregisterDevice(17, 35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032-init) \nDEBU[0045] devmapper: DeleteDevice(hash=35599f75db637c6ccb495551f4fbec98e105bf273d348d137d506d38527d4032-init syncDelete=false) END \nDEBU[0045] Closing buffered stdin pipe         \n```\n"},{"labels":[null,"documentation",null],"text":"I understand that the manifest format introduced in v1.10 includes the digest of every image layer, and that the Docker Daemon verifies the digest of every image layer on pull (regardless of whether the image is specified by tag or by digest).\n\nThis very important information seems to be absent from all public-facing docs I've been able to find -- e.g. https://docs.docker.com/engine/reference/api/docker_remote_api_v1.22/\n\nI'd appreciate a pointer to anything public-facing that does state this.  Thanks.\n"},{"labels":["documentation"],"text":"I was just looking into CVE-2015-5157. It seems to be a problem because modify_ldt syscall is allowed by default (https://github.com/docker/docker/blob/master/profiles/seccomp/default.json).\n\nHowever, on the docs page it says it should be blocked by default (https://docs.docker.com/engine/security/seccomp/) because \"Old syscall only used in 16-bit code and a potential information leak.\" which sounds like a sensible reason.\n\nSo why is the call allowed in default.json? \n"},{"labels":["documentation"],"text":"The argument to `--config` misbehave in those cases:\n\n`--config ~/.docker/` -> path is expanded by the shell and the config will be `/home/$USER/.docker/`\n`--config=~/.docker/` -> path is **not** expanded and the config will be at `~/.docker/`\n`--config=\"~/.docker/\"` -> path is **not** expanded and the config will be at `~/.docker/`\n`--config='~/.docker/'` -> path is **not** expanded and the config will be at `~/.docker/`\n\nSo the only thing which works is only the first case.\n\nYou can try it out playing around with `--config` and `--attach` for instance.\n1. Specify `detachKeys` in your `~/.docker/config.json` file\n   \n    `\"detachKeys\": \"ctrl-e,e\"`\n2. run a container with `-dit`\n3. attach to this container specifying `--config=~/.docker/`\n4. try to detach with the above sequence - it won't work\n5. try the other failing case above\n6. try with the first, working, case above where there's no `=` sign\n\nSo, the problem seems to be that `=` sign and shell expansion. Any other _relative_ path will fail the above cases of course (`../` for instance)\nNot sure what to do other that checking that the path is relative and warning the user.\n\nping @tianon @vdemeester @calavera @cpuguy83 @thaJeztah \n"},{"labels":["documentation"],"text":"<!--\nIf you are reporting a new issue, make sure that we do not have any duplicates\nalready open. You can ensure this by searching the issue list for this\nrepository. If there is a duplicate, please close your issue and add a comment\nto the existing issue instead.\n\nIf you suspect your issue is a bug, please edit your issue description to\ninclude the BUG REPORT INFORMATION shown below. If you fail to provide this\ninformation within 7 days, we cannot debug your issue and will close it. We\nwill, however, reopen it if you later provide the information.\n\nFor more information about reporting issues, see\nhttps://github.com/docker/docker/blob/master/CONTRIBUTING.md#reporting-other-issues\n\n---------------------------------------------------\nBUG REPORT INFORMATION\n---------------------------------------------------\nUse the commands below to provide key information from your environment:\nYou do NOT have to include this information if this is a FEATURE REQUEST\n-->\n\n**Output of `docker version`:**\n\n```\nDocker version 1.10.2, build c3959b1\n```\n\n**Steps to reproduce the issue:**\n1. Create the Dockerfile as specified in docs/admin/using_supervisord.md and the supervisors.conf\n2. Run docker build  --no-cache  -t <your name here>/supervisord .\n\n**Describe the results you received:**\nFailed to fetch http://archive.ubuntu.com/ubuntu/dists/raring/main/source/Sources  404  Not Found [IP: 91.189.91.23 80]\n\n**Describe the results you expected:**\n\nExpected the container to be built successfully\n\n**Additional information you deem important (e.g. issue happens only occasionally):**\n\nLooks as though ubuntu:13.04 repositories are no longer available. Changing the container to ubuntu:15.04 allowed the docker build to run successfully\n"},{"labels":["documentation",null],"text":"I had some trouble working out the correct way to use `docker run` with the sha256 digest. I found the documentation a little confusing with regard to this. For example the [run reference page](https://docs.docker.com/engine/reference/run) has the following example:\n\n```\n$ docker run [OPTIONS] IMAGE[:TAG|@DIGEST] [COMMAND] [ARG...]\n```\n\nHowever I had problems trying to run my image this way. For example:\n\n``` bash\ndocker run namespace/image@digest # Wrong - parse error\ndocker run namespace/image@sha256:digest # Correct\n```\n\nI had to work this out from trial and error. The link to the [Image[@digest]](https://docs.docker.com/engine/reference/run/#image-digest) section anchor doesn't have an example, which I think might have been useful. I believe therefore it might be beneficial to update the documentation regarding using digests.\n\nI suggest the **General Form** section to be:\n\n```\n$ docker run [OPTIONS] IMAGE[:TAG|@sha256:DIGEST] [COMMAND] [ARG...]\n```\n\nIf there are other possible digests, then sha256 could be changed to DIGEST_TYPE or something similar.\n\nSecondly I suggest that the [Image[@digest]](https://docs.docker.com/engine/reference/run/#image-digest) anchor have the following example of using the digest:\n\n```\ndocker run alpine@sha256:9cacb71397b640eca97488cf08582ae4e4068513101088e9f96c9814bfda95e0 date\n```\n\nThis is my feedback from initially trying to get digests to run with `docker run`. If this was confusing to me, it might possibly be confusing to other users.\n"},{"labels":["documentation"],"text":"The the Docker Remote API v1.24 (https://github.com/docker/docker/blob/master/docs/reference/api/docker_remote_api_v1.24.md), the REST function,\n\nTag an image into a repository\n\ndoes not really explain what the function does.\n"},{"labels":[null,"documentation"],"text":"1 - Image ID\n\nThe spec defines “Image ID”, but then explains what a layer ID is. An image is not a layer - an image is a set of layers (per the definition of “Layer” in the same document).\n\n2 - Tag\n\nThe spec defines “Tag” as,\n\n\"A tag serves to map a descriptive, user-given name to any single image ID. An image name suffix (the name component after :) is often referred to as a tag as well, though it strictly refers to the full name of an image.\"\n\na. This is ambiguous, because the term “image ID” is ambiguous, as a result of #1.\n\nb. The term “full name of an image” is ambiguous. Does it include the namespace? The hostname/port of the registry? (e.g., when one “tags an image into a repository”)\n\n3 - Repository\n\nIt is not clear if a repository refers to an image name, or an actual image stored in a registry. It is also not clear if the “repository” is the full image name - including the repository host name - or just the name part preceding the colon at the end of the name. It is not clear if the “repository” includes the “namespace”. In fact, the term “namespace” is not mentioned in the spec, but it is clearly an important element of an image name - or is it? (This is not clear.)\n\n4 - Tagging into a repository\n\nThe image spec does not mention this, but the phrase is used in other documentation, without explanation, and it is not clear what this means, especially given the lack of clarity on what “repository” means.\n\n5 - Image \"name\"\n\nThis term is used loosely in the spec and in other documentation - including the various REST APIs, and it is highly ambiguous. Many REST APIs have “name” parameters, and it is not clear if the parameter is a repository name, or can include a final tag (with semicolon) or not - and if it can include a registry host as part of the name. The term “image name” really needs to be precisely defined and used consistently throughout the documentation - especially the REST APIs since those APIs are untyped and thus there is ample opportunity for a programmer to get it wrong.\n"},{"labels":["documentation"],"text":"Tutorial  [Work with a development container](https://docs.docker.com/opensource/project/set-up-dev-env/) talks about the **binary** directory. Current development source makes **binary-client** and **binary-daemon**. This modifies a few steps, like the one where we copy the binary file.\n\nThe documentation can benefit from updates also.\n"},{"labels":["documentation",null],"text":"**Output of `docker version`:**\n\n```\nDocker version 1.11.0, build 4dc5990\n```\n\n**Output of `docker info`:**\n\n```\nContainers: 17\n Running: 16\n Paused: 0\n Stopped: 1\nImages: 182\nServer Version: swarm/1.2.0\nRole: primary\nStrategy: spread\nFilters: health, port, dependency, affinity, constraint\nNodes: 4\n swarm-data: 192.168.99.102:2376\n  └ Status: Healthy\n  └ Containers: 4\n  └ Reserved CPUs: 0 / 1\n  └ Reserved Memory: 0 B / 2.053 GiB\n  └ Labels: executiondriver=, kernelversion=4.1.19-boot2docker, operatingsystem=Boot2Docker 1.11.0 (TCL 7.0); HEAD : 32ee7e9 - Wed Apr 13 20:06:49 UTC 2016, provider=virtualbox, storagedriver=aufs, type=data\n  └ Error: (none)\n  └ UpdatedAt: 2016-04-28T09:06:14Z\n  └ ServerVersion: 1.11.0\n swarm-master: 192.168.99.101:2376\n  └ Status: Healthy\n  └ Containers: 6\n  └ Reserved CPUs: 0 / 1\n  └ Reserved Memory: 0 B / 1.021 GiB\n  └ Labels: executiondriver=, kernelversion=4.1.19-boot2docker, operatingsystem=Boot2Docker 1.11.0 (TCL 7.0); HEAD : 32ee7e9 - Wed Apr 13 20:06:49 UTC 2016, provider=virtualbox, storagedriver=aufs, type=frontend\n  └ Error: (none)\n  └ UpdatedAt: 2016-04-28T09:06:16Z\n  └ ServerVersion: 1.11.0\n swarm-node-01: 192.168.99.103:2376\n  └ Status: Healthy\n  └ Containers: 4\n  └ Reserved CPUs: 0 / 2\n  └ Reserved Memory: 0 B / 5.079 GiB\n  └ Labels: executiondriver=, kernelversion=4.1.19-boot2docker, operatingsystem=Boot2Docker 1.11.0 (TCL 7.0); HEAD : 32ee7e9 - Wed Apr 13 20:06:49 UTC 2016, provider=virtualbox, storagedriver=aufs, type=node\n  └ Error: (none)\n  └ UpdatedAt: 2016-04-28T09:06:35Z\n  └ ServerVersion: 1.11.0\n swarm-node-02: 192.168.99.104:2376\n  └ Status: Healthy\n  └ Containers: 3\n  └ Reserved CPUs: 0 / 2\n  └ Reserved Memory: 0 B / 5.079 GiB\n  └ Labels: executiondriver=, kernelversion=4.1.19-boot2docker, operatingsystem=Boot2Docker 1.11.0 (TCL 7.0); HEAD : 32ee7e9 - Wed Apr 13 20:06:49 UTC 2016, provider=virtualbox, storagedriver=aufs, type=node\n  └ Error: (none)\n  └ UpdatedAt: 2016-04-28T09:06:31Z\n  └ ServerVersion: 1.11.0\nPlugins: \n Volume: \n Network: \nKernel Version: 4.1.19-boot2docker\nOperating System: linux\nArchitecture: amd64\nCPUs: 6\nTotal Memory: 13.23 GiB\nName: a679a60fd15a\nDocker Root Dir: \nDebug mode (client): false\nDebug mode (server): false\nWARNING: No kernel memory limit support\n```\n\n**Additional environment details (AWS, VirtualBox, physical, etc.):**\nI used docker-machine to create a swarm cluster with 4 virtualbox VM.\n\n**Steps to reproduce the issue:**\n1. \n\n```\ndocker network create -d overlay test_lb \n\n# and then in different terminals :\ndocker run --net=test_lb -h first --rm -it debian bash\ndocker run --net=test_lb --net-alias=lb -h second --rm -it debian bash\ndocker run --net=test_lb --net-alias=lb -h third --rm -it debian bash\ndocker run --net=test_lb -h fourth --rm -it debian bash\ndocker run --net=test_lb -h fifth --rm -it debian bash\ndocker run --net=test_lb -h sixth --rm -it debian bash\ndocker run --net=test_lb -h seventh --rm -it debian bash\n```\n\n2.\nThere are now 2 containers with same alias `lb` and 5 containers that are here to use ip slots in the overlay network.\nI personnaly had the following ips assigned by docker in the overlay network:\nfirst : 10.0.0.2\nsecond : 10.0.0.3\nthird : 10.0.0.4\nfourth : 10.0.0.5\nfifth : 10.0.0.6\nsixth : 10.0.0.7\nseventh : 10.0.0.8\n3.\nTry to `ping lb`from the different containers\n\n**Describe the results you received:**\nFrom first, ping always connects to `10.0.0.3` (second)\nFrom second, it always reaches itself\nFrom third, it always reaches itself\nFrom fourth through sixth, it always connects to `10.0.0.4` (third)\nFrom seventh, it connects randomly to  `10.0.0.3` or  `10.0.0.4` \n\n**Describe the results you expected:**\nI expected to always reach randomly  `10.0.0.3` or  `10.0.0.4` \n\n**Additional information you deem important (e.g. issue happens only occasionally):**\nWith this test-case, I think that the cause of the DNS round-robin not working is due to RFC 3484 rule 9 which states that multiple A records are sorted by common prefix length, this breaks the round-robin.\n\nThis explains why seventh (`10.0.0.8`) can reach both containers because the prefix is different.\n\nThe problem is clearly caused by something other than docker but I think it completely voids the purpose of the DNS round-robin from 1.11.\n\nIf anyone can confirm the issue, is there a fix available so that the round-robin can be used in overlay networks?\n"},{"labels":["documentation",null],"text":"PLZ  forgive my poor english\n\nI used Docker Remote API to  Create an image , and post registry value (my private registry dockerregistry:5000 ) to the docker api server  like that \n\n`curl -v  -d \"fromImage=hl%2Fspark&registry=dockerregistry:5000&tag=v1.3\"     --unix-sock   /var/run/docker.sock http:/images/create`\n\nBut  the value of the registry  not worked,  and docker searchs  image from docker hub still .\n\nSo I  had to  use fromImage Query Parameter  like this\n\n`curl -v  -d \"fromImage=dockerregistry:5000/hl%2Fspark&tag=v1.3\"     --unix-sock   /var/run/docker.sock http:/images/create`\n\nand can pull image from my private registry  .\n\nThen l  go to the [https://github.com/docker/docker/blob/master/api/server/router/image/image_routes.go#L76](url) ,  and found the server did not handled Query Parameters registry .\n\nWHY ?\n"},{"labels":["documentation",null,null],"text":"I've tried various combinations of `$PATH` and `%PATH%` and `:` and `;`, but I just can't seem to get `ENV` concatenation to work with Dockerfiles for Windows.\n\nOther people seem to have given up too and just run `RUN setx`: https://github.com/StefanScherer/dockerfiles-windows/blob/197ac3a9a8fe8494915b9b62f517fa67151833cc/golang/Dockerfile#L9\n\n`setx /m` may be the most correct workaround for now.\n\n/cc @jhowardmsft @icecrime @dmp42 \n\n**Output of `docker info`:**\n\n```\ndocker info\nContainers: 71\n Running: 0\n Paused: 0\n Stopped: 71\nImages: 45\nServer Version: 1.11.0-dev\nStorage Driver: windowsfilter\n Windows:\nLogging Driver: json-file\nPlugins:\n Volume: local\n Network: null nat\nKernel Version: 10.0 14316 (14316.1000.amd64fre.rs1_release.160402-2217)\nOperating System: Windows Server 2016 Datacenter Technical Preview 5\nOSType: windows\nArchitecture: x86_64\nCPUs: 4\nTotal Memory: 1.242 GiB\nName: WIN-8F5EG07ROBB\nID: VKYM:E5F7:CMIT:4ZMS:OGUG:W43U:API4:ATWI:3S5X:RO54:DU4Q:YOFD\nDocker Root Dir: C:\\ProgramData\\docker\nDebug mode (client): false\nDebug mode (server): true\n File Descriptors: -1\n Goroutines: 24\n System Time: 2016-04-13T18:46:29.3959003-07:00\n EventsListeners: 0\nUsername: friism4test\nRegistry: https://index.docker.io/v1/\n```\n\n**Output of `docker version`:**\n\n```\ndocker version\nClient:\n Version:      1.11.0-rc3\n API version:  1.23\n Go version:   go1.5.3\n Git commit:   eabf97a\n Built:        Fri Apr  1 23:33:49 2016\n OS/Arch:      windows/amd64\n\nServer:\n Version:      1.11.0-dev\n API version:  1.24\n Go version:   go1.5.3\n Git commit:   577adcc\n Built:        Mon Apr 11 17:20:50 2016\n OS/Arch:      windows/amd64\n```\n\n**Steps to reproduce the issue:**\n\n```\n> \"FROM windowsservercore`n RUN echo %PATH%`n ENV PATH c:\\\\go\\\\bin;`$PATH\" | docker build -t test -\nSending build context to Docker daemon 2.048 kB\nStep 1 : FROM windowsservercore\n ---> e1e5fb4dbc32\nStep 2 : RUN echo %PATH%\n ---> Running in 91a3c7417bc3\nC:\\Windows\\system32;C:\\Windows;%localappdata%\\Microsoft\\WindowsApps;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\\n ---> 818d81426779\nRemoving intermediate container 91a3c7417bc3\nStep 3 : ENV PATH c:\\\\go\\\\bin;$PATH\n ---> Running in f6ab92ac3110\n ---> d6b86fdef7e5\nRemoving intermediate container f6ab92ac3110\nSuccessfully built d6b86fdef7e5\n> docker run test cmd /c echo %PATH%\nc:\\go\\bin;\n```\n\n**Describe the results you received:**\n\nIncorrect PATH\n\n**Describe the results you expected:**\n\nCorrectly concatenated PATH\n"},{"labels":["documentation",null],"text":"The image spec at https://github.com/docker/docker/blob/3d13fddd2bc4d679f0eaa68b0be877e5a816ad53/image/spec/v1.md hasn't been updated for the content addressability changes that went into Docker 1.10. This spec also seems to contain some outdated fields like \"image checksum\". It shouldn't be very hard to bring this up to date. The changes in 1.10 are described in https://gist.github.com/aaronlehmann/b42a2eaf633fc949f93b#new-image-config.\n\ncc @stevvooe @tonistiigi @dmcgowan \n"},{"labels":["documentation",null],"text":"The JSON for the  [`containers/create`](https://github.com/docker/docker/blob/master/docs/reference/api/docker_remote_api_v1.22.md#create-a-container) endpoint  is missing `NetworkConfig`. API versions 1.22, 1.23 and 1.24 need to be updated to contain this in the example JSON.\n\n/cc @aboch @mavenugo @dnephin  \n"},{"labels":["documentation",null],"text":"On the [official networking documentation page](https://docs.docker.com/engine/userguide/networking/default_network/container-communication/), there's a paragraph that addresses using iptables to restrict access to containers by IP:\n\n> Docker’s forward rules permit all external source IPs by default. To allow only a specific IP or network to access the containers, insert a negated rule at the top of the DOCKER filter chain. For example, to restrict external access such that only source IP 8.8.8.8 can access the containers, the following rule could be added:\n> \n> `$ iptables -I DOCKER -i ext_if ! -s 8.8.8.8 -j DROP`\n\nThis may have been true for older versions of Engine but I can't get this to work in 1.10.3. The rule is applied as advertised, it comes first in iptables -L DOCKER, but the containers are still reachable from the whole outside world. If the docs could be upgraded for the current version of Docker, that'd be very helpful. Thanks!\n"},{"labels":["documentation",null],"text":"It may just be a problem on my machine, but it seems that creating a container that sits on two networks is somehow interfering with port forwarding. The forwarding works when accessing 127.0.01, but not when accessing the IP address for another interface.\n\n**Output of `docker version`:**\n\n```\nClient:\n Version:      1.10.3\n API version:  1.22\n Go version:   go1.5.3\n Git commit:   20f81dd\n Built:        Thu Mar 10 15:54:52 2016\n OS/Arch:      linux/amd64\n\nServer:\n Version:      1.10.3\n API version:  1.22\n Go version:   go1.5.3\n Git commit:   20f81dd\n Built:        Thu Mar 10 15:54:52 2016\n OS/Arch:      linux/amd64\n```\n\n**Output of `docker info`:**\n\n```\nContainers: 2\n Running: 2\n Paused: 0\n Stopped: 0\nImages: 68\nServer Version: 1.10.3\nStorage Driver: aufs\n Root Dir: /var/lib/docker/aufs\n Backing Filesystem: extfs\n Dirs: 304\n Dirperm1 Supported: false\nExecution Driver: native-0.2\nLogging Driver: json-file\nPlugins: \n Volume: local\n Network: bridge null host\nKernel Version: 3.13.0-83-generic\nOperating System: Ubuntu 14.04.4 LTS\nOSType: linux\nArchitecture: x86_64\nCPUs: 8\nTotal Memory: 31.36 GiB\nName: kryton\nID: MFLN:XRFL:372N:VPKR:3AWK:USXB:3Q3E:EAH2:66ZK:T5U2:NEOP:TSCH\nUsername: bmerry\nRegistry: https://index.docker.io/v1/\nWARNING: No swap limit support\n```\n\n**Additional environment details (AWS, VirtualBox, physical, etc.):**\n\nPhysical machine\n\n**Steps to reproduce the issue:**\n1. Create a `docker-compose.yml` file with the following content\n\n```\nversion: \"2\"\nservices:\n    server:\n        image: nginx:1.9.12\n        networks:\n            - front\n            - back\n        ports:\n            - \"8080:80\"\nnetworks:\n    front:\n    back:\n```\n\nIn actual use, there would be other services connect to the `back` network but not the `front` network, but they're not necessary to demonstrate the bug.\n2. With docker-compose 1.6.2, run `docker-compose up`.\n3. From the host, run `curl http://localhost:8080`.\n4. From the host, run `curl http://IPADDRESS:8080`, where IPADDRESS is an IP address of a non-local interface on the machine.\n\n**Describe the results you received:**\nStep 3 spits out an HTML page from nginx. Step 4 outputs nothing and eventually times out.\n\n**Describe the results you expected:**\nStep 4 should return the same HTML page as step 3.\n\n**Additional information you deem important (e.g. issue happens only occasionally):**\nI'm not running any other firewall software on this machine. If I remove the config line putting the service on the `back` network, then the problem disappears. Similarly, if I run `docker network disconnect` to disconnect the container from the `back` network, the problem disappears, and reconnecting it makes the problem come back.\n\n**Output of iptables -vnL**:\n\n```\nChain INPUT (policy ACCEPT 4912 packets, 2311K bytes)\n pkts bytes target     prot opt in     out     source               destination         \n\nChain FORWARD (policy ACCEPT 0 packets, 0 bytes)\n pkts bytes target     prot opt in     out     source               destination         \n    0     0 DOCKER-ISOLATION  all  --  *      *       0.0.0.0/0            0.0.0.0/0           \n    0     0 DOCKER     all  --  *      br-b81344fadd68  0.0.0.0/0            0.0.0.0/0           \n    0     0 ACCEPT     all  --  *      br-b81344fadd68  0.0.0.0/0            0.0.0.0/0            ctstate RELATED,ESTABLISHED\n    0     0 ACCEPT     all  --  br-b81344fadd68 !br-b81344fadd68  0.0.0.0/0            0.0.0.0/0           \n    0     0 ACCEPT     all  --  br-b81344fadd68 br-b81344fadd68  0.0.0.0/0            0.0.0.0/0           \n    0     0 DOCKER     all  --  *      br-a4d09867c7ea  0.0.0.0/0            0.0.0.0/0           \n    0     0 ACCEPT     all  --  *      br-a4d09867c7ea  0.0.0.0/0            0.0.0.0/0            ctstate RELATED,ESTABLISHED\n    0     0 ACCEPT     all  --  br-a4d09867c7ea !br-a4d09867c7ea  0.0.0.0/0            0.0.0.0/0           \n    0     0 ACCEPT     all  --  br-a4d09867c7ea br-a4d09867c7ea  0.0.0.0/0            0.0.0.0/0           \n    0     0 DOCKER     all  --  *      docker0  0.0.0.0/0            0.0.0.0/0           \n    0     0 ACCEPT     all  --  *      docker0  0.0.0.0/0            0.0.0.0/0            ctstate RELATED,ESTABLISHED\n    0     0 ACCEPT     all  --  docker0 !docker0  0.0.0.0/0            0.0.0.0/0           \n    0     0 ACCEPT     all  --  docker0 docker0  0.0.0.0/0            0.0.0.0/0           \n\nChain OUTPUT (policy ACCEPT 4538 packets, 674K bytes)\n pkts bytes target     prot opt in     out     source               destination         \n\nChain DOCKER (3 references)\n pkts bytes target     prot opt in     out     source               destination         \n    0     0 ACCEPT     tcp  --  !docker0 docker0  0.0.0.0/0            172.17.0.2           tcp dpt:5000\n    0     0 ACCEPT     tcp  --  !br-a4d09867c7ea br-a4d09867c7ea  0.0.0.0/0            172.18.0.2           tcp dpt:80\n\nChain DOCKER-ISOLATION (1 references)\n pkts bytes target     prot opt in     out     source               destination         \n    0     0 DROP       all  --  br-a4d09867c7ea br-b81344fadd68  0.0.0.0/0            0.0.0.0/0           \n    0     0 DROP       all  --  br-b81344fadd68 br-a4d09867c7ea  0.0.0.0/0            0.0.0.0/0           \n    0     0 DROP       all  --  docker0 br-b81344fadd68  0.0.0.0/0            0.0.0.0/0           \n    0     0 DROP       all  --  br-b81344fadd68 docker0  0.0.0.0/0            0.0.0.0/0           \n    0     0 DROP       all  --  docker0 br-a4d09867c7ea  0.0.0.0/0            0.0.0.0/0           \n    0     0 DROP       all  --  br-a4d09867c7ea docker0  0.0.0.0/0            0.0.0.0/0           \n    0     0 RETURN     all  --  *      *       0.0.0.0/0            0.0.0.0/0           \n```\n\n**Output of iptables -t nat -vnL**\n\n```\nhain PREROUTING (policy ACCEPT 8 packets, 536 bytes)\n pkts bytes target     prot opt in     out     source               destination         \n    0     0 DOCKER     all  --  *      *       0.0.0.0/0            0.0.0.0/0            ADDRTYPE match dst-type LOCAL\n\nChain INPUT (policy ACCEPT 2 packets, 272 bytes)\n pkts bytes target     prot opt in     out     source               destination         \n\nChain OUTPUT (policy ACCEPT 528 packets, 34127 bytes)\n pkts bytes target     prot opt in     out     source               destination         \n    1    60 DOCKER     all  --  *      *       0.0.0.0/0           !127.0.0.0/8          ADDRTYPE match dst-type LOCAL\n\nChain POSTROUTING (policy ACCEPT 529 packets, 34187 bytes)\n pkts bytes target     prot opt in     out     source               destination         \n    0     0 MASQUERADE  all  --  *      !br-b81344fadd68  172.19.0.0/16        0.0.0.0/0           \n    0     0 MASQUERADE  all  --  *      !br-a4d09867c7ea  172.18.0.0/16        0.0.0.0/0           \n    0     0 MASQUERADE  all  --  *      !docker0  172.17.0.0/16        0.0.0.0/0           \n    0     0 MASQUERADE  tcp  --  *      *       172.17.0.2           172.17.0.2           tcp dpt:5000\n    0     0 MASQUERADE  tcp  --  *      *       172.18.0.2           172.18.0.2           tcp dpt:80\n\nChain DOCKER (2 references)\n pkts bytes target     prot opt in     out     source               destination         \n    0     0 RETURN     all  --  br-b81344fadd68 *       0.0.0.0/0            0.0.0.0/0           \n    0     0 RETURN     all  --  br-a4d09867c7ea *       0.0.0.0/0            0.0.0.0/0           \n    0     0 RETURN     all  --  docker0 *       0.0.0.0/0            0.0.0.0/0           \n    0     0 DNAT       tcp  --  !docker0 *       0.0.0.0/0            0.0.0.0/0            tcp dpt:5000 to:172.17.0.2:5000\n    1    60 DNAT       tcp  --  !br-a4d09867c7ea *       0.0.0.0/0            0.0.0.0/0            tcp dpt:8080 to:172.18.0.2:80\n```\n"},{"labels":["documentation",null,null],"text":"docker build and Dockerfile does not respect VOLUME if COPY or ADD move in multiple files or a whole directory.  If a single file is specified in either COPY or ADD it works as expected.  The file is available during the build and then not present in the image.\n\n---\n## BUG REPORT INFORMATION\n\n**Output of `docker version`:**\n\n```\n\nClient:\n Version:      1.9.1\n API version:  1.21\n Go version:   go1.4.3\n Git commit:   a34a1d5\n Built:        Fri Nov 20 17:56:04 UTC 2015\n OS/Arch:      darwin/amd64\n\nServer:\n Version:      1.10.0\n API version:  1.22\n Go version:   go1.5.3\n Git commit:   590d5108\n Built:        2016-02-04T19:55:25.696148927+00:00\n OS/Arch:      linux/amd64\n\n```\n\n**Output of `docker info`:**\n\n```\nContainers: 2\nImages: 5\nServer Version: 1.10.0\nStorage Driver: btrfs\nExecution Driver: native-0.2\nLogging Driver: json-file\nKernel Version: 4.3.3-dhyve\nOperating System: Buildroot 2015.11.1\nCPUs: 1\nTotal Memory: 3.86 GiB\nName: dlite\nID: MZRL:W4WC:2JDK:Z2JS:F5KM:UGUT:VFJV:ZO7M:ATVR:66HH:CS4L:5PXL\n```\n\ndlite 1.4.0\nOSx 10.11.4\n\n**Steps to reproduce the issue:**\n0. make a dir \"sample\" with a text file \"textfile.txt\" with some contents\n1. Dockerfile using an OS base and with contents\nVOLUME /opt/sample\nCOPY sample/ /opt/sample\n2. docker build volume_sample\n3. docker run -it volume_sample bash\n4. cat /opt/sample/textfile.txt\n\n**Describe the results you received:**\nthe contents of textfile.txt are output\n\n**Describe the results you expected:**\nan error of \"No such file or directory\"\n\n**Additional information you deem important (e.g. issue happens only occasionally):**\n"},{"labels":["documentation"],"text":"The current documentation for setting up devicemapper is out of date. The current suggested configuration using  `dm.datadev` and `dm.metadatadev`, er the man page `man docker daemon`, are deprecated and using `dm.thinpooldev` is now the preferred method.  We should update the documentation with new best practices/starting points.\nhttps://docs.docker.com/engine/userguide/storagedriver/device-mapper-driver/#configure-direct-lvm-mode-for-production\n\nI wouldn't claim to be a LVM or devicemapper expert but I put together an example set of steps based off of `docker-storage-setup` and some other defaults that work well from my experimenting:\n\n```\n# install lvm2\nyum install lvm2\n\n# ideally, perform these tasks before you start docker for the first time OR make sure docker is stopped; all containers, images and data will be lost during this process\n\n# create a physical volume (replace /dev/sdd with your block device)\npvcreate /dev/sdd\n\n# create a volume group named 'docker' (replace /dev/sdd with your block device)\nvgcreate docker /dev/sdd\n\n# create a thin pool named 'thinpool'; in this example, the data LV is 95% of the 'docker' volume group size (leaving free space allows for auto expanding of either the data or metadata if space is runs low as a temporary stopgap)\nlvcreate --wipesignatures y -n thinpool docker -l 95%VG\nlvcreate --wipesignatures y -n thinpoolmeta docker -l 1%VG\n\n# convert the pool to a thin-pool\nlvconvert -y --zero n -c 512K --thinpool docker/thinpool --poolmetadata docker/thinpoolmeta\n\n#  configure autoextension of thin pools via a lvm profile\nvi /etc/lvm/profile/docker-thinpool.profile\n\n# specify the value for 'thin_pool_autoextend_threshold' (where the number is the % of space used before lvm attempts to autoextend the available space; 100 = disabled)\nexample:\n    thin_pool_autoextend_threshold = 80\n\n# modify the autoextend percentage for when thin pool autoextension occurs (where the number is the % of space to increase the thin pool; 100 = disabled)\nexample:\n    thin_pool_autoextend_percent = 20\n\nexample /etc/lvm/profile/docker-thinpool.profile:\nactivation {\n    thin_pool_autoextend_threshold=80\n    thin_pool_autoextend_percent=20\n}\n\n# apply the lvm profile\nlvchange --metadataprofile docker-thinpool docker/thinpool\n\n# verified the lv is monitored\nlvs -o+seg_monitor\n\n# configure docker daemon with specific devicemapper options\n--storage-driver=devicemapper --storage-opt=dm.thinpooldev=/dev/mapper/docker-thinpool --storage-opt dm.use_deferred_removal=true\n    also see `man docker daemon` for more detail on the devicemapper options used.\n\nexample daemon.json:\n{\n        \"storage-driver\": \"devicemapper\",\n        \"storage-opts\": [\n                \"dm.thinpooldev=/dev/mapper/docker-thinpool\",\n                \"dm.use_deferred_removal=true\"\n        ]\n}\n\n# if docker was previously started, clear your graph driver directory\nrm -rf /var/lib/docker/*\n\n# start docker\nsystemctl start docker\n\n# make sure to monitor your thin pool and volume group free space!  it will auto-extend but the volume group can still fill up\n# monitor logical volumes\nlvs\nlvs -a (to see the data and metadata sizes)\n\n# monitor volume group free space\nvgs\n\n# logs can show the auto-extension of the thin pool when it hits the threshold\njournalctl -fu dm-event.service\n```\n\nIt would probably also make sense to add reference about https://github.com/docker/docker/pull/20786 which will be in 1.11 as that is important, especially for a production environment.  It has a sane default but can be easily configured to meet requirements in another environment.\n"},{"labels":["documentation"],"text":"For integration and acceptance testing I want access to data from the container. I would like to use `volumes` in docker-compose file to specify the relative host path. In many occasions the host path of the volume may need to be auto-created.\n\n**Problem**\n\nAuto-creation of the host path in a volume appears to be DEPRECATED, as stated in documentation [here](https://docs.docker.com/engine/userguide/containers/dockervolumes/#auto-creating-missing-host-paths-for-bind-mounts):\n\n> The directory on the host must be specified as an absolute path and if the directory doesn’t exist Docker will automatically create it for you. This auto-creation of the host path has been deprecated.\n\nThe documentation does not explain what will be the future behaviour. Will we get an error, or will the volume just not mount? Is there an additional flag to get auto-creation back, etc?\n\n**Desired outcome**\n- Describe the new behaviour in more detail. What should we use?\n- Update the documentation page at https://docs.docker.com/engine/userguide/containers/dockervolumes/ accordingly\n\nThanks!\n"},{"labels":["documentation",null],"text":"**Output of `docker version`:**\n\n```\nClient version: 1.7.1\nClient API version: 1.19\nGo version (client): go1.6\nGit commit (client): 786b29d\nOS/Arch (client): darwin/amd64\nServer version: 1.10.3\nServer API version: 1.22\nGo version (server): go1.5.3\nGit commit (server): 20f81dd\nOS/Arch (server): linux/amd64\n```\n\n**Output of `docker info`:**\n\n```\nContainers: 6\nImages: 1\nStorage Driver: aufs\n Root Dir: /mnt/sda1/var/lib/docker/aufs\n Backing Filesystem: extfs\n Dirs: 14\n Dirperm1 Supported: true\nExecution Driver: native-0.2\nLogging Driver: json-file\nKernel Version: 4.1.19-boot2docker\nOperating System: Boot2Docker 1.10.3 (TCL 6.4.1); master : 625117e - Thu Mar 10 22:09:02 UTC 2016\nCPUs: 2\nTotal Memory: 1.955 GiB\nName: 1.10.3-vmware\nID: NYFA:XWPO:HDL2:SDNL:LWHQ:WPS2:SU2X:IHRA:K5F3:5XJ2:RGZJ:HWTK\nDebug mode (server): true\nFile Descriptors: 25\nGoroutines: 38\nSystem Time: 2016-03-29T19:59:33.113353448Z\nEventsListeners: 0\nInit SHA1:\nInit Path: /usr/local/bin/docker\nDocker Root Dir: /mnt/sda1/var/lib/docker\nUsername: dxia\nRegistry: https://index.docker.io/v1/\nLabels:\n provider=vmwarefusion\n```\n\n**Additional environment details (AWS, VirtualBox, physical, etc.):**\n\n**Steps to reproduce the issue:**\n1. do a docker exec create\n2. do docker exec start\n3. docker exec inspect\n\n```\ncurl --insecure --cert ~/.docker/machine/machines/1.10.3-vmware/b2d-client-side.p12 --pass tcuser 'https://192.168.212.133:2376/exec/f33bbfb39f5b142420f4759b2348913bd4a8d1a6d7fd56499cb41a1bb91d7b3b/json' -vvv\n\n*   Trying 192.168.212.133...\n* Connected to 192.168.212.133 (192.168.212.133) port 2376 (#0)\n* WARNING: SSL: Certificate type not set, assuming PKCS#12 format.\n* Client certificate: dxia\n* TLS 1.2 connection using TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\n* Server certificate: dxia.1.10.3-vmware\n* Server certificate: dxia\n> GET /exec/f33bbfb39f5b142420f4759b2348913bd4a8d1a6d7fd56499cb41a1bb91d7b3b/json HTTP/1.1\n> Host: 192.168.212.133:2376\n> User-Agent: curl/7.43.0\n> Accept: */*\n>\n< HTTP/1.1 200 OK\n< Content-Type: application/json\n< Server: Docker/1.10.3 (linux)\n< Date: Tue, 29 Mar 2016 19:47:24 GMT\n< Content-Length: 379\n<\n{\"ID\":\"f33bbfb39f5b142420f4759b2348913bd4a8d1a6d7fd56499cb41a1bb91d7b3b\",\"Running\":false,\"ExitCode\":2,\"ProcessConfig\":{\"tty\":true,\"entrypoint\":\"sh\",\"arguments\":[\"-c\",\"exit 2\"],\"privileged\":false,\"user\":\"1000\"},\"OpenStdin\":true,\"OpenStderr\":true,\"OpenStdout\":true,\"CanRemove\":false,\"ContainerID\":\"b53ee82b53a40c7dca428523e34f741f3abc51d9f297a14ff874bf761b995126\",\"DetachKeys\":\"\"}\n```\n\n**Describe the results you received:**\nThere's only a `ContainerID` instead of the entire `Container` object as stated in the docs here https://github.com/docker/docker/blob/master/docs/reference/api/docker_remote_api_v1.22.md#exec-inspect.\n\n**Describe the results you expected:**\nThe docs should correspond to the behavior.\n\n**Additional information you deem important (e.g. issue happens only occasionally):**\n"},{"labels":[null,"documentation"],"text":"Every part of the remote API that returns a collection of objects (`GET /images/json`, `GET /containers/json`, `GET /events`, etc.) returns its values as a JSON list of objects: `[{...}, {...}, ...]`. Every part, that is, except `GET /volumes`. That endpoint returns an object of one element whose value is a list: `{ \"Volumes\": [{...}, {...}, ...] }`. This is still the case in the [most recent dev Remote API Docs](https://github.com/docker/docker/blob/master/docs/reference/api/docker_remote_api_v1.24.md#list-volumes).\n\nIs there a reason `GET /volumes` is inconsistent with the rest of the API? If there is no reason, I ask that it be made to return a flat list.\n"},{"labels":["documentation"],"text":"Just like https://docs.docker.com/compose/completion/, it would be useful to have https://docs.docker.com/engine/completion/\n\nThis is already answered at:\n\nhttp://stackoverflow.com/questions/26132451/how-to-add-bash-command-completion-for-docker-on-mac-os-x\n"},{"labels":["documentation"],"text":"Broken links at: https://docs.docker.com/docker-hub/overview/\n\nWebhooks link to https://docs.docker.com/docker-hub/builds/#webhooks instead of https://docs.docker.com/docker-hub/webhooks/.\n"},{"labels":["documentation",null,null],"text":"Loving the new seccomp BPF stuff; thanks for making it more \"within reach\" for typical users.\n\n[I wrote a little thing to allow ptrace in my containers](https://blog.afoolishmanifesto.com/posts/how-to-enable-ptrace-in-docker-1.10/) and while it worked I started getting these warnings:\n\n```\n2016/03/21 22:05:18 Error resolving syscall name copy_file_range: could not resolve name to syscall - ignoring syscall.\n2016/03/21 22:05:18 Error resolving syscall name mlock2: could not resolve name to syscall - ignoring syscall.\n```\n\nNot a huge deal, but I figured out I would go ahead and automate the exclusion of system calls that are \"unknown.\"  After scripting that there were five other system calls that were excluded:\n1. recv - this is, as far as I understand the exact same as recvfrom, seems safe to leave out\n2. send - same as recv, but sendto\n3. cacheflush - this is for a non-x86 arch (MIPS) which I'd be surprised if Go even worked on, but either way also seems safe (for me, but maybe not docker proper) to leave out\n4. breakpoint - I have no manpage for this; perhaps it is the same as 3 but undocumented?\n5. set_tls - same situation as 4.\n\nHonestly I am not super sure where to go from here.  Some documentation on why all of these are included might be nice.  The weirder thing to me was that I got a warning for mlock2 and copy_file_range but not cacheflush, breakpoint, and set_tls.\n\nSorry to have such a vague report, but I figured more information can't hurt.\n"},{"labels":["documentation"],"text":"<!--\nIf you are reporting a new issue, make sure that we do not have any duplicates\nalready open. You can ensure this by searching the issue list for this\nrepository. If there is a duplicate, please close your issue and add a comment\nto the existing issue instead.\n\nIf you suspect your issue is a bug, please edit your issue description to\ninclude the BUG REPORT INFORMATION shown below. If you fail to provide this\ninformation within 7 days, we cannot debug your issue and will close it. We\nwill, however, reopen it if you later provide the information.\n\nFor more information about reporting issues, see\nhttps://github.com/docker/docker/blob/master/CONTRIBUTING.md#reporting-other-issues\n\n---------------------------------------------------\nBUG REPORT INFORMATION\n---------------------------------------------------\nUse the commands below to provide key information from your environment:\nYou do NOT have to include this information if this is a FEATURE REQUEST\n-->\n\n**Output of `docker version`:**\n\n```\nClient:\n Version:      1.10.3\n API version:  1.22\n Go version:   go1.6\n Git commit:   20f81dd\n Built:        Sat Mar 12 04:07:44 UTC 2016\n OS/Arch:      darwin/amd64\n\nServer:\n Version:      1.10.3\n API version:  1.22\n Go version:   go1.5.3\n Git commit:   20f81dd\n Built:        Thu Mar 10 21:49:11 2016\n OS/Arch:      linux/amd64\n```\n\n**Output of `docker info`:**\n\n```\nContainers: 0\n Running: 0\n Paused: 0\n Stopped: 0\nImages: 1\nServer Version: 1.10.3\nStorage Driver: aufs\n Root Dir: /mnt/sda1/var/lib/docker/aufs\n Backing Filesystem: extfs\n Dirs: 2\n Dirperm1 Supported: true\nExecution Driver: native-0.2\nLogging Driver: json-file\nPlugins:\n Volume: local\n Network: bridge null host\nKernel Version: 4.1.19-boot2docker\nOperating System: Boot2Docker 1.10.3 (TCL 6.4.1); master : 625117e - Thu Mar 10 22:09:02 UTC 2016\nOSType: linux\nArchitecture: x86_64\nCPUs: 1\nTotal Memory: 996.1 MiB\nName: 1.10\nID: XS37:USGK:BVPL:4KKK:K6HN:EMVM:43DG:W2CY:JFO3:I6KX:OITN:E5F2\nDebug mode (server): true\n File Descriptors: 10\n Goroutines: 21\n System Time: 2016-03-19T01:28:14.590797867Z\n EventsListeners: 0\n Init SHA1:\n Init Path: /usr/local/bin/docker\n Docker Root Dir: /mnt/sda1/var/lib/docker\nLabels:\n provider=virtualbox\n```\n\n**Additional environment details (AWS, VirtualBox, physical, etc.):**\nVirtualBox\n\n**Steps to reproduce the issue:**\n1. Look up remote API docs to create a container (for example, [API version 1.22](https://docs.docker.com/engine/reference/api/docker_remote_api_v1.22/#create-a-container)).\n2. Issue a `curl` call to create a container with mounts.\n\n```\n$ curl -XPOST -H 'Content-Type: application/json' http://${docker}/containers/create?name=foo -d '{\"Image\": \"busybox\", \"Mounts\": [{ \"Destination\": \"/foo\" }]}'\n```\n1. Inspect the container. See that no `Mounts` were created.\n\n```\n$ curl http://${docker}/containers/foo/json | jq '.Mounts'\n[]\n```\n1. Ignore the docs, search on the issues, find #15908, specifically [this comment](https://github.com/docker/docker/issues/15908#issuecomment-137749134).\n2. Create a container using the undocumented `Volumes` key.\n\n```\n$ curl -XPOST -H 'Content-Type: application/json' http://${docker}/containers/create?name=foo -d '{\"Image\": \"busybox\", \"Volumes\": { \"/foo\": {}}}'\n```\n1. Inspect the container. See that `Mounts` were created.\n\n```\n$ curl http://${docker}/containers/foo/json | jq '.Mounts'\n[  \n    {\n        \"Name\": \"ee6a4252b747356d74e71c952401420af00dbfc704b9d560000dec0df5ea095b\",\n        \"Source\": \"/mnt/sda1/var/lib/docker/volumes/ee6a4252b747356d74e71c952401420af00dbfc704b9d560000dec0df5ea095b/_data\",\n        \"Destination\": \"/foo\",\n        \"Driver\": \"local\",\n        \"Mode\": \"\",\n        \"RW\": true,\n        \"Propagation\": \"\"\n    }\n]\n```\n\n**Describe the results you received:**\nRemote API docs describe an incorrect way to create a container with volumes. And the correct way is inconsistent in that the deprecated `\"Volumes\"` key must be used to create containers with volumes, but the newer `\"Mounts\"` key is used to deliver information on a container inspect.\n\n**Describe the results you expected:**\nEither the Remote API docs would correctly describe how to create a container with volumes, or the actual API would be fixed to be consistent between creating/inspecting.\n\n**Additional information you deem important (e.g. issue happens only occasionally):**\nThe example in the docs is incorrect in every version going back to when the `Mounts` key was introduced in API 1.20.\n"},{"labels":["documentation",null,null],"text":"For Docker 1.11, containerd integration (https://github.com/docker/docker/pull/20662)\nonly brings a minimum amount of user-facing changes.\n\nThere _are_ some changes that need to be documented. This is a first inventory\nof those changes (more changes may follow).\n## ~~Installation from binaries~~\n\n~~Docker Engine no longer is a single binary, and requires 4 binaries to run;\n(docker, containerd, containerd-shim, runc).~~\n\n~~We need to update the \"installation from binaries\" documentation;\nhttps://docs.docker.com/engine/installation/binaries/~~\n\naddressed in https://github.com/docker/docker/pull/21994\n## ~~New daemon flag~~\n\nThere is a new `--containerd=` option in the daemon that needs to be documented;\n- https://github.com/docker/docker/blob/master/docs/reference/commandline/daemon.md\n- https://github.com/docker/docker/blob/master/man/docker-daemon.8.md\n\nThis was resolved in https://github.com/docker/docker/pull/21576\n## ~~Changes in \"privileged\" containers~~\n\n~~There is a change with `--privileged` and restricted readonly paths. In docker 1.10\nthere are no restrictions, in 1.11 restrictions are applied but because the user is\nprivileged they can revert them inside container.~~\n\nFor reference; https://github.com/docker/docker/blob/e6573a5d18c3045fb021668f3c7539ffa52696fe/daemon/execdriver/native/template/default_template_linux.go#L86-L98\n\n(resolved by https://github.com/docker/docker/pull/21751)\n## ~~Systemd groups~~\n\n~~This is still being worked on, but there's a chance that systemd cgroups won't\nwork in the initial release, so `--exec-opt native.cgroupdriver=systemd` cannot \nbe used.~~\n\n~~If systemd cgroups are not supported, this should be documented. ~~\n\n(resolved in https://github.com/docker/docker/pull/21592)\n## Experimental features\n\nSlight user facing change is that in case of a daemon crash, containers will\nnot die but we will still shut them down on start. In experimental we will\nleave them running and reattach upon daemon start.\n\n(currently blocked on https://github.com/docker/docker/issues/21933, we can add documentation\nfor the experimental features once those are resolved)\n## ~~Controlling the containerd daemon~~\n\n~~t.b.d.; the docker daemon automatically takes care of starting/stopping the\ncontainerd daemon. Do we need to describe how to start/stop (and configure?) \nthe containerd daemon manually?~~\n\nno changes needed for the regular installation, and binary installation is\nupdated in https://github.com/docker/docker/pull/21994\n## Overview of binaries and their role\n\nt.b.d.; provide an overview of the binaries that are installed, and what their\nrole is.\n## Packagers documentation\n\nhttps://github.com/docker/docker/blob/master/project/PACKAGERS.md\n## Contributors guide\n\nhttps://github.com/docker/opensource/tree/master/docs\n"},{"labels":["documentation",null],"text":"Hello,\n\nIt looks like the documentation for [events](https://docs.docker.com/engine/reference/api/docker_remote_api/#docker-events) has become out of date, in particular around the `kill` event.  Prior to Docker 1.7.0, the `kill` event was only emitted on `SIGKILL` being sent to the container via `docker kill`.  Since 1.7.0, the semantic changed and the `kill` event started to be emitted on any signal sent via `docker kill`, and since 1.8.0 the semantic changed again and the `kill` event started to be emitted for any signal sent at all (including `SIGTERM` and `SIGKILL` sent as part of `docker stop`).  These changes in behavior led to a [bug](https://github.com/aws/amazon-ecs-agent/issues/335) with the Amazon ECS Agent, which we will be correcting with our next release.\n\nHere's the set of behavior changes I've found across different Docker versions:\n\n| Docker version | `docker kill -s USR1` | `docker kill` | `docker stop` | Container exit |\n| --- | --- | --- | --- | --- |\n| 1.5.0 | no event | `die`, `kill` | `die`, `stop` | `die` |\n| 1.6.0 | no event | `die`, `kill` | `die`, `stop` | `die` |\n| 1.6.1 | no event | `die`, `kill` | `die`, `stop` | `die` |\n| 1.6.2 | no event | `die`, `kill` | `die`, `stop` | `die` |\n| 1.7.0 | `kill` | `die`, `kill` | `die`, `stop` | `die` |\n| 1.7.1 | `kill` | `die`, `kill` | `die`, `stop` | `die` |\n| 1.8.0 | `kill` | `kill`, `die` | `kill`, `kill`, `die`, `stop` | `die` |\n| 1.8.1 | `kill` | `kill`, `die` | `kill`, `kill`, `die`, `stop` | `die` |\n| 1.8.2 | `kill` | `kill`, `die` | `kill`, `kill`, `die`, `stop` | `die` |\n| 1.8.3 | `kill` | `kill`, `die` | `kill`, `kill`, `die`, `stop` | `die` |\n| 1.9.0 | `kill` | `kill`, `die` | `kill`, `kill`, `die`, `stop` | `die` |\n| 1.9.1 | `kill` | `kill`, `die` | `kill`, `kill`, `die`, `stop` | `die` |\n| 1.10.0 | `kill`* | `kill`, `die`* | `kill`, `kill`, `die`, `stop`* | `die`* |\n| 1.10.1 | `kill`* | `kill`, `die`* | `kill`, `kill`, `die`, `stop`* | `die`* |\n| 1.10.2 | `kill`* | `kill`, `die`* | `kill`, `kill`, `die`, `stop`* | `die`* |\n| 1.10.3 | `kill`* | `kill`, `die`* | `kill`, `kill`, `die`, `stop`* | `die`* |\n\n\\* These events are now typed with `container`.  Other events are emitted with type `network` and `volume`.\n\nNote that `kill` is emitted under many more circumstances in recent versions of Docker, and that the ordering of `die`, `kill` changed to `kill`, `die` with Docker 1.8.0 as well.  The [available](https://docs.docker.com/engine/reference/commandline/events/) [documentation](https://docs.docker.com/engine/reference/api/docker_remote_api/#docker-events) for events is fairly light as a whole, but the [event diagram](https://docs.docker.com/engine/reference/api/images/event_state.png) has been out of date at least since 1.7.0.\n\nIt would be fantastic if the semantics of the different events were documented and any semantic changes were called out in the changelog for releases.\n\nThanks!\nSam\n"},{"labels":["documentation",null,null,null],"text":"Is there anything similar to the flowcharts on https://docs.docker.com/engine/extend/authorization/ for the volume plugin API?\n\nI am trying to write a simple volume plugin for some internal use cases and it would be nice to see a visual of what requests will be called for the relevant CLI/API commands.\n\nFor instance the first time I started testing my plugin I was surprised by the number of Path requests before/after other operations. Based on the documentation I assumed it would have only been used with docker inspect type commands.\n"},{"labels":["documentation",null],"text":"I've gone through a few Docker installs on Ubuntu both myself as well as with some new developers on my team.  I've noticed a fairly consistent series of missed steps or mistakes that keep happening during each setup.  This is not because the document is incomplete, but because the necessary steps are spread out and hidden amongst other **optional** steps.\n\nhttps://github.com/docker/docker/blob/master/docs/installation/linux/ubuntulinux.md\n\nIt would be nice if the following steps were put at the top of the instructions and noted as a \"typical\" flow for installation:\n\n---\n1. Add the new `GPG` key.\n   \n   ```\n   sudo apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D\n   ```\n2. Add an entry for your Ubuntu operating system to `/etc/apt/sources.list.d/docker.list`\n   - On Ubuntu Precise 12.04 (LTS)\n         `deb https://apt.dockerproject.org/repo ubuntu-precise main`\n   - On Ubuntu Trusty 14.04 (LTS)\n         `deb https://apt.dockerproject.org/repo ubuntu-trusty main`\n   - Ubuntu Wily 15.10\n         `deb https://apt.dockerproject.org/repo ubuntu-wily main`\n   - Ubuntu Wily 16.04\n         `deb https://apt.dockerproject.org/repo ubuntu-xenial main`\n3. Update the `APT` package index.\n   \n   ```\n   sudo apt-get update\n   ```\n4. Install Docker\n   \n   ```\n   sudo apt-get install docker-engine\n   ```\n5. Add your user to the `docker` group\n   \n   ```\n   sudo usermod -aG docker ubuntu\n   ```\n   ---\n\nThis series of steps is sufficient for the majority of the installations that happen.  While it's fine to keep the extended information - as it's helpful - burying the important parts has required me to assist every person I've instructed to install docker.\n\nIt's worth noting I think given the number of steps needed to install the Ubuntu package, would it not make sense for Docker to publish an official PPA?  Much of this would be mitigated by just doing that.\n"},{"labels":["documentation",null,null],"text":"> Whenever possible, use current Official Repositories as the basis for your image. We recommend the Debian image since it’s very tightly controlled and kept extremely minimal (currently under 100 mb), while still being a full distribution.\n\nThe docs suggest that the Debian image is under 100 mb. While this may have been true at some time point in the past, it's incorrect at present. https://github.com/docker-library/docs/blob/master/debian/tag-details.md#debianlatest suggests that the size is around 125 mb now - for latest and jessie.\n"},{"labels":["documentation"],"text":"I am trying to follow this guide https://docs.docker.com/engine/security/certificates/, but the paths are for linux. What would be the equivalent for Windows?\n"},{"labels":["documentation"],"text":"After #19953 closes, the volume documentation should be updated to account for the changes wherever we talk about anonymous volumes.\n"},{"labels":["documentation"],"text":"Create overview/parent pages for the engine sub commands `docker-volume` and `docker-network`.  Needed and necessary in the `/man` and `/docs` directory.  See #20190 \n"},{"labels":["documentation"],"text":"Reported by @jpetazzo\n\nIf I pass an invalid sequence --detach-keys just accepts it without showing an error (and silently reverts to `^P^Q`) also, I don't think that `[a-Z]` is a valid glob entry. I'm not sure exactly what the doc should say since I don't know what the code should do; but it needs more explanation IMHO For example:\n\n`--detach-keys ctrl-d,d` \n\nworks, but not \n\n`ctrl-D,d` or `CTRL-d,d`\n\nThere is one confusing thing -- the `--detach-keys` can be a global engine option, but when it is used for `docker run` or `docker attach` it is a local, non-sticky option (i.e. if I docker run `--detach-keys ctrl-x` then detach then reattach, it default to `^P^Q` again)\n"},{"labels":["documentation",null,null],"text":"This is with reference to https://github.com/docker/docker/issues/20827. But, that thread is already closed and is not getting traction. Can we open that thread or discuss the issue here?\n"},{"labels":["documentation",null],"text":"<!--\nIf you are reporting a new issue, make sure that we do not have any duplicates\nalready open. You can ensure this by searching the issue list for this\nrepository. If there is a duplicate, please close your issue and add a comment\nto the existing issue instead.\n\nIf you suspect your issue is a bug, please edit your issue description to\ninclude the BUG REPORT INFORMATION shown below. If you fail to provide this\ninformation within 7 days, we cannot debug your issue and will close it. We\nwill, however, reopen it if you later provide the information.\n\nFor more information about reporting issues, see\nhttps://github.com/docker/docker/blob/master/CONTRIBUTING.md#reporting-other-issues\n\n---------------------------------------------------\nBUG REPORT INFORMATION\n---------------------------------------------------\nUse the commands below to provide key information from your environment:\nYou do NOT have to include this information if this is a FEATURE REQUEST\n-->\n\nOutput of `docker version`:\n\n```\nDocker version 1.8.0, build 0d03096\n```\n\nOutput of `docker info`:\n\n```\nContainers: 1\nImages: 5\nStorage Driver: aufs\n Root Dir: /mnt/sda1/var/lib/docker/aufs\n Backing Filesystem: extfs\n Dirs: 21\n Dirperm1 Supported: true\nExecution Driver: native-0.2\nLogging Driver: json-file\nKernel Version: 4.1.18-boot2docker\nOperating System: Boot2Docker 1.10.2 (TCL 6.4.1); master : 611be10 - Mon Feb 22 22:47:06 UTC 2016\nCPUs: 8\nTotal Memory: 1.955 GiB\nName: boot2docker\nID: PVUD:7SAK:UKCM:SWAM:VO4D:HAVW:WJWE:L7J6:OKOY:EHOE:EOMP:ED3Y\nDebug mode (server): true\nFile Descriptors: 11\nGoroutines: 29\nSystem Time: 2016-03-03T17:42:38.217741179Z\nEventsListeners: 0\nInit SHA1: \nInit Path: /usr/local/bin/docker\nDocker Root Dir: /mnt/sda1/var/lib/docker\n```\n\nProvide additional environment details (AWS, VirtualBox, physical, etc.):\nMacOS X\n\nList the steps to reproduce the issue:\n1. Create a docker image with a file at `/app/build/version.txt`\n2. Start a container for that image with\n`CONTAINER_ID=$(docker create foo:123)`\n3. Attempt to copy the file out of the container to a path that doesn't exist with\n`docker cp ${CONTAINER_ID}:/app/build/version.txt build/version.txt`\n--> `lstat /path/to/working/directory/build: no such file or directory`\n4. Try again with just a destination directory with\n`docker cp ${CONTAINER_ID}:/app/build/version.txt build/`\n--> `no such directory`\n5. Create the directory with\n`mkdir build`\n6. Try again with either command.\n--> Notice success.\n\nDescribe the results you received:\n\n`no such file or directory`\n`no such directory`\n\nDescribe the results you expected:\n\nSuccessful copy of the file.\n\nProvide additional info you think is important:\nThe documentation [here](https://docs.docker.com/engine/reference/commandline/cp/) is very explicit about the expected behavior in this situation.  In particular, `SRC_PATH` specifies a file and `DEST_PATH` does not exist, so the file should be created at `DEST_PATH`.  The documentation implies that the directory structure leading up to `DEST_PATH` will be created if necessary.\n"},{"labels":["documentation",null],"text":"I have a local Ubuntu 12.04 machine that I want to run Docker on with some application code. However the code needs to read data off of a USB drive when it is plugged in. Because the drive can be swapped, it seems like volume mounting it does not work when the new one is plugged in. Is there a way to configure Docker so that the usb detection is passed to Docker instead of just the host os? \n\nUse docker run command and discussed here:\n\nhttps://docs.docker.com/engine/reference/run/#volume-shared-filesystems\n\nYou can mount /dev using the -v flag.  Any device that appears on /dev will show up in the container.  If you do this, you'll likely also want to change the cgroup value to restrict the permissions to just the USB device.\n\nJerome in our company also wrote this blog on doing this:\n\nhttps://jpetazzo.github.io/2015/01/13/docker-mount-dynamic-volumes/\n"},{"labels":[null,"documentation",null],"text":"<!--\nIf you are reporting a new issue, make sure that we do not have any duplicates\nalready open. You can ensure this by searching the issue list for this\nrepository. If there is a duplicate, please close your issue and add a comment\nto the existing issue instead.\n\nIf you suspect your issue is a bug, please edit your issue description to\ninclude the BUG REPORT INFORMATION shown below. If you fail to provide this\ninformation within 7 days, we cannot debug your issue and will close it. We\nwill, however, reopen it if you later provide the information.\n\nFor more information about reporting issues, see\nhttps://github.com/docker/docker/blob/master/CONTRIBUTING.md#reporting-other-issues\n\n---------------------------------------------------\nBUG REPORT INFORMATION\n---------------------------------------------------\nUse the commands below to provide key information from your environment:\nYou do NOT have to include this information if this is a FEATURE REQUEST\n-->\n\nOutput of `docker version`:\n\n```\nClient:\n Version:      1.10.2\n API version:  1.22\n Go version:   go1.5.3\n Git commit:   c3959b1\n Built:        Mon Feb 22 16:22:08 2016\n OS/Arch:      linux/amd64\n\nServer:\n Version:      1.10.2\n API version:  1.22\n Go version:   go1.5.3\n Git commit:   c3959b1\n Built:        Mon Feb 22 16:22:08 2016\n OS/Arch:      linux/amd64\n```\n\nOutput of `docker info`:\n\n```\nContainers: 24\n Running: 2\n Paused: 0\n Stopped: 22\nImages: 308\nServer Version: 1.10.2\nStorage Driver: devicemapper\n Pool Name: docker-253:2-413393-pool\n Pool Blocksize: 65.54 kB\n Base Device Size: 10.74 GB\n Backing Filesystem: ext4\n Data file: /dev/loop0\n Metadata file: /dev/loop1\n Data Space Used: 10.48 GB\n Data Space Total: 107.4 GB\n Data Space Available: 26.63 GB\n Metadata Space Used: 15.14 MB\n Metadata Space Total: 2.147 GB\n Metadata Space Available: 2.132 GB\n Udev Sync Supported: true\n Deferred Removal Enabled: false\n Deferred Deletion Enabled: false\n Deferred Deleted Device Count: 0\n Data loop file: /var/lib/docker/devicemapper/devicemapper/data\n WARNING: Usage of loopback devices is strongly discouraged for production use. Either use `--storage-opt dm.thinpooldev` or use `--storage-opt dm.no_warn_on_loop_devices=true` to suppress this warning.\n Metadata loop file: /var/lib/docker/devicemapper/devicemapper/metadata\n Library Version: 1.02.93 (2015-01-30)\nExecution Driver: native-0.2\nLogging Driver: json-file\nPlugins: \n Volume: local\n Network: host bridge null\nKernel Version: 4.3.4-200.fc22.x86_64\nOperating System: Fedora 22 (Twenty Two)\nOSType: linux\nArchitecture: x86_64\nCPUs: 4\nTotal Memory: 7.721 GiB\nName: tomas-dohnalek.brno.seznam.cz\nID: L3SZ:VAVV:WVWH:K37D:QTXP:A3QC:J3LU:OANJ:25A7:J2AR:OYHA:RWEF\nUsername: dohnto\nRegistry: https://index.docker.io/v1/\n```\n\nList the steps to reproduce the issue:\n1. Follow the documentation: (https://docs.docker.com/engine/reference/commandline/pull/ - `docker pull registry.hub.docker.com/debian` or https://github.com/docker/docker/blob/master/man/docker-pull.1.md - `docker pull registry.hub.docker.com/fedora:20`)\n2. Run `docker pull registry.hub.docker.com/debian`\n\nDescribe the results you received:\nThe actual output is  `Error response from daemon: Error parsing HTTP response: invalid character '<' looking for beginning of value: \"\\n\\n\\n<!DOCTYPE html><!....404: The page you were looking for is not here...`\n\nDescribe the results you expected:\nPull the image\n\nProvide additional info you think is important:\n**When I use docker 1.9.1 everything works as expected.**\n"},{"labels":["documentation",null,null,null],"text":"After adding the apt repository according to https://docs.docker.com/engine/installation/linux/ubuntulinux/ instructions, it fails to fetch Docker. There is nothing in the documentation to suggest that ppc64le is not supported in this setup.\n\nW: Failed to fetch https://apt.dockerproject.org/repo/dists/ubuntu-wily/Release  Unable to find expected entry 'main/binary-ppc64el/Packages' in Release file (Wrong sources.list entry or malformed file)\n\nE: Some index files failed to download. They have been ignored, or old ones used instead.\n"},{"labels":[null,"documentation",null,null,null],"text":"When I tried running `docker build --tag Trevor:FlaskCompose`, I received an exception:\n\n> invalid value \"Trevor:FlaskCompose\" for flag --tag: Error parsing reference: \"Trevor:FlaskCompose\" is not a valid repository/tag\n> See 'docker build --help'.\n\nUnfortunately, when running `docker build --help`, as suggested by the tool, there is no additional guidance provided.\n\n> -t, --tag=[]                    Name and optionally a tag in the 'name:tag' format\n\nHow does a user know what a valid \"tag\" is? I fiddled with the name, and apparently the `name` must be all lowercase, and the `tag` portion can have capital letters. However, I am not aware of what the other requirements are.\n\nThe less friction, and more clarity, that is provided by Docker, the more likely users will be to adopt it and be delighted by the experience of working with it. :smile: \n\nCheers,\nTrevor Sullivan\nMicrosoft MVP: PowerShell\n"},{"labels":["documentation",null,null],"text":"https://bugzilla.redhat.com/show_bug.cgi?id=1304808\n\nOutput of `docker version`:\nClient:\n Version:      1.8.2-el7\n API version:  1.20\n Package Version: docker-1.8.2-10.el7.x86_64\n Go version:   go1.4.2\n Git commit:   a01dc02/1.8.2\n Built:  \n OS/Arch:      linux/amd64\n\nServer:\n Version:      1.8.2-el7\n API version:  1.20\n Package Version: \n Go version:   go1.4.2\n Git commit:   a01dc02/1.8.2\n Built:  \n OS/Arch:      linux/amd64\n\nList the steps to reproduce the issue:\n1. docker images --all | tail -n +1 | wc -l\n2. docker info | grep 'Images'\n\nProvide additional info you think is important:\nDiscussions around this issue:\n\n---\n\nWhen you do `docker info` SystemInfo (https://github.com/docker/docker/blob/master/daemon/info.go#L26) method is called, which gets the images count from imageStore.\n\ndaemon.imageStore.Map()\nhttps://github.com/docker/docker/blob/master/daemon/info.go#L72\n\nThis map returns information about the images. (Tags are not part of this store).\nHence when you do `docker images --all|wc -l` you see a different count as tags are also included in the output.\n\nHope that clears up the confusion.\n\nShishir\n\n---\n\nFROM: Chris Evich\nOkay, just checked.  The man-page for 'docker info' is in need of some love.  Clarifying the 'Images' and 'Containers' count with what they actually represent would be 'nice to have'.  On F22, it has this blurb:\n\nThis  command  displays  system  wide information regarding the Docker installation. Information displayed includes the number of containers and images, pool name,  data file,  metadata file, data space used, total data space, metadata space used , total metadata space, execution driver, and the kernel version.\n\nand the example section is really out of date (OS: Ubuntu 14 and Kernel 3.13).  Would make the guys in marketing happier if it showed Fedora/CentOS/RHEL instead and maybe showed the typical devicemapper details instead of aufs (not used any more, anywhere IIRC).\n\nHere's a suggestion for the description blurb:\n\nThis  command  displays  system  wide information regarding the Docker installation. Information displayed includes the number of containers and (non-tagged) images, pool name,  image storage details, space available and used, execution driver, OS and the kernel versions.\n\n---\n"},{"labels":["documentation",null,null],"text":"The docker remote API documentation pages (f.ex. [Remote API v.1.22](https://docs.docker.com/engine/reference/api/docker_remote_api_v1.22/#get-container-logs)) describe how to connect and retrieve container logs, but does not describe _how_ the log messages are formatted. I expect to be able to understand what to do with the data I get back.\n\nFrom what I am able to tell, the log results is a sequence of chunks (I am unsure if these are separated by newline or not, but this seems to be the case). Each chunk seems to be on the format (`fd`, `chunk length`, `contents`). `fd` is a single (1) byte telling you from which file descriptor (1 for stdout, and 2 for stderr) the chunk is from. Next follows `chunk length`, which is 7 bytes telling you how long the length of the log chunk. The length does not include the `fd` field or the `chunk lenght` fields, only the contents. Finally, the contents follow.\n\nThis is, however, a result of look-and-guess based only on enabling stdin and stderr. I have no clue what would happen if I enable timestamps, if I only read data from a single source, or if I even use the right terminology here.\n\nIt would be much easier to use logs fetched via the remote API if this is properly documented.\n"},{"labels":["documentation",null],"text":"<!--\nIf you are reporting a new issue, make sure that we do not have any duplicates\nalready open. You can ensure this by searching the issue list for this\nrepository. If there is a duplicate, please close your issue and add a comment\nto the existing issue instead.\n\nIf you suspect your issue is a bug, please edit your issue description to\ninclude the BUG REPORT INFORMATION shown below. If you fail to provide this\ninformation within 7 days, we cannot debug your issue and will close it. We\nwill, however, reopen it if you later provide the information.\n\nFor more information about reporting issues, see\nhttps://github.com/docker/docker/blob/master/CONTRIBUTING.md#reporting-other-issues\n\n---------------------------------------------------\nBUG REPORT INFORMATION\n---------------------------------------------------\nUse the commands below to provide key information from your environment:\nYou do NOT have to include this information if this is a FEATURE REQUEST\n-->\n\nOutput of `docker version`:\n\n```\nClient:\n Version:      1.9.1\n API version:  1.21\n Go version:   go1.4.2\n Git commit:   a34a1d5/1.9.1\n Built:        \n OS/Arch:      linux/amd64\n\nServer:\n Version:      1.9.1\n API version:  1.21\n Go version:   go1.4.2\n Git commit:   a34a1d5/1.9.1\n Built:        \n OS/Arch:      linux/amd64\n\n```\n\nOutput of `docker info` (on a fresh host; an affected host does not respond to `docker info`):\n\n```\nContainers: 1\nImages: 6\nServer Version: 1.9.1\nStorage Driver: devicemapper\n Pool Name: docker-docker--pool\n Pool Blocksize: 524.3 kB\n Base Device Size: 107.4 GB\n Backing Filesystem: xfs\n Data file: \n Metadata file: \n Data Space Used: 100.7 MB\n Data Space Total: 9.437 GB\n Data Space Available: 9.337 GB\n Metadata Space Used: 77.82 kB\n Metadata Space Total: 25.17 MB\n Metadata Space Available: 25.09 MB\n Udev Sync Supported: true\n Deferred Removal Enabled: true\n Deferred Deletion Enabled: true\n Deferred Deleted Device Count: 0\n Library Version: 1.02.93-RHEL7 (2015-01-28)\nExecution Driver: native-0.2\nLogging Driver: json-file\nKernel Version: 4.1.17-22.30.amzn1.x86_64\nOperating System: Amazon Linux AMI 2015.09\nCPUs: 1\nTotal Memory: 995.6 MiB\nName: ip-172-31-34-29\nID: GO67:QAUR:ZN7D:LBC6:M366:GT2C:BQTV:F3UE:IMGD:YFNF:T37L:OQWC\n\n```\n\nProvide additional environment details (AWS, VirtualBox, physical, etc.): Amazon Linux AMI 2015.09.2 configured with a second EBS volume at /dev/xvdb and configured with direct LVM (using devicemapper) by `docker-storage-setup`.  By default, `docker-storage-setup` configures the thin pool originally sized at 40% of the available disk with an auto-extend policy, however the same behavior is exhibited when auto-extend is disabled and when `lv_when_full` is changed to `error`.\n\nList the steps to reproduce the issue:\n1. Configure Docker as described above (direct LVM with devicemapper using xfs)\n2. Run containers to progressively consume disk (I seemed to have reasonable results using `docker run ubuntu dd if=/dev/urandom of=sample.txt bs=64M count=1 iflag=fullblock`) until the disk is full (alternately, run my [repro script](https://gist.github.com/samuelkarp/6c8b5ebc0a9cc34006c8))\n3. Try to do something with Docker (any of `docker ps`, `docker info`, `docker run`, `docker stop`, `docker rm`, `docker images`, `docker rmi`)\n\nDescribe the results you received:\nDocker commands hang indefinitely.  dmesg fills with things like the following:\n\n```\n[ 3029.535199] device-mapper: thin: 253:2: reached low water mark for data device: sending event.\n[ 3029.589706] device-mapper: thin: 253:2: switching pool to out-of-data-space mode\n[ 3037.584626] vethac84d34: renamed from eth0\n[ 3037.588339] docker0: port 2(vethd9e484d) entered disabled state\n[ 3037.622172] docker0: port 2(vethd9e484d) entered disabled state\n[ 3037.626293] device vethd9e484d left promiscuous mode\n[ 3037.629420] docker0: port 2(vethd9e484d) entered disabled state\n[ 3089.592091] device-mapper: thin: 253:2: switching pool to read-only mode\n[ 3089.598147] Buffer I/O error on dev dm-4, logical block 144077, lost async page write\n[ 3089.603304] Buffer I/O error on dev dm-4, logical block 144078, lost async page write\n[ 3089.608669] Buffer I/O error on dev dm-4, logical block 144079, lost async page write\n[ 3089.614565] Buffer I/O error on dev dm-4, logical block 144080, lost async page write\n[ 3089.620112] Buffer I/O error on dev dm-4, logical block 144081, lost async page write\n[ 3089.624919] Buffer I/O error on dev dm-4, logical block 144082, lost async page write\n[ 3089.633141] Buffer I/O error on dev dm-4, logical block 144083, lost async page write\n[ 3089.638389] Buffer I/O error on dev dm-4, logical block 144084, lost async page write\n[ 3089.645177] Buffer I/O error on dev dm-4, logical block 144085, lost async page write\n[ 3089.650294] Buffer I/O error on dev dm-4, logical block 144086, lost async page write\n[ 3089.664084] XFS (dm-4): metadata I/O error: block 0x2c230 (\"xfs_buf_iodone_callbacks\") error 5 numblks 16\n[ 3089.684777] XFS (dm-5): metadata I/O error: block 0x2c230 (\"xfs_buf_iodone_callbacks\") error 5 numblks 16\n[ 3089.695953] XFS (dm-4): Unmounting Filesystem\n[ 3089.703478] XFS (dm-4): metadata I/O error: block 0x2c230 (\"xfs_buf_iodone_callbacks\") error 5 numblks 16\n[ 3089.710627] XFS (dm-5): metadata I/O error: block 0x2c230 (\"xfs_buf_iodone_callbacks\") error 5 numblks 16\n...\n[ 3150.336222] XFS (dm-6): metadata I/O error: block 0x2c230 (\"xfs_buf_iodone_callbacks\") error 5 numblks 16\n[ 3240.180102] INFO: task docker:3312 blocked for more than 120 seconds.\n[ 3240.184544]       Tainted: G            E   4.1.17-22.30.amzn1.x86_64 #1\n[ 3240.189691] \"echo 0 > /proc/sys/kernel/hung_task_timeout_secs\" disables this message.\n[ 3240.195639] docker          D ffff880037d03d48     0  3312      1 0x00000000\n[ 3240.200654]  ffff880037d03d48 ffff88003e321980 ffff88003745b300 0000000000000246\n[ 3240.206939]  ffff880037d04000 ffff88003d6aabe0 ffff880037e6cdc0 ffff880037e6cde8\n[ 3240.212569]  ffff880037e6cd90 ffff880037d03d68 ffffffff814df3e7 ffff88003d6aabe0\n[ 3240.218299] Call Trace:\n[ 3240.219963]  [<ffffffff814df3e7>] schedule+0x37/0x90\n[ 3240.223179]  [<ffffffffa048fb79>] xfs_ail_push_all_sync+0xa9/0xe0 [xfs]\n[ 3240.227811]  [<ffffffff810aafc0>] ? prepare_to_wait_event+0x110/0x110\n[ 3240.233513]  [<ffffffffa047b2e9>] xfs_unmountfs+0x59/0x170 [xfs]\n[ 3240.239390]  [<ffffffffa047bdab>] ? xfs_mru_cache_destroy+0x6b/0x90 [xfs]\n[ 3240.247251]  [<ffffffffa047dd36>] xfs_fs_put_super+0x36/0x90 [xfs]\n[ 3240.252770]  [<ffffffff811ccb06>] generic_shutdown_super+0x76/0x100\n[ 3240.256723]  [<ffffffff811ccea7>] kill_block_super+0x27/0x70\n[ 3240.260913]  [<ffffffff811cd1b9>] deactivate_locked_super+0x49/0x80\n[ 3240.265629]  [<ffffffff811cd7ae>] deactivate_super+0x4e/0x70\n[ 3240.269797]  [<ffffffff811e9a63>] cleanup_mnt+0x43/0x90\n[ 3240.274904]  [<ffffffff811e9b02>] __cleanup_mnt+0x12/0x20\n[ 3240.279970]  [<ffffffff81085b97>] task_work_run+0xb7/0xf0\n[ 3240.284063]  [<ffffffff81013bb1>] do_notify_resume+0x51/0x80\n[ 3240.288751]  [<ffffffff814e35bc>] int_signal+0x12/0x17\n```\n\nDescribe the results you expected:\nDocker itself would continue to be responsive, but operations that consume space (pulling images, writing inside a container, etc) would fail.  This is the behavior observed when I switch to ext4 instead of xfs.\n"},{"labels":["documentation",null],"text":"PR #17034 Added the capability to specify per volume mount propagation mode. This added the shared/slave/private options to the `--volume` option.\n\nAs was mentioned in https://github.com/docker/docker/pull/17034#issuecomment-164824550, the documentation for this was supposed to be updated in a follow-up PR, but that doesn't seem to have happened.\n\nPlaces where it is missing or completely underwhelming:\n- https://docs.docker.com/engine/reference/run/\n- https://docs.docker.com/engine/reference/commandline/run/\n- https://docs.docker.com/engine/userguide/containers/dockervolumes/\n\nJust Ctrl+F for the word \"slave\" on those pages, and see that it is missing, or has no explanation.\n\nThis was originally brought up in #20555.\n\ncc @thaJeztah\n"},{"labels":["documentation",null],"text":"The documentation https://docs.docker.com/engine/reference/builder/#impact-on-build-caching explains that build-args only invalidate the cache for the first step in the Dockerfile that _uses_ the build-arg.\n\nGiven that build-args are prepended to each `RUN` instruction, the cache is actually invalidated for each `RUN` instruction (the build-cache does not evaluate `RUN` commands to check if a build-arg is actually _used_).\n\nThe documentation should explain this more clearly.\n\nI haven't checked yet if the build-cache actually evaluates `ENV` instructions to determine if the cache should be used or not, so this has to be checked before updating the documentation as well.\n\nFor more information/example/background, see https://github.com/docker/docker/issues/20136#issuecomment-187688636\n"},{"labels":["documentation",null],"text":"Description of problem:\nMy docker version is 1.9.1. I use the RemoteAPI(https://github.com/docker/docker/blob/master/docs/reference/api/docker_remote_api_v1.21.md) to have some tests. And I found that the docs is incomplete. For example, 'GET /containers/(id)/json' but 'GET /containers/(name)/json' is right too. Maybe we should complete this.\n@thaJeztah @moxiegirl \n"},{"labels":["documentation",null],"text":"Hi,\n\nI saw that docker 1.10 introduced new volumn mount options as \"[[r]shared|[r]slave|[r]private]\", what does   [r] means here?\n\nAlso does there are any detailed explain for the meaning of each type? share, slave and private? \n\nThanks!\n"},{"labels":["documentation",null],"text":"The documentation for docker volumes (found here: https://docs.docker.com/engine/userguide/containers/dockervolumes/) is woefully out of date.\n\nSince docker 1.9 includes top-level `volume` subcommands, and support for volume plugins, this documentation should be updated to reflect these new features.\nIt should also de-emphasize data-only containers as these are no longer considered a recommended pattern.\n"},{"labels":["documentation",null],"text":"As a follow up of #17513, we should complete the network options table:\n\nhttps://github.com/aidanhs/docker/blob/d736a9d2c3758fcc4eac0b62e9c7b128388021c1/docs/reference/commandline/network_create.md#bridge-driver-options\n\n/cc @aidanhs \n"},{"labels":["documentation",null,null],"text":"This official documentation on dockerizing a Node.js app is so misleading, and should highlight not for production.\n\n<blockquote class=\"twitter-tweet\" data-partner=\"tweetdeck\"><p lang=\"en\" dir=\"ltr\">This official documentation on dockerizing a Node.js app is so misleading, and should highlight not for production.<a href=\"https://t.co/ieb0qkIxLK\">https://t.co/ieb0qkIxLK</a></p>&mdash; Manoj Mahalingam (@manojlds) <a href=\"https://twitter.com/manojlds/status/699666115849400320\">February 16, 2016</a></blockquote>\n\n<script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n"},{"labels":["documentation"],"text":"The current page for https://docs.docker.com/v1.10/engine/userguide/ is blank. It looks like the information that used to be there, such the information found in https://docs.docker.com/v1.8/userguide/ is now located at https://docs.docker.com/engine/userguide/intro/ but the only part of the docs that uses that link is the sidebar. The rest of the links still use either 'userguide/' or 'userguide/index'. I'm having difficulty finding the sidebar code but it seems like an easy fix to move the `userguide/intro.md` to `userguide/index.md` and then point the userguide introduction link found in the sidebar to that end point or change all the links from other documents to point to the intro. Not sure which way it should go but I can make PR if need be.\n"},{"labels":["documentation",null],"text":"Quoting the doc:\n\n> A plugin is a process running **on the same docker host** as the docker daemon, which registers itself by placing a file in one of the plugin directories described in Plugin discovery.\n\nThis is not entirely true because I can have a plugin listening on a domain/ip which can be located outside the daemon host (using the spec or json file).\n\nAlso, systemd socket activation isn't mentioned anywhere in the docs.\n"},{"labels":["documentation",null],"text":"I have an ELK cluster, configured to accept logs over a GELF socket, reachable on `$GELFADDR:$GELFPORT`.\n\nIf I send simple container logs to it, all is fine:\n\n```\ndocker run --log-driver gelf --log-opt gelf-address=udp://$GELFADDR:$GELFPORT \\\n  alpine echo hello world\n```\n\n→ The `hello world` log line shows up in Kibana. _Alles gut._\n\nIf I annotate the logs with a simple label, it still works:\n\n```\ndocker run --log-driver gelf --log-opt gelf-address=udp://$GELFADDR:$GELFPORT \\\n  --log-opt labels=mylabel -l mylabel=myvalue \\\n  alpine echo hello world\n```\n\n→ The log line (with the `mylabel=myvalue` custom field) shows up in Kibana.\n\nHowever, if I put a dot in the label name:\n\n```\ndocker run --log-driver gelf --log-opt gelf-address=udp://$GELFADDR:$GELFPORT \\\n  --log-opt labels=my.label -l my.label=myvalue \\\n  alpine echo hello world\n```\n\n→ The logstash logs show an error, because `.` is forbidden in field names.\n\nThis wouldn't be a big deal, if we weren't advocating the use of dotted labels (e.g. `com.docker.compose.project`).\n\nThere are multiple workarounds:\n- install the `de_dot` filter in logstash (but it doesn't ship by default; so it adds extra hoops compared to just using the stock logstash image from the registry)\n- add a custom Ruby filter to mangle the field names (super hackish, but works without authoring new images, just adding a few lines to the logstash config:\n\n```\nfilter {\n  ruby {\n    code => \"\n      event.to_hash.keys.each { |k| event[ k.gsub('.','_') ] = event.remove(k) if k.include?'.' }\n     \"\n  }\n}\n```\n\n(For the curious: see this [longer thread](https://discuss.elastic.co/t/field-name-cannot-contain/33251/12) about the issue with ElasticSearch))\n\nAt the very least, we should document that in the [logging section](https://docs.docker.com/engine/admin/logging/overview/).\n\nIf you want help to reproduce this behavior, I can provide Compose files to stage up an ELK cluster in a snap.\n\n/cc @moxiegirl \n"},{"labels":["documentation",null,null],"text":"I found some comments on an EMC blog that could point us to a doc error.\n\nhttp://blog.emccode.com/2016/02/04/what-you-need-to-know-about-storage-in-docker-1-10/#comments\n\n![image](https://cloud.githubusercontent.com/assets/1347209/12894929/b144dfc6-ce4e-11e5-8b70-ac9175a13380.png)\n\nhttps://docs.docker.com/engine/userguide/containers/dockervolumes/\n"},{"labels":["documentation",null],"text":"Hey,\n\nbecause I wasn’t very happy with the existing Docker API Client implementations in PHP, I’ve written a new one.\nYou can find the project here: https://github.com/jarkt/docker-php-client\n\nIt would be great, if you link the project here: https://docs.docker.com/engine/reference/api/remote_api_client_libraries/\n"},{"labels":["documentation"],"text":"I'm having issues getting the new `--volume /mnt/shared:/shared:shared` feature of 1.10 working (from #17034). \n\n``` bash\nroot@testhost:~# uname -a\nLinux testhost 3.18.5-031805-generic #201501292218 SMP Fri Jan 30 03:19:17 UTC 2015 x86_64 GNU/Linux\n\nroot@testhost:~# docker info\nContainers: 1\n Running: 0\n Paused: 0\n Stopped: 1\nImages: 9\nServer Version: 1.10.0-dev\nStorage Driver: overlay\n Backing Filesystem: extfs\nExecution Driver: native-0.2\nLogging Driver: json-file\nPlugins:\n Volume: local\n Network: host bridge null\nKernel Version: 3.18.5-031805-generic\nOperating System: Debian GNU/Linux 8 (jessie)\nOSType: linux\nArchitecture: x86_64\nCPUs: 8\nTotal Memory: 1.899 GiB\nName: loxflix\nID: RNAT:QYNF:66KE:DSN5:NRPC:ITAA:6G3M:WMR2:JABB:CPGO:ZN7O:FAVU\nDebug mode (server): true\n File Descriptors: 13\n Goroutines: 31\n System Time: 2016-01-24T08:45:00.139001319Z\n EventsListeners: 0\n Init SHA1: b84242d186971c8111d1f9de77b7c476bc049614\n Init Path: /usr/lib/docker/dockerinit\n Docker Root Dir: /var/lib/docker\nLabels:\n provider=generic\nExperimental: true\n\nroot@testhost:~# findmnt -o TARGET,PROPAGATION /mnt/testhost\nTARGET       PROPAGATION\n/mnt/shared shared\n\nroot@testhost:~# docker run --rm -it --volume /mnt/shared:/data:shared ubuntu:14.04\ndocker: Error response from daemon: Cannot start container 6859ea4fc2f23130da7e72f301c9a82528c6e78e406b6f68261d000410ad6960: Path /mnt/shared is mounted on /mnt/shared but it is not a shared mount..\n```\n\nI had this working under ubuntu. One of the key differences I noted was that `mount` indicated that the mount `/shared` had `-o bind` where as under debian, it doesn't seem to. \n"},{"labels":["documentation",null],"text":"I'm testing an overlay network in docker 1.10.0-rc1 that was not working in 1.9.1 (I'm running kernel 13.3)\n\nI run the following:\n\n```\ndocker network create --driver overlay es-bridge\n```\n\nI confirm the creation of the network:\n\n```\ndocker network ls\nNETWORK ID          NAME                DRIVER\ndf89455cbc24        bridge              bridge\n94df4ba9ba03        none                null\n1c4b0953f828        host                host\n4f0069ac54d2        es-bridge           overlay\n```\n\nThen add a busybox container to it:\n\n```\ndocker run -itd --net=es-bridge busybox\n3ab7ba1969c4084c9d0f0ed23525b05573405a21188fac67f890d6bdcc506807\ndocker: Error response from daemon: subnet sandbox join failed for \"10.0.0.0/24\": overlay subnet 10.0.0.0/24 has conflicts in the host while running in host mode.\n```\n\nThere are no other containers running on this node, and I've run the same container on several nodes and get the same result\n\n```\ndocker version\nClient:\n Version:      1.10.0-rc1\n API version:  1.22\n Go version:   go1.5.3\n Git commit:   677c593\n Built:        Fri Jan 15 18:17:17 2016\n OS/Arch:      linux/amd64\n\nServer:\n Version:      1.10.0-rc1\n API version:  1.22\n Go version:   go1.5.3\n Git commit:   677c593\n Built:        Fri Jan 15 18:17:17 2016\n OS/Arch:      linux/amd64\n```\n\n```\ndocker info\nContainers: 3\n Running: 0\n Paused: 0\n Stopped: 3\nImages: 88\nServer Version: 1.10.0-rc1\nStorage Driver: aufs\n Root Dir: /var/lib/docker/aufs\n Backing Filesystem: extfs\n Dirs: 104\n Dirperm1 Supported: false\nExecution Driver: native-0.2\nLogging Driver: json-file\nPlugins:\n Volume: local\n Network: overlay bridge null host\nKernel Version: 3.13.0-32-generic\nOperating System: Ubuntu 14.04.3 LTS\nOSType: linux\nArchitecture: x86_64\nCPUs: 8\nTotal Memory: 31.41 GiB\nName: c2b1s2.tera4.terascope.io\nID: EP32:TWMN:LIX6:5B2E:X3AR:FJAH:OVSG:PMVF:XQVQ:FUQ2:6NKF:HNH6\nWARNING: No swap limit support\nCluster store: zk://zk.host:2181\nCluster advertise: IP:2376\n```\n"},{"labels":["documentation"],"text":"I've wasted half a day because after I've created Vagrant-based Docker cluster + overlay networks, then a container could not ping another container even if /etc/hosts was updated properly when a container has joined or left a network. No Docker overlay networking doc or tutorial mentions the requirement that the Docker daemons that join the cluster are identified by the hostname they run on, and if a name clashes, then cross-host container communication is broken.\n"},{"labels":["documentation",null],"text":"Useful to read on a kindle or ipad on the daily commute.\n"},{"labels":["documentation",null],"text":"I used `apt-get install docker.io` and I ended up with version 1.6, though 1.9 is the latest.  So I had a look at https://docs.docker.com/engine/installation/ubuntulinux/ and my face melted, so I googled a bit harder and found that all I actually need run is this:\n\n```\ncurl -fsSL https://get.docker.com/ | sh\n```\n\n(edit: changed `wget` to `curl` because we use `curl` in all places now)\n"},{"labels":["documentation",null],"text":"Link at https://docs.docker.com/engine/extend/plugins/ to pachyderme volume plugin  link to 404 Not Found.\n"},{"labels":["documentation",null,null],"text":"Now that libnetwork uses DNS-based discovery, we should update the docs, and remove references to `/etc/hosts` being updated, see https://github.com/docker/docker/pull/19198#issuecomment-170384315\n\n/cc @sanimej \n"},{"labels":["documentation"],"text":"In the documentation we mention that AuthConfig objects are passed in the X-Registry-Auth header, but we never document the format of AuthConfig objects, or when/why they get passed.\n\nIf you've done a docker login, you'll get a base64 encoded json file which looks like:\n\n{\"username\":\"pdevine\",\"password\":\"mysecretpassword\",\"auth\":\"\",\"email\":\"pdevine@foo.com\",\"serveraddress\":\"192.168.1.101\"}\n\nIf you then do a docker logout, you'll get:\n\n{\"auth\":\"\",\"email\":\"\"}\n\nIf you're using passed tokens, you'll get something like:\n\n{\"registrytoken\": \"foo\"}\n\nWe should document:\n- each of the fields (I think the auth field is new and related to the recent authZ changes?)\n- when fields get omitted (not sure why we even pass anything back after a docker logout?)\n"},{"labels":["documentation",null],"text":"In this guide\nhttps://github.com/docker/docker/blob/master/docs/userguide/dockervolumes.md\n\nIt still refers \n\n```\nNote: Docker will not warn you when removing a container without providing the -v option to delete its volumes. If you remove containers without using the -v option, you may end up with \"dangling\" volumes; volumes that are no longer referenced by a container. Dangling volumes are difficult to get rid of and can take up a large amount of disk space. We're working on improving volume management and you can check progress on this in pull request #14214\n```\n\nBut the pull request was closed,  so either a new issue be linked with or remove that link\n"},{"labels":["documentation"],"text":"Hi,\n\nIn the apt installation instruction for Debian, seen here\nhttps://github.com/docker/docker/blob/master/docs/installation/debian.md#update-your-apt-repository\nyou should add a new point (e.g. after 3.) stating:\n\nInstall package `apt-transport-https` which is needed for https repository URIs.\n\n``` bash\napt-get install apt-transport-https\n```\n"},{"labels":["documentation",null],"text":"In many cases, the man pages are not \"self contained\" in that they don't contain the full documentation for a command.  All the information is only available on docs.docker.com. (Moved from #19034)\n\nFixing this problem should be part of a generation task.  \n"},{"labels":["documentation"],"text":"Markdown is OK: `Usage: docker import file|URL|- [REPOSITORY[:TAG]]`\n\nGenerated manpage is confusingly wrong:\n\n```\ndocker    import [-c|--change[=[]]] [-m|--message[=MESSAGE]] [--help]\nfile|URL|-[REPOSITORY[:TAG]]\n```\n\nbecause it misses the space between `file|URL|-` and `[REPOSITORY[:TAG]]`.\n\nOn a normal project I'd try to debug this, but the docker docs build is a bit mysterious to me, sorry.\n"},{"labels":["documentation",null],"text":"The current documentation and man pages are unclear about;\n- what a \"named\" volume is\n- differences between docker and docker-compose w.r.t. bind-mounted volumes (compose accepts paths relative to the docker-compose.yml, but docker only accepts absolute paths).\n- ~~man pages are not \"self contained\", I.e., in many cases, the full documentation is only available on docs.docker.com~~ (moving this to #19088 )\n\nAs reported on Twitter; https://twitter.com/mt_inside/status/683403251232944128\n"},{"labels":["documentation",null,null],"text":"Description of problem: adding a systemd config file to /etc/systemd/system/docker.service.d as documented in [Control and configure Docker with systemd](https://docs.docker.com/engine/articles/systemd) doesn't have the desired effect on storage driver used due to a missing =\n\n`docker version`: \n\n```\nClient:\n Version:      1.9.1\n API version:  1.21\n Go version:   go1.4.2\n Git commit:   a34a1d5\n Built:        Fri Nov 20 13:20:08 UTC 2015\n OS/Arch:      linux/amd64\n\nServer:\n Version:      1.9.1\n API version:  1.21\n Go version:   go1.4.2\n Git commit:   a34a1d5\n Built:        Fri Nov 20 13:20:08 UTC 2015\n OS/Arch:      linux/amd64\n```\n\n`docker info`:\n\n```\nContainers: 0\nImages: 0\nServer Version: 1.9.1\nStorage Driver: aufs\n Root Dir: /var/lib/docker/aufs\n Backing Filesystem: extfs\n Dirs: 0\n Dirperm1 Supported: true\nExecution Driver: native-0.2\nLogging Driver: json-file\nKernel Version: 4.2.0-16-generic\nOperating System: Ubuntu 15.10\nCPUs: 1\nTotal Memory: 3.843 GiB\nName: wily\nID: TMDH:I3EU:4QJW:QWOK:D6UV:MHTA:ZETE:THHF:5JAE:MVMW:LN7Q:X6DI\nWARNING: No swap limit support\n```\n\n`uname -a`:\n\n`Linux wily 4.2.0-16-generic #19-Ubuntu SMP Thu Oct 8 15:35:06 UTC 2015 x86_64 x86_64 x86_64 GNU/Linux`\n\nEnvironment details (AWS, VirtualBox, physical, etc.):\n\nVMware Workstation 11 VM running Ubuntu 15.10 Server\n\nHow reproducible:\n\nConsistently reproducible\n\nSteps to Reproduce:\n\nTry to configure as documented:\n\n```\nsudo mkdir /etc/systemd/system/docker.service.d`\nsudo bash -c 'cat <<EOF > /etc/systemd/system/docker.service.d/overlay.conf\n[Service]\nExecStart=\nExecStart=/usr/bin/docker daemon -H fd:// --storage-driver overlay\nEOF'\nsudo systemctl daemon-reload\nsudo systemctl restart docker\nsudo docker info\n```\n\nAdd in the required = at the end of --storage-driver as documented in [daemon options](https://docs.docker.com/engine/reference/commandline/daemon/):\n\n```\nsudo mkdir /etc/systemd/system/docker.service.d`\nsudo bash -c 'cat <<EOF > /etc/systemd/system/docker.service.d/overlay.conf\n[Service]\nExecStart=\nExecStart=/usr/bin/docker daemon -H fd:// --storage-driver overlay\nEOF'\nsudo systemctl daemon-reload\nsudo systemctl restart docker\nsudo docker info\n```\n\nActual Results:\n\n`--storage-driver overlay` at the end of ExecStart means that aufs gets used\n\nExpected Results:\n\noverlay should be used\n\nAdditional info:\n\n`--storage-driver=overlay` at the end of ExecStart will correctly use overlay\n`--storage-driver btrfs` is perhaps a bad example anyway when the Docker team has been encouraging use of overlay since March.\n"},{"labels":["documentation",null,null],"text":"``` bash\n❯ docker pull gliderlabs/alpine\nUsing default tag: latest\nCannot connect to the Docker daemon. Is the docker daemon running on this host?\n```\n\nIt would be nice to \n- have the docker cli check for the existence of  `boot2docker`, \n  - **true**: attempt to run `boot2docker up` automatically \n  - **false**: a link to this error in a Docker FAQ (can't seem to find one [here](https://docs.docker.com/engine/misc/faq/), surprisingly)\n"},{"labels":["documentation",null],"text":"In https://docs.docker.com/v1.8/userguide/dockervolumes/\n\nit had\n\n docker run --volumes-from dbdata -v $(pwd):/backup ubuntu tar cvf /backup/backup.tar /dbdata\n\nThis tar would keep dbdata directory and its content.\n\nSo in following \n\ndocker run --volumes-from dbdata2 -v $(pwd):/backup ubuntu cd /dbdata && tar xvf /backup/backup.tar\n\nIt would wrong get /dbdata/dbdata/**\nos it is not restore and backup ways.\n\nIt should be changed as \n\ndocker run --volumes-from dbdata2 -v $(pwd):/backup ubuntu tar xvf /backup/backup.tar\n"},{"labels":["documentation",null,null],"text":"Currently `docker top CONTAINER [ps OPTIONS]` is a sort of proxy to the linux command `ps` but with the ability to lookup containers on remote daemons.\nIt has also _a lot_ of gotchas which are currently undocumented.\n\nFirstly, it's totally undocumented that the default `docker top` command w/o arguments will use the UNIX style ps arguments `-ef`.\nIssues come when people start to use the `[ps OPTIONS]` arguments. I understand you should know how ps arguments work before attempting to use them with Docker but it's undocumented that, for instance, as soon as you provide an option, the default `-ef` is _correctly_ dropped (cause ppl may want to use BSD style arguments).\n\nA clear example of people running into troubles is:\n\n``` sh\n$ docker run -d fedora /usr/bin/vi\n2f6f2c1d9a22e820c4b54e8e6baf7f1a40fc43c5e6efae5bdf45987e59d74f6f\n\n$ docker run -ti --rm fedora /bin/bash\n[root@be3f718de20d /]#\n\n$ docker ps\nCONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES\nbe3f718de20d        fedora              \"/bin/bash\"         15 seconds ago      Up 15 seconds                           elegant_jepsen\n2f6f2c1d9a22        fedora              \"/usr/bin/vi\"       40 seconds ago      Up 40 seconds                           insane_einstein\n```\n\nNow people will run `docker top` for the above 2 containers (which shells out to `ps -ef` and then filters out to the containers' pid):\n\n``` sh\n$ docker top be3f718de20d\nUID                 PID                 PPID                C                   STIME               TTY                 TIME                CMD\nroot                21138               1400                0                   16:59               pts/2               00:00:00            /bin/bash\n\n$ docker top 2f6f2c1d9a22\nUID                 PID                 PPID                C                   STIME               TTY                 TIME                CMD\nroot                21072               1400                0                   16:58               ?                   00:00:00            /usr/bin/vi\n```\n\nSo far so good. While sometihng like the following is pretty the same (given the daemon runs on the same machine as the client):\n\n``` sh\n$ ps -ef | grep $(docker inspect --format '{{ .State.Pid }}' be3f718de20d)\nroot     21138  1400  0 16:59 pts/2    00:00:00 /bin/bash\n```\n\nReal issues starts when those users start to play with `docker top` to select fields for instance. Let's say they're just interested in getting `pid,cmd` of the above two containers. Let's run `docker top` (as users might do w/o any documentation or deep knowledge of the difference between ps UNIX and BSD arguments):\n\n``` sh\n$ docker top be3f718de20d -o pid,cmd\nPID                 CMD\n\n$ docker top 2f6f2c1d9a22 -o pid,cmd\nPID                 CMD\n21072               /usr/bin/vi\n```\n\nTheir first WTF is why the first command doesn't show any output. So they play again, this time dropping the dash in `-o`:\n\n``` sh\n$ docker top be3f718de20d o pid,cmd \nPID                 CMD\n21138               /bin/bash\n\n$ docker top 2f6f2c1d9a22 o pid,cmd\nPID                 CMD\n```\n\nThis time they get the inverted output. Because running with BSD flags doesn't show processes w/o a TTY while the first one is inverted because the opposite, kind of, applies.\nWhat they really wanted to do to list both was:\n\n``` sh\n# BSD style\n$ docker top be3f718de20d axo pid,cmd\nPID                 CMD\n21138               /bin/bash\n$ docker top 2f6f2c1d9a22 axo pid,cmd\nPID                 CMD\n21072               /usr/bin/vi\n\n# UNIX style\n$ docker top be3f718de20d -eo pid,cmd\nPID                 CMD\n21138               /bin/bash\n$ docker top 2f6f2c1d9a22 -eo pid,cmd\nPID                 CMD\n21072               /usr/bin/vi\n```\n\nWhat I'm proposing is to better document all this gotchas and pitfalls (cause right now there's lack for this).\nI've already actually summarized an explanation of the above issue in this bugzilla also https://bugzilla.redhat.com/show_bug.cgi?id=1293063#c1 (I'm planning to sumbit a PR to resolve this but there would be need for other examples as well)\n"},{"labels":["documentation",null],"text":"prerequisites:\n\n```\n$ mkdir -p test/foo\n$ touch test/foo/{run,dev}\n$ cd test\n```\n\nhere I know `COPY` is documented to not be allowed in builds from `STDIN` (https://docs.docker.com/engine/reference/builder/#copy), yet I can build and get the error for `COPY` which requires two arguments not that `COPY` isn't allowed from `STDIN`\n\n```\n$ docker build -t test1 - <<EOF\nheredoc> FROM busybox\nheredoc> COPY ./foo/ $NO_SUCH\nheredoc> RUN /bin/true\nheredoc> EOF\nSending build context to Docker daemon 2.048 kB\nStep 1 : FROM busybox\n ---> d9551b4026f0\nStep 2 : COPY ./foo/\nCOPY requires at least two arguments\n```\n\nThe above should be because my shell expands `$NO_SUCH` and I get the error.\nif I double quote `EOF`:\n\n```\n$ docker build -t test2 - <<\"EOF\"\nFROM busybox\nCOPY ./foo/ $NO_SUCH\nRUN /bin/true\nEOF\nSending build context to Docker daemon 2.048 kB\nStep 1 : FROM busybox\n ---> d9551b4026f0\nStep 2 : COPY ./foo/ $NO_SUCH\nlstat foo/: no such file or directory\n```\n\nNow with Dockerfile(s):\n\n```\n$ cat > Dockerfile <<\"EOF\"\nFROM busybox\nCOPY ./foo/ $NO_SUCH_THING\nRUN /bin/true\nEOF\n\n# I'm using \"EOF\" to not escape the env\n\n$ docker build -t test3 .\nSending build context to Docker daemon 4.608 kB\nStep 1 : FROM busybox\n ---> d9551b4026f0\nStep 2 : COPY ./foo/ $NO_SUCH_THING\n ---> 72b33ade0818\nRemoving intermediate container 2844bb1cab7c\nStep 3 : RUN /bin/true\n ---> Running in 9907a0595847\n ---> 0f489092922f\nRemoving intermediate container 9907a0595847\nSuccessfully built 0f489092922f\n```\n\nEverything goes well and the resulting image has a `run` file in the `/`\n\nSo, it isn't documented anywhere that in `COPY <src> <dest>`, if `<dest>` is an empty string (`COPY ./foo/ \"\"` is legal) it will copy `<src>` to the root directory.\nThe build from a Dockerfile isn't failing with the error of at least two arguments because when evaluating an env, if no ENV are declared at all (either with `-e`) the `ProcessWord` return the empty https://github.com/docker/docker/blob/master/builder/dockerfile/shell_parser.go#L313 string and everything is now legal  because args is a slice with a string and an empty string. But it's undocumented.\n\nShould we document this behavior? Should we error out when `<dest>` is an empty string (I don't think so)? Didn't tested `ADD` like `COPY` but I think most of this applies as well.\n\n@duglin WDYT?\n"},{"labels":["documentation"],"text":"in the example: https://docs.docker.com/opensource/project/set-up-dev-env/\n\nwhenever follow this:\n\nThis host has no images. You may have one or more dangling images. A dangling image is not used by a running container and is not an ancestor of another image on your system. A fast way to remove dangling containers is the following:\n\n$ docker rmi -f $(docker images -q -a -f dangling=true)\n\nsometimes, the env not have dangling images, so it would complain like below:\n\n$ docker rmi -f $(docker images -q -a -f dangling=true)\ndocker: \"rmi\" requires a minimum of 1 argument.\nSee 'docker rmi --help'.\n\nUsage:  docker rmi [OPTIONS] IMAGE [IMAGE...]\n\nI propose we improve like this:\n\n$ dangling_images=`docker images -q -a -f dangling=true`; [ -n \"$dangling_images\" ] &&  docker rmi -f ${dangling_images}\n"},{"labels":["documentation",null,null],"text":"Description of problem:\n\nThe [Installation on on Mac OS X](https://docs.docker.com/engine/installation/mac/) tutorial instructs users to mount a local folder as a container volume for nginx to serve.\n\n```\n$ docker run -d -P -v $HOME/site:/usr/share/nginx/html --name mysite nginx\n$ echo \"my new site\" > index.html\n$ echo \"This is cool\" > cool.html\netc.\n```\n\nThis works, but if you're a little red riding hood such as myself, you may let the whale-wolf trick you into venturing into the forrest to pick some flowers for your grandmother, or in my case overwrite one of the files with new data. This will drive you into the arms of a [5 years old vboxfs sendfile bug](https://www.virtualbox.org/ticket/9069), causing updates to the file to show only partially, or not at all, when served via nginx. And we all know how that story ends :smile: .\n\n`docker version`:\nClient:\n Version:      1.9.1\n API version:  1.21\n Go version:   go1.4.3\n Git commit:   a34a1d5\n Built:        Fri Nov 20 17:56:04 UTC 2015\n OS/Arch:      darwin/amd64\n\nServer:\n Version:      1.9.1\n API version:  1.21\n Go version:   go1.4.3\n Git commit:   a34a1d5\n Built:        Fri Nov 20 17:56:04 UTC 2015\n OS/Arch:      linux/amd64\n`docker info`:\nContainers: 12\nImages: 65\nServer Version: 1.9.1\nStorage Driver: aufs\n Root Dir: /mnt/sda1/var/lib/docker/aufs\n Backing Filesystem: extfs\n Dirs: 89\n Dirperm1 Supported: true\nExecution Driver: native-0.2\nLogging Driver: json-file\nKernel Version: 4.1.13-boot2docker\nOperating System: Boot2Docker 1.9.1 (TCL 6.4.1); master : cef800b - Fri Nov 20 19:33:59 UTC 2015\nCPUs: 1\nTotal Memory: 1.956 GiB\nName: default\nID: P2Y6:MOYK:HJRI:XNP2:LAZ5:JB4C:CLHS:I56K:BEVH:WTTK:ZY3G:IGPY\nDebug mode (server): true\n File Descriptors: 20\n Goroutines: 35\n System Time: 2015-12-15T13:16:40.814333675Z\n EventsListeners: 0\n Init SHA1: \n Init Path: /usr/local/bin/docker\n Docker Root Dir: /mnt/sda1/var/lib/docker\nUsername: felixge\nRegistry: https://index.docker.io/v1/\nLabels:\n provider=virtualbox\n`uname -a`:\nDarwin Felix-MBP-2012.local 15.0.0 Darwin Kernel Version 15.0.0: Sat Sep 19 15:53:46 PDT 2015; root:xnu-3247.10.11~1/RELEASE_X86_64 x86_64\n\nVirtualBox:  5.0.10 r104061\n\nSteps to Reproduce:\n1. Follow the tutorial\n2. Overwrite one of the html files with e.g. \"echo 1235\" > index.html after initially creating it\n3. Reload the file in the browser\n\nYou may need to overwrite several times with different data to see the problem. I've also found that `echo <data> > <file>`  produces the problem more reliably than editing it with vim.\n\nIdeally this bug could be fixed in VirtualBox. But short of that, I think the best solution is to create a dedicated description of this as a \"known issue\" somewhere, and link to that article from the installation tutorial, as well as other tutorials that make use of nginx / containers that are using sendfile.\n"},{"labels":["documentation",null],"text":"MHN requires 3.16.  Our installation documentation should mention this and cover the  upgrade of the kernel. \n"},{"labels":["documentation"],"text":"in doc https://github.com/docker/docker/blob/master/experimental/userns.md it only said, for example:\n\nThe following standard Docker features are currently incompatible when running a Docker daemon with experimental user namespaces enabled:\n\n```\nsharing namespaces with the host (--pid=host, --net=host, etc.)\n```\n\nWhen I enabled user namespace  feature, and try this\n\n$ docker run -it --ipc=host  ubuntu /bin/sh\n# \n\n~$ docker run -it --uts=host  ubuntu bash\nroot@dockerexper:/# \n\nBoth can works, I did not know what \" etc\" . here means and  what's the issue with pid or net ? what's failure for that, without it, it can not verify if this feature is work as design or not.\n"},{"labels":["documentation"],"text":"I believe the pull command list in [this section](https://docs.docker.com/userguide/dockerimages/#image-digests) is incorrect.\n\nHas:\n\n```\n$ docker pull ouruser/sinatra@cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfbdbf\n```\n\nShould be:\n\n```\n$ docker pull ouruser/sinatra@sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfbdbf\n```\n"},{"labels":["documentation"],"text":"https://docs.docker.com/reference/api/docker_remote_api/\n\n![image](https://cloud.githubusercontent.com/assets/668860/10025840/2b075478-6113-11e5-8b6c-b07477b1e507.png)\n"},{"labels":["documentation"],"text":"$ docker version\nClient:\n Version:      1.9.1\n API version:  1.21\n Go version:   go1.4.2\n Git commit:   a34a1d5\n Built:        Fri Nov 20 13:12:04 UTC 2015\n OS/Arch:      linux/amd64\n\nServer:\n Version:      1.9.1\n API version:  1.21\n Go version:   go1.4.2\n Git commit:   a34a1d5\n Built:        Fri Nov 20 13:12:04 UTC 2015\n OS/Arch:      linux/amd64\n\nFollow this guide  https://docs.docker.com/engine/reference/run/\nPID setting part: it has reference run \"docker run --pid=host rhel7 strace -p 1234\"\n\n$ docker run --pid=host rhel7 strace -p 1234\nUnable to find image 'rhel7:latest' locally\nPulling repository docker.io/library/rhel7\n6883d5422f4e: Download complete \nStatus: Downloaded newer image for rhel7:latestr.io/library/rhel7 \ndocker.io/library/rhel7: this image was pulled from a legacy registry.  Important: This registry version will not be supported in future versions of docker.\nexec: \"strace\": executable file not found in $PATH\nError response from daemon: Cannot start container ed48301d82536e4ff30d83f4c15a146661252fe60ddac50943de21572e01881e: [8] System error: exec: \"strace\": executable file not found in $PATH\n"},{"labels":["documentation"],"text":"The default network driver (I.e. Bridge) has additional options that can be passed when creating a custom network, these options aren't documented (unless I overlooked). We should add the options to the documentation.\n\nFor reference, see https://github.com/docker/docker/issues/18237#issuecomment-161737492\n"},{"labels":["documentation",null,null,null],"text":"I was quite surprised and disappointed when the installer said that it requires x64.\n\nYou should specify this \"little\" detail somewhere on the Docker site: in filename and on a couple of pages, like [here](https://docs.docker.com/windows/step_one/) and [here](https://www.docker.com/docker-toolbox), I think, so people know that it won't work on their x86 Windows BEFORE they download and try to install Docker.\n"},{"labels":["documentation",null],"text":"Found this when reading docs.docker.com;\nhttps://docs.docker.com/engine/reference/\n\nThat page is published using 192.168.99.100 as domain name\n\n<img width=\"1738\" alt=\"screen shot 2015-12-01 at 13 00 13\" src=\"https://cloud.githubusercontent.com/assets/1804568/11500207/e6f469ba-982b-11e5-8941-0d11a86d876f.png\">\n"},{"labels":["documentation",null,null,null],"text":"I'm sorry if this is a tiresome topic, but I can't find a good answer.\n\nI have started to look for which storage driver to use for my Docker machines in production.\nOverlayfs looked like the one to use, so I tried it out, getting a ton of errors with socket files. Then I started getting weird errors if a layer was deleting from another layer on buildtime. Switching to ext4 as backing filesystem instead of xfs for the overlay driver solved that. \nIt's confusing to need to dig down all this old issues to figure out that this are mostly known issues.\nIt's also confusing to go from devicemapper (loop) > devicemapper (thin) > overlayfs (with xfs) > overlayfs (with ext4).\n\nThe best that worked for me (less buggy) was actually devicemapper, both loop and thin.\n\nWhat is the \"at the time\" best option? Whats the pros and cons?\nMaybe this should be a part of the documentation that is updated from time to time. A matrix-style overview.\n"},{"labels":["documentation",null],"text":"For installing docker on cloud platforms we want to direct people to install machine and then deploy docker. \n\n@londoncalling I'd like you to do this update.  \n\ncc @shykes \n"},{"labels":["documentation",null],"text":"Hi, I have the latest win 10 build and got some problems following the guide:\n\nAdd ssh.exe to your PATH\n$Env:Path = \"${Env:Path};c:\\Program Files (x86)\\Git\\bin\"\n\nshould be\n\n$Env:Path = \"${Env:Path};c:\\Program Files (x86)\\Git\\bin;C:\\Program Files\\Git\\mingw64\\bin\"\n\nand the \"eval\" command isn't working in my PS. I setuped the ENV variables by hand\n"},{"labels":["documentation"],"text":"User asked on Stackoverflow.\n\nhttp://stackoverflow.com/questions/33784295/setting-dns-for-docker-daemon-using-systemd-drop-in\n"},{"labels":["documentation",null],"text":"I'm using the debian package from https://apt.dockerproject.org/repo/ on version 1.9.0-0~vivid and the --volume-driver option is not documented in the man page. It appears in the `docker run --help` but not in `man docker run`.\n"},{"labels":["documentation"],"text":"https://docs.docker.com/engine/userguide/networkingcontainers/ - one of the examples is missing --format (or -f) parameter.  In the \"Add containers to a network\" section, after the words:\n\"Then, get the IP address of your web\", there is an example:\n\n```\n$ docker inspect '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' web\n```\n\nIt should be, similar to the one above:\n\n```\n$ docker inspect --format='{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' web\n```\n\notherwise the user gets an error:\n\n```\n$ docker inspect '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' certsignd\nError: No such image or container: {{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}\n```\n\nand a very long JSON blob with the full config.\n"},{"labels":["documentation"],"text":"Title says it all\n"},{"labels":["documentation"],"text":"Being able to install a specific version of docker is a recurring question (see for example https://github.com/docker/docker/issues/9697, https://github.com/docker/docker/issues/13191, https://github.com/docker/docker/issues/13822, https://github.com/docker/docker/issues/15581, https://github.com/docker/docker/issues/15586, https://github.com/docker/docker/issues/15947)\n\nWe currently describe how to download a specific (static) binary on http://docs.docker.com/engine/installation/binaries/, but don't provide that information on how to do this using apt, yum, or dnf.\n\nWhile this may be \"general knowledge\" on working with package managers, it would be a nice addition to explain users how to do this (and how to \"pin\" to a specific major/minor version)\n\nfor example, on ubuntu\n\n``` bash\napt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D\nmkdir -p /etc/apt/sources.list.d\necho deb https://apt.dockerproject.org/repo3 ubuntu-trusty main > /etc/apt/sources.list.d/docker.list\napt-get update;\napt-get install -y -q docker-engine=1.x.x~\n```\n"},{"labels":["documentation"],"text":"The page https://docs.docker.com/engine/articles/security/#linux-kernel-capabilities links to the removed https://github.com/docker/docker/blob/master/daemon/execdriver/native/template/default_template.go instead of https://github.com/docker/docker/blob/master/daemon/execdriver/native/template/default_template_linux.go.\n## Possible solution to the maintenance problem\n\nYou might want to use a link to a specific version (which is never going to break) and update it as needed/wanted; if updates are forgotten, users can at least try to navigate through to a more recent version. Additionally, when pointing to a specific version, it becomes possible to link to specific lines _robustly_, that is, without having to update line numbers at each change.\n\nhttps://github.com/docker/docker/blob/87de5fdd5972343a11847922e0f41d9898b5cff7/daemon/execdriver/native/template/default_template_linux.go#L16-L29\n"},{"labels":["documentation",null],"text":"In this page: http://docs.docker.com/engine/userguide/dockerimages/\n\nInstead of \"Tip: You recommend you always use a specific tagged image, for example ubuntu:12.04. That way you always know exactly what variant of an image is being used.\", it should be \"Tip: We recommend you always use a specific tagged image, for example ubuntu:12.04. That way you always know exactly what variant of an image is being used.\"\n"},{"labels":["documentation"],"text":"I'm on a Mac OS X and following the [Get started with multi-host networking](https://docs.docker.com/engine/userguide/networking/get-started-overlay/) tutorial:\n\nIn Step 2, the following command fails after 60 retries:\n\n```\n$ docker-machine create \\\n-d virtualbox \\\n--swarm --swarm-image=\"swarm\" --swarm-master \\\n--swarm-discovery=\"consul://$(docker-machine ip mh-keystore):8500\" \\\n--engine-opt=\"cluster-store=consul://$(docker-machine ip mh-keystore):8500\" \\\n--engine-opt=\"cluster-advertise=eth1:2376\" \\\nmhs-demo0\n```\n\nwhen I add `--debug`, I see:\n\n```\n...\nDaemon not responding yet: dial tcp 192.168.99.101:2376: connection refused\nDaemon not responding yet: dial tcp 192.168.99.101:2376: connection refused\nDaemon not responding yet: dial tcp 192.168.99.101:2376: connection refused\n...\n```\n\nBut I can actually connect to this engine from my host machine (Mac OS X) like:\n\n```\n$ docker ...  '-H=tcp://192.168.99.100:2376' ps\nCONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                                                                            NAMES\nfdc11fc1609c        progrium/consul     \"/bin/start -server -\"   19 minutes ago      Up 19 minutes       53/tcp, 53/udp, 8300-8302/tcp, 8400/tcp, 8301-8302/udp, 0.0.0.0:8500->8500/tcp   nostalgic_visvesvaraya\n```\n# Debug info\n\n```\n➜  ~  docker info\nContainers: 1\nImages: 18\nStorage Driver: aufs\n Root Dir: /mnt/sda1/var/lib/docker/aufs\n Backing Filesystem: extfs\n Dirs: 20\n Dirperm1 Supported: true\nExecution Driver: native-0.2\nLogging Driver: json-file\nKernel Version: 4.0.9-boot2docker\nOperating System: Boot2Docker 1.8.1 (TCL 6.3); master : 7f12e95 - Thu Aug 13 03:24:56 UTC 2015\nCPUs: 1\nTotal Memory: 996.2 MiB\nName: mh-keystore\nID: ZCBE:XISI:3ZBC:NDXW:ASIH:V6RI:CON4:VNVJ:LOHU:LZ4S:6Q4D:KETE\nDebug mode (server): true\nFile Descriptors: 15\nGoroutines: 27\nSystem Time: 2015-11-09T23:31:18.109537018Z\nEventsListeners: 0\nInit SHA1:\nInit Path: /usr/local/bin/docker\nDocker Root Dir: /mnt/sda1/var/lib/docker\nUsername: ahmet\nRegistry: https://index.docker.io/v1/\nLabels:\n provider=virtualbox\n\n➜  ~  docker version\nClient:\n Version:      1.8.1\n API version:  1.20\n Go version:   go1.5\n Git commit:   d12ea79\n Built:        Mon Aug 31 22:27:45 UTC 2015\n OS/Arch:      darwin/amd64\n\nServer:\n Version:      1.8.1\n API version:  1.20\n Go version:   go1.4.2\n Git commit:   d12ea79\n Built:        Thu Aug 13 02:49:29 UTC 2015\n OS/Arch:      linux/amd64\n```\n\n```\n➜  ~  docker-machine -v\ndocker-machine version 0.4.1 (e2c88d6)\n```\n"},{"labels":["documentation",null],"text":"We should use on-premises not on-premise.\n"},{"labels":["documentation"],"text":"I just installed docker on my laptop with Ubuntu 14.04 and I just got a big scare, as my system ran out of space, and kept using all the space I did free.\nThis was due to /var/lib/docker/aufs/timeshift using up everything.\nIt turns out by default timeshift does not skip /var/lib, so one has to add an explicit exclusion.\nNot docker fault, but it would be good to have an \"head's up\" somewhere, in the installation info for ubuntu.\n"},{"labels":["documentation"],"text":"This is just hanging there in an odd place.\n\nhttp://docs.docker.com/engine/userguide/labels-custom-metadata/\n"},{"labels":["documentation"],"text":"Add Adam/Betty's list to docs.\n"},{"labels":["documentation",null],"text":"Looks like some code was removed in #17700 but not entirely removed throughout the docs.  Verify the docs were cleaned properly.\n"},{"labels":["documentation"],"text":"I was reading through the contribution documentation, and under the section https://github.com/docker/docker/blob/master/CONTRIBUTING.md#design-and-cleanup-proposals, there's a link to http://docs.docker.com/opensource/project/advanced-contributing/ for advanced contributor details. That link leads to a blank page (not a 404 - just a blank page).\n\nWanted to let y'all know about the broken link as well as ask where I could find the details on how you're asking folks to present design and refactor concepts to the project.\n\nThanks!\n\n-joe\n"},{"labels":["documentation",null,null],"text":"I started to experiment with volume plugins yesterday, had a bunch of questions, pestered my coworkers, tortured my Docker Engine, got answers, and here's some feedback (pre @thaJeztah's request).\n## How can I use two different plugins?\n\nWhen reading the docs, I wondered how I could start a container using two volumes with two different drivers. The [volume plugins docs](http://docs.docker.com/engine/extend/plugins_volume/) say nothing about this, nor do the `docker run` page.\n\nThe answer is to create the volumes separately with `docker volume` and then start the container.\n## Impact on `VOLUME`\n\nThen I wondered: \"since I have to use `docker volume`, do we really need `--volume-driver`, then?\" and it was pointed out that `--volume-driver` will be used for the implicit `VOLUME`s defined in the Dockerfile.\n\nI think the docs should also clarify that.\n## Terminology\n\nIt could be useful to clarify what is a `plugin` and what is a `driver`. Are they interchangeable, or is there a subtlety? (Like, \"a plugin can provide multiple drivers\" maybe?)\n"},{"labels":["documentation",null],"text":"Need to document the exact  required TCP/UDP ports to be open in order for overlay networks to work:\n\nengine port (e.g TCP 2376), \nvxlan: UDP 4789\nserf: TCP + UDP 7946\nkey-value store ( e.g for consul TCP 8500) \n\nAdditionally, in `Understand Docker container networks`\nneed to edit `--cluster-advertise=HOST_IP` and make it `--cluster-advertise=HOST_IP:ENGINE_PORT` or `--cluster-advertise=HOST_INTERFACE:ENGINE_PORT` \n"},{"labels":["documentation",null],"text":"Just worked through the examples at https://docs.docker.com/engine/userguide/networking/get-started-overlay/ and have the following corrections/suggestions:\n\nStep 2.2 - should this now just be --swarm-image=\"swarm\" rather than --swarm-image=\"swarm:1.0.0-rc2\" ?\n\nStep 4 - given that constraints are specified, any reason why the docker run commands are targeted at the individual nodes rather than the swarm master?\n\nStep 6.3 - doesn't indicate that the file needs to be in a directory called counter\nStep 6.4 - specifies a node constraint that is not consistent with those created earlier in the article\nStep 6.6 - has an extraneous 'up' after 'docker-compose' which is hard to diagnose from the usage instructions that you then get back given that the experimental option is not documented\nStep 6.x - would be good to have a final step to browse to the app\n"},{"labels":["documentation",null],"text":"The manual installation procedure for ubuntu doesn't install the requirements for aufs. we should add it to the requirements, because aufs is our recommended/default driver on ubuntu\n"},{"labels":["documentation"],"text":"Just built the latest version of the docs and noticed minor update would be required to [Organize our issues page](http://docs.docker.com/opensource/ways/issues/) for missing reference to `Windows` platform. Jump to section ===> `How Do I triage ?`\n\n```\nkitematic/kitematic     Kitematic is a simple application for managing Docker containers on Mac OS X.\n```\n\nshould be replaced to \n\n```\nkitematic/kitematic     Kitematic is a simple application for managing Docker containers on Mac OS X and Windows.\n```\n"},{"labels":["documentation",null],"text":"Hi ,\nI am using docker remote api version 1.19 and using below request to pull image. \nPOST /images/create?fromImage=ubuntu HTTP/1.1\n\nAbove request have Content-Type: application/json but it is not returning a valid json.\nIn case of wrong image it return \n{\"status\":\"Pulling repository docker.io/library/cento\"}\n{\"errorDetail\":{\"message\":\"Error while pulling image: Get https://index.docker.io/v1/repositories/library/cento/images: dial tcp: lookup index.docker.io: no such host\"},\"error\":\"Error while pulling image: Get https://index.docker.io/v1/repositories/library/cento/images: dial tcp: lookup index.docker.io: no such host\"}\n\nwhich is not a valid json so i am unable to send the proper response.\n"},{"labels":["documentation",null],"text":"Add more detail in Docs about each event state shown in this diagram: http://docs.docker.com/reference/api/docker_remote_api/#docker-events\n\nCloses #10654\n"},{"labels":["documentation",null,null],"text":"Please refer to #17205 \n\nThe documentation should be updated to differentiate between SystemD and normal init scripts when configuring changes to the startup options for docker.\n"},{"labels":["documentation"],"text":"I followed the site https://docs.docker.com/articles/https/\nbut at the end , docker --tlsverify ps  return an erro \n\n```\nAn error occurred trying to connect: Get https://xxxxx/v1.20/containers/json: x509: certificate signed by unknown authority\n```\n\nIf i test the same URL with CURL:\ncurl https://xxxxx/images/json   --cert ~/.docker/cert.pem   --key ~/.docker/key.pem   --cacert ~/.docker/ca.pem\n\nit return Json info.\n\nHow can i use TLS conf with auto signed CA?\n"},{"labels":["documentation",null],"text":"This page has a broken link https://docs.docker.com/userguide/image_management/ - links to https://docs.docker.com/dockter-trusted-registry but should https://docs.docker.com/docker-trusted-registry\n"},{"labels":["documentation",null],"text":"https://docs.docker.com/installation/ubuntulinux/\n\nThis:\n\n```\n$ apt-key adv --keyserver hkp://pgp.mit.edu:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D\n```\n\nShould be:\n\n```\n$ sudo apt-key adv --keyserver hkp://pgp.mit.edu:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D\n```\n\nAnd `sudo usermod -aG docker ubuntu` is listed under optional configurations, but that step is most definitely required.\n"},{"labels":["documentation"],"text":"The [names-generator states](https://github.com/docker/docker/blob/ab31d9500ebe0c3bf039321bb8c83c7b01c21e4e/pkg/namesgenerator/names-generator.go#L76-L77);\n\n```\n// Docker, starting from 0.7.x, generates names from notable scientists and hackers.\n// Please, for any amazing man that you add to the list, consider adding an equally amazing woman to it, and vice versa.\n```\n\nWe may want to be more specific about what we consider \"notable\", and what \"rules\" we use when adding people to this list. This came up a few times in the past, i.e. \"being a CEO or founder of a company\" does not per-definition make a person \"notable\".\n\nFor reference, see the discussion in https://github.com/docker/docker/pull/17156 and https://github.com/docker/docker/pull/15218#discussion_r36033279\n"},{"labels":["documentation"],"text":"Links are being deprecated with the implementation of the new networking material. We need to update the `trust_sandbox.md` example to use docker networking rather than links.\n\nping @endophage  @NathanMcCauley @diogomonica \n"},{"labels":["documentation",null,null],"text":"![image](https://cloud.githubusercontent.com/assets/1347209/10561981/fc412bd8-74f8-11e5-83ef-034953b5454e.png)\n"},{"labels":["documentation",null],"text":"The current \"usage\" for commands is in many cases not very helpful, for example if I want to see which filters are supported for `docker ps`:\n\n``` bash\n$ docker ps --filter\nflag needs an argument: --filter\nSee 'docker ps --help'.\n\n$ docker ps --help\n\nUsage:  docker ps [OPTIONS]\n\nList containers\n\n  -a, --all=false       Show all containers (default shows just running)\n  --before=             Show only container created before Id or Name\n  -f, --filter=[]       Filter output based on conditions provided\n  --format=             Pretty-print containers using a Go template\n  --help=false          Print usage\n  -l, --latest=false    Show the latest created container, include non-running\n  -n=-1                 Show n last created containers, include non-running\n  --no-trunc=false      Don't truncate output\n  -q, --quiet=false     Only display numeric IDs\n  -s, --size=false      Display total file sizes\n  --since=              Show created since Id or Name, include non-running\n```\n\nThe information does not give any clue what filters are available.\n\nWe should try to improve this output and, if possible, reuse the existing documentation (man-pages, docs) to prevent having to maintain this information in three locations (usage, man-page, docs).\n"},{"labels":["documentation"],"text":"Move the how to contribute to open source documentation to the opensource project.\n"},{"labels":["documentation"],"text":"The `GET /volumes` remote api [query parameter](https://github.com/docker/docker/blob/master/api/server/router/local/volume.go#L17) \"**filters**\" (plural) is consistent with similar list commands (e.g. `GET /images`), but the [v1.21 docs](https://github.com/docker/docker/blob/master/docs/reference/api/docker_remote_api_v1.21.md#list-volumes) state that the parameter is named \"**filter**\" (singular).\n\nWhich one is correct? I guess the docs are wrong, and if so, I could provide a PR to fix them. If the docs are right and the param was meant to be **filter** (singular), I'd like to discuss about consistency to the other endpoints ;-)\n"},{"labels":[null,"documentation"],"text":"[The docker-maven-plugin](https://github.com/spotify/docker-maven-plugin) can be used for Maven projects to push an image to the user's configured Docker registry at certain points in the build process. The plugin uses [the docker-client library](https://github.com/spotify/docker-client), which communicates with the docker daemon using the Remote API.\n\nWhen pushing an image, we would like for the plugin to be able to be aware of the registry-assigned digest for the image, so that it can be communicated to downstream plugins / build steps.\n\ndocker-client tries to find the image digest by basically grepping through the JSON status messages sent by the /push endpoint. We (docker-maven-plugin maintainers) [discovered that in docker v1.8 the format of the message changed](https://github.com/spotify/docker-client/issues/250) from\n\n```\nDigest: sha256:dbad7f727f340f4bfa1160689eaf57a60242bf9a48cc2c4c14f383c9b66e8f06\n```\n\nto something like \n\n```\n0.2.1-SNAPSHOT-efd3f71.DIRTY: digest: sha256:8138f3c93c333aa1db6634ae77fce1a50febb9b189ba6fb2121f22810b7841b3 size: 41358\n```\n1. Would it be possible to document the format of the status message containing the image digest to make it less susceptible to unintended changes in future docker versions?\n2. Is there a smarter way for the docker-client library to get the image digest after/during a push?\n"},{"labels":["documentation"],"text":"I followed the installation steps at https://docs.docker.com/installation/debian/ for Debian Wheezy. However, I was unable to install the package docker-engine because of this error:\n\n`The following packages have unmet dependencies: docker-engine : Depends: init-system-helpers (>= 1.18~) but it is not installable`\n\nIn issue https://github.com/docker/machine/issues/1607 I read that if support for Wheezy is requested, an issue should be openend - which I'm doing with this.\n\nWe have a large cluster currently running many Debian Wheezy machines. They won't be upgraded to Debian 8 in the foreseeable future, so support for Debian 7 would be highly appreciated.\n"},{"labels":["documentation"],"text":"Reported by \"univahpollinger\" on IRC; ([logs](https://botbot.me/freenode/docker-dev/msg/51414351/);\n\n> I'm running Docker 1.8.2 and use the RemoteAPI. The response on a \"GET /containers/<id>/stats\" request contains a \"precpu_stats\" field - this is not documented, but is the exact copy of the \"cpu_stats\" field - is the \"precpu_stats\" field intended - what is this then? - or is it just a copy&paste error in the code?\n\nPR https://github.com/docker/docker/pull/13320 introduced a `precpu_stats` field in the stats, but this field has not been documented\n\nping @coolljt0725 :smile:\n"},{"labels":["documentation",null],"text":"The \"configuring docker\" section is not updated to reflect the new packages, which no longer use /etc/sysconfig/docker on SystemD; https://docs.docker.com/engine/articles/configuring/#configuring-docker-1\n\nInstallation articles duplicate a lot of this same content.  Updating this should include fixing that material; we might want to update the installs to link to configuring rather than having a lot of material duplicated all around.\n\nSee #16662 for the origination story behind this issue\n"},{"labels":["documentation"],"text":"```\nubuntu@server:~$ docker version\nClient version: 1.7.1\nClient API version: 1.19\nGo version (client): go1.4.2\nGit commit (client): 786b29d\nOS/Arch (client): linux/amd64\nServer version: 1.7.1\nServer API version: 1.19\nGo version (server): go1.4.2\nGit commit (server): 786b29d\nOS/Arch (server): linux/amd64\n\nubuntu@server:~$ docker info\nContainers: 8\nImages: 63\nStorage Driver: aufs\n Root Dir: /var/lib/docker/aufs\n Backing Filesystem: extfs\n Dirs: 79\n Dirperm1 Supported: false\nExecution Driver: native-0.2\nLogging Driver: json-file\nKernel Version: 3.13.0-58-generic\nOperating System: Ubuntu 14.04.2 LTS\nCPUs: 2\nTotal Memory: 3.859 GiB\nName: ************\nID: 36XS:MMPO:MGBK:EEKA:T2UF:QJKH:FROW:EARP:G7MJ:ATXF:C3WT:5ZTQ\nWARNING: No swap limit support\n\nubuntu@server:~$ uname -a\nLinux ************ 3.13.0-58-generic #97-Ubuntu SMP Wed Jul 8 02:56:15 UTC 2015 x86_64 x86_64 x86_64 GNU/Linux\n```\n# Steps to reproduce the issue:\n1. Open the official \"Installation on Ubuntu\" documentation page\n2. Go to the Upgrade section https://docs.docker.com/installation/ubuntulinux/#upgrade-docker\n3. Run the suggested command in order to upgrade from 1.7.1 to the current stable version (1.8.2)\n   \n   `$ curl -sSL https://get.docker.com/ | sh`\n\nI received the following message:\n`Warning: the \"docker\" command appears to already exist on this system.\nIf you already have Docker installed, this script can cause trouble, which is\nwhy we're displaying this warning and provide the opportunity to cancel the\ninstallation.\nIf you installed the current Docker package using this script and are using it\nagain to update Docker, you can safely ignore this message.\nYou may press Ctrl+C now to abort this script.`\n\nWhat I expected:\nI've discovered that I've installed version 1.7.1 using the following command (please see the `/ubuntu` at the end):\n`$ curl -sSL https://get.docker.com/ubuntu | sh`\n\nIf I try to re-run the original command (the one with `/ubuntu`) nothing happens, the version stays at 1.7.1, so I can guess that the new command (the one without `/ubuntu`) is the only one able to perform the upgrade, but it is suggesting me to stop it using CTRL+C because the original installation were not performed using such a script.\n\nIn the end the issue is: I don't know how to proceed because neither the script nor the documentation page are suggesting me what to do in order to upgrade Docker. The only suggestion is to perform CTRL+C and stay with version 1.7.1.\n"},{"labels":["documentation"],"text":"When looking at the [remote API](https://docs.docker.com/reference/api/docker_remote_api_v1.20/), I noticed the links for the versions is sorted incorrectly:\nv1.20 --> v1.21 --> v1.19\n\n![screen shot 2015-10-01 at 8 32 38 pm](https://cloud.githubusercontent.com/assets/679475/10239004/b2adfcc8-687b-11e5-9480-e897eca64f6e.png)\n\nTried looking at the docs in Github, but not sure where this resides?\n"},{"labels":["documentation",null,null],"text":"https://docs.docker.com/reference/commandline/ps/\n\nThe placeholder .Names is missing in available placeholders for\n\n```\ndocker ps  --format\n```\n\n```\nClient:\n Version:      1.8.2\n API version:  1.20\n Go version:   go1.4.2\n Git commit:   0a8c2e3\n Built:        Thu Sep 10 19:21:21 UTC 2015\n OS/Arch:      linux/amd64\n\nServer:\n Version:      1.8.2\n API version:  1.20\n Go version:   go1.4.2\n Git commit:   0a8c2e3\n Built:        Thu Sep 10 19:21:21 UTC 2015\n OS/Arch:      linux/amd64\n```\n"},{"labels":["documentation",null],"text":"The Dockerfile documentation about the EXPOSE directive states it is used \"to determine which ports to expose to the host when using the -P flag.\"\n\nThen, it goes on to say:\n\n\"Note: EXPOSE doesn’t define which ports can be exposed to the host or make ports accessible from the host by default.\"\n\nIt seems to me the first statement is wrong and should be removed, because AFAIK EXPOSE does not determine which ports to expose to the host.  If I'm wrong about that, than the documentation should be updated with clarification.  \n"},{"labels":["documentation"],"text":"Was open here, but not fixed #3622\n\nThe documentation still don't give any examples on how this works!\n\nhttps://docs.docker.com/reference/api/docker_remote_api_v1.20/#create-a-container\n"},{"labels":["documentation"],"text":"https://twitter.com/scott_lowe/status/647174608844640256\n\nhttps://blog.docker.com/2015/07/new-apt-and-yum-repos/\n"},{"labels":["documentation",null,null],"text":"Description of problem:\nNeither the documentation itself nor the examples in the Remote API documentation (specifically for v1.20, https://docs.docker.com/reference/api/docker_remote_api_v1.20/ ) mention that the \"Content-Length\" field is necessary in all POST requests that have a body.\nThe value in this field is not exactly important, at least as it is larger or equal to the actual body size.\n\n`docker version`:\nClient:\n Version:      1.8.2\n API version:  1.20\n Go version:   go1.4.2\n Git commit:   0a8c2e3\n Built:        Thu Sep 10 19:19:00 UTC 2015\n OS/Arch:      linux/amd64\n\nServer:\n Version:      1.8.2\n API version:  1.20\n Go version:   go1.4.2\n Git commit:   0a8c2e3\n Built:        Thu Sep 10 19:19:00 UTC 2015\n OS/Arch:      linux/amd64\n\n`docker info`:\nContainers: 98\nImages: 9\nStorage Driver: aufs\n Root Dir: /var/lib/docker/aufs\n Backing Filesystem: extfs\n Dirs: 211\n Dirperm1 Supported: false\nExecution Driver: native-0.2\nLogging Driver: json-file\nKernel Version: 3.13.0-63-generic\nOperating System: Ubuntu 14.04.3 LTS\nCPUs: 4\nTotal Memory: 7.664 GiB\nName: sirius.mydomain.test\nID: OKAA:4QF6:6QJ4:R4SE:IWFG:YJLY:PFFW:YTEK:URCB:MTCV:QCOY:VP3Y\nWARNING: No swap limit support\n\n`uname -a`:\nLinux sirius.mydomain.test 3.13.0-63-generic #103-Ubuntu SMP Fri Aug 14 21:42:59 UTC 2015 x86_64 x86_64 x86_64 GNU/Linux\n\nEnvironment details (AWS, VirtualBox, physical, etc.):\nPhysical\n\nHow reproducible:\nAlways\n\nSteps to Reproduce:\n1. Execute the following command line in the terminal\n$ echo -e \"POST /containers/4d50a1065a88/copy HTTP/1.1\\r\\nContent-Type: application/json\\r\\n\\r\\n{\\r\\n\\\"Resource\\\": \\\"test.txt\\\"\\r\\n}\\r\\n\" | sudo nc -U /var/run/docker.sock\n\nActual Results:\nHTTP/1.1 500 Internal Server Error\nContent-Type: text/plain; charset=utf-8\nServer: Docker/1.8.2 (linux)\nDate: Wed, 23 Sep 2015 08:35:54 GMT\nContent-Length: 4\n\nEOF\nHTTP/1.1 400 Bad Request\n\nExpected Results:\nHTTP/1.1 500 Internal Server Error\nContent-Type: text/plain; charset=utf-8\nServer: Docker/1.8.2 (linux)\nDate: Wed, 23 Sep 2015 08:39:53 GMT\nContent-Length: 59\n\nCould not find the file test.txt in container 4d50a1065a88\n\nAdditional info:\nThe expected result is printed with this command line:\n$ echo -e \"POST /containers/4d50a1065a88/copy HTTP/1.1\\r\\nContent-Type: application/json\\r\\nContent-Length: 1000\\r\\n\\r\\n{\\r\\n\\\"Resource\\\": \\\"test.txt\\\"\\r\\n}\\r\\n\" | sudo nc -U /var/run/docker.sock\n"},{"labels":["documentation"],"text":"docker version: Docker version 1.8.2, build 0a8c2e3\nuname: Linux 13.0-63-generic #103-Ubuntu SMP Fri Aug 14 21:42:59 UTC 2015 x86_64 x86_64 x86_64 GNU/Linux\n\nI have added the following to my `/etc/init/docker`:\n\n``` bash\nDOCKER_OPTS=\"-H unix:///var/run/docker.sock --log-opt max-size=25m --log-opt max-file=2\"\n```\n\noutput of ps:\n\n```\nroot       928  0.0  0.1 2019352 33980 ?       Ssl  Sep16   4:18 /usr/bin/docker daemon -H unix:///var/run/docker.sock --log-opt max-size=25m --log-opt max-file=2\n```\n\n```\nroot@[redacted]:/var/lib/docker/containers/4ca6a18d58bb6df9d77d30d64f17d208f3e02b3018888143f51522f2dcf8ddff# ls -lah\ntotal 30M\ndrwx------ 2 root root 4.0K Sep 16 19:47 .\ndrwx------ 9 root root 4.0K Sep 16 18:51 ..\n-rw------- 1 root root  30M Sep 21 14:40 4ca6a18d58bb6df9d77d30d64f17d208f3e02b3018888143f51522f2dcf8ddff-json.log\n-rw-r--r-- 1 root root 3.4K Sep 16 19:47 config.json\n-rw-r--r-- 1 root root  764 Sep 16 19:47 hostconfig.json\n-rw-r--r-- 1 root root   13 Sep 16 19:47 hostname\n-rw-r--r-- 1 root root  638 Sep 16 19:47 hosts\n-rw-r--r-- 1 root root  248 Sep 16 19:47 resolv.conf\n-rw------- 1 root root   71 Sep 16 19:47 resolv.conf.hash\n```\n\n```\nroot@[redacted]:/var/lib/docker/containers/4ca6a18d58bb6df9d77d30d64f17d208f3e02b3018888143f51522f2dcf8ddff# docker ps | grep 4ca6a18d58bb\n4ca6a18d58bb        my-app     \"npm start\"   4 days ago          Up 4 days           3001/tcp, 0.0.0.0:32779->3000/tcp            my_app_1\n```\n"},{"labels":["documentation",null],"text":"The docs (https://docs.docker.com/mac/step_six/) encourage users to enter their Docker Hub passwords in shell commands. This is bad because it exposes the password in clear text in the user's bash history. It would be better to have the user enter his or her password interactively.\n"},{"labels":["documentation",null],"text":"If you look at Docker run reference page at https://docs.docker.com/reference/run/ , the \"Runtime Constraints on CPU and Memory\" link in the Operator exclusive options is broken and \"goes nowhere\": https://docs.docker.com/reference/run/#runtime-constraints-on-cpu-and-memory\n"},{"labels":["documentation"],"text":"In docs/README.md:\nThe ### Generate the man pages section should refer to the README.md document in the man pages instead of referring in general to the man pages directory.\n\nIn man/README.mD:\nThe directory \"/docker\" is used to represent the user's '<'docker-fork'>' directory.. but the readme does not mention this.  Thus, the user may have problems following the instructions provided.\n\nI'll associate a PR with suggested changes.\n"},{"labels":["documentation"],"text":"We need better documentation about choosing a storage driver.  Jerome's presentation is a good place to start.\n"},{"labels":["documentation",null,null],"text":"i think, the follow example on file \n- docker/docs/reference/api/docker_remote_api_v1.21.md\n- docker/docs/reference/api/docker_remote_api_v1.20.md\n- docker/docs/reference/api/docker_remote_api_v1.19.md\n- ...\n\n```\nUlimits: { \"Name\": \"nofile\", \"Soft\": 1024, \"Hard\", 2048 }}\n```\n\nshould be\n\n```\nUlimits: { \"Name\": \"nofile\", \"Soft\": 1024, \"Hard\": 2048 }\n```\n"},{"labels":["documentation",null],"text":"As the Docker website continues to expand, it is going to become increasing difficult to find the information required by navigation alone. \n\neg. To find more information about a particular command, such as docker info, I used the following search string in Google: `docker info site:docs.docker.com`\n\nSee: https://www.python.org/\n"},{"labels":["documentation"],"text":"It seems the systemd service file doesn't load the config file from sysconfig which prevents any docker startup options from taking effect.\n\nDoc reference: https://docs.docker.com/articles/configuring/#configuring-docker-1\n"},{"labels":["documentation",null],"text":"As far as I know, we don't have documentation about how the volume, networking and other external driver proxies are generated. I don't think we have a make command to generate them. We should add documentation and a script to facilitate those tasks.\n"},{"labels":["documentation"],"text":"We don't yet have a style guide or instructions for creating man pages.\n"},{"labels":["documentation",null],"text":"If virtualization (VT-X) is not supported on the hardware that Docker Toolbox / VirtualBox is installed on, the VirtualBox VM will fail to start.\n\nWe should document that;\n- `VT-X` must be supported _and enabled_ on the hardware\n- How to check if `VT-X` is supported and enabled\n- Some basic instructions (or links to) to enable VT-X\n\nI opened an issue in the Docker Toolbox repository to track improvements in the installer; https://github.com/docker/toolbox/issues/166\n\nThis problem is reported in https://github.com/docker/docker/issues/11877, and mentioned in https://github.com/docker/docker/issues/15982#issuecomment-138822418, but there are various reports in the Docker Machine and Docker Toolbox repository as well.\n\n/cc @moxiegirl @jeffdm @ehazlett \n"},{"labels":["documentation",null,null],"text":"I noticed an incomplete sentence on the following link: https://docs.docker.com/articles/basics/. The \"Please\" is not followed by a proper sentence. Thought I'd bring it to your attention!\n\nIf you get docker: command not found or something like/var/lib/docker/repositories: permission denied you may have an incomplete Docker installation or insufficient privileges to access Docker on your machine. Please\n"},{"labels":["documentation",null],"text":"The new labels are now present, as decided on in https://github.com/docker/docker/pull/14719, and described in [project/ISSUE-TRIAGE.md](https://github.com/docker/docker/blob/master/project/ISSUE-TRIAGE.md), so the [\"find an issue\"](https://github.com/docker/docker/blob/master/docs/project/find-an-issue.md) page should be updated to reflect the new labels.\n"},{"labels":["documentation",null],"text":"This page has a typo: https://docs.docker.com/reference/commandline/cp/\n\nthe typo is : SRC_PAPTH => SRC_PATH\n"},{"labels":["documentation"],"text":"The API reference makes several references to the `AuthConfig` structure, but it's not described anywhere as far as I can tell.\n"},{"labels":["documentation",null,null],"text":"This:\n\n`docker run -v /path/to/nonexistent/directory:/container-path ...`\n\nResults in docker creating `/path/to/nonexistent/directory`.  I didn't expect this, and AFAICT, it's undocumented. \n\n`Linux mg-mesos 3.19.0-26-generic #28-Ubuntu SMP Tue Aug 11 14:16:32 UTC 2015 x86_64 x86_64 x86_64 GNU/Linux`\n\n```\nClient:\n Version:      1.8.1\n API version:  1.20\n Go version:   go1.4.2\n Git commit:   d12ea79\n Built:        Thu Aug 13 02:40:42 UTC 2015\n OS/Arch:      linux/amd64\n\nServer:\n Version:      1.8.1\n API version:  1.20\n Go version:   go1.4.2\n Git commit:   d12ea79\n Built:        Thu Aug 13 02:40:42 UTC 2015\n OS/Arch:      linux/amd64\n```\n\n```\nContainers: 30\nImages: 112\nStorage Driver: aufs\n Root Dir: /var/lib/docker/aufs\n Backing Filesystem: extfs\n Dirs: 172\n Dirperm1 Supported: true\nExecution Driver: native-0.2\nLogging Driver: json-file\nKernel Version: 3.19.0-26-generic\nOperating System: Ubuntu 15.04\nCPUs: 4\nTotal Memory: 11.62 GiB\nName: mg-mesos\nID: 7AES:SDZ5:WNYM:NM33:3FKF:SQK6:KYMM:DBXJ:DLGK:MN6L:WYRR:EFTI\nUsername: mgummelt\nRegistry: https://index.docker.io/v1/\nWARNING: No swap limit support\n```\n"},{"labels":[null,"documentation"],"text":"It would be useful to have a list of error codes and their corresponding cause. This could be in a tabular format such as:\n\n| Error Code | Meaning |\n| --- | --- |\n| NNN | Text |\n| NNN | Text |\n"},{"labels":["documentation",null],"text":"We currently have https://get.docker.com to get users up and running in \"no\" time, so that they can play around with Docker. Let's call it \"express install\".\n\nFor Linux, this is https://get.docker.com, for Windows and Mac users, we have Docker Toolbox, which (to me) fall in the same category; get users started quickly.\n\nHowever, the \"express install\" is in many cases _not_ suitable for production; we make many assumptions, and some settings we use are just to \"get it working\", but require manual configuration to be really useful (for example, the default device mapper configuration is not suitable for production).\n\nWe should point users to an \"advanced install\" section in the documentation, and _warn_ users that the \"express install\" should be reviewed before using in production.\n\nThe advanced install section in the documentation, should cover (or link to) - this is not a full list, just some initial thoughts;\n- Checking prerequisites (e.g., using `/contrib/check-config.sh`)\n- Pinning to a specific version of Docker\n- Picking, setting up, and configuring a graph driver (e.g. Setting up aufs)\n- Configuring daemon options (SysVinit, SystemD)\n- Picking, and configuring a default logging-driver\n- Securing Docker (Certificates, AppArmor, SeLinux)\n- Networking options and related (e.g. Certificates, Userland Proxy, FireWall issues)\n\nTL;DR; we should make it as easy as possible for people to get to \"play\" with Docker, but equally (if not more) important, we should explain that Docker uses advanced techniques; making optimum use of Docker _does_ require careful planning and configuration, and making informed decisions (e.g. The best graph driver for your situation). \n"},{"labels":["documentation"],"text":"In https://docs.docker.com/project/set-up-dev-env/ (Start a container and run a test, part 8)\n\nThe command line example has been updated to use `daemon` rather than `-d`:\n\n> `root@5f8630b873fe:/go/src/github.com/docker/docker#  docker daemon -D`\n\nBut the following explanation still refers to `-dD`, which was previously there\n\n> The -dD flag starts the daemon in debug mode. You’ll find this useful when debugging your code.\n"},{"labels":["documentation",null,null],"text":"The options for the `-v` flag on `docker run` seem to be lacking.\nSpecifically they only mention `rw` and `ro` as valid flags mean while there are also `z` and `Z`, which can be used independently or concatenated as such: `rw,Z`\n"},{"labels":["documentation"],"text":"I believe https://github.com/docker/docker/pull/14242 introduced a regression where if you run a container with an external volume, and then kill the docker daemon, any following usage of the volume results in system errors.\n\nIt looks like the volume name is recognized, but it does not try and mount the volume.\n\n```\n./docker -d --storage-driver=vfs &\n./docker run -ti --volume-driver=rexray -v testa15:/test busybox\nkill pid\n```\n\n```\n./docker -d --storage-driver=vfs &\n./docker run -ti --volume-driver=rexray -v testa15:/test busybox\nINFO[0003] POST /v1.21/containers/create                \nINFO[0003] POST /v1.21/containers/deb4b572c3fa950d16279d0e5485c7322e2b865f5f0d666a94a561f4140dfb4c/attach?stderr=1&stdin=1&stdout=1&stream=1 \nINFO[0003] POST /v1.21/containers/deb4b572c3fa950d16279d0e5485c7322e2b865f5f0d666a94a561f4140dfb4c/start \nTimestamp: 2015-08-27 07:18:29.736025403 +0000 UTC\nCode: System error\n\nMessage: stat /var/lib/docker/volumes/testa15/_data: no such file or directory\n\nFrames:\n\n---\n0: setupRootfs\nPackage: github.com/opencontainers/runc/libcontainer\nFile: rootfs_linux.go@37\n\n```\n\n```\n[root@mdm2 centos]# ./docker version\nINFO[0457] GET /v1.21/version                           \nClient:\n Version:      1.9.0-dev\n API version:  1.21\n Go version:   go1.4.2\n Git commit:   44ea7e9\n Built:        Thu Aug 27 07:14:12 UTC 2015\n OS/Arch:      linux/amd64\n```\n"},{"labels":["documentation",null,null],"text":"The build and run commands both have long sections of examples.  In run them come in the middle of the page in build they come at the end.\n- Standardize examples at the end of every page\n- Design a consistent structure for calling out \"categories of examples\" in these larger sections\n\nhttp://docs.docker.com/reference/commandline/build/\nhttp://docs.docker.com/reference/commandline/run/\n"},{"labels":["documentation",null],"text":"Hi,\n\nI have a graph driver related question.\n\nSuppose one wants to design and implement a graph driver for some new file system, what would be the general rule to do so? I mean, one can look into existing graph drivers (e.g., btrfs, aufs, zfs, vfs, devmapper, etc) to figure out interfaces and data structures for the new file system driver, but is there any driver specification doc available somewhere? It will make it easier to design new file system driver for docker.\n\nAny suggestions/comments would be helpful! Thanks.\n\nBest,\n"},{"labels":["documentation"],"text":"The Docker engine install steps on Ubuntu include a step to install linux-image-(uname -r), followed by a step to reboot the system.  (see: https://github.com/docker/docker/blob/master/docs/installation/ubuntulinux.md)\n\nHowever, the Docker install script (https://github.com/docker/docker/blob/master/hack/install.sh) automatically performs this step.\n\nCan we remove the instructions to manually install linux-image-\\* and to reboot?\n"},{"labels":["documentation"],"text":"The [Content trust in Docker](https://docs.docker.com/security/trust/content_trust/) docs state (my emphasis on creating):\n\n> Make sure you read [Manage keys for content trust](https://docs.docker.com/security/trust/trust_key_mng) information for details on **creating**, securing, and backing up your keys.\n\nBut there's nothing about creating keys on the [Manage keys for content trust](https://docs.docker.com/security/trust/trust_key_mng) page because they're actually created on the first push as per:\n\n> When you push your first tagged image with content trust enabled, the docker client recognizes this is your first push and:\n> - alerts you that it will create a new offline key\n> - requests a passphrase for the key\n> - generates an offline key in the ~/.docker/trust directory\n> - generates a tagging key for in the ~/.docker/trust directory\n\nIt would be beneficial if the key creation process was explained outside of the **Push trusted content** section.\n\nDocumentation issue - so not copying in version/info etc.\n"},{"labels":["documentation",null],"text":"There's a lot of work to do here :)\n"},{"labels":["documentation"],"text":"- Current installation docs for Toolbox don't show how to upgrade a vm\n- Should show after version information how to upgrade VM as opposed to install/upgrade Toolbox\n"},{"labels":["documentation"],"text":"Or at least give a kind doc. \nSolution in #9697 seems not quite working now.\nFeel free to close it if there is a dup. Yet i didn't find one.\n"},{"labels":["documentation"],"text":"Hi,\n\nThere is a mistake in documentation for windows installation, in the part to connect with putty (Login with PUTTY instead of using the CMD).\n\nWith DockerToolbox, RSA keys was not generated in **%USERPROFILE%.ssh\\id_boot2docker** but in **%USERPROFILE%.docker\\machine\\machines<nameOfYourMachin\\**\n\nThe file to be modify :\ndocker/docs/installation/windows.md\n\nThanks :)\n"},{"labels":["documentation",null],"text":"Found a dead link in logging run reference: docs.docker.com/reference/run/…\n"},{"labels":["documentation",null],"text":"- Replace any links to the files in /terms with links to reference/glossary.md\n- Remove the /terms directory\n"},{"labels":["documentation",null],"text":"Earlier a missing page(404) redirected to the homepage, now it shows the following error : \n\n![image](https://cloud.githubusercontent.com/assets/796949/9212494/2ae7cc8e-403e-11e5-811d-6c4a4d7846e5.png)\n"},{"labels":["documentation"],"text":"The CentOS installation instructions at https://docs.docker.com/docker/installation/centos/ (`docs/installation/centos.md`) suggest that after installing the package one should:\n\n```\n4. Start the Docker daemon.\n\n                $ sudo service docker start\n```\n\n`service` is a thin layer on top of systemctl on CentOS.  And starting a systemctl service is only half the job.  After a reboot, the service will be stopped again.  To make it run on every boot, it needs to be \"enabled\" as well:\n\n```\n    sudo systemctl enable docker\n    sudo systemctl start docker\n```\n"},{"labels":["documentation"],"text":"It's not clear from any documentation that I can find whether `docker run --rm` is equivalent to doing a `docker rm -v` on the created container. Caveat: I usually can't find the mustard in the fridge because I'm looking everywhere _except_ right in front of me.\n"},{"labels":["documentation",null,null],"text":"Someone came to me trying to understand how `--publish` worked, confused that `--publish 1234` wasn't publishing `1234` on the host. They had come from the builder `EXPOSE` documentation and had left confused.\r\n\r\n[This link is broken in the builder documentation is broken](https://github.com/docker/docker/blame/f3af9c8bdb68e5db7aaed7aec11aa2a78fd7e546/docs/reference/builder.md#L457).\r\n\r\nOr at least, it doesn't go where I think was intended. In addition, [the `docker run`](https://docs.docker.com/engine/reference/run/#expose-incoming-ports) documentation doesn't mention the long form of `-p` (`--publish`) at all. \r\n\r\nIf someone is new to docker trying to understand how port publishing works, the `EXPOSE` section in the `docker run` documentation is not as up front as it could be about how to control the host port. (likewise with the `EXPOSE` in the builder docs).\r\n\r\nI would have submitted a fix to just point the link to `/reference/run/#expose-incoming-ports` but then I realised that it wouldn't really fix the problem of explaining what `-p` is, and that this would mean repeating the same link many times, which I don't think would have made for very good documentation.\r\n\r\nSo I thought I would punt the problem to the documentation experts here - sorry! :)\r\n\r\n/cc @SvenDowideit\r\n"},{"labels":["documentation"],"text":"In particular, the CLI lacks a full description and syntax.\n"},{"labels":["documentation"],"text":"https://docs.docker.com/reference/api/docker_remote_api/\n\nThere is a state diagram under \"Docker Events\" and it looks okay on a large screen. However, on smaller screens (such as laptops), due to the page flow, the diagram can become too small to read.\n\nWould be nice from a UX perspective if there was a way to zoom-in / maximize the picture when clicked. :relaxed:\n"},{"labels":["documentation"],"text":"Docker labels are included in the json output for /containers/json (probably since docker 1.6), but there is no mention of this in the API. Please add/describe these expected fields.\n\nLink for reference: https://docs.docker.com/reference/api/docker_remote_api_v1.19/#list-containers\n"},{"labels":["documentation"],"text":"For openSUSE Tumbleweed there is a wrong path to 'Routing' menu in docker installation docs.  \nHere is the link: https://docs.docker.com/installation/SUSE/\n\n> \"If you want your containers to be able to access the external network you must enable the net.ipv4.ip_forward rule. This can be done using YaST by browsing to the Network Devices -> Network Settings -> Routing menu and ensuring that the Enable IPv4 Forwarding box is checked.\" \n\nIt's true for openSUSE 12.3, 13.1, 13.2 and also for SLES12, but for openSUSE Tumbleweed there is no 'Network devices' menu in YaST and 'Network settings' menu in 'System' menu of YaST. \nSo I believe that we need to add that information into docs. \n"},{"labels":["documentation"],"text":"Now we can do `docker rm $(docker ps -aq)` and ignore the errors if a container is running.\n\nBut it doesn't seem like a good solution.\n\nCould `docker rm --stopped` be a solution?\n\nAfter a lot of builds via Dockerfiles, many stopped, only used once containers are left in the system and takes up much space.\n\nThanks for looking into this.\n"},{"labels":["documentation"],"text":"Hi, would it be possible to display a page-title in the docs? When browsing the documentation with multiple tabs it is hard to distinguish which tab has which section open:\n\n![screen shot 2015-07-30 at 10 03 16](https://cloud.githubusercontent.com/assets/23406/8978403/3e8e8b74-36a2-11e5-8bb4-aca98146513e.png)\n"},{"labels":["documentation",null],"text":"The docs for 'docker run' should explain the `security-opts` flag.\n"},{"labels":["documentation",null],"text":"Hello,\n\nI have an hard time figuring out how to get the real remote ip of a client connecting to a (web) service inside a container which port is exposed to a port on the host.\n\nSo far the solution seems to be either one of:\n- use `--net=host`\n- disable the userland proxy\n- configure nginx on the host to forward the real ip address?\n\nHere are related issues:\n\nhttps://github.com/docker/docker/issues/7540\nhttps://github.com/jwilder/nginx-proxy/issues/130\nhttps://github.com/jwilder/nginx-proxy/issues/133\n\nNone of the current solutions seems to be \"right\" and they all seem temporary. Can you clarify/explain how things _should_ be, even if that means that the current docker 1.7.1 is bugged in that regard and that we have to use hack X or Y until things are fixed in 1.8.0.\n"},{"labels":["documentation",null],"text":"[Docs for API v1.19](https://docs.docker.com/reference/api/docker_remote_api_v1.19/#create-an-image) states that it is possible to specify `registry` query parameter:\n\n```\nQuery Parameters:\n    ...\n    registry – The registry to pull from.\n    ...\n```\n\nI'm trying to do so, but it's ignores registry parameter:\n\n```\n$ curl -v -XPOST --unix-socket /var/run/docker.sock \"http:/images/create?fromImage=bronislav/clsi-sharelatex:latest&registry=quay.io\"\n*   Trying /var/run/docker.sock...\n* Connected to http (/var/run/docker.sock) port 80 (#0)\n> POST /images/create?fromImage=bronislav/clsi-sharelatex:latest&registry=quay.io HTTP/1.1\n> Host: http\n> User-Agent: curl/7.42.1\n> Accept: */*\n>\n< HTTP/1.1 200 OK\n< Content-Type: application/json\n< Date: Tue, 28 Jul 2015 14:22:51 GMT\n< Transfer-Encoding: chunked\n<\n{\"status\":\"Pulling repository bronislav/clsi-sharelatex\"}\n{\"errorDetail\":{\"message\":\"Error: image bronislav/clsi-sharelatex:latest not found\"},\"error\":\"Error: image bronislav/clsi-sharelatex:latest not found\"}\n* Connection #0 to host http left intact\n```\n\nIf I move registry parameter to the image path than docker started to pull image:\n\n```\ncurl -v -XPOST --unix-socket /var/run/docker.sock \"http:/images/create?fromImage=quay.io/bronislav/clsi-sharelatex:latest\"\n*   Trying /var/run/docker.sock...\n* Connected to http (/var/run/docker.sock) port 80 (#0)\n> POST /images/create?fromImage=quay.io/bronislav/clsi-sharelatex:latest HTTP/1.1\n> Host: http\n> User-Agent: curl/7.42.1\n> Accept: */*\n>\n< HTTP/1.1 200 OK\n< Content-Type: application/json\n< Date: Tue, 28 Jul 2015 14:48:16 GMT\n< Transfer-Encoding: chunked\n<\n{\"status\":\"Pulling repository quay.io/bronislav/clsi-sharelatex\"}\n...\n{\"status\":\"Status: Image is up to date for quay.io/bronislav/clsi-sharelatex:latest\"}\n* Connection #0 to host http left intact\n```\n\nMy environment:\n\n```\n$ docker version\nClient version: 1.7.1\nClient API version: 1.19\nGo version (client): go1.4.2\nGit commit (client): 786b29d-dirty\nOS/Arch (client): linux/amd64\nServer version: 1.7.1\nServer API version: 1.19\nGo version (server): go1.4.2\nGit commit (server): 786b29d-dirty\nOS/Arch (server): linux/amd64\n```\n\n```\n$ docker info\nContainers: 2\nImages: 27\nStorage Driver: overlay\n Backing Filesystem: extfs\nExecution Driver: native-0.2\nLogging Driver: journald\nKernel Version: 4.0.9-coreos\nOperating System: CoreOS 752.1.0\nCPUs: 2\nTotal Memory: 7.341 GiB\nName: ip-10-5-3-181.empire\nID: 7APU:UBUI:7WEM:X5DL:BY7B:MQM6:4IAX:VZUN:2GZ4:LV7I:7PWI:42UC\n```\n\n```\n$ uname -a\nLinux ip-10-5-3-181.empire 4.0.9-coreos #2 SMP Thu Jul 23 20:22:11 UTC 2015 x86_64 Intel(R) Xeon(R) CPU E5-2670 v2 @ 2.50GHz GenuineIntel GNU/Linux\n```\n\nFurther investigation shows that this parameter simply ignored in the request handler. It's only takes in account `fromImage`, `repo` and `tag` parameters: [api/server/server.go#L729-L733](https://github.com/docker/docker/blob/master/api/server/server.go#L729-L733).\n"},{"labels":["documentation",null],"text":"In the Installation step 3.\n\n![image](https://cloud.githubusercontent.com/assets/1347209/8911222/e878495a-343f-11e5-8bbd-4109eb00cb37.png)\n"},{"labels":["documentation"],"text":"Under \"Creating a Dockerfile\", the last line is missing an indent\nhttps://docs.docker.com/docker-trusted-registry/quick-start/#creating-a-dockerfile\n\n```\n FROM jenkins\n\n #New plugins must be placed in the plugins file\n COPY plugins /usr/share/jenkins/plugins\n\n #The plugins.sh script will install new plugins\n RUN /usr/local/bin/plugins.sh /usr/share/jenkins/plugins\n\n #Copy private key and cert to image\n COPY https.pem /var/lib/jenkins/cert\n COPY https.key /var/lib/jenkins/pk\n\n #Configure HTTP off and HTTPS on, using port 1973\nENV JENKINS_OPTS --httpPort=-1 --httpsPort=1973 --httpsCertificate=/var/lib/jenkins/cert --httpsPrivateKey=/var/lib/jenkins/pk\n```\n\nIf someone can point out where the file is, I can fix.\n"},{"labels":["documentation",null],"text":"The FAQ on docs.docker.com has broken links. Need to fix them.\n"},{"labels":["documentation"],"text":"In your tutorial documentation on https://docs.docker.com/mac/step_four/ you have in steap 1.5:\n\nCMD /usr/games/fortunes -a | cowsay\n\nand then on step 2.2:\n\nCMD /usr/games/fortune -a | cowsay # Singular fortune\n\nThe 2nd example is correct.\n"},{"labels":["documentation"],"text":"Description of problem: The `docker run --user` documentation states:\n\n> The default user within a container is root (id = 0), but if the developer created additional users, \n> those are accessible too. \n\nThis is misleading, as it is possible to just pass an arbitrary uid:gid to `-u` and run using that. As stackoverflow is also full of suggestions to use `groupadd && useradd && sudo -u` tricks to achieve the same effect, it seems like many people fall for this.\n\n`docker version`: N/A, but https://docs.docker.com/reference/run/#user as of 2015-07-21 11:22 UTC shows this issue.\n\n`docker info`: N/A\n\n`uname -a`: N/A\n\nEnvironment details (AWS, VirtualBox, physical, etc.): Docker website\n\nHow reproducible: 100%\n\nSteps to Reproduce:\n1. Point browser at https://docs.docker.com/reference/run/#user\n2. Read misleading documentation\n3. Compare with what happens on `docker run debian:jessie /usr/bin/id 1000; docker run -u 1000 debian:jessie /usr/bin/id`\n\nActual Results:\n\n```\n/usr/bin/id: 1000: no such user\nuid=1000 gid=0(root) groups=0(root)\n```\n\nExpected Results:\n\n```\n/usr/bin/id: 1000: no such user\n# something blows up because no user with uid 1000 exists\n```\n\nAdditional info:\nThe actual behaviour is much more useful than what the documentation describes. The documentation should be updated accordingly.\n"},{"labels":["documentation",null,null],"text":"Upstart, Ubuntu's init replacement, listens on an \"abstract socket pathname\" AF_UNIX socket for commands.\n\n```\ndbus/upstart.h\n79:#  define DBUS_ADDRESS_UPSTART \"unix:abstract=/com/ubuntu/upstart\"\n```\n\nNormally, you'd expect AF_UNIX class sockets to be governed by filesystem isolation, same as a `chroot`.  However the \"abstract\" names seem to escape this restriction and instead use the networking restriction.  [This is documented as a way to bypass chroot security, for example](http://blog.eduardofleury.com/archives/2007/09/13)  This means that disabling network isolation gives a container effectively full control of your host, no matter what other restrictions you may place on it:\n\n```\nroot@mesos-slave9-qa-uswest2:~# docker run --net=host ubuntu reboot\nubuntu:latest: The image you are pulling has been verified. Important: image verification is a tech preview feature and should not be relied on to provide security.\nStatus: Downloaded newer image for ubuntu:latest\nFATA[0009] Error response from daemon: engine is shutdown\nroot@mesos-slave9-qa-uswest2:~# Connection to mesos-slave9-qa-uswest2.qasql.opentable.com closed by remote host.\nConnection to mesos-slave9-qa-uswest2.qasql.opentable.com closed.\n```\n\nWhile this may be \"working as designed\" from a kernel isolation standpoint, this is an extremely unintuitive behavior for end users and quite possibly a huge security problem.  In particular that within the class AF_UNIX there are some sockets which are governed by network isolation (those beginning with a magical '\\0') and some by filesystem isolation (the rest).  Some combination of the following may help:\n- [Upstart should not use confusing abstract sockets, but prefer filesystem sockets](https://bugs.launchpad.net/upstart/+bug/1476353)\n- Docker should control isolation of AF_UNIX class sockets separately from AF_INET and others (i.e. I want to share my host's network stack without allowing side channels to init)\n- A specific security rule blocking access to the `com/ubuntu/upstart` socket in particular.  Somewhat ugly, but maybe practical.\n\n```\nroot@mesos-slave6-qa-uswest2:~# docker version\nClient version: 1.6.2\nClient API version: 1.18\nGo version (client): go1.4.2\nGit commit (client): 7c8fca2\nOS/Arch (client): linux/amd64\nServer version: 1.6.2\nServer API version: 1.18\nGo version (server): go1.4.2\nGit commit (server): 7c8fca2\nOS/Arch (server): linux/amd64\nContainers: 8\nImages: 62\nStorage Driver: overlay\n Backing Filesystem: extfs\nExecution Driver: native-0.2\nKernel Version: 4.0.4\nOperating System: Ubuntu 14.04.2 LTS\nCPUs: 8\nTotal Memory: 29.45 GiB\nName: mesos-slave6-qa-uswest2\nID: DQ77:L5SM:2ZH6:NHRP:D72D:SIFN:XJDS:7H7Y:MHRR:UX4Y:HTWK:UVB6\n```\n"},{"labels":["documentation"],"text":"Found a few problems with this section:\nhttps://docs.docker.com/reference/builder/#environment-replacement\n\n> Note: prior to 1.3, Dockerfile environment variables were handled similarly, in that they would be replaced as described below. However, there was no formal definition on as to which instructions handled environment replacement at the time. After 1.3 this behavior will be preserved and canonical.\n> \n> ... there was no formal definition on as to which instructions handled environment replacement at the time\n> 1. This sentence doesn't make sense.\n\nDockerfile environment variables were handled similarly\n2. Similarly to what? Perhaps the note block should be moved after the explanation of Environment variable.\n\nPerhaps someone could review the Environment variable section and reorganize the material presented.\n"},{"labels":["documentation"],"text":"https://docs.docker.com/installation/ubuntulinux/\n\nUnder Installation, step 3, there are odd > characters in the paragraph:\n![screen shot 2015-07-18 at 6 39 52 am](https://cloud.githubusercontent.com/assets/679475/8761787/fae2db20-2d17-11e5-91b6-f9781c99b372.png)\n\nI think the > is used as quote in GitHub's markdown and does not render properly on the docs site.\nhttps://github.com/docker/docker/blob/master/docs/installation/ubuntulinux.md\n"},{"labels":["documentation"],"text":"The basic docs for swarm use `docker run swarm`, keeping it clear that the binary is in a container. The \"discovery\" section refers to `swarm` as a binary. The [swarm docs on GitHub](https://github.com/docker/swarm) show how to build the `swarm` binary, but this is not mentioned in docs.docker.com\n\nPlease pick one method and use that for all documentation or otherwise make it clear how to execute the commands.\n"},{"labels":["documentation"],"text":"Need to point to the reference/logging page from the logs.md page as per comments on this PR: https://github.com/docker/docker/pull/11485/files#diff-bf81424845bcab2902c9809e30dfe6e0\n\nAlso should update the page to point that other drivers have other options\n"},{"labels":[null,"documentation",null],"text":"As discussed in https://github.com/docker/docker/pull/13375#issuecomment-120170880, the [Docker Hub and Registry V1](https://github.com/docker/docker/blob/master/docs/reference/api/hub_registry_spec.md) API reference needs to be deprecated or rewritten.\n\nAdding this issue as a reminder, but there might be an overlap here with the distribution docs, so not sure what the best approach is here.\n\nAlso, technical guidance is needed here (https://github.com/docker/docker/pull/13375#issuecomment-120173326)\n\n/cc @moxiegirl @tiborvass @stevvooe \n"},{"labels":["documentation"],"text":"The recommanded installation procedure on Linux with `wget` is failing:\n\n```\nwget -qO- https://get.docker.com/ | sh\n```\n\nreturns no error (exit 0) but nothing happen either.\n\nTrying a simple `wget https://get.docker.com` reveals an SSL certificate verification issue:\n\n```\n--2015-07-15 10:44:50--  https://get.docker.com/\nResolving get.docker.com (get.docker.com)... 52.0.250.56, 52.6.66.251, 54.210.203.88\nConnecting to get.docker.com (get.docker.com)|52.0.250.56|:443... connected.\nERROR: cannot verify get.docker.com's certificate, issued by `/C=US/O=GeoTrust Inc./CN=RapidSSL SHA256 CA - G3':\n  Unable to locally verify the issuer's authority.\nTo connect to get.docker.com insecurely, use `--no-check-certificate'.\n```\n\nSo, unfortunately, passing the `--no-check-certificate` option to grab the script is the only way to go at the moment.\n"},{"labels":["documentation",null],"text":"User reports:\n\nhttps://docs.docker.com/articles/dockerfile_best-practices/#run-only-one-process-per-container implies that process=application=service which IMO may not be always true, WDYT?\n\n\"In almost all cases, you should only run a single process in a single container. Decoupling applications into multiple containers makes it much easier to scale horizontally and reuse containers. If that service depends on another service, make use of container linking.\"\n"},{"labels":["documentation",null],"text":"I thought they were already removed, we have talked about this in the past (can't remember who it was), and I thought we agreed we would remove the API docs, or at least mark as deprecated, so it wouldn't cause confusion.\n"},{"labels":["documentation"],"text":"https://docs.docker.com/articles/dockerfile_best-practices/\n\nI read the following suggestion a number of times and I don't quite understand what it means?\n\n> Don’t do RUN apt-get update on a single line. This will cause caching issues if the referenced archive gets updated, which will make your subsequent apt-get install fail without comment.\n1. Is it referring to Docker cache or apt cache?\n2. What referenced archive is it referring to?\n\nIt would be nice if this first bullet can be improved. For example, the information the 2nd bullet is clear.\n\nAlso, it is important to clarify the documentation because other people may be using yum package manager and needs to understand the mechanics of the RUN command to follow the best practices.\n"},{"labels":["documentation"],"text":"This issue transfer of https://github.com/docker/docs-base/issues/102\n\nFor me, it seems this link:\n\nhttp://docs.docker.com/installation/mac/\n\ndoesn't fully work.  When using nginx, the SSL ports are not working (can't curl, telnet, etc.)\n\nAlso, some of the commands like under section \"Mount a volume on the container\" step 5 don't show any wrapping, so unless you know to look, you miss part of the command.  Aka, I only see:\n\ndocker run -d -P -v $HOME/site:/usr/share/nginx/html --name\n\nWhen you should see\n\ndocker run -d -P -v $HOME/site:/usr/share/nginx/html --name mysite nginx\n\nClearly that could be a css browser issue, but in my latest Chrome, there is no eye candy to show the command goes long.\n\nRegards.\n\nRon \n"},{"labels":["documentation"],"text":"Version, Os, and KernelVersion are being returned even for `/v1.17/version` calls.\n\nRef: https://bugzilla.redhat.com/show_bug.cgi?id=1241699\n"},{"labels":["documentation",null],"text":"Hi,\n\nI spun up two Ubuntu 14.04 VMs in AWS, and on each, upgraded to the 3.18 kernel, installed docker, did a git clone https://github.com/docker/docker.git; followed by a make DOCKER_EXPERIMENTAL=1 . I then created a soft link to docker/bundles/1.8.0-dev/binary/docker-1.8.0-dev at /usr/bin/docker, effectively replacing the older docker that was installed.\n\nThen, I followed the instructions at https://github.com/docker/libnetwork/blob/master/docs/overlay.md, copy-pasting each instruction and replacing the IPs as applicable. Consul came up, docker daemons came up well on each node, and I was able to create services, networks, attach containers to services, etc, as described in the document.\n\nThe problem I'm seeing is that while pings between containers on the same host work fine, I'm not able to ping one container from another across the two hosts. \n\nAny idea why this doesn't work? I'll be testing libnetwork on my vagrant setup in a short while, and will update the bug with those results.\n\nThanks,\nRegards,\nVijay\n"},{"labels":["documentation"],"text":"Hello,\n\nOn this page: http://docs.docker.com/installation/mac/\n\nUnder this heading: \"From your command line\"\n\nStep 3: Display the environment variables for the Docker client.\n\nIt says to run 'boot2docker shellinit' to display your environment variables for the Docker client. It does not.\n\n> boot2docker shellinit \n> Writing /Users/rpetty/.boot2docker/certs/boot2docker-vm/ca.pem \n> Writing /Users/rpetty/.boot2docker/certs/boot2docker-vm/cert.pem \n> Writing /Users/rpetty/.boot2docker/certs/boot2docker-vm/key.pem \n> Your environment variables are already set correctly.\n\nThis might only be on fresh installs. I tried running boot2docker via the Mac 'applications', then I tried as the instructions say to start via the cli. In either case, it did not show the environment variables. If its only during the vary first time (like during initial set up, then maybe mention that.) Could be something else, not sure yet.\n\nRegards.\n\nRon\n"},{"labels":["documentation"],"text":"https://docs.docker.com/userguide/dockervolumes/\n\nUnder \"Adding a data volume\" you create a volume.  You then go to confirm it via the next section \"Locating a volume\".  When I run 'docker inspect web', I see similar output but not exact.  I see the following:\n\n```\n...\n    \"Volumes\": {\n        \"/webapp\": \"/mnt/sda1/var/lib/docker/volumes/d2c56f0880cb121190e0d5b50c98c57d241109f37139d995da55883b7955427b/_data\"\n    },\n    \"VolumesRW\": {\n        \"/webapp\": true\n    },\n...\n\"Volumes\": {\n            \"/webapp\": {}\n        },\n...\n```\n\nMight want to clarify when you scroll up to see results the first 'Volumes' is not the one showing in the article, you need to scroll further up to see the detailed ones.  The empty Volumes is under the 'Config' block.  I am not sure what it is or represents.  Might just want to add a warning about seeing that or explain what it is.\n\nRegards.\n\nRon\n"},{"labels":["documentation",null],"text":"Using the `docker.service` from here and creating a drop-in  `/etc/systemd/system/docker.service.d/override.conf` to tweak command line parameters (as documented at https://docs.docker.com/articles/systemd/)\n\n```\n[Service]                                                                                                                       \nExecStart=/usr/bin/docker -d -H fd:// --bip=172.17.42.1/16  \n```\n\nends up with systemd refusing to start the daemon:\n\n```\ndocker.service has more than one ExecStart= setting, which is only allowed for Type=oneshot services. Refusing. \n```\n\nWhat is the recommended way to tweak the daemon command-line?\n"},{"labels":["documentation"],"text":"The guide here on the docker documentation (https://docs.docker.com/articles/b2d_volume_resize/) suggests using the gparted livecd iso, however, the current version does not work. Others have experienced this problem too, see: https://gist.github.com/joost/a7cfa7b741d9d39c1307\n\nVersion of gparted livecd: gparted-live-0.22.0-2-i586.iso\nVersion of boot2docker:\nBoot2Docker-cli version: v1.6.0\nGit commit: 9894ae9\n"},{"labels":["documentation"],"text":"Please provide documentation on how to properly create a bind between the container and the host machine. \n"},{"labels":["documentation",null,null,null],"text":"While it's no secret I've been hugely against this feature since back when it was just a proposal/PR (#12528/#11034), upon further investigation, it seems that the feature was implemented without much understanding, as proven by the fact that it doesn't even work :-)\n\nOk, so first subject, it doesn't work (docker 1.7.0):\nI don't know where docker thinks it's setting the cgroup parameter to disable the oom killer, but it's not on the cgroup used by the container.\n\n```\n# docker run -i --privileged --oom-kill-disable fedora:20 bash <<'EOF' \nmount -n -t tmpfs -o uid=0,gid=0,mode=0755 cgroup /sys/fs/cgroup\nmkdir /sys/fs/cgroup/memory\nmount -n -t cgroup -o memory cgroup /sys/fs/cgroup/memory\nmemcgpath=\"/sys/fs/cgroup/memory/$(awk -F: '$2 == \"memory\" { print $3 }' < /proc/1/cgroup)\"\necho \"memcgpath=$memcgpath\"\ncat $memcgpath/memory.oom_control\nEOF\n\nmemcgpath=/sys/fs/cgroup/memory//system.slice/docker-dc1408974e62968ff7e73fe3206045a98a540a0f455d864677be5e9a47d76cc5.scope\noom_kill_disable 0\nunder_oom 0\n```\n\nSecondly, the cgroup oom_kill_disable setting only does anything if a cgroup memory limit is also in place. Currently nothing enforces or advises the oom-kill-disable option only be used in conjunction with a memory limit.\n\nThirdly, using this flag requires manual intervention if the container does hit an OOM condition. The flag does prevent the process from being killed, but the process hangs instead (goes into defunct state). This means manual intervention is required to either kill the process/container, or to increase the memory limits. If you want to increase the limits, you have to go mucking around in the cgroup filesystem. So realistically, the action to take here is to manually kill the container.\nTo compound this, the fact that the process has been sent defunct is not easily observable. From the perspective of someone using the docker client, the container is still running, the processes inside it are still there, they just stop responding.\n\n&nbsp;\n\nHere's a little test container I created for this: [phemmer/do-oom](https://registry.hub.docker.com/u/phemmer/do-oom/) ([github](http://github.com/phemmer/docker-do-oom))\nThe container runs a process which allocates 20gb of memory, and then tries to use that 20gb (which invokes OOM).\n**NOTE**: I do not advise running this container on a system which you care about. The OOM killer is very indiscriminate, and can kill anything. Also don't run it on a system with swap enabled, or the entire system will likely come grinding to a halt.\n\nThe first example, we run the container with oom killer (supposedly) disabled:\n\n```\n# docker run -ti --oom-kill-disable do-oom \nmallocs complete\nUsed 0 bytes\nUsed 104857600 bytes\nUsed 209715200 bytes\nUsed 314572800 bytes\nUsed 419430400 bytes\nUsed 524288000 bytes\nUsed 629145600 bytes\nUsed 734003200 bytes\nUsed 838860800 bytes\nUsed 943718400 bytes\nUsed 1048576000 bytes\nUsed 1153433600 bytes\nUsed 1258291200 bytes\nUsed 1363148800 bytes\nUsed 1468006400 bytes\nUsed 1572864000 bytes\nUsed 1677721600 bytes\nUsed 1782579200 bytes\nUsed 1887436800 bytes\nUsed 1992294400 bytes\nUsed 2097152000 bytes\nUsed 2202009600 bytes\nUsed 2306867200 bytes\nKilled\n#\n```\n\nHere we see the container was killed due to OOM.\n\n&nbsp;\n\nNow we set a limit of 500M\n\n```\n# docker run -ti --oom-kill-disable -m 500M do-oom \nmallocs complete\nUsed 0 bytes\nUsed 104857600 bytes\nUsed 209715200 bytes\nUsed 314572800 bytes\nUsed 419430400 bytes\nKilled\n#\n```\n\n&nbsp;\n\nNow lets run it with the fix enabled, but no memory limit:\n\n```\n# docker run -ti --oom-kill-disable --privileged do-oom fix do-oom\nmallocs complete\nUsed 0 bytes\nUsed 104857600 bytes\nUsed 209715200 bytes\nUsed 314572800 bytes\nUsed 419430400 bytes\nUsed 524288000 bytes\nUsed 629145600 bytes\nUsed 734003200 bytes\nUsed 838860800 bytes\nUsed 943718400 bytes\nUsed 1048576000 bytes\nUsed 1153433600 bytes\nUsed 1258291200 bytes\nUsed 1363148800 bytes\nUsed 1468006400 bytes\nUsed 1572864000 bytes\nUsed 1677721600 bytes\nUsed 1782579200 bytes\nUsed 1887436800 bytes\nUsed 1992294400 bytes\nUsed 2097152000 bytes\nUsed 2202009600 bytes\nUsed 2306867200 bytes\nUsed 2411724800 bytes\n#\n```\n\nStill was killed\n\n&nbsp;\n\nNow we run it with a memory limit, and the fix enabled:\n\n```\n# docker run -ti --oom-kill-disable -m 500M --privileged do-oom fix do-oom \nmallocs complete\nUsed 0 bytes\nUsed 104857600 bytes\nUsed 209715200 bytes\nUsed 314572800 bytes\nUsed 419430400 bytes\n```\n\nHere the process just hangs as it's gone defunct. CTRL+C doesn't work, and we have to detach & kill the container.\n\n---\n\n```\n# docker version\nClient version: 1.7.0\nClient API version: 1.19\nGo version (client): go1.4.2\nGit commit (client): 0baf609\nOS/Arch (client): linux/amd64\nServer version: 1.7.0\nServer API version: 1.19\nGo version (server): go1.4.2\nGit commit (server): 0baf609\nOS/Arch (server): linux/amd64\n\n# docker info\nContainers: 107\nImages: 376\nStorage Driver: btrfs\nExecution Driver: native-0.2\nLogging Driver: json-file\nKernel Version: 3.18.1-gentoo\nOperating System: Gentoo/Linux\nCPUs: 4\nTotal Memory: 7.512 GiB\nName: gadget\nID: KLI3:BPWQ:CK45:NJCL:ULCH:BV6Z:XDFM:YKTZ:EZ7D:UBE7:ZQCK:HOGN\nUsername: phemmer\nRegistry: https://index.docker.io/v1/\n\n# uname -a\nLinux gadget 3.18.1-gentoo #1 SMP Sun Dec 21 12:15:16 EST 2014 x86_64 Intel(R) Core(TM) i7-3517U CPU @ 1.90GHz GenuineIntel GNU/Linux\n```\n"},{"labels":["documentation"],"text":"In the [Dockerfile best practices](https://docs.docker.com/articles/dockerfile_best-practices/) documentation, we read:\n\n> In the case of the ADD and COPY instructions, the contents of the file(s) being put into the image are examined. Specifically, a checksum is done of the file(s) and then that checksum is used during the cache lookup. If anything has changed in the file(s), including its metadata, then the cache is invalidated.\n\nThe first sentence is incomplete and misleading, _files_, _files contents_, and _files contents and metadata_ are used interchangeably, but there is actually only the latter. The purpose of mentioning the checksum is unclear, and mentioning it breaks the logical connection between the first and and the third sentence. A better wording would be:\n\n> In the case of the ADD and COPY instructions, the files being put into the image are examined and if anything has changed in their contents or their metadata, then the cache is invalidated. The comparison mechanism actually uses a checksum deduced from the files contents and metadata. Therefore, in some extremely rare occurrences, some cache entry might not be invalidated as expected.\n\n---\n\n```\ndocker version:     Not relevant,\ndocker info:          this is about \nuname -a:                   the website\n```\n"},{"labels":["documentation",null],"text":"YOu have a dangling link in line 80 of docs/reference/commandline/run.md:\n\n```\nThe `docker run` command can be used in combination with `docker commit` to\n[*change the command that a container runs*](#commit-an-existing-container).\n```\n\nThis should probably point to docs/reference/commandline/commit.md,\nbut I'm not sure exactly how that link should look (there didn't seem\nto be any examples in the existing run.md document).\n\nIdentified here: https://github.com/docker/docker/pull/13987\n"},{"labels":["documentation",null],"text":"docs/userguide/dockervolumes.md\n\nSee https://github.com/docker/docker/pull/14235 for discussion\n"},{"labels":["documentation",null,null],"text":"We have a document for reference/run which looks like it might be better suited as  a \"how to use run\" and the commandline/run.md file which is actually a reference.\n\nNeed to take a closer look and see what the intention was in the original design and solve it.\n\n![image](https://cloud.githubusercontent.com/assets/1347209/8503836/a61aa1de-217a-11e5-92bc-2c79777e6505.png)\n"},{"labels":["documentation"],"text":"I am confused about how dockerignore works.  I think it needs a more formal specification, and/or the examples should get into tricky cases more.  Here is a slightly pedantic list of some unclear things in the online documentation:\n\n\"Filepaths in .dockerignore are absolute with the current directory as the root.\"  Yet in the example .dockerignore file you give, either all or some of the patterns only match relative paths (depending on whether a leading asterisk can match the empty string).  I think what is meant is that filepaths are interpreted relative to the current directory but as if a chroot command had made that directory the root?\n\n\"the search is not recursive\".  What does this mean?\n\n\"Globbing (file name expansion) is done using Go’s filepath.Match rules.\"  In the linked documentation, we read that asterisk \"matches any sequence of non-Separator characters\" (which means characters other than '/'?) and that \"Match requires pattern to match all of name, not just a substring\".  Yet in the example file, you say that the pattern \"*.md\" will exclude all markdown files.  All four of these claims can't be true.\n\n\"Formats like [^temp*] are ignored.\"  I don't understand what this means. Is it a qualification of the claim that globbing is done using Go's filepath.Match rules?\n"},{"labels":["documentation"],"text":"People are using `https://get.docker.com/ubuntu/` to install docker and end up with problems because it does not install aufs (Example : https://github.com/docker/docker/issues/14204). https://get.docker.com/ubuntu/ should just redirect to `https://get.docker.com/`, so that people install docker on ubuntu correctly.\n\nCC : @moxiegirl @thaJeztah @jfrazelle \n"},{"labels":["documentation"],"text":"Is there a documentation/specification available about the stream format returned by accessing the `GET /containers/(id)/logs` endpoint of the REST API?\n\nIt looks like each line is prefixed with `8 bytes` of binary data, which might encode line length, a time code, line codes, char offsets, or ... but I haven't found any documentation about that format (at least not in the [docker remote api v1.19 docs](https://docs.docker.com/reference/api/docker_remote_api_v1.19/)).\n\nI am running:\n\n```\nDocker version 1.7.0, build 0baf609\n```\n\nE.g.: running this request:\n\n```\ncurl \"http://localhost:2375/containers/8c579/logs?follow=true&stderr=true&stdout=true&timestamps=true\"\n```\n\ngives this result (note the garbage characters in front of the time stamps):\n\n``````\n☺      ½2015-06-25T18:10:22.916242788Z 1:C 25 Jun 18:10:22.914 # Warning: no config file specified, using the default config. In order to specify a config file use redis-server /path/to/redis.conf\n☺      e2015-06-25T18:10:22.921992353Z                 _._\n☺      e2015-06-25T18:10:22.922012790Z            _.-``__ ''-._\n☺      g2015-06-25T18:10:22.922020284Z       _.-``    `.  `_.  ''-._           Redis 3.0.2 (00000000/0) 64 bit\n☺      e2015-06-25T18:10:22.922026895Z   .-`` .-```.  ```\\/    _.,_ ''-._\n☺      b2015-06-25T18:10:22.922033469Z  (    '      ,       .-`  | `,    )     Running in standalone mode\n☺      R2015-06-25T18:10:22.922039644Z  |`-._`-...-` __...-.``-._|'` _.-'|     Port: 6379\n☺      N2015-06-25T18:10:22.922045827Z  |    `-._   `._    /     _.-'    |     PID: 1\n☺      e2015-06-25T18:10:22.922052038Z   `-._    `-._  `-./  _.-'    _.-'\n☺      e2015-06-25T18:10:22.922057983Z  |`-._`-._    `-.__.-'    _.-'_.-'|\n☺      e2015-06-25T18:10:22.922064221Z  |    `-._`-._        _.-'_.-'    |           http://redis.io\n☺      e2015-06-25T18:10:22.922070404Z   `-._    `-._`-.__.-'_.-'    _.-'\n☺      e2015-06-25T18:10:22.922078420Z  |`-._`-._    `-.__.-'    _.-'_.-'|\n☺      e2015-06-25T18:10:22.922084460Z  |    `-._`-._        _.-'_.-'    |\n☺      e2015-06-25T18:10:22.922090389Z   `-._    `-._`-.__.-'_.-'    _.-'\n☺      e2015-06-25T18:10:22.922096333Z       `-._    `-.__.-'    _.-'\n☺      e2015-06-25T18:10:22.922102155Z           `-._        _.-'\n☺      e2015-06-25T18:10:22.922108076Z               `-.__.-'\n☺       2015-06-25T18:10:22.922113903Z\n☺      ]2015-06-25T18:10:22.923169420Z 1:M 25 Jun 18:10:22.923 # Server started, Redis version 3.0.2\n``````\n"},{"labels":["documentation"],"text":"https://docs.docker.com/reference/run/\n\nThe table format is messy after the paragraph shown as below.\n\n> In addition to --privileged, the operator can have fine grain control over the capabilities using --cap-add and --cap-drop. By default, Docker has a default list of capabilities that are kept. The following table lists the Linux capability options which can be added or dropped.\n\nI have checked other tables in `run` reference - **markdown** issue - has been converted to **html** format. \n"},{"labels":["documentation"],"text":"`Docker version 1.6.2, build 7c8fca2`\n\nFrom documentation:\nhttps://docs.docker.com/reference/builder/#volume\n\n> The `docker run` command initializes the newly created volume with any data that exists at the specified location within the base image.\n\n(1) This works as excepted:\n\n```\nRUN mkdir -p /foo/bar && touch /foo/bar/test.txt\nVOLUME /foo/bar\n```\n\n(2) but this not:\n\n```\nVOLUME /foo/bar\nRUN touch /foo/bar/test.txt\n```\n\nFile in image is created successfully, but when container is created `/foo/bar` becomes empty.\nStrangely, (2) seems to work when `VOLUME` part is taken from cache, and `RUN` part is freshly appended to Dockerfile. But full rebuild of image breaks this.\n\n---\n\nBUG REPORT INFORMATION\n\nUse the commands below to provide key information from your environment:\n\ndocker version:\n\n```\ndocker@boot2docker:~$ docker version\nClient version: 1.6.2\nClient API version: 1.18\nGo version (client): go1.4.2\nGit commit (client): 7c8fca2\nOS/Arch (client): linux/amd64\nServer version: 1.6.2\nServer API version: 1.18\nGo version (server): go1.4.2\nGit commit (server): 7c8fca2\nOS/Arch (server): linux/amd64\n```\n\ndocker info:\n\n```\ndocker@boot2docker:~$ docker info\nContainers: 13\nImages: 195\nStorage Driver: aufs\n Root Dir: /mnt/sda1/var/lib/docker/aufs\n Backing Filesystem: extfs\n Dirs: 221\n Dirperm1 Supported: true\nExecution Driver: native-0.2\nKernel Version: 4.0.3-boot2docker\nOperating System: Boot2Docker 1.6.2 (TCL 5.4); master : 4534e65 - Wed May 13 21:24:28 UTC 2015\nCPUs: 2\nTotal Memory: 1.957 GiB\nName: boot2docker\nID: EDZ6:D6NA:EKMP:HL4L:LUQ3:MGLZ:CAEW:EXEZ:HPJU:Q7RT:3CL3:TBNI\nDebug mode (server): true\nDebug mode (client): false\nFds: 54\nGoroutines: 88\nSystem Time: Sat May 30 08:05:47 UTC 2015\nEventsListeners: 1\nInit SHA1: 7f9c6798b022e64f04d2aff8c75cbf38a2779493\nInit Path: /usr/local/bin/docker\nDocker Root Dir: /mnt/sda1/var/lib/docker\n```\n\nuname -a:\n\n```\ndocker@boot2docker:~$ uname -a\nLinux boot2docker 4.0.3-boot2docker #1 SMP Wed May 13 20:54:49 UTC 2015 x86_64 GNU/Linux\n```\n\nProvide additional environment details (AWS, VirtualBox, physical, etc.):\n- VirtualBox, boot2docker\n\nList the steps to reproduce the issue:\nDescribe the results you received:\nDescribe the results you expected:\nSee above.\n\n----------END REPORT ---------\n# ENEEDMOREINFO\n"},{"labels":["documentation"],"text":"Here is what you get when you search in the docker repo for the string `\"VolumesFrom\"`: https://github.com/docker/docker/search?utf8=%E2%9C%93&q=VolumesFrom\n\nThe issue is that most of the response formats ascribed to docker inspect say that the endpoint will return something like\n\n`\"VolumesFrom\":\"\"`\n\nThis is untrue - as of docker 1.7 (and probably much earlier), docker returns either `null` or something like `[\"contrainerid\"]` as the value for that key.\n\nThe tricky part is that early docker (1.0) used to accept a string as input for `VolumesFrom` in the remote api, before a change (maybe around 1.4?) had it take an array instead. I'm not sure when both the input and output changed, but someone more knowledgeable should probably retroactively correct the documentation thereof.\n\nI stumbled across this issue because docker 1.7's remote API started **throwing errors** when passed string values for `VolumesFrom` - it used to silently accept the empty string as a valid input. I don't count this as a bug, but it was certainly surprising.\n\n_As an aside there has GOT to be a better way to arrange all of these docs besides a series of increasingly large and self-contradictory markdown files._\n"},{"labels":["documentation",null,null,null],"text":"Using this issue to solicit feedback on the exciting new networking experimental features introduced during the Docker 1.7 / 1.8 release time-frame.\nhttps://github.com/docker/docker/blob/master/experimental/networking.md\n"},{"labels":["documentation"],"text":"I'm a newbie and trying to contribute. Where I could find the docs file for getting started for linux https://docs.docker.com/linux/started/\nand the getting started link in https://docs.docker.com/linux/started/ is broken\n"},{"labels":["documentation"],"text":"docs/reference/run.md in section \"Overriding Dockerfile image defaults\" implies that the docker run --expose option overrides the EXPOSE command in a Dockerfile. It does not. docker run --expose simply adds to the list of exposed ports. It does not override the Dockerfile EXPOSE list of ports.\n\nIf you think this is trivial, this actually cost me a cycle, because I _assumed_ from the doc that I could put an EXPOSE command in the Dockerfile, and override it later. \n\nThere should be a --unexpose option but that's a different issue. This issue is just about correcting the doc.\n"},{"labels":["documentation"],"text":"According to the [documentation](https://docs.docker.com/userguide/dockervolumes/#data-volumes), new volumes should be initialized with the contents of the base image in the volume location.\n\nThis indeed works when running `docker -v /path/inside/container ...`, but not when running `docker -v /path/on/host:/path/inside/container ...`.\n\nThe documentation doesn't mention there should be a different behavior, so we should either:\n1. Update the documentation to mention that the behavior is different when the volume is bound to a host directory\n2. Find a way to initialize the volume when binding it to a host directory. Perhaps if the host directory does not initially exist, or with an extra `docker` flag?\n"},{"labels":["documentation",null],"text":"Setting pid=host or ipc=host sets the \"disabled\" selinux policy. This should be documented (or fixed), as it is neither obvious nor apparent. A warning message on usage may also be appropriate.\n\nVerified in 1.7.0-rc2\n"},{"labels":["documentation"],"text":"For the Fedora 21 and later installation instructions, I was thinking that updating the instructions to reflect the dnf update in Fedora 22 would be useful and helpful to users. \n"},{"labels":["documentation",null],"text":"According to the now (official) dockerbench rule [#2.7](https://benchmarks.cisecurity.org/tools2/docker/CIS_Docker_1.6_Benchmark_v1.0.0.pdf) \"`2.7 Do not use the aufs storage driver`\" Its seems recommended to just use the devicemapper. Shouldn't the [magic install url](https://get.docker.io/) reflect this and _not_ install the -extra linux image packages in order to allow for AUFS?\n\nI'd say just dropping the aufs packages and requirements for (at least) Ubuntu 14.04+ would suffice?\n\nThanks!\n"},{"labels":["documentation",null],"text":"Was running through the tutorial and accidentally did:\n`docker run learn/ping www.google.com`\n\ninstead of\n`docker run learn/ping ping www.google.com` (as the answer states)\n\nMy mistake validated as a incorrect answer in the emulator with a popup claiming it was correct.\n\n![dockerissue](https://cloud.githubusercontent.com/assets/1414307/7973411/ff3fcb82-0a22-11e5-90ce-eeb4faefaa8a.png)\n"},{"labels":["documentation"],"text":"He reports a TLS error and suggests the work around is to start the daemon directly.  Using 14.04.2 \n\nhttps://plus.google.com/116544552139899093398/posts/NFE4ubBAabo\n"},{"labels":["documentation"],"text":"The MAINTAINERS file says all decisions can be expressed as a pull request (https://github.com/docker/docker/blob/master/MAINTAINERS#L76). But I was unable to find any documentation explaining the release cadence (when is a minor as in semver's MAJOR.MINOR.PATCH). The closes thing I could find was https://github.com/docker/docker/blob/master/project/RELEASE-CHECKLIST.md which discusses what to do once you know you are working on making a release\n"},{"labels":["documentation",null],"text":"As of https://github.com/docker/docker/commit/1df87b95066198c30312147393c18e0be0564fd0 the `create container` remote api endpoint still accepts a `HostConfig` as POST body, but a [code comment indicates](https://github.com/docker/docker/blob/master/daemon/start.go#L27) that the HostConfig should only be used for `start container`.\n\nThe relevant docs produced some confusion (see #13466) after the request body description had been removed and [added](https://github.com/docker/docker/commit/ac12c8053779d36409e248f41c4d80ef0e4fbe9f) again.\n\nI propose to explictly indicate in the docs that the HostConfig is only allowed on `start container` for backwards compatibility.\n"},{"labels":["documentation"],"text":"![image](https://cloud.githubusercontent.com/assets/1347209/7888740/8df9e62e-05ef-11e5-8d55-c67425ba7039.png)\n"},{"labels":["documentation"],"text":"@moxiegirl can we add @justone tool to documentation somewhere and reference to docker images.\n@justone Thank you! This is so cool!\n\nSee https://github.com/docker/docker/pull/12333\n"},{"labels":["documentation"],"text":"A little email just to tell you that the documentation about installing Docker on Debian Jessie (https://docs.docker.com/installation/debian/) is not up-to-date as it seems that the docker.io does not exist anymore in backports.\n\nThe installation through wget -qO- https://get.docker.com/ | sh works though. I would just add a mention about systemctl enable docker to have Docker starts at each machine start.\n\nKind regards,\nPhilippe\n"},{"labels":["documentation",null,null],"text":"doc: docker images should explain repository column and when none. Or provide a link to where these are explained.\n\nhttps://docs.docker.com/reference/commandline/cli/#images\n\n`docker images` starts \"The default docker images will show all top level images, their repository and tags, and their virtual size.\"  It goes on to do a good job of explaining the last item \"virtual size\".\n"},{"labels":["documentation",null],"text":"---- TRIAGE -----\n\n**Problem:** Systemd is not supported on RHEL6 kernels (and this won't be fixed). As such containers which include systemd will not work.\n\n**Resolution:** Update docs to reflect issues attempting to run systemd based images on kernels < 3.8\n\n---- END TRIAGE ----\n\nHi,\n\nthis is more a documentation / information related problem:\n\n\"Develop, Ship and Run Any Application, Anywhere\" NOT true for:\n- Anywhere = [Redhat | CentOS] 6) AND\n- Application dependent on systemd\n\nThis should be at least mentioned in the [install description](https://docs.docker.com/installation/rhel/) for RH6.\n\n_In our case we realized this only when we wanted to deploy ready, working containerized Apps to production at a customer. Their operations and security departments disallows major Kernel or OS upgrades so we have a real problem - which bit us unexpectedly, due to the claim that the docker enabled series 2 RH kernel is fine._\n# Description of problem:\n\nAny systemd enabled container can't start on RH 6, with systemd as Pid 1\n- With --privileged or without\n- With -e 'container:docker' or without\n\nThe root cause is the missing /sys/fs/cgroup interface of the kernel - which can't be created there (sysfs) - allthough all cgroups are actually supported, mounted to /cgroup\n\nI'm clear that docker supports the one container per process approach but for various reasons (many legacy) we require a full init system - and systemd is the default in Linux these days.\n## `docker version`:\n\nTried 1.3.0 and also Docker version 1.6.2, build 7c8fca2\n## `docker info`:\n\n[root@ip-172-30-0-24 ~]# docker info\nContainers: 19\nImages: 11\nStorage Driver: devicemapper\n Pool Name: docker-202:80-3145731-pool\n Pool Blocksize: 65.54 kB\n Backing Filesystem: extfs\n Data file:\n Metadata file:\n Data Space Used: 2.375 GB\n Data Space Total: 107.4 GB\n Data Space Available: 105 GB\n Metadata Space Used: 2.879 MB\n Metadata Space Total: 2.147 GB\n Metadata Space Available: 2.145 GB\n Udev Sync Supported: false\n Library Version: 1.02.82-git (2013-10-04)\nExecution Driver: native-0.2\nKernel Version: 2.6.32-504.el6.x86_64\nOperating System: <unknown> (containerized)\nCPUs: 1\nTotal Memory: 994.7 MiB\nName: ip-172-30-0-24.eu-west-1.compute.internal\nID: IZBN:IMN5:OGHI:L2LQ:IVB7:RBPC:7KPS:KKSW:ZKZF:SHMD:EPNF:ABXB\n## `uname -a`:\n\nLinux ip-172-30-0-24.eu-west-1.compute.internal 2.6.32-504.el6.x86_64 #1 SMP Tue Sep 16 01:56:35 EDT 2014 x86_64 x86_64 x86_64 GNU/Linux\n## Environment details (AWS, VirtualBox, physical, etc.):\n\n[root@ip-172-30-0-24 ~]# cat /etc/redhat-release\nRed Hat Enterprise Linux Server release 6.6 (Santiago)\nReproduced on AWS (ami-9cfd53eb)\n\nOn customer site its in vmware server.\n## How reproducible:\n\n100% \n## Steps to Reproduce:\n\nWe tried various ways. Here the most naive ones:\n\na) # docker run -ti --privileged -e \"container=docker\" debian:jessie  /sbin/init\n-> Failed to mount tmpfs at /sys/fs/cgroup: No such file or directory\n\nb) # docker run -ti --privileged -e \"container=docker\" -v '/cgroup:/sys/fs/cgroup' debian:jessie  /sbin/init\n-> FATA[0000] Error response from daemon: Cannot start container 3c37ba2028310fcfbe7fa3e8f8f084ecb28670d7b1566e4865d3c9ff0eeca590: [8] System error: mkdir /var/lib/docker/devicemapper/mnt/3c37ba2028310fcfbe7fa3e8f8f084ecb28670d7b1566e4865d3c9ff0eeca590/rootfs/sys/fs/cgroup: no such file or directory\n\nc) # ./docker-1.3.0 run -t -i --privileged --lxc-conf=\"lxc.mount.auto = proc:rw sys:rw cgroup-full:mixed\" -e 'container=docker' debian:jessie  /sbin/init\n-> Failed to mount tmpfs at /sys/fs/cgroup: No such file or directory\n\nd) # ./docker-1.3.0 run -it --privileged cloudbees/archbase\n-> Failed to mount tmpfs at /sys/fs/cgroup: No such file or directory\n\ne) # ./docker-1.3.0 run -it cloudbees/archbase\n-> Failed to mount tmpfs at /run: Operation not permitted\n## Expected Results:\n\nsystemd as pid1 inside (as working with ubuntu as base OS or also when we upgrade the kernel according to http://nareshv.blogspot.com/2014/02/installing-docker-08-version-on-centos.html  (which is not allowed in production))\n## Additional info:\n- https://github.com/jpetazzo/dind/issues/17\n- http://developerblog.redhat.com/2014/05/05/running-systemd-within-docker-container/ (which is only working on RH7)\n- https://registry.hub.docker.com/u/offlinehacker/nixos/ (does also not work)\n\nIn general I want to say that the problem is **not a bug in docker as such**. Since it is also not possible to get systemd up on RH6 using lxc.\n\nBut it should be made very clear to users of dockers that their containers can't work on default RH 6 - if systemd is used as init system inside.\n\nPS: If there is any workaround whatsoever (dind?) I would be very happy if I'm proven wrong with the main claim of this issue.\n"},{"labels":["documentation"],"text":"I've checked docker --version before and after running the command and I still have version `Docker version 1.5.0, build a8a31ef`\n\n```\nwget -N https://get.docker.com/ | sh\n--2015-05-15 11:09:03--  https://get.docker.com/\nResolving get.docker.com (get.docker.com)... 162.242.195.82\nConnecting to get.docker.com (get.docker.com)|162.242.195.82|:443... connected.\nHTTP request sent, awaiting response... 200 OK\nLength: 7452 (7.3K) [text/plain]\nSaving to: ‘index.html’\n\n100%[===============================================================================================================================================================================>] 7,452       --.-K/s   in 0s\n\n2015-05-15 11:09:04 (1.46 GB/s) - ‘index.html’ saved [7452/7452]\n```\n\n```\n#uname -a\nLinux UBUNTU4117V 3.13.0-49-generic #83-Ubuntu SMP Fri Apr 10 20:11:33 UTC 2015 x86_64 x86_64 x86_64 GNU/Linux\n```\n\n```\n# docker info\nContainers: 0\nImages: 129\nStorage Driver: aufs\n Root Dir: /var/lib/docker/aufs\n Backing Filesystem: extfs\n Dirs: 129\nExecution Driver: native-0.2\nKernel Version: 3.13.0-49-generic\nOperating System: Ubuntu 14.04.2 LTS\nCPUs: 2\nTotal Memory: 15.67 GiB\nName: UBUNTU4117V\nID: QTIT:JXGL:A6XO:7YXZ:5LKY:PCKL:EG7T:FD4A:CZID:UE72:A77K:3WAY\nWARNING: No swap limit support\n```\n"},{"labels":["documentation"],"text":"The docker-pull man page usage line is missing an entry for alternate registries.  Right now it looks like:\n\ndocker pull [-a|--all-tags[=false]] [--help] NAME[:TAG]\n\nbut should probably look like:\n\ndocker pull [-a|--all-tags[=false]] [--help] [REGISTRY_HOST[:REGISTRY_PORT]/]NAME[:TAG]\n\nThe docker-push man page has a more correct usage line which includes alternate registries, but it's a little misleading because it looks like:\n... NAME[:TAG] | [REGISTRY_HOST[:REGISTRY_PORT]/]NAME[:TAG]\n"},{"labels":["documentation",null,null],"text":"Windows installation step 2 has a typo change \"or Windows\" to \"for Windows\"\n"},{"labels":["documentation"],"text":"I'm not sure where the problem lies, but the upgrade documentation for Ubuntu is messed up.\n\nHere's what the docs say at (http://docs.docker.com/installation/ubuntulinux/#upgrade-docker):\n\n```\nUpgrade Docker\nTo install the latest version of Docker, use the standard -N flag with wget:\n\n$ wget -N https://get.docker.com/ | sh\n```\n\nExecuting this command when you have Docker installed does nothing - it simply downloads the contents of https://get.docker.com/index.html and saves it in the current directory as `index.html`.\n\nIf you execute the downloaded script, you get a warning message:\n\n```\nWarning: \"docker\" or \"lxc-docker\" command appears to already exist.\nPlease ensure that you do not already have docker installed.\nYou may press Ctrl+C now to abort this process and rectify this situation.\n```\n\nBeing the cautious sort, I cancelled, then attempted to uninstall (via `apt-get purge`) docker before proceeding. This worked.\n\nBut I don't know if I needed to do that. The warning above seems to indicate that I did need to, but I wouldn't know that from the documentation.\n\nFirst,\n\nThe command given in the documentation needs to be changed,\n\nthen either:\n1. the documentation needs to advise users to uninstall docker before attempting to upgrade, or\n2. the warning message in the install script needs to be amended (or dropped) if it's not accurate\n\nThanks\n"},{"labels":["documentation",null],"text":"Hi,\n\nI've look a bit at the label documentation, the `labels-custom-metadata.md` file (and it [online version](https://docs.docker.com/userguide/labels-custom-metadata/)) and it seems something has not been updated — or at least it is not working.\n\nAssuming 4fa6e0f0c678 is a container, the command specified in the document won't work as expected.\n\n``` bash\n$ docker inspect -f \"{{json .Labels }}\" 4fa6e0f0c678\nnull\n$ docker inspect -f \"{{json .Config.Labels }}\" 4fa6e0f0c678\n{\"Vendor\":\"ACME Incorporated\",\"com.example.is-beta\":\"\",\"com.example.version\":\"0.0.1-beta\",\"com.example.release-date\":\"2015-02-12\"}\n```\n\nAnd it's not the same format to use for inspect on images, the format would  be `{{json .ContainerConfig.Labels }}`.\n\nCorrect me if I'm wrong, but for now, I'll send a PR to fix that :)\n"},{"labels":["documentation"],"text":"Hi,\n\nafter the release of Debian jessie the package docker.io doesn't exists in the main or backports repository of jessie anymore.\nThe docs should provide a valid and official way to install docker on jessie.\n\nMy currently workaround is to use the docker repository which is provided for ubuntu.\n\n``` bash\napt-get install apt-transport-https\napt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 36A1D7869245C8950F966E92D8576A8BA88D21E9\necho \"deb https://get.docker.com/ubuntu docker main\" >> /etc/apt/sources.list\napt-get update\napt-get install lxc-docker\n```\n"},{"labels":["documentation",null],"text":"http://docs.docker.com/project/get-help/ recommends using webchat and has a little procedure to get people started.  IRCloud has a free account and better usability. We should switch it out.\n"},{"labels":["documentation"],"text":"The `--cgroup-parent` option was proposed in https://github.com/docker/docker/issues/8551, and implemented in https://github.com/docker/docker/pull/11428 and (for `docker build`) in https://github.com/docker/docker/pull/11844\n\nThe documentation for this feature is currently very limited, and even _missing_ in some places (for example, in the `docker run` [command line reference](https://github.com/docker/docker/blob/8bd5a95e1e39541dfc5dc635c5c8e7604fe10028/docs/sources/reference/commandline/cli.md#run)). In addition, there's no example on how to use this feature, which might help users understand on how to use this.\n\nObviously, care should be taken to not to explain cgroups in itself, but I found a nice short walk-through here; http://linuxaria.com/article/introduction-to-cgroups-the-linux-conrol-group)\n"},{"labels":["documentation"],"text":"I was going to install the latest docker via \n\n`wget -qO- https://get.docker.com/ | sh`\n\nHowever, uninstalling after doing so is not documented.\n1. It should be. \n2. I should be able to find it in the docs by searching for 'uninstall'.\n3. The documentation ought to say that the solution is \"run the command `sudo docker uninstall`\" or something along those lines.\n"},{"labels":["documentation",null],"text":"The main docker manpage, `man docker`, makes it look like you can do things like `docker-ps` instead of `docker ps`, which is unintentionally misleading.\n\nGiven these parts of the manpage:\n\n> **COMMANDS**\n> &nbsp;&nbsp;&nbsp;&nbsp;**docker-attach(1)**\n> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Attach to a running container\n\nThis formatting _suggests_ that I might want to run `docker-attach` as opposed to `docker attach`. This doesn't work of course, but it might be more clear to specifically refer to `attach` as the command, and point out that full documentation for attach is found in the `docker-attach(1)` manpage.\n\n> **COMMANDS**\n> &nbsp;&nbsp;&nbsp;&nbsp;**attach**\n> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Attach to a running container.\n> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;See **docker-attach(1)** for full documentation on the **attach** command.\n"},{"labels":["documentation",null],"text":"The `nproc` setting for `--ulimit` seems to be a special case in that it is limited per user (and per process). As such if you start up multiple containers using the same uid, they are limited by the same `nproc` value, for example:\n\n```\ndocker run -d -u daemon --ulimit nproc=3 busybox top\ndocker run -d -u daemon --ulimit nproc=3 busybox top\ndocker run -d -u daemon --ulimit nproc=3 busybox top\ndocker run -d -u daemon --ulimit nproc=3 busybox top\n```\n\nThe last `docker run` will fail since each container is using the same uid, and nproc for that user has been limited to 3... this is, unfortunately, how the system handles `nproc`\n\nSome extra docs explaining this would be extremely helpful.\n"},{"labels":["documentation"],"text":"https://github.com/docker/docker/blob/master/docs/sources/articles/security.md\n\nShould mention --read-only on container here.\n"},{"labels":["documentation",null],"text":"hey there, I'm totally new to Docker but I've heard so much about it that I figured I'd give it a shot.\n\nI checked this out on the website: https://www.docker.com/tryit/\n\nI must say, I have a lot of questions after going through this tutorial. Before I move on and find answers to all my questions, I thought I'd leave them here to improve the tutorial.\n\n---\n\nThere seems to be some concept of an image and a container which are different things, but I have no idea what the difference is so I'm just going to call everything a container.\n\nWe download `learn/tutorial`. We run an echo command through it. Then we install ping though it. My understanding is that ping was installed in the `learn/tutorial` container. But then what's the difference between `docker ps` and `docker ps -l`? We then commit this \"change\" to learn/ping -- I'm assuming this is analogous to creating a new branch from learn/tutorial. I could have just as easily committed back to learn/tutorial?\n\n---\n\nAnyways, I hope those questions make sense. I think it would help to give some git analogies in there. No need to answer all the questions -- I can figure  it out. I just figured getting these questions out could improve the \"try it\" experience.\n"},{"labels":["documentation",null],"text":"http://docs.docker.com/reference/commandline/cli/#default-ulimits\n\ninheritted > inherited\n"},{"labels":["documentation"],"text":"http://docs.docker.com/userguide/dockerimages\n"},{"labels":["documentation",null],"text":"The [Debian install documentation for jessie](https://docs.docker.com/installation/debian/#debian-jessie-80-64-bit) states that there is a Debian package for jessie, while [it has been removed since March 31st](https://tracker.debian.org/pkg/docker.io). Please update the docs.\n"},{"labels":["documentation",null],"text":"The last `git push` at the bottom of https://docs.docker.com/project/work-issue/#pull-and-rebase-frequently will fail, I think, unless it has `-f` added.\n\nThis is because the tip of the current branch will not match the remote repository, so Git will reject the update.\n"},{"labels":["documentation"],"text":"I created and linked to containers.  When I try to remove a link  as per the example here:\n\nhttps://docs.docker.com/reference/commandline/cli/#rm\n\nThe example doesn't work. The example shows a leading slash but this appears to be problematic.  Including the leading slash causes the command to return with and apparently remove the link. But it doesn't.\n\n```\n$ docker ps\nCONTAINER ID        IMAGE                      COMMAND                CREATED             STATUS              PORTS                     NAMES\n8e9c5dd470b7        training/webapp:latest     \"python app.py\"        2 minutes ago       Up 2 minutes        0.0.0.0:49159->5000/tcp   web                 \n5551a83d8f32        training/postgres:latest   \"su postgres -c '/us   2 minutes ago       Up 2 minutes        5432/tcp                  db                  \n\nmary at meepers in ~/repos/distribution on docs-part-two [!]\n$ docker ps\nCONTAINER ID        IMAGE                      COMMAND                CREATED             STATUS              PORTS                     NAMES\n8e9c5dd470b7        training/webapp:latest     \"python app.py\"        3 minutes ago       Up 3 minutes        0.0.0.0:49159->5000/tcp   web                 \n5551a83d8f32        training/postgres:latest   \"su postgres -c '/us   3 minutes ago       Up 3 minutes        5432/tcp                  db                  \n\nmary at meepers in ~/repos/distribution on docs-part-two [!]\n$ docker inspect -f \"{{ .HostConfig.Links }}\" web\n[/db:/web/db]\n\nmary at meepers in ~/repos/distribution on docs-part-two [!]\n$ docker rm --link /web/db\n/web/db\n\nmary at meepers in ~/repos/distribution on docs-part-two [!]\n$ docker inspect -f \"{{ .HostConfig.Links }}\" web\n[/db:/web/db]\n\nmary at meepers in ~/repos/distribution on docs-part-two [!]\n$ docker ps\nCONTAINER ID        IMAGE                      COMMAND                CREATED             STATUS              PORTS                     NAMES\n8e9c5dd470b7        training/webapp:latest     \"python app.py\"        4 minutes ago       Up 4 minutes        0.0.0.0:49159->5000/tcp   web                 \n5551a83d8f32        training/postgres:latest   \"su postgres -c '/us   4 minutes ago       Up 4 minutes        5432/tcp                  db      \n```\n\nSpecifying a totally bogus link appears to work:\n\n```\n$ docker rm --link /web/df\n/web/df\n```\n\nBut of course the link didn't exist:\n\nHere is the only command that works:\n\n```\nmary at meepers in ~/repos/distribution on docs-part-two [!]\n$ docker rm --link web/db\nweb/db\n\nmary at meepers in ~/repos/distribution on docs-part-two [!]\n$ docker inspect -f \"{{ .HostConfig.Links }}\" web\n<no value>\n```\n\nHere is how I think it should work:\n- If a user specified a link that doesn't exist, we should tell them\n- If a user specifies the leading slash or not, we should remove the link -- the alternative is to return an error if the leading slash is include (or fix this command)\n"},{"labels":[null,"documentation"],"text":"I am using docker via boot2docker on my mac. Recently I've decided to setup private docker repository for my images. I've found [great article](https://github.com/MarvAmBass/docker-nginx-registry-proxy) how to setup docker registry behind nginx proxy with basic auth and ssl security. When I try to do a push I experienced strange issue:\n\n```\nMacBook-Pro-Pavel:cron vintik$ docker push registry.sashi.me/sashime-cron\nThe push refers to a repository [registry.sashi.me/sashime-cron] (len: 1)\nSending image list\n2015/04/10 23:53:23\n```\n\nAnd nothing happened.\nThen I tried to check connection with a curl call to my registry and got this:\n\n```\ndocker@boot2docker:~$ curl -k -v https://registry.sashi.me/v1/_ping\n* About to connect() to registry.sashi.me port 443 (#0)\n*   Trying 148.251.11.50...\n* Adding handle: conn: 0x9ffdad8\n* Adding handle: send: 0\n* Adding handle: recv: 0\n* Curl_addHandleToPipeline: length: 1\n* - Conn 0 (0x9ffdad8) send_pipe: 1, recv_pipe: 0\n* Connected to registry.sashi.me (148.251.11.50) port 443 (#0)\n* successfully set certificate verify locations:\n*   CAfile: none\n  CApath: /usr/local/etc/ssl/certs\n* SSLv3, TLS handshake, Client hello (1):\n* SSLv3, TLS handshake, Server hello (2):\n* SSLv3, TLS handshake, CERT (11):\n* SSLv3, TLS handshake, Server key exchange (12):\n* SSLv3, TLS handshake, Server finished (14):\n* SSLv3, TLS handshake, Client key exchange (16):\n* SSLv3, TLS change cipher, Client hello (1):\n* SSLv3, TLS handshake, Finished (20):\n* SSLv3, TLS change cipher, Client hello (1):\n* SSLv3, TLS handshake, Finished (20):\n* SSL connection using ECDHE-RSA-AES256-SHA\n* Server certificate:\n*    subject: C=RU; ST=Moscow Region; L=Moscow; O=Sashime; CN=registry.sashi.me\n*    start date: 2015-04-10 18:38:43 GMT\n*    expire date: 2025-04-07 18:38:43 GMT\n*    issuer: C=RU; ST=Moscow Region; L=Moscow; O=Sashime; CN=registry.sashi.me\n*    SSL certificate verify result: self signed certificate (18), continuing anyway.\n> GET /v1/_ping HTTP/1.1\n> User-Agent: curl/7.33.0\n> Host: registry.sashi.me\n> Accept: */*\n> \n* Empty reply from server\n* Connection #0 to host registry.sashi.me left intact\ncurl: (52) Empty reply from server\n```\n\nThen I make a try directly from my mac:\n\n```\nMacBook-Pro-Pavel:files vintik$ curl -k -v https://registry.sashi.me/v1/_ping\n* Hostname was NOT found in DNS cache\n*   Trying 148.251.11.50...\n* Connected to registry.sashi.me (148.251.11.50) port 443 (#0)\n* TLS 1.2 connection using TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384\n* Server certificate: torl.org\n* Server certificate: COMODO RSA Domain Validation Secure Server CA\n* Server certificate: COMODO RSA Certification Authority\n* Server certificate: AddTrust External CA Root\n> GET /v1/_ping HTTP/1.1\n> User-Agent: curl/7.37.1\n> Host: registry.sashi.me\n> Accept: */*\n> \n< HTTP/1.1 200 OK\n* Server nginx/1.4.1 (Ubuntu) is not blacklisted\n< Server: nginx/1.4.1 (Ubuntu)\n< Date: Sat, 11 Apr 2015 07:59:22 GMT\n< Content-Type: application/json\n< Content-Length: 1521\n< Connection: keep-alive\n< X-Docker-Registry-Config: dev\n< Expires: -1\n< X-Docker-Registry-Standalone: True\n< Pragma: no-cache\n< Cache-Control: no-cache\n< Strict-Transport-Security: max-age=31536000; includeSubdomains\n< \n* Connection #0 to host registry.sashi.me left intact\n{\"host\": [\"Linux\", \"bf6ccd9bf43c\", \"3.18.6\", \"#2 SMP Sat Feb 28 02:23:04 UTC 2015\", \"x86_64\", \"x86_64\"], \"launch\": [\"/usr/local/bin/gunicorn\", \"--access-logfile\", \"-\", \"--error-logfile\", \"-\", \"--max-requests\", \"100\", \"-k\", \"gevent\", \"--graceful-timeout\", \"3600\", \"-t\", \"3600\", \"-w\", \"4\", \"-b\", \"0.0.0.0:5000\", \"--reload\", \"docker_registry.wsgi:application\"], \"versions\": {\"M2Crypto.m2xmlrpclib\": \"0.22\", \"SocketServer\": \"0.4\", \"argparse\": \"1.1\", \"backports.lzma\": \"0.0.3\", \"blinker\": \"1.3\", \"cPickle\": \"1.71\", \"cgi\": \"2.6\", \"ctypes\": \"1.1.0\", \"decimal\": \"1.70\", \"distutils\": \"2.7.6\", \"docker_registry.app\": \"0.9.1\", \"docker_registry.core\": \"2.0.3\", \"docker_registry.server\": \"0.9.1\", \"email\": \"4.0.3\", \"flask\": \"0.10.1\", \"gevent\": \"1.0.1\", \"greenlet\": \"0.4.5\", \"gunicorn\": \"19.1.1\", \"gunicorn.arbiter\": \"19.1.1\", \"gunicorn.config\": \"19.1.1\", \"gunicorn.six\": \"1.2.0\", \"jinja2\": \"2.7.3\", \"json\": \"2.0.9\", \"logging\": \"0.5.1.2\", \"parser\": \"0.5\", \"pickle\": \"$Revision: 72223 $\", \"platform\": \"1.0.7\", \"pyexpat\": \"2.7.6\", \"python\": \"2.7.6 (default, Mar 22 2014, 22:59:56) \\n[GCC 4.8.2]\", \"re\": \"2.2.1\", \"redis\": \"2.10.3\", \"requests\": \"2.3.0\", \"requests.packages.chardet\": \"2.2.1\", \"requests.packages.urllib3\": \"dev\", \"requests.packages.urllib3.packages.six\": \"1.2.0\", \"requests.utils\": \"2.3.0\", \"simplejson\": \"3.6.2\", \"sqlalchemy\": \"0.9.4\", \"tarfile\": \"$Revision: 85213 $\", \"urllib\": \"1.17\", \"urllib2\": \"2.7\", \"werkzeug\": \"0.10.4\", \"xml.parsers.expat\": \"$Revision: 17\n```\n\nAnd it returns expected result!\nSo I've figured out that boot2docker and my mac works with ssl quite different. So finally I've made some work with my nginx config and here it is:\n\n```\n# For versions of Nginx > 1.3.9 that include chunked transfer encoding support\n# Replace with appropriate values where necessary\n\nupstream docker-registry {\n  server {{ ip }}:5000;\n}\nserver {\n  listen 80;\n  server_name {{ inventory_hostname }};\n  proxy_set_header Host       $http_host;   # required for Docker client sake\n  proxy_set_header X-Real-IP  $remote_addr; # pass on real client IP\n  proxy_set_header Authorization  \"\"; # see https://github.com/dotcloud/docker-registry/issues/170\n  proxy_read_timeout               900;\n  location / {\n    return 301 https://{{ inventory_hostname }}$request_uri;\n  }\n  location /_ping {\n    auth_basic off;\n    proxy_pass                       http://docker-registry;\n  }\n  location /v1/_ping {\n    auth_basic off;\n    proxy_pass                       http://docker-registry;\n  }\n}\n\nserver {\n  listen 443;\n  server_name {{ inventory_hostname }};\n\n  ssl on;\n  ssl_certificate /etc/ssl/cert.pem;\n  ssl_certificate_key /etc/ssl/key.pem;\n# fix issue with boot2docker ssl\n  ssl_session_cache   shared:SSL:10m;\n  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;\n  ssl_prefer_server_ciphers on;\n  ssl_ciphers \"EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH+aRSA+RC4 EECDH EDH+aRSA RC4 !aNULL !eNULL !LOW !3DES !MD5 !EXP !PSK !SRP !DSS +RC4 RC4\";\n\n  # set HSTS-Header because we only allow https traffic\n  add_header Strict-Transport-Security \"max-age=31536000; includeSubdomains\";\n\n  proxy_set_header Host       $http_host;   # required for Docker client sake\n  proxy_set_header X-Real-IP  $remote_addr; # pass on real client IP\n  proxy_set_header Authorization  \"\"; # see https://github.com/dotcloud/docker-registry/issues/170\n  proxy_read_timeout               900;\n\n  client_max_body_size 0; # disable any limits to avoid HTTP 413 for large image uploads\n\n  # required to avoid HTTP 411: see Issue #1486 (https://github.com/dotcloud/docker/issues/1486)\n  chunked_transfer_encoding on;\n\n  location / {\n    # let Nginx know about our auth file\n    auth_basic              \"Restricted\";\n    auth_basic_user_file    /etc/pass.htpasswd;\n    proxy_pass                       http://docker-registry;\n  }\n  location /_ping {\n    auth_basic off;\n    proxy_pass                       http://docker-registry;\n  }\n  location /v1/_ping {\n    auth_basic off;\n    proxy_pass                       http://docker-registry;\n  }\n}\n```\n\nSo the main fix is to add this strings:\n\n```\n  ssl_session_cache   shared:SSL:10m;\n  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;\n  ssl_prefer_server_ciphers on;\n  ssl_ciphers \"EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH+aRSA+RC4 EECDH EDH+aRSA RC4 !aNULL !eNULL !LOW !3DES !MD5 !EXP !PSK !SRP !DSS +RC4 RC4\";\n```\n\nI don't know which one of this really helps, I simply grub them from one of my nginx configs.\nI believe it should help somebody! Good luck!\n"},{"labels":["documentation"],"text":"The api doc for the [`Binds` argument](https://docs.docker.com/reference/api/docker_remote_api_v1.17/#create-a-container) is incorrect.  When creating a new volume, the volume should not appear in \"Binds\".  The [implementation](https://github.com/docker/docker/blob/master/daemon/volumes.go#L225) explicity checks for a string with two or three components separated by \":\".\n\nMoreover, the resulting error message is \"Invalid volume specification\", which is confusing, as it doesn't mention the `Binds` argument at all.\n"},{"labels":["documentation",null],"text":"the docs that end up here --> http://docs.docker.com/reference/commandline/cli/#daemon\n\nsince the commit 29d01b7, now the examples for running the daemon have a PS1 command prompt of `$` which indicates a non-privileged user. Though correctly marking the command prompt with `#` which indicates root user, would make them appear as comments. \n\nWe should find a markdown way to show the prompt for a `#` PS1 to be normal, or add back `sudo` for the `docker -d` type examples.\n\n/cc @moxiegirl @thaJeztah @SvenDowideit \n"},{"labels":["documentation",null],"text":"This is minor and probably won't be caught for some time but... \nSee code command snippet\n\n```\nvagrant@ubuntu-1:~$ docker -v\nDocker version 1.6.0-rc4, build e2e39fc\nvagrant@ubuntu-1:~$ cid=$(docker run -itd --ulimit data=8192 ubuntu)\nvagrant@ubuntu-1:~$ docker logs $cid\nbash: xmalloc: .././locale.c:81: cannot allocate 2 bytes (0 bytes allocated)\n```\n"},{"labels":["documentation",null],"text":"All the [Installation docs](https://docs.docker.com/installation/) cover how to install docker in detail, but none of them talk about configuring the docker daemon after the installation.\n\nThere should be a short section in there describing the config process. For example, in Ubuntu, the daemon can be configured by adding options in `/etc/default/docker` and in CentOS/RHEL, the daemon can be configured by editing `/etc/sysconfig/docker`\n\nThere is [one article](https://docs.docker.com/articles/systemd/) which covers this, but it is very specific. It would be nice to have a short config article after every installation step for various Operating Systems\n"},{"labels":["documentation"],"text":"I'm gong to pick this up after the release...also...I'm not sure how this fits with the recent commentary coming in on Joyent installation.\n"},{"labels":["documentation"],"text":"In the last example of [userguide/dockervolumes](http://docs.docker.com/userguide/dockervolumes/) we want to restore backed up data into a `dbdata2` container:\n\n```\nsudo docker run -v /dbdata --name dbdata2 ubuntu /bin/bash\nsudo docker run --volumes-from dbdata2 -v $(pwd):/backup busybox tar xvf /backup/backup.tar\n```\n\nThis snippet has 2 issues:\n1. If we dig into the logic of the snippet, we'll see that restored data should get into `/dbdata` directory of `dbdata2` container. Instead the data is left in `/` directory of a temporary container. The second line should like this:\n   \n   ```\n   sudo docker run --volumes-from dbdata2 -v $(pwd):/backup busybox cd /dbdata && tar xvf /backup/backup.tar\n   ```\n   \n   (Added `cd /dbdata &&`)\n2. As it was previously stated in the userguide, we'd like to use the same base containers for most operations to reduce network and disk usage. So that in the second line `busybox` should be replaced by `ubuntu`. Though considering the size of busybox this may be not a very serious issue :smile:.\n"},{"labels":["documentation"],"text":"For the reasons discussed at #3793, the signal will be passed to the container but in many cases it won't actually terminate because it is running as PID 1.\n\nI could not find any mention of this in any of the documentation for `-sig-proxy`, `docker kill`, etc., which is where I looked to try to understand why it wasn't working for me.\n\nhttps://bugzilla.redhat.com/show_bug.cgi?id=1189865 has a nice example to experiment with.\n"},{"labels":["documentation"],"text":"I was following this page: https://docs.docker.com/installation/ubuntulinux/\n\nAfter I installed docker but and ran the command: $ sudo docker run hello-world\n\nIt returned:\n\nFATA[0000] Get http:///var/run/docker.sock/v1.17/version: dial unix /var/run/docker.sock: no such file or directory. Are you trying to connect to a TLS-enabled daemon without TLS?\n\ncan you please add a step in the instructions to run: service docker restart\n\nThis fixed the issue for me.\n"},{"labels":["documentation",null],"text":"On https://docs.docker.com/installation/rhel/ it's mentioned that you can use the command:\n\n```\n$ sudo subscription-manager repos --enable=rhel-7-server-extras-rpms\n```\n\nhowever, this doesn't work by default on RHEL 7 EC2 instances.  Instead, you need to modify the file:\n\n```\n/etc/yum.repos.d/redhat-rhui.repo\n```\n\nand modify the \"[rhui-REGION-rhel-server-extras]\" section to include \"enabled=1\".\n"},{"labels":["documentation",null],"text":"Or docker/docs/README.md should include information for how to get the Man pages in Mac OSX.\n\nhttp://stackoverflow.com/questions/26368263/how-to-install-docker-man-pages-on-mac-os\n"},{"labels":["documentation"],"text":"Fixing typos, grammar, concise wording, etc. \n"},{"labels":["documentation",null],"text":"On the [Work with a development container](http://docs.docker.com/project/set-up-dev-env/) page (from the Contributor Guide), the output from running `hack/make.sh binary` needs to be updated to reference `binary` instead of `ubuntu`. \n\nCurrently, the output is:\n\n```\n---> Making bundle: ubuntu (in bundles/1.5.0-dev/ubuntu)\nCreated package {:path=>\"lxc-docker-1.5.0-dev_1.5.0~dev~git20150223.181106.0.1ab0d23_amd64.deb\"}\nCreated package {:path=>\"lxc-docker_1.5.0~dev~git20150223.181106.0.1ab0d23_amd64.deb\"}\n```\n\nRather, it should be something akin to:\n\n```\n---> Making bundle: binary (in bundles/1.5.0-dev/binary)\nCreated binary: /go/src/github.com/docker/docker/bundles/1.5.0-dev/binary/docker-1.5.0-dev\n```\n"},{"labels":["documentation",null],"text":"\"Configure Git for contributing\" section does not mention where to configure git in Windows. \n"},{"labels":["documentation",null],"text":"Support for setting ulimits for containers was added with #9437, but has a couple of quirks (like `as` ulimit not being supported) and could use some extra docs love.\n"},{"labels":["documentation"],"text":"Currently the documentation notes that \"_In addition to `--privileged`, the operator can have fine grain control over the capabilities using `--cap-add` and `--cap-drop`. By default, Docker has a default list of capabilities that are kept._\" (ref: https://github.com/docker/docker/blame/master/docs/sources/reference/run.md#L632-L636)\n\nHowever, at that point a few examples are given, but no information is provided on what that list of capabilities are, making it hard for users to search/find what those capabilities and, specifically, their names, are.\n\nThe current capabilities list in Docker is here: https://github.com/docker/docker/blob/master/daemon/execdriver/utils.go\n\nThey can be mapped to these additional descriptions here: http://linux.die.net/man/7/capabilities\n\nPotentially a table might be a nice way to list this information if we agree that's how we want to display, or if we want an external pointer that may be reasonable as well.  The docs team may have guidance here (ping @SvenDowideit @moxiegirl @fredlf @jamtur01)\n"},{"labels":["documentation",null],"text":"Hello,\nI've been struggling with this on ubuntu 14.10, docker 1.5.0. More than should be the case.\n\nMy problems came from the following:\n- Assuming that the ulimit is set the same inside a container than on the host. (it isn't). But also, that the output of the ulimit command was a bit misleading because:\n\n``` sh\n$ ulimit\nunlimited\n```\n\nis not the same thing as \n\n``` sh\n$ ulimit -c\n0\n```\n\nIn the container, base image was `ubuntu-debootstrap:14.04`.\n- On ubuntu the default setting - core files get piped to `apport` program. This is no good in containers. It must be overridden to something else if `apport` is not installed inside the container.\n\nIt would also be a help if linux kernel could have a different value of `/proc/sys/kern/pattern` inside the container than outside it. Since in the 2 environments they may need to point to different locations. I'm not sure that is something that Docker can do anything about but might be worth to think about.\n- It is not clear, as core dumps are a kernel managed thing, whether resulting core files are written by kernel to the host filesystem or the container filesystem. This should also be clearly documented. They are written inside the container.\n- Open question: How best to save the core files as when the container exits the filesystem is not remembered. I think docker could give a clear instruction here too - e.g. how or what to mount where to write the core files to.\n\nMany thanks for any consideration. Else it will have to be answered on stack overflow.\n"},{"labels":["documentation",null],"text":"Dockerfile appears broken and outdated. Running \"wget -qO- http://cfengine.com/pub/gpg.key | apt-key add - \" returns a 403. \n\nhttps://github.com/docker/docker/blob/b64558907139911b86d846de70ab859504cc45a2/docs/sources/articles/cfengine_process_management.md\n\nLink to article with error: https://docs.docker.com/engine/articles/cfengine_process_management/\n"},{"labels":["documentation",null],"text":"References to editing the `DOCKER_OPTS` in the `/etc/default/docker` file seem to be sprinkled throughout the documentation, but never explicitly stated or explained. Also everywhere it is referenced it specifies Ubuntu, but I believe it is also true for CentOS.\n"},{"labels":["documentation",null,null],"text":"**Problem**\n\nThere are no clear documentation on what it takes to create an official image.\n\n**Solution**\n\nDocument the steps to create and submit a new official image to the correct repositories.  @tianon can be a source for information on what needs to happen and what is expected.\n"},{"labels":["documentation",null,null],"text":"**Problem**\n\nDocker lacks documentation on what the defaults mounts that are added for network files.\n\n**Solution**\n\nDocument the docker provided mounts for things like `/etc/hosts`, `/etc/hostname`, and `/etc/resolv.conf` that docker automatically sets up and bind mounts into containers as read-write as the default container profile.\n"},{"labels":["documentation"],"text":"**Problem**\n\nDocument `DockerCli` methods or make them private function in `api/client/cli.go`.\n\n**Solution**\n\nMake methods not used outside package private, document remained public methods in godoc-style.\n"},{"labels":["documentation"],"text":"**Problem**\n\nDocument DockerCli `Cmd...` method\n\n**Solution**\n\nWrite godoc-style docstrings for each `Cmd...` method(which cli command it represents, maybe something about parameters) in `api/client/commands.go`.\n"},{"labels":["documentation"],"text":"**Problem**\n\nDocument `DockerCli` struct and `NewDockerCli` function in `api/client/cli.go`.\n\n**Solution**\n\nWrite godoc-style comments which describe idea of DockerCli(each Cmd... method represents cli command) and NewDockerCli parameters. Examples of such comments can be found in golang standard library golang.org/pkg/.\n"},{"labels":["documentation",null],"text":"**Problem**\n\nDocument `builtins.Register`\n\n**Solution**\n\nWrite godoc-style docstring form Register function in `builtins/builtins.go`.\n"},{"labels":["documentation",null,null],"text":"**Problem**\n\nDocument public functions and method in builder\n\n**Solution**\n\nOr make them private. Probably builder public things is not used by other packages.\n"},{"labels":["documentation",null],"text":"**Problem**\n\nDocument constants in api/common.go\n\n**Solution**\n\nShort explanation why we need them here(used both by daemon and client) and short inline comment for each. Example: http://golang.org/src/math/const.go#L8\n"},{"labels":["documentation",null,null],"text":"**Problem**\n\npkg/system - Document exported functions and types\n\n**Solution**\n\nThe `pkg/system` package is used for portable low level functions throughout Docker code. It is meant to be reused by other applications, however it lacks documentation.\n\nAdd a README.md to the package, and code comments to the package's exported symbols.\n"},{"labels":["documentation",null],"text":"**Problem**\n\nDocument running Docker on RaspberryPI\n\n**Solution**\n\nMany blogs are out there, some of which are quite old, that talk about ways to get Docker running on a RaspberryPI.  We should put together better documentation in a central place on how to run Docker on various common OS distros used on RaspberryPI (raspbian, snappy ubuntu, etc.)\n"},{"labels":["documentation",null],"text":"**Problem**\n\npkg/truncindex - Documentation\n\n**Solution**\n\nAll things in the `pkg/` subdirectories are meant to be general purpose packages to be reused outside of Docker. The `truncindex` package provides a general 'index tree', used by Docker in order to be able to reference containers by only a few unambiguous characters of their id.\n\nHowever, to be easily reused by another application, this package needs documentation. Add a README.md file in `pkg/truncindex/` explaining the purpose of the package, and comment exported functions and types to make it easy to use.\n"},{"labels":["documentation",null,null],"text":"The hello world page in the user guide would strongly benefit from a few screenshots and other graphics to help the users.\n\nhttp://docs.docker.com/userguide/dockerizing/\n"},{"labels":["documentation",null],"text":"On the page https://docs.docker.com/reference/commandline/cli/#rm, in the RM command reference the following paragraph seems to be missing the command example\n\n\"This command will delete all stopped containers. The command docker ps -a -q will return all existing container IDs and pass them to the rm command which will delete them. Any running containers will not be deleted.\"\n\n@moxiegirl \n"},{"labels":["documentation",null],"text":"Add information for getting around key errors when installing Docker on Ubuntu and Debian \n-->\nIf your company is behind a filtering proxy, you may find the `apt-key` command fails for the Docker repo during installation. To work around this, add the key directly using the following:\n\n`wget -qO- https://get.docker.com/gpg  | sudo apt-key add -`\n"},{"labels":["documentation"],"text":"Hi guys,\r\n\r\n```\r\ne@e#24: docker pull --help\r\n\r\nUsage: docker pull [OPTIONS] NAME[:TAG]\r\n\r\nPull an image or a repository from the registry\r\n\r\n  -a, --all-tags=false    Download all tagged images in the repository\r\n  --help=false            Print usage\r\ne@e#24\r\n```\r\n\r\nAs is well-known, there isn't just \"the registry\". Therefore, the help text should be updated to explain how to specify the registry as well. Maybe something like:\r\n\r\n```\r\nUsage: docker pull [OPTIONS] [REGISTRY_HOST[:REGISTRY_PORT]/]NAME[:TAG]\r\n\r\nPull an image or a repository from the given registry (or the default docker registry if none specified).\r\n\r\n  -a, --all-tags=false    Download all tagged images in the repository\r\n  --help=false            Print usage\r\n```\r\n"},{"labels":["documentation",null,null],"text":"**Summary**: There is no documentation on \"how to\" migrate containers/images to another host\n**Proposed solution**: write an article that describes how containers, images and their volumes can be migrated to a new/other host. The article should contain practical examples and limitations of the process. Possible alternatives/best practices can be considered to be included in the article.\n\n---\n\nThis came up in another issue (see https://github.com/docker/docker/issues/10702#issuecomment-76508564); how can image, containers (and their volumes) be migrated to another host.\n"},{"labels":["documentation"],"text":"We need docs to explain the by design behavior changed at #11148. Feel free to assign to me, although I'm not sure where to document this. Maybe ADD/COPY instructions in Dockerfile documentation would be nice. @tiborvass \n"},{"labels":["documentation",null],"text":"I encountered an obscure error a few days ago and I felt compelled to publish it where it might help some people.\n\nHere is the story.\n\nFor a while I've been facing permissions errors from within containers trying to access certain files and I couldn't work out why this was happening. It only affected files when mounting them to the container, not when added to the container. Further more, when executing a shell inside the container, the files existed and the user could write to the mounted directory.\n\nThis bugged me for weeks and I'd reverted to rebuilding the containers whenever I made a change. Strangely, when a friend of mine pulled the code from git and mounted the volume... it worked. I concluded this was an error on my personal machine.. However when he pushed new code it miraculously worked on my machine... \n\nAfter some inspection I noticed that the file downloaded with safari contained an extended attribute 'com.apple.quarentine'. Removing this made everything work again. And because git strips extended attributes before committing this is why 'git files' worked.\n\nIt turns out, when downloading files with Safari on OS X, OS X adds an attribute to refuse access to the file until it has been opened. Now this was causing OS X to refuse access when boot2docker wanted to access the files. SILENTLY. Yay. \n\nSo if a warning could be given when mounting 'quarentined' files, it would be fantastic... And perhaps save others the wasted time figuring this out. \n\nCool.\n"},{"labels":["documentation",null,null],"text":"From a user via docs feedback.\n\n\"How much disk space containers will take up. The registry doesn't appear to\nhave any indication and AFAICT one would need to visit several places to\nget an estimate. Maybe I have missed some crucial point? I understand\nhow containers could be \"lightweight\" if a one was intended to be hosted\non the same OS/version I have on my desktop but if not then potentially\nI'm looking a several gigs of download yes?\"\n\nhttps://docs.docker.com/userguide/dockerimages/ Has information  --- is the closests but this user was more about \"predicting\" the size prior to download.\n"},{"labels":["documentation",null,null],"text":"The documentation at https://docs.docker.com obviously lacks any discussion of the available storage-drivers which imo is essential to guide people to their docker-setup.\n\nOne lesson, i learned today, is that you cannot run containers with the btrfs-driver if the `/var/lib/docker`-path itself is a subvolume of a btrfs-tree. This directory must sit in the `default`-volume of a btrfs-volume.\nAnd i think this should be covered in the documentation.\n"},{"labels":["documentation",null],"text":"Please change the EPEL link on RHEL 6.5+ installation documentation from https to http because https doesn’t work anymore. Thanks a lot.\n\nhttps://docs.docker.com/installation/rhel/\n"},{"labels":["documentation",null,null],"text":"In some or many organisations the HTTP_PROXY is appropriate only for external registry access and may not function correctly for an internal private registry. The purely global nature of the proxy from the environment makes running a private registry problematic.\nThe code in registry.go for defining registry access could be made conditional through a new unproxied_registry flag - so instead of an unconditional\nhttpTransport := &http.Transport{\n        DisableKeepAlives: true,\n        Proxy:             http.ProxyFromEnvironment,\n        TLSClientConfig:   &tlsConfig,\n    }\nthe Proxy: could be conditional. This might be conditional based on an address map or other specification of registry addresses that should not be proxied even when the proxy is set in the environment.\n\nIt could be argued that this is working around broken internal proxies. This is a fair argument but it is not necessarily straightforward to modify proxy configuration in large organisations. It is also a network optimisation to use a private registry rather than use a proxy in many cases.\n"},{"labels":["documentation",null,null,null],"text":"Kernel keyrings are not namespaced and thus not secure on hosts running Docker. This should be made clear and explicit in the security article.\n\nMachines running full disk encryption and Docker may be vulnerable to attacks to the system keyring.\n"},{"labels":["documentation",null,null],"text":"Reading Docker documentation as a first time user. The general structure and tutorial are great, but texts have some problems. For example\n\nhttps://docs.docker.com/reference/builder/\n\nIt's not clear at some places, contains details but not general information, referring to ambiguous terms. e.g. for CMD, ENTRYPOINT, ENV, ADD, .... \n- each topic does not start with clear description of the command purpose and what problem it tries to solve\n- the context is not clearly defined (e.g. CMD vs RUN): is it for process of building an image or for running inside of a container based on the image being built.\n- the reference like \"this is to set defaults\" is completely confusing. For defaults in which context and what kind of commands?\n- ADD copies files from source to destination. Where are source and destination, copying on which phase?\n- environment - there must be a clear explanation about one environment that exists in a Dockerfile scope, another for commands that are RUN to build image, third - for everything that will be run inside a container built on the image.\n- word \"container\" here often is confusing. Container at the build time or after running a container based on built image?\n"},{"labels":["documentation"],"text":"https://docs.docker.com/userguide/dockerlinks/  and related should provide guidance on how or why a user would choose one method of creating container versus another (security, management, data).  Also, do we have general guidelines as to which we recommend as the \"default\" technique.\n\nCorollary, it would be good if containers in the Hub follow the default technique to avoid confusing messages.\n"},{"labels":["documentation",null],"text":"The new /stats endpoint seems like a great idea. Unfortunately the way it is currently defined, there is no description of what the fields are or what values they can have. This seems like it will cause problems moving forward especially for porting docker to other platforms.\n\nAs far as I can tell, the new fields are defined based on their implementation which appears to be the cgroups statistics. This makes some sense on Linux with a specific version of the cgroups stats but if those stats ever changed or if you were porting docker to another platform this immediately becomes problematic.\n\nIn the same way that the /top data is currently different on other hosts and platforms (as described in #9232) this endpoint as it is, seems like it's going to cause a lot of problems for portability.\n\nIs it possible for the next version of the API to at least define the fields? Ideally they'd have been defined as something implementation independent to start with but if that ship has sailed, at least defining the fields using the current cgroups names and listing what the possible keys and values are would be a huge step forward for portability.\n"},{"labels":["documentation"],"text":"Shouldn't there be a way for me to easily empty docker's cache in order to save disk space?\n\nSomething like `docker clear-cache`\n"},{"labels":["documentation",null],"text":"There are errors in the manpages because parameters in angle brackets aren't included in `md2man` output. For [example](https://github.com/docker/docker/blame/master/docs/man/Dockerfile.5.md#L137), \n\n```\n**ADD [\"<src>\"... \"<dest>\"]** This form is required for paths containing whitespace.\n```\n\nrenders as\n\n```\nADD [\"\"... \"\"] This form is required for paths containing whitespace.\n```\n\nNote the missing `<src>` and `<dest>`.\nThis can also be seen in GitHub's rendering of the text:\n\n**ADD [\"<src>\"... \"<dest>\"]** This form is required for paths containing whitespace.\n\n---\n\n**PROBLEM**: man docs are often imporoperly formatted, using quotes or bolds when code blocks/segments are required\n\n**PROPOSED SOLUTION**: man docs should be updated to use appropriate backticks for either inline or blocked code.\nThe `dockerfile.5.md` has already been gone through, but wouldn't hurt another set of eyes.\n"},{"labels":["documentation",null,null],"text":"At first glance I thought \"die\" means the container stopped unexpectedly. \nBut when I stop a container manually I see the \"die\" event followed by a \"stop\" event. I think the \"die\" event here is unnecessary.\nI want to implement a web interface and need to show the user all the history events of the container, but with the current docker events API it seems that it's hard to distinguish \"normally stop\" from \"unexpectedly stop\".\n"},{"labels":["documentation"],"text":"In container:\n\n```\nyum install -y epel-release\nyum install -y http://iredmail.org/yum/rpms/7/cluebringer-2.0.14-4.el7.centos.noarch.rpm\n```\n\nAfter install, some files are missing: \n/usr/share/doc/cluebringer-2.0.14/\nonly have contrib directory, but it should be \nAUTHORS  ChangeLog  contrib  database  INSTALL  LICENSE  TODO  WISHLIST\n\nThis works under host.\n"},{"labels":["documentation",null],"text":"The section on docker login does not explain where the \"login state\" is kept, or what can happen to lose the credentials.  For example, if the credentials are stored in a file, which file is updated?  Does resolving credentials depend on the UID of the current process, the $HOME variable (to find a dot-file), etc.\n\nhttps://docs.docker.com/reference/commandline/cli/#login\n"},{"labels":["documentation",null,null],"text":"I just run over a rather undokumented behaviour from a docker ecosystem viewpoint.\nI needed to figure out, how ENV are processed (if in single or double quoted notion by default, which implies caution about escaping.)\n\nSo I would love to see a hint on the docs to clarify the point.\nhttp://docs.docker.com/reference/builder/#env\n\n**_Suggestion:**_\n\"ENV are processed in the double quoted notion by default which makes strings subject to shell escaping acording to the shell used in the target image. You can use the alternative declaration with single quotes instead.\"\n"},{"labels":["documentation",null],"text":"The \"Finding the Cgroup for a Given Container\" section of https://docs.docker.com/articles/runmetrics/ is out of date, at least for containers that do not use LXC.\n\nHere is an example: \"Putting everything together to look at the memory metrics for a Docker container, take a look at /sys/fs/cgroup/memory/lxc/<longid>/.\"  I don't use LXC.  On my Ubuntu 14.04 machine running Docker 1.4.1, the correct path is /sys/fs/cgroup/memory/docker/<longid>/.\n"},{"labels":["documentation",null,null],"text":"If you want to remove a link between containers, you can use `docker rm --link`. The current documentation says:\n\n```\n $ docker help rm\n\nUsage: docker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers\n\n  -f, --force=false      Force the removal of a running container (uses SIGKILL)\n  -l, --link=false       Remove the specified link and not the underlying container\n  -v, --volumes=false    Remove the volumes associated with the container\n```\n\nI eventually figured out that you need to use the syntax `docker rm -l HOSTCON/LINKCON`, but I'm not sure how I was meant to know that. It doesn't feel symmetrical to the syntax used to create a link or other commands which typically use : as a separator.\n\nAlso, I'm really not convinced `docker rm` is the right place for the functionality - all other flags remove the container including `-v`. Could this be moved to a `docker unlink` subcommand or similar and the documentation improved?\n"},{"labels":["documentation",null],"text":"There is no mention of what the permitted parameters are for starting a container are in the remote documentation API. I _know_ that some options are permitted, for example I've been using `\"PublishAllPorts\"` . I'm not sure if its mostly the same as /containers/create or not.\n\nhttps://docs.docker.com/reference/api/docker_remote_api_v1.16/#start-a-container\n"},{"labels":["documentation",null,null,null],"text":"I ran an experiment today to see how these things intersect.\n\nhttps://gist.github.com/thockin/c44a88b84c2a1041a1bd\n\nThere are three cells in this matrix that are totally nonsensical.  Worse the dockerfile spec says \"The shell form prevents any CMD or run command line arguments from being used\", which is clearly untrue.\n\nMore that this, though, the semantic between the two is sort of weird, especially since they can be arrays or strings.\n\nI wonder if there has been any thought put into simplifying the semantics around these things?\n"},{"labels":["documentation",null],"text":"Hi\n\nHere's a transcript from a chat I had (with one of your employees?) a few minutes ago, that describes everything:\n\nyaronr: Strange. After bind-mounting a file, it changes to be a directory. removing the -v - and the file is a file again..\nyaronr: has anyone seen this?\nerikh: it's a known issue\nyaronr: erikh: really ?! I've spent hours on it\nyaronr:it used to work.\nerikh: when?\nyaronr: up until a couple of weeks ago. I have this unit file that uses this approach to map a config file from the host to the container\nyaronr: erikh: I actually have a few of them..\nerikh: what version of docker were you using before?\nyaronr: 1.3.x\nerikh: and it doesn't work in 1.4 now?\nerikh: put in an issue\nyaronr: yup\nerikh: I swear it never worked this way though\nyaronr: I'm pretty sure there even was an example for mounting specific files, in the docs.\nyaronr: erikh: you said it's a known issue - what do you mean?\nerikh: well, then definitely put in an issue :)\nerikh: I swear that we didn't support this\nerikh: but I could be wrong\nerikh: other people know that code better than me, like cpuguy83\nerikh: but I think he's at lunch\nyaronr: erikh: AHA, it IS (or should be) supported, read the docs: https://docs.docker.com/userguide/dockervolumes/  'Mount a Host File as a Data Volume'\nyaronr\nerikh: don't swear so quickly ;)\nyaronr: so I guess what you're saying is that you think something has changed in this area?\nyaronr: this explains why one day, a bunch of my unit files stopped responding..\nyaronr: ping?\n"},{"labels":["documentation",null],"text":"##### Steps To Reproduce\n- Create an image using the following Dockerfile source:\n\n```\n    FROM       ubuntu:12.04\n    RUN apt-get update;  \\\n        apt-get install -y screen;\n    RUN adduser --disabled-password --gecos -- dlw; \\\n        passwd -d dlw;\n    USER dlw\n    ENTRYPOINT  /bin/bash\n```\n- Execute image: `'docker run -i -t <imageGUID>.'`\n- On resulting container's command line attempt to start:  `screen`.\n  Screen will issue the following message:\n  `Cannot open your terminal '/dev/console' - please check.`\n  Here are the permissions as displayed by `'ls -al /dev/console'`:\n\n```\n    crw------- 1 root root 136, 7 Dec 24 12:15 /dev/console\n```\n- Alter Dockerfile so 'root' becomes default user and explicitly log in 'dlw' (non-root) account:\n\n```\nFROM       ubuntu:12.04\nRUN apt-get update;  \\\n    apt-get install -y screen;\nRUN adduser --disabled-password --gecos -- dlw; \\\n    passwd -d dlw;\nUSER root\nENTRYPOINT  login dlw\n```\n- Execute image: `'docker run -i -t <imageGUID>.'`\n- Start: `screen`.\n  Screen works as expected.\n  Here are the permissions as displayed by `'ls -al /dev/console'`:\n\n```\n    crw------- 1 dlw tty 136, 7 Dec 24 12:33 /dev/console\n```\n##### Environment\n- Using docker version 1.3.1.\n- Ubuntu  12.04.4 LTS\n##### Behavior Assessment\n\nAn implicit login request, implemented by Dockerfile USER statement, that isn't 'root' doesn't seem to completely prepare a container's permissions to the /dev/console device for the implicit user.  However, an explicit 'login' request (event) triggers the container permissions for '/dev/console' to allow  non-root container accounts access to this device.  Are there potentially other permission issues resulting from this difference between implicit/explicit login requests?\n"},{"labels":["documentation",null,null],"text":"When you are browsing the documentation at https://docs.docker.com/ , the links for the release notes for previous versions is inconsistent or broken.   I was trying to find the Docker 1.2 release notes and had to go on a bit of a hunt to finally get to it.\n\nStarting at the main page\n https://docs.docker.com/  \nThe LHS link to release notes takes you to the bottom of the page, to the release notes section\nhttps://docs.docker.com/#release-notes\n\nThe link there takes you to\nhttps://docs.docker.com/release-notes/\nWhich has the Docker 1.4 documentation version of Release Notes.  This is missing the previous 1.3, 1.2 and other release notes.  This made me think that the drop down in the top right was how you got other release note versions.\n\nGoing to Version v1.3 will take you to\nhttps://docs.docker.com/v1.3/release-notes/\nWhich has the release notes as of v1.3  which also contains the previous versions of 1.2, 1.1 and 1.0 release notes on the LHS.  Those links take you to the various sections of that v1.3 release notes page.\n\nGoing to Version 1.2 from the drop down, you get taken to\nhttps://docs.docker.com/v1.2/release-notes/\nWhich does not exist.  Same for other versions.\n\nBut there does exist a v1.2 release notes page, it is just not a separate page and is a section on the main v1.2 page.\nhttps://docs.docker.com/v1.2/#release-notes\n\nAdditionally if you are on the main page for docs\nhttps://docs.docker.com/\n\nGo to v1.3 from the drop down menu, now at\nhttps://docs.docker.com/v1.3/\n\nThe release notes link on the LHS takes you to bottom of page\nhttps://docs.docker.com/v1.3/#release-notes\n\nThe link in that section takes you to\nhttps://docs.docker.com/release-notes/\n\nWhich is the release notes for v1.4 not v1.3 \nDrop down menu top right will change to v1.4\nChanging it to v1.3 will now take you to \nhttps://docs.docker.com/v1.3/release-notes/\n\nHope that describes the different click workflows I had to go through\n\nI think the following should happen:\nRelease notes for 1.4 should be updated with previous versions (similar to 1.3) if it is suppose to be a comprehensive living release notes document\nIf not, then each previous version should get a separate release notes page in their respective areas so the drop down selector when on the release notes page works for them.\n"},{"labels":["documentation",null,null,null],"text":"Description of problem:\n\nAfter installing the lxc-docker package from the repositories\nprovided by Docker on Ubuntu 14.04.1 the Docker daemon fails to\nstart because of the missing executable `/sbin/apparmor_parser`.\n\n`docker version`:\n\n```\nClient version: 1.4.1\nClient API version: 1.16\nGo version (client): go1.3.3\nGit commit (client): 5bc2ff8\nOS/Arch (client): linux/amd64\nFATA[0000] Cannot connect to the Docker daemon. Is 'docker -d' running on this host? \n```\n\n`docker info`:\n\n```\nFATA[0000] Cannot connect to the Docker daemon. Is 'docker -d' running on this host? \n```\n\n`uname -a`:\n\n```\nLinux srv28 3.13.0-43-generic #72-Ubuntu SMP Mon Dec 8 19:35:06 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux\n```\n\nEnvironment details (AWS, VirtualBox, physical, etc.):\n\nA new physical server with a fresh minimal install of Ubuntu 14.04.1.\n\nHow reproducible:\n\nOn a custom minimal Ubuntu install without apparmor this is always reproducable. The standard Ubuntu install seems to include apparmor and therefore the problem is not apparent. \n\nSteps to Reproduce:\n1. Follow install instructions: http://docs.docker.com/installation/ubuntulinux/#docker-maintained-package-installation\n2. `service docker start`\n2. `docker info`\n\nActual Results:\n\nThe Docker daemon fails to start.  `docker info` outputs\n\n```\nFATA[0000] Cannot connect to the Docker daemon. Is 'docker -d' running on this host? \n```\n\nand `/var/log/upstart/docker.log` contains\n\n```\nINFO[0000] +job serveapi(unix:///var/run/docker.sock)   \nINFO[0000] Listening for HTTP on unix (/var/run/docker.sock) \nINFO[0000] +job init_networkdriver()                    \nINFO[0000] -job init_networkdriver() = OK (0)           \nINFO[0000] WARNING: Your kernel does not support cgroup swap limit. \nFATA[0000] Error loading docker apparmor profile: fork/exec /sbin/apparmor_parser: no such file or directory () \n```\n\nExpected Results:\n\nThe Docker daemon should be up and running.  `docker info`\nshould output something like\n\n```\nContainers: 0\nImages: 0\nStorage Driver: aufs\n Root Dir: /var/lib/docker/aufs\n Dirs: 0\nExecution Driver: native-0.2\nKernel Version: 3.13.0-43-generic\nOperating System: Ubuntu 14.04.1 LTS\nCPUs: 12\nTotal Memory: 62.89 GiB\nName: srv28\nID: SDXF:XYT2:PAMA:OSYS:2QJD:VIZN:MDUU:PYJK:YJXY:2RCA:4A6F:ZCDL\nWARNING: No swap limit support\n```\n\nand `/var/log/upstart/docker.log` should contains something like\n\n```\nINFO[0000] +job serveapi(unix:///var/run/docker.sock)   \nINFO[0000] Listening for HTTP on unix (/var/run/docker.sock) \nINFO[0000] +job init_networkdriver()                    \nINFO[0000] -job init_networkdriver() = OK (0)           \nINFO[0000] WARNING: Your kernel does not support cgroup swap limit. \nINFO[0000] Loading containers: start.                   \nINFO[0000] Loading containers: done.                    \nINFO[0000] docker daemon: 1.4.1 5bc2ff8; execdriver: native-0.2; graphdriver: aufs \n```\n\nAdditional info:\n\nRunning the following command allows the Docker daemon to start\nproperly:\n\n```\napt-get install apparmor\n```\n\nThus the lxc-docker package should depend on apparmor which contains the missing executable `/sbin/apparmor_parser`.\n"},{"labels":["documentation",null,null],"text":"This is a request for comments to either build our own tooling, or use existing tools to do the following:\n- Keep bash completions in sync with the client (when flags are added, etc)\n- Keep API docs up to date when the API is updated/ new things are added\n- Keep man pages in sync with changes to the client\n\nIf anyone has existing tools they think would be good for this, please comment. The problems that we have seen with suggested tools in the past are that they are not easily integrated to our setup and we cannot benefit from all the features they provide. Also we wind up only solving part of the problem. So it ends up feeling like a big, heavy bandaid and is not ideal.\n"},{"labels":["documentation",null,null],"text":"I might take a crack at this if there's interest, but I'd like to at least note down that I'm keen on having a page in documentation dedicated to discussing the upgrade path for users running versions of Docker that lag behind the latest.  In particular it would be useful to formalize what to do in the case of when the user has installed with `curl get.docker.com | sh` and they want to upgrade.  Especially when urgent security fixes come out, it'd be nice to have a canonical way to do this (and possibly a script or something that does much of the work for you).\n\nRight now what I do for hobby use is:\n1. download the latest binary i.e. https://docs.docker.com/installation/binaries/#get-the-docker-binary\n2. replace the existing binary \n3. `sudo service docker restart`\n4. `docker run` the containers that were previously running again.  I can't remember if the processes that were run when the daemon restart happens get ghosted (which might cause odd issues), but they didn't show up in `docker ps` after a daemon reset with a new version last time that I checked.  I'm not sure if this is expected behavior or not.\n\nMy way of doing things might be completely broken but without an official word from us I'm not entirely sure if it is or isn't.\n\nAlso, if you're running a version from a package manager (say, 1.2) that is vulnerable and the official package archives lag behind the latest docker release, what do you do?\n"},{"labels":["documentation",null],"text":"Related: https://github.com/docker/docker/issues/9393, https://github.com/docker/docker/issues/5545\n\nThe way that default values for boolean flags/options is documented is confusing for some people and choosing a simpler notation could take away that confusion.\n\nFor example;\n\n```\n-v, --version=false               Print version information and quit\n```\n\nCould be interpreted as;\n\n\"To print version information, run `docker --version=false`\", whereas it _should_ be used;\n`docker --version`.\n\n_Technically_, it could be used as `docker --version=true`, but I doubt many people will find\nthat useful, so _not_ documenting this seems reasonable to me.\n### Proposed change\n\nChange the documentation (and help) for flags/options that _don't_ require/expect a value, and \nremove the default value. Flags that _do_ accept a value should still mention this.\n\nThe documentation will look like this;\n\n```\n-v, --version               Print version information and quit\n```\n### Other software\n\nI did a quick check how other software handles this. Some examples are below;\n\n```\n# MySQL:\n -V, --version       Output version information and exit.\n --select-limit=#    Automatic limit for SELECT when using --safe-updates.\n\n --server-arg=name   Send embedded server this as a parameter.\n\n# GIT\nusage: git [--version] [--help] [-C <path>] [-c name=value]    \n\n# Fig\nOptions:\n  --version                 Print version and exit\n  -f, --file FILE           Specify an alternate fig file (default: fig.yml)\n  -p, --project-name NAME   Specify an alternate project name (default: directory name)\n\n# SubVersion (svn checkout)\nValid options:\n  -r [--revision] ARG      : ARG (some commands also take ARG1:ARG2 range)\n                             [edited]\n  -q [--quiet]             : print nothing, or only summary information\n```\n\n**NOTE**\nThis proposal does _not_ intent to change the way flags are working right now, \nonly change the way it is _documented_. Changing the behavior of flags and renaming\nwas proposed in the past (https://github.com/docker/docker/pull/5760, https://github.com/docker/docker/pull/5764) and voted against / rejected, so please do not bring that up here again.\n"},{"labels":["documentation",null],"text":"This should be similar to https://github.com/docker/docker/issues/1024\nI am using:\nOSX yosemite\ndocker 1.3.1\nboot2docker 1.3.2\nI use as a **centos** base from sequenceiq: https://github.com/sequenceiq/hadoop-docker \nI try to install R and RStudio.  R does not give any problem, but this is what I get from RStudio:\n### \n\nInstall       1 Package(s)\nTotal size: 276 M\nInstalled size: 276 M\nDownloading Packages:\nRunning rpm_check_debug\nRunning Transaction Test\nTransaction Test Succeeded\nRunning Transaction\n  Installing : rstudio-server-0.98.1091-1.x86_64                            1/1 \ngroupadd: group 'rstudio-server' already exists\nrsession: no process killed\n**initctl: Unable to connect to Upstart: Failed to connect to socket /com/ubuntu/upstart: Connection refused**\ninitctl: Unable to connect to Upstart: Failed to connect to socket /com/ubuntu/upstart: Connection refused\n  Verifying  : rstudio-server-0.98.1091-1.x86_64                            1/1 \nInstalled:\n  rstudio-server.x86_64 0:0.98.1091-1  \nComplete!\n### \n\nAt the end of all the components load, I get:\n\nStep 31 : RUN echo rstudio | passwd --stdin rstudio\n ---> Running in 6bd3038eec99\n/usr/share/cracklib/pw_dict.pwd: No such file or directory\nPWOpen: Invalid argument\n## \n\nPlease note that the error message referring to ubuntu does not help to understand what is the issue.\n\nThanks in advance for any help.\n"},{"labels":["documentation",null],"text":"https://github.com/docker/docker/blob/master/docs/sources/articles/b2d_volume_resize.md\n"},{"labels":["documentation",null],"text":"http://docs.docker.com/userguide/dockerrepos/#find-public-images-on-docker-hub\n\nI tried the same steps except searching for node, and sure, I get the main top-level node result. The docs however seem to indicate this is image results I'm seeing, but they seem to be repositories. In fact, when I continue to the next step and run docker pull node, docker tries to download all images in the repo, clearly not what you expect from reading the documentation. \n\nAlso, there doesn't seem to be a clear way to list all images in the node repo from the command line. I only realised \"docker pull node:latest\" is what I was looking for from looking at the node repo website on the docker hub. \n"},{"labels":["documentation",null],"text":"Hi All,\n\nI am setting up the docker build environment. There is a step in docker makefile that:\n\ndocker build -t \"docker:master\" .\n\nand in the dockerfile, it need install golang as followed:\n# Install Go\n\nRUN    curl -sSL https://golang.org/dl/go1.3.3.src.tar.gz | tar -v -C /usr/local -xz\n\nUnfortunately, I can not directly visit golang from local so I setup a ssh tunnel and I can successfully vist the go source file through the pipe by command \" curl --socks5 127.0.0.1:9090 -sSL https://golang.org/dl/go1.3.3.src.tar.gz\". And then, I change the dockerfile as:\n# Install Go\n\nRUN    curl --socks5 127.0.0.1:9090 -sSL https://golang.org/dl/go1.3.3.src.tar.gz | tar -v -C /usr/local -xz\n\nBut it failed by:\n\nStep 5 : RUN curl --socks5 127.0.0.1:9090 -sSL https://golang.org/dl/go1.3.3.src.tar.gz | tar -v -C /usr/local -xz\n ---> Running in 00ea81fe6596\ncurl: (7) Failed to connect to 127.0.0.1 port 9090: Connection refused\n\nIt seems that docker build running in different network stacks as my host. Is there any idea to help resolve it?\n"},{"labels":["documentation",null],"text":"I just found this today; \n Docker Remote API wrapper for Haskell - a Work in progress ; https://github.com/denibertovic/docker-hs \nThe doc page said to add a bug if new API's were discovered :).\nhttps://docs.docker.com/reference/api/remote_api_client_libraries/\n"},{"labels":[null,"documentation",null],"text":"**Summary**: \nThere is no standardised \"naming\" for (sub)commands on the CLI (e.g. plural vs singular, create vs add), sometimes leading to inconsistencies.  \n\n**Proposed solution**:\nA design document should be written, describing the (naming) conventions to follow for commands and the UX in general.\n\n---\n\nA number of new features are currently proposed via PRs for addition to Docker. These features add new commands to the CLI and I have noticed that the UI for those commands (and _existing_ commands) is inconsistent.\n\nWhile there still a chance to change those proposals before they are merged, I think it would be a good thing to review those PRs and reach consensus on what the UI should look like to be consistent.\n\nI've created a (far from complete) overview of some _existing_ and _proposed_ commands;\n\n| Entity | Action | Command | Notes |\n| --- | --- | --- | --- |\n| Container | list | `docker ps` |  |\n| Device | list | - | (not supported) |\n| Host | list | `docker hosts` | no sub command. see https://github.com/docker/docker/issues/8681 |\n| Image | list | `docker images` | no sub command (`ls`) |\n| Links | list | `docker links list` | see https://github.com/docker/docker/issues/7468 |\n| Volume | list | `docker volumes ls` | see https://github.com/docker/docker/pull/8484 |\n| Container | delete | `docker rm (id)` |  |\n| Device | delete | `docker device remove (id)` | see https://github.com/docker/docker/pull/8826 |\n| Host | delete | - | (not supported?) |\n| Image | delete | `docker rmi (id)` |  |\n| Links | delete | `docker links remove (id)` |  |\n| Volume | delete | `docker volumes rm (id)` |  |\n| Container | create | `docker create` | no \"containers\" before \"create\" |\n| Device | create | `docker device add` | note: _singular_ \"device\", others are \"plural\" |\n| Host | create | `docker hosts create` | `run` [is proposed as alternative](https://github.com/docker/docker/issues/8681#issuecomment-60349475) |\n| Link | create | `docker links add` |  |\n| Volume | create | `docker volumes add` |  |\n- The `ls` and `list` subcommands could be omitted dropped for `volumes` and `links` to be in line with the existing `images` command. \n- The subcommand for \"delete\" should either be \"remove\" or \"rm\" for all entities.\n- The subcommand for \"create\" could be renamed from \"add\" to \"create\" to be in line with the existing `docker create` command (not sure, I actually like \"add\")\n- All entities / top-level commands should be either plural or singular (rename `device` to `devices`?)\n\nNow that the \"links\" (https://github.com/docker/docker/issues/7468), \"volumes\" (https://github.com/docker/docker/pull/8484), \"hosts\" (https://github.com/docker/docker/issues/8681) and \"devices\" (https://github.com/docker/docker/pull/8826) changes are still a proposal, I think the creators those proposals should discuss a consistent UI before they're implemented to keep things consistent.\n\nFor the _existing_ commands I understand that most frequently used commands are deliberately left short for convenience, perhaps \"long\" versions (`docker images rm`?) could be added to make the UI more consistent.\n\n(This is a follow up on a comment I placed here https://github.com/docker/docker/pull/8484#issuecomment-60827328)\n\n**update**\nAdded the \"hosts\" proposal to the list and sorted the list a bit\n"},{"labels":[null,"documentation"],"text":"I think the ADD and COPY directives don't work as one would expect. Given this directory layout:\n\n```\n.:\ndir  Dockerfile  rootfile.txt\n\n./dir:\nchild  dirfile.txt\n\n./dir/child:\nchildfile.txt\n```\n\nand this Dockerfile:\n\n```\nFROM debian:wheezy\nCOPY rootfile.txt dir /test/\nCMD [\"ls\", \"-R\", \"/test\"]\n```\n\nI get this image result:\n\n```\n/test:\nchild  dirfile.txt  rootfile.txt\n\n/test/child:\nchildfile.txt\n```\n\nThe documentation states that `If <src> is a directory, the entire directory is copied, including filesystem metadata.`\nThis sound like the COPY and ADD directive should behave like a `cp -r <src> <dest>` (which I expected), but if `<src>` is a directory, not the directory itself is copied but the contents of the directory.\n\nIs this intended behavior?  When yes, then the documentation should clearly say that the contents of a <src> directory is copied and not the directory.\n\n```\ndocker version:\nClient version: 1.3.0\nClient API version: 1.15\nGo version (client): go1.3.3\nGit commit (client): c78088f\nOS/Arch (client): linux/amd64\nServer version: 1.3.0\nServer API version: 1.15\nGo version (server): go1.3.3\nGit commit (server): c78088f\n\ndocker info:\nContainers: 8\nImages: 69\nStorage Driver: aufs\n Root Dir: /var/lib/docker/aufs\n Dirs: 85\nExecution Driver: native-0.2\nKernel Version: 3.17.1-1-aufs_friendly\nOperating System: Arch Linux\nDebug mode (server): false\nDebug mode (client): true\nFds: 10\nGoroutines: 15\nEventsListeners: 0\nInit SHA1: e244de98e642144b162d1936978b8ac5d024d546\nInit Path: /usr/lib/docker/dockerinit\nWARNING: No swap limit support\n```\n"},{"labels":["documentation",null],"text":"Hi guys,\n\n**Basic problem:**\nthe doc section on Dockerfiles is rather confusing, because it doesn't really explain an important concept: why is the dockerfile named \"Dockerfile\" similar to \"Makefile\", and what does that mean for the folder is it in? Why is it not just a \"buildmyimage\" file and that's it? Why a whole folder around it, what is it for?\n\n**Current situation:**\nThe docs make a basic attempt at explaining it here: http://docker.readthedocs.org/en/v0.5.3/use/builder/ 1. Usage: \"To build an image from a source repository, create a description file called Dockerfile at the root of your repository.\"\n\nHowever, the docs completely drop the ball clarifying this. What is a repository here? Is that something special with special other files that are automatically used? Does it need a specific layout?\n\nEven worse, if you are sufficiently confused to click \"Working with repositories\" in the navigation to clear this up, that section introduces a confusing online image thing where the basic concept of what a single repository is _in practise on my hard disk as a basic folder_ is entirely missing.\n\n**Proposal:**\nhttp://docker.readthedocs.org/en/v0.5.3/use/builder/ 1. Usage: \"To build an image from a source repository, create a description file called Dockerfile at the root of your repository.\"\n\nChange to: \"To build an image from a source repository, create a description file called Dockerfile at the root of your repository, which is just the basic folder containing all sorts of other resources you might need and later reference from your Dockerfile to include and use for your image as needed.\"\n\nOr whatever you see fit. But please add a proper explanation!\n\n**Disclaimer:**\nI started reading the docker docs a few hours ago, so I might be misunderstanding basic concepts. But this really seemed confusing to me, so it would be neat if you could look into it - unless the explanation is already there and I was just too blind to stumble across it.\n"},{"labels":["documentation",null],"text":"Bugzilla https://bugzilla.redhat.com/show_bug.cgi?id=1121689 \n\nDescription of problem:\nThe handling of stdout/stderr stream is not correct in tty mode (works fine in non-tty mode). You can see it on the example bellow. (`ls non_existing_file` prints into stderr stream)\n\nVersion-Release number of selected component (if applicable):\ndocker-1.1.1-1.el7.x86_64\n\nHow reproducible:\nAlways\n\nSteps to Reproduce:\nTTY:\n[root@localhost ~]# docker run -t -a stderr fedora ls non_existing_file\n[root@localhost ~]# docker run -t -a stdout fedora ls non_existing_file\nls: cannot access non_existing_file: No such file or directory\nNON-TTY:\n[root@localhost ~]# docker run -a stderr fedora ls non_existing_file\nls: cannot access non_existing_file: No such file or directory\n[root@localhost ~]# docker run -a stdout fedora ls non_existing_file\n\nActual results:\nIn tty mode the output is visible only when STDOUT is attached, in non-tty mode it's visible in STDERR\n\nExpected results:\nIn booth modes the output should be in STDERR stream.\n\nAdditional info:\nWhen I use `ls /` it prints the info correctly into STDOUT in booth modes.\n"},{"labels":[null,"documentation",null,null],"text":"Registry 0.8.0 and the Hub and Registry Spec v1.2 do not match up for pushing images. I haven't tested pulling images yet.\n\nCan you clarify which version of the spec goes with which version of the registry?\n\nAs far as I can tell steps are wrong.\n\nFor pushing an image I'm seeing this request GET /v1/repositories/dockerfile/nginx/layer/27cf784147099545/access, yet there is no documentation talking about an access endpoint, and the built in no-auth index apart of the registry code doesn't event reference an access endpoint.\n\nThe behavior I see is the following. This is version 0.8.0 of the registry and 1.2.0 of the docker client/daemon\n\n(this flow here does not include the registry actions, just the actions I am seeing on the index/hub)\n1. GET /v1/_ping\n2. PUT /v1/repositories/:namespace/:repo\n3. GET /v1/repositories/:namespace/:repo/images\n4. GET /v1/repositories/:namespace/:repo/images\n5. GET /v1/repositories/:namespace/:repo/layer/:image/access\n\nAt step 5 it fails with `2014/09/08 12:11:34 HTTP code 400 while uploading metadata: {\"error\": \"Image depends on an unauthorized parent\"}`\n\nThanks.\n"},{"labels":["documentation",null],"text":"Based on https://docs.docker.com/articles/runmetrics/#interface-level-counters but scripted/refined and working on Ubuntu 14.04. The main thing needed in the documentation a comment for 14.04 showing the path to the cgroup device is /sys/fs/cgroup/devices/docker/$CID_/tasks instead of /sys/fs/cgroup/devices/$CID_/tasks, but here's a script to show the interface stats in one command.\n\n```\n#!/bin/bash\nif [ $# -ne 1 ]; then\n  echo \"usage: $0 {container_id}\"\n  exit 1\nfi\n\nSHORT_CID=$1\nCID=$(docker inspect --format=\"{{.Id}}\" ${SHORT_CID} 2>/dev/null)\nif [ $? -ne 0 ]; then\n  echo \"No container: ${SHORT_CID}\"\n  echo \"Are you running with sudo?\"\n  exit 2\nfi\n\n\nTASKS=/sys/fs/cgroup/devices/docker/$CID/tasks\nPID=$(head -n 1 ${TASKS})\nNETNS_PATH=/var/run/netns/${CID}\n\nmkdir -p /var/run/netns\nln -sf /proc/$PID/ns/net ${NETNS_PATH}\nip netns exec ${CID} netstat -i\n\nunlink ${NETNS_PATH}\n```\n"},{"labels":["documentation",null],"text":"Many fields in the response objects that I actually get in my local calls do not exist in Remote API v1.13 documentation.\n\nAnd documentation is so bad that there are no types specified.\n\ne.g. it just says:\n\n```\n \"PortSpecs\":null,\n```\n\nwhat is the type of this field? It is just a null in JSON response.\n\nThat doesn't make sense. Docs are very vague and it's almost impossible to write a correctly working client without reading other clients and keep testing every single corner case (e.g. you gotta reproduce a case where portspecs is not null by creating a container etc).\n\nThis is crazy and will not help things move forward very well.\n"},{"labels":["documentation",null],"text":"The `USER user` command in Dockerfiles does the equivalent of `su user -c command` for all future `RUN command` commands.\n\nI propose adding the `GROUP group` command, which would do the equivalent of `sg group -c command` for all future `RUN command` commands.\n\n`newgrp` is a command that works a lot like `su` without a `-c` command, and sets the gid for future commands in the shell, but due to the way docker works, this is cleared between each command in the Dockerfile, so something like the following does _NOT_ work:\n\n```\nUSER user\nnewgrp group\n```\n\nInstead, my hope would be to be able to do something like:\n\n```\nUSER user\nGROUP group\n```\n"},{"labels":["documentation",null],"text":"https://docs.docker.com/examples/running_riak_service/\n\nhttp://jpetazzo.github.io/2014/06/23/docker-ssh-considered-evil/\n"},{"labels":["documentation",null],"text":"This page http://docs.docker.com/docker-hub/accounts/#organizations-groups should have more information about groups and how groups work with orgs. It should also have more information about roles of groups (read, write, admin) and what the permissions are for each group. I believe they are proper subsets of each other (admin ( write ( read ))) but I don't see that documented anywhere.\n"},{"labels":["documentation",null,null],"text":"When using volumes, the usefullness of the volume is limited without coupling it with a data-container.\nThe reason for this is the tie between a container and the volume... when the container goes away so does the possibility of actually using the data in that volume again, unless you'd happened to copy the host path of that volume.\n\n**Sumary**: referencing a volume is impossible when last container is removed\n\n**Proposed Solution**: Provide volume management API/UI.  This has started to be implemented in #8484\n"},{"labels":["documentation",null],"text":"which is a bit of a shame\n"},{"labels":["documentation",null],"text":"Operators need to know where the data in \"volumes\" is stored on the host so that they can monitor size, perform backups, migrate data, etc.\n\nHere is one way to dump the bindmounts on a container:\n\n```\n# Create a test container with volumes\n$ docker run --name testvol -v /vol-anon -v /tmp/vol:/vol-named ubuntu true\n\n# Ok, let's see where those volumes went...\n$ docker inspect --format={{.Volumes}} testvol\nmap[/vol-anon:/var/lib/docker/vfs/dir/1ed44639019c10269718628da26d792857c01dc0d383169841855db83c2d6904 /vol-named:/tmp/vol]\n```\n\nI think this would be a helpful addition to http://docs.docker.io/use/working_with_volumes/\n"},{"labels":["documentation",null,null],"text":"The `docker cp` command can currently copy a file from the container to the host. It should also be able to do the reverse.\n\nPing @crosbymichael \n"},{"labels":["documentation",null],"text":"We currently prefix commands with `#` or `$`. We should either:\n1. replace this/remove these.\n2. Have some JS magic so people who select commands in highlight boxes don't get the prefix.\n"},{"labels":["documentation",null],"text":"(on a just installed 14.04)\n\ncurl https://get.docker.io | sh\nsudo apt-get install docker.io\n\n(the second removes our package, and installs the ubuntu one)\n\nleaves us with `service --status-all` listing 2 services: `docker` and `docker.io`\n\nwhich makes me think our lxc-docker package is not cleaning up quite well enough.\n\nrebooting at this point leaves us with a happily working Docker 0.9.1\n\nthen `ln -s /usr/bin/docker.io /usr/bin/docker` and rebooting causes things to go bad.\n\non my system, there is only one docker daemon running, but its un-contactable.\n\n`service docker stop` does nothing, as its not running\n`service docker.io stop` stops the rogue daemon, and then \n`service docker.io start` makes everything happy again.\n\nsimilarly, after stopping which ever service is  running, \n`service docker start` works.\n\nso its probably _just_ something that happens if you start 2 daemons at almost the same time.\n"},{"labels":["documentation",null],"text":"Surely it should read \"--no-trunc=true: Don't truncate output\" or \"--no-trunc=false: Truncate output (default behaviour)\".\n\nSimilar for \"--quiet=false\".  I presume it was intended to show the alternatives (either \"-q\" or \"--quiet=false\"), however the textual description is misleading.\n\nI think a better format would be  \"-q, --quiet=<true|false>: whether to only display numeric IDs\", or something along those lines.\n\n```\nanni@helium:~/src/Redis$ docker ps -h\n\nUsage: docker ps [OPTIONS]\n\nList containers\n\n  -a, --all=false: Show all containers. Only running containers are shown by default.\n  --before=\"\": Show only container created before Id or Name, include non-running ones.\n  -l, --latest=false: Show only the latest created container, include non-running ones.\n  -n=-1: Show n last created containers, include non-running ones.\n  --no-trunc=false: Don't truncate output\n  -q, --quiet=false: Only display numeric IDs\n  -s, --size=false: Display sizes\n  --since=\"\": Show only containers created since Id or Name, include non-running ones.\nanni@helium:~/src/Redis$\nanni@helium:~/src/Redis$ docker version\nClient version: 0.10.0\nClient API version: 1.10\nGo version (client): go1.2.1\nGit commit (client): dc9c28f\nServer version: 0.10.0\nServer API version: 1.10\nGit commit (server): dc9c28f\nGo version (server): go1.2.1\nLast stable version: 0.10.0\nanni@helium:~/src/Redis$\n```\n"},{"labels":[null,"documentation"],"text":"Similar to #1136.\n\nI want to be able to say `CMD [ \"$CATALINA_HOME/bin/catalina.sh\", \"run\"]`\n"},{"labels":["documentation",null],"text":"When there is nothing to show in TOC, maybe we could hide it or display the main title?\n\nExample on contribution:\n![screen shot 2014-04-17 at 3 56 00 pm](https://cloud.githubusercontent.com/assets/521701/2737901/8a524fe0-c683-11e3-89a3-1fa97a2726d4.png)\n\n/cc @SvenDowideit @ostezer @jamtur01 \n"},{"labels":["documentation",null],"text":"While `docker logs` is extremely useful for inspecting containers, [the documentation gives no hints as to how it should be handled operationally](http://docs.docker.io/en/latest/reference/commandline/cli/#logs).\n\nOutstanding questions include:\n- Where are logs stored (or are they an inmemory ring buffer like dmesg)?\n- If they are stored, how are they rotated so they don't grow without bound?\n- Is it a best practice for daemons running in containers to _not_ using `std{out,err}` for logging (and instead use the host's syslog, a log file in a mounted voulme, a remote daemon, etc.)?\n\nAs per guidelines for contribution:\n\n```\nClient version: 0.9.1\nGo version (client): go1.2.1\nGit commit (client): 3600720\nServer version: 0.9.1\nGit commit (server): 3600720\nGo version (server): go1.2.1\nLast stable version: 0.9.1\n\nContainers: 3\nImages: 47\nStorage Driver: aufs\n Root Dir: /var/lib/docker/aufs\n Dirs: 57\nExecution Driver: native-0.1\nKernel Version: 3.11.0-18-generic\nWARNING: No swap limit support\n```\n\nI tried searching existing issues for duplicates, but logging is a very difficult thing to search on. Please feel free to close if this is a dupe.\n"},{"labels":[null,"documentation"],"text":"http://docs.docker.io/en/latest/reference/api/docker_remote_api_v1.10/#tag-an-image-into-a-repository\n\nDoesn't describe how to set the tag on the image...just allows you to provide the image repo.\n"},{"labels":["documentation",null,null],"text":"I was using the following\n\nENV MYPATH /usr/local/myPath\nCMD [ \"ls\", \"-la\", \"$MYPATH\"]\n\nand I get \nls: cannot access $MYPATH: No such file or directory\n\nBut, if I used the other format\nCMD ls -la $MYPATH\n\nthen the listing is correct.\n\nCMD [ \"ls\", \"-la\", $NMMHOME ] simply doesn't work\n\nNow I also was trying something like this.\n\nENTRYPOINT [ \"$MYPATH/start.sh\"]\n\ndoesn't work. Some problem : unable to locate $MYPATH/start.sh\n\nBut similarly to CMD 'shell version'\n\nENTRYPOINT $MYPATH/start.sh\n\nworks fine.\n\nAlso the start.sh is referencing the $MYPATH as well and it sees the correct value.\n\nSo I think there is still a bug in specifying the environment variables within the CMD / ENTRYPOINT commands when using the exec like way (preferred method)\n"},{"labels":["documentation",null],"text":"If you try to use a root that's mounted with \"nodev\", \"nosuid\", or \"noexec\", you'll have some pretty big problems with your containers (obviously).\n\nIn my case, I was trying to use a btrfs directory that was mounted via udisks2 inside my GUI file manager, but hadn't noticed that it was mounted with \"nodev\".  Once I ran a container, I couldn't do things like `apt-get install` because they tried to write to \"/dev/null\" which was on a nodev filesystem so obviously wouldn't work.\n\nWhat I'd propose is that any of these problematic mount options become a warning at daemon startup.\n"},{"labels":["documentation",null,null],"text":"Better than using an \"allow insecure ssl\" option,  it is far more preferable and secure to advise users to manage their local CAs through their OS' certificate bundle.\n\nThe behavior used by Docker is inherited from golang's crypto/x509 package (see: http://golang.org/src/pkg/crypto/x509/)\n\nIn short, each OS has a different file (or multiple files) that container CA bundles. These files are, according to the x509 package:\n\n```\nUbuntu/Debian - \"/etc/ssl/certs/ca-certificates.crt\",\nFedora/RHEL - \"/etc/pki/tls/certs/ca-bundle.crt\",\nOpenSUSE - \"/etc/ssl/ca-bundle.pem\",\nOpenBSD - \"/etc/ssl/cert.pem\",\nMacOS - KeyChain\nWindows - http://support.microsoft.com/kb/295663\n```\n\nDocumentation should explain why it is better to update these files (rather than ignore certificates) and provide guidance on establishing a proper and secure configuration.\n"},{"labels":[null,"documentation"],"text":"What invalidates a cache?\nWhat _looks_ like it is doing something new but actually uses the cache? (eg RUN apt-get...)\n"},{"labels":["documentation",null,null],"text":"Each init system has a slightly different way to setup the \"default flags\" for the Docker daemon.  For example, OpenRC (Gentoo) uses \"/etc/conf.d/docker\", while Upstart/SysV (Ubuntu/Debian) uses \"/etc/default/docker\", and systemd prefers you copy the unit scripts.\n\nThis need is prompted by getting now two separate PRs to add a \"configuration file\" for the systemd unit file from people looking to just modify the daemon startup arguments (which upstream systemd does not recommend doing, as described well in those threads): #3307 and #3627.  There are some good links and good suggestions in each that ought to be added to a section somewhere, and I'd propose it just be a general section about \"Configuring Daemon Startup Flags\" or something like that, and leave it as an exercise to the reader to figure out which system they're using, perhaps also mentioning the most common system for our supported platform (Ubuntu), and any others that are similarly obvious (like OpenRC being for Gentoo), where for systemd, all bets are off on which distro (since it's available in so many as an option or even as the default).\n"},{"labels":["documentation",null],"text":"a few weeks ago i was shooting the breeze on irc about how to use VOLUMEs, wrt to backup, migration and general portability.\n\nafter writing up the linking example for ambassador pattern, it became clear that what I'd described was pretty much the same thing, just for VOLUMEs\n\nie, to backup VOLUMEs on one container\n\n`(volume container) --> (backup container which writes to wherever)`\n\nand to migrate from one docker host to another (ok, to be totally magic, it would require `dind` to also create the other services containers...\n\n`(volume container) --> (backup) ---network---> (restore) --> (new volume container)`\n\nsimilarly, you could do live syncing, or even bi-directional syncing\n\n`(volume container) --> (rsync) ---network---> (rsync) --> (backup volume container)`\n\nand like in the linking example, the data service can be just that, and the backup, sync or spying containers can be changed out as requirements change.\n\nalso, from irc @shykes was mentioning \n\n```\n<shykes_> so you could do 'docker run -volumes-from=prod_data ubuntu tar -C /var/lib/postgres -c . | ssh $IP_OF_OTHER_CONTAINER tar -C /var/lib/postgres -x'\n<shykes_> or more precisely\n<shykes_> docker run -volumes-from=prod_data ubuntu sh -c \"tar -C /var/lib/postgres -c . | ssh $IP_OF_OTHER_CONTAINER tar -C /var/lib/postgres -x'\"\n```\n\nI'm going to try to write this in the next days - though tomorrow isn't likely :)\n\n<div class=\"discussion-labels\">...</div>\n"},{"labels":[null,"documentation"],"text":"I'm trying to use the docker remote API to build images/containers, referring to the document:  http://docs.docker.io/en/latest/api/docker_remote_api_v1.7/\n\nI was unable to find information on  \"ExposedPorts\" for creating a container and \"PortBindings\" for starting a container.\n\nThere is no such parameter \"ExposedPorts\" for the creating a container and\nthere is no parameter \"PortBindings\" for starting a container.\n"},{"labels":["documentation",null],"text":"I suggest that the REST API documentation be moved to a more machine readable format such as JSON, XML, or the new blueprint format (http://apiblueprint.org)\n\nThe reason is simple... The community maintained modules and libs are currently updated by hand and not always in sync with Dockers many and frequent changes. Having a format that can be used as a config or even used to compile new releases would drastically speed up the communities ability to utilize the latest versions of docker.\n"},{"labels":["documentation",null],"text":"I thought it may be useful to start a document about how to debug a docker binary once you've built it, The document would sit under the docs/soruces/contributing directory.\n\nWhat do others think?\n"},{"labels":["documentation",null,null,null,null],"text":"I've narrowed down a problem in an originally more involved setup. Consider the following Dockerfile:\n\n```\n# Dockerfile\nFROM      ubuntu:12.10\n\nRUN apt-get install -y puppetmaster sudo\n\nRUN rm -rf /etc/puppet\nADD puppet-config /etc/puppet\nRUN chown -R puppet.puppet /etc/puppet\nRUN chmod 755 /etc/puppet\n```\n\nWhen run with the following:\n\n```\n# make a dummy directory\nmkdir puppet-config\necho \"hi\" >puppet-config/hello.txt\n\ndocker build -t dockbug .\n\necho \"note the directory is owned by puppet with full read/write/execute privs\"\ndocker run dockbug ls -al /etc/puppet\n\necho \"but we get a permission error here\"\ndocker run dockbug sudo -u puppet ls -al /etc/puppet\n```\n\nI see an unexpected permission error in the final command. This is with Docker 0.3.4 from the PPA on Ubuntu 13.04 with kernel 3.8.0-19-generic. Interestingly, if I remove the like \"RUN rm -rf /etc/puppet\" from the Dockerfile, I no longer see the permission error.\n"},{"labels":["documentation",null,null,null],"text":"**Summary**: The documentation does not explain what `docker run` does under the hood.\n\n**Proposed solution**: Add documentation to explain in reasonable detail what `docker run` does.\n\nSome useful links:\n- https://docs.docker.com/reference/commandline/cli/#run\n- https://docs.docker.com/reference/commandline/cli/#create\n- https://docs.docker.com/reference/commandline/cli/#start\n- https://github.com/docker/docker/blob/master/image/spec/v1.md\n- https://github.com/docker/libcontainer/blob/master/SPEC.md\n# \n\n**Original comment**:\nI think it would make a good addition to the documentation to explain what exactly happens when a user issues `docker run`\n"}]